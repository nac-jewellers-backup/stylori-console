{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","context/AlertContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","components/ProductFilter/ProductFilter.js","components/Alert/index.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","graphql/mutation.js","screens/HolidayManager/HolidayModal.js","screens/HolidayManager/index.js","screens/Warehouse/WarehouseModal.js","screens/Warehouse/index.js","screens/Inventory/InventoryModal.js","screens/Inventory/index.js","screens/Banners/banners.js","screens/Banners/styloribanner/components/stylorilandingpage.js","screens/Banners/styloribanner/styloribanner.js","screens/Banners/silverbanner/components/silverlandingpage.js","screens/Banners/silverbanner/silverbanner.js","screens/Banners/silverbanner/components/silverlistingpage.js","screens/Banners/silverbanner/components/silverlistingroutingpage.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.Alert.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","orderdetails","userorders","userwishlist","address","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","addtaxattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","category","banners","styloribanner","silverbanner","warehouse","holiday_manager","inventory","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","_templateObject10","GEMPRICELIST","_templateObject11","CATGORYLIST","_templateObject12","MATERIALMASTER","_templateObject13","_templateObject14","SALEDISCOUNTS","_templateObject15","_templateObject16","VOUCHERDISCOUNTS","_templateObject17","METALMASTER","_templateObject18","MAKINGCHARGEPRICELIST","_templateObject19","VOUCHERSTATUSEDIT","_templateObject20","_templateObject21","_templateObject22","DISCOUNTSTATUSEDIT","_templateObject23","DELETEMARKUPPRICE","_templateObject24","DELETEGOLDPRICE","_templateObject25","DELETESALEDISCOUNT","_templateObject26","DELETEVOUCHERDISCOUNT","_templateObject27","DELETEMAKINGCHARGE","_templateObject28","DELETEGEMCHARGE","_templateObject29","DELETEDIAMONDCHARGE","_templateObject30","PRODUCTDIAMONDTYPES","PRODUCTEDIT","ALLMASTERRINGSIZE","ALLSTYLORILANDINGBANNERS","ALLSTYLORISILVERLANDINGBANNERS","DELETESILVERLANDINGBANNER","PRODUCTDESCRIPTIONEDIT","HOLIDAYLIST","_templateObject31","WAREHOUSELIST","_templateObject32","INVENTORYLIST","_templateObject33","VALIDATEGENERATEDSKU","_templateObject34","queries_templateObject","queries_templateObject2","ORDERS","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","size","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","prod_desc","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","useEffect","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","AlertProps","vertical","top","bottom","horizontal","left","right","center","severity","success","warning","AlertContext","open","msg","onclose","setSnack","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","Alert_Alert","elevation","withRouter","className","classes","useContext","_React$useContext2","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","handleChange","persist","target","type","checked","handleSubmit","signinobj","pageaccess","pages","pagepermissions","statuscode","setItem","accessToken","forEach","element","push","pageurl","is_write","history","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","Snackbar","autoHideDuration","anchorOrigin","onClose","LoginForm_Alert","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","initailRingSize","updateRingSize","_getMasterRingSize","then","res","allMasterRingsSizes","getMasterRingSize","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","image_url","axios","put","file","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","border","&:hover","typography","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","showproductdetails","_showproductdetails","prod_id","bodycontent","productid","filterparams","categoryname","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","Visibility_default","product_name","vendor_code","product_category","Switch","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","goBack","ArrowBackIos_default","drawer","header","buttonIcon","contentSection","contentSectionHeader","cursor","contentSectionContent","addButton","minAmount","maxAmount","radioGroup","actions","Filter","masters","onFilter","initialValues","company","mobile","version","commodity","_useState3","_useState4","_useState5","_useState6","setValues","handleoptionchange","Drawer","anchor","Close_default","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","searchcontent","setSearchcontent","Search_default","esm_Input_Input","disableUnderline","filterButton","filterIcon","ProductFilter","dataCSV","openFilter","setOpenFilter","components_Search_Search","pathname","react_csv","keyCSV","valueCSV","textDecoration","FilterList_default","components_Filter_Filter","Alerts","components_Alert_Alert","Productlist","responseCSV","setMasters","setFilterparams","setDataCSV","_fetchCSVdata","responseData","keyData","_i","_Object$entries","_Object$entries$_i","res_json","entries","fetchCSVdata","components_ProductFilter_ProductFilter","filterobj","filtercontent","Product","Header","onAdd","inner","Results","CardActions","results","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","i","Math","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","_React$createElement","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","material_list","_downloadlog","_callee4","_context4","href","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","anchorEl","setAnchorEl","Boolean","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","borderTop","Header_SortHeader","containergrid","columnobjs","orderdate","onupdate","_showorderdetails","orderurl","components_EnhancedTableHead_EnhancedTableHead","col","iswrite","showorderdetails","paymentmode","paymentstatus","orderstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","APTRANSACTIONID","fail_reason","TRANSACTIONPAYMENTSTATUS","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","join","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","opts","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","filter","match","username","OrderList_components_Results_Results","showcolumns","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","closeButton","other","disableTypography","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","handleinputChange","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","readOnly","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","setgemlist","diamondcontent","getgemlist","gemstone","weightstart","weightend","add","price","cost_price_id","cost_price","_getgemlist","ratetype","allGemstonePriceSettings","gemstoneType","weightStart","weightEnd","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","makingcontent","getmclist","_getmclist","weight_start","weight_end","allMakingChargeSettings","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","puritylist","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","purity_list","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","Markupprice","setCategorylist","setProducttypes","setMateriallist","setPuritylist","Markuppricesetup_components_Product","black","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","onDelete","Viewsku_DialogActions","Products","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","author","applyButton","EditContent","diamond","onApply","showpreview","setShowpreview","previewurl","toggleChecked","imageurl","previmagenames","previmages","moment","foldername","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","alt","src","small","oninit","imagecontainer","masterlist","setMasterlist","openedit","setOpenedit","aliasName","setaliasName","onCreate","Array","prototype","insert","setpreviewurl","_React$useState33","_React$useState34","_React$useState35","_React$useState36","toLowerCase","button_title","sort_id","filterOrder","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","toolbar","deleteButton","deleteIcon","OrderInfo","setOption","setPaymentstatus","setOrderstatus","user_profile","first_name","last_name","shopping_cart","cart_addresses","addressline2","state","country","contact_number","discounted_price","awb_number","giftwraps","payment_mode","select","OrderItems","react_perfect_scrollbar_lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","text_heading","text_content","final_total_text","OrderDetails","trans_sku_list","sku_weight","diamond_type","round","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","_fetchorderdetails","order_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","Materialmaster","Mastermetalcolors","Masterpurities","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings","Mastergemshapes","Mastergemtypes","Mastergenders","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","selling_price","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","setFiltercontent","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","General","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","setInvoices","invoice","date","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Addtaxattributes","AttributesComponent_AttributesComponent","CREATE_HOLIDAY","mutation_templateObject","UPDATE_HOLIDAY","mutation_templateObject2","DELETE_HOLIDAY","mutation_templateObject3","CREATE_WAREHOUSE","mutation_templateObject4","UPDATE_WAREHOUSE","mutation_templateObject5","DELETE_WAREHOUSE","mutation_templateObject6","CREATE_INVENTORY","mutation_templateObject7","UPDATE_INVENTORY","mutation_templateObject8","DELETE_INVENTORY","mutation_templateObject9","inputField","HolidayModal","holiday","editItem","DatePicker","HolidayManager","_data$allHolidayManag","_data$allHolidayManag2","_data$allHolidayManag3","setType","useApolloClient","snack","Tooltip","CloudUpload_default","AddCircle_default","TableContainer","colSpan","LinearProgress","allHolidayManagers","DeleteForever_default","HolidayManager_HolidayModal","__typename","WarehouseModal","shippingInDays","Warehouse","_data$allWarehouses","_data$allWarehouses2","_data$allWarehouses3","allWarehouses","Warehouse_WarehouseModal","_event$target","InventoryModal","setError","required","onBlur","_res$data","_res$data$allTransSku","_res$data$allTransSku2","allTransSkuLists","numberOfItems","getOptionSelected","endAdornment","Inventory","_data$allInventories","_data$allInventories2","_data$allInventories3","_data$allInventories4","first","allInventories","Inventory_InventoryModal","newValue","warehouseId","Banners","link_style","StyloriLandingPage","alllandingbanner","setalllandingbanner","web","createlandingbanner","setCreatelandingbanner","_styloribannerfetch","allStyloriBanners","styloribannerfetch","onChangeData","handleDelete","onsubmitvalue","create_banner_data","Number","now","toISOString","Styloribanner","stylorilandingpage","SilverLandingPage","allStyloriSilverBanners","Silverbanner","silverlandingpage","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","minHeight","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","selected","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","EditDiamond","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","DiamondSave","_DiamondSave","diamondobj","list_data","diamondListData","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","diamondType","settingData","shapeData","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","availableStockQty","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","pricerun","Skupricesync","_Skupricesync","productId","priceobj","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","ishover","aria-hidden","handlenewAssetChange","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","changeVariant","_saveProductEditItem","productEditItem","productName","fetchvalue","updateProductListByProductId","productList","prodDescription","_showpricesummary","sku","price_summary","skuprice","obj","material_name","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","handledesinputChange","materialName","esbody","endpoint","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","AppAlert","_this","call","close","set","Alert_Alerts","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","App_Alert","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1768ca7.chunk.js","sourcesContent":["const route = {\n  login: \"/login\",\n  dashboard: \"/dashboard\",\n  profile: \"/profile\",\n  productupload: \"/productupload\",\n  configuration: \"/Configuration\",\n  vendor: \"/vendorlist\",\n  productlist: \"/productlist\",\n  orderlist: \"/orderlist\",\n  orderdetails: \"/orderdetails/:id\",\n  userorders: \"/orderlist/:userid\",\n  userwishlist: \"/userwishlist/:userid\",\n  address: \"/address/:userid\",\n\n  materiallist: \"/material\",\n  mastermaterial: \"/materialmaster\",\n  mastercolors: \"/mastercolors\",\n  masterpurities: \"/masterpurities\",\n  salediscountlist: \"/salediscountlist\",\n  voucherdiscountlist: \"/voucherdiscountlist\",\n\n  producttypes: \"/producttypes\",\n  voucherdiscount: \"/voucherdiscount\",\n  salediscount: \"/salediscount\",\n  priceupdate: \"/priceupdate\",\n  productAttributes: \"/product_attributes\",\n  diamondDetails: \"/diamond_details\",\n  gemstoneDetails: \"/gemstone-details\",\n  variants: \"/variants\",\n  images: \"/images\",\n  createVariant: \"/create_variant\",\n  materiallistpage: \"/newmaterial\",\n  editCategory: \"/editcategory\",\n  vendorPrice: \"/vendorpricesetup\",\n  markupPrice: \"/markuppricesetup\",\n  taxsetup: \"/taxsetup\",\n  editdiscount: \"/salediscount/:id\",\n  editvoucher: \"/voucherdiscount/:id\",\n  masterstyles: \"/masterstyles\",\n  masterthemes: \"/masterthemes\",\n  masteroccassions: \"/masteroccassions\",\n  masterpaymentstatus: \"/paymentstatus\",\n  mastercollections: \"/collections\",\n  masterdesigns: \"/designs\",\n  masterorderstatus: \"/orderstatus\",\n  shippingzones: \"/zones\",\n  shipmentsettings: \"/shipmensettings\",\n  shippingattributes: \"/shippingattributes\",\n  masterdiamonds: \"/diamonds\",\n  diamondsettings: \"/diamondsettings\",\n  diamondshapes: \"/diamondshapes\",\n  earringbacking: \"/earringbacking\",\n  addshippingattributes: \"/addshippingattributes\",\n  addtaxattributes: \"/addtaxattributes\",\n  userconfiguration: \"/userconfiguration\",\n  masterroles: \"/masterroles\",\n  manageadminusers: \"/manageadminusers\",\n  goldpriceupdate: \"/goldpriceupdate\",\n\n  manageusers: \"/manageusers\",\n\n  masterpages: \"/masterpages\",\n\n  gemsettings: \"/gemstonesettings\",\n  gemshapes: \"/gemstoneshapes\",\n  gemtypes: \"/gemstonetypes\",\n  gender: \"/genders\",\n  seo: \"/seopriority\",\n  taxsettings: \"/taxsettings\",\n  masterattributes: \"/masterattributes\",\n\n  masterstones: \"/masterstones\",\n  masterstonecolors: \"/masterstonecolors\",\n  masterstoneshapes: \"/masterstoneshapes\",\n  weights: \"/weights\",\n  customerdetails: \"/customerdetails/:id\",\n\n  category: \"/categories\",\n\n  banners: \"/banners\",\n  styloribanner: \"/styloribanner\",\n  silverbanner : \"/silverbanner\",\n\n  warehouse:\"/warehouse\",\n  holiday_manager:\"/holiday-manager\",\n  inventory:\"/inventory\"\n};\n\nexport default route;\n","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from \"graphql-tag\";\n\nconst PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterGenders {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        diamondClarity\n        diamondColor\n        id\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondsShapes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterThemes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        id\n        alias\n        name\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondClarities {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterVendors {\n      nodes {\n        id\n        name\n        shortCode\n        vendorDelivaryDays\n      }\n    }\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n      nodes {\n        productSeries\n        id\n      }\n    }\n    allMasterGemstonesTypes {\n      nodes {\n        alias\n        colorCode\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterGemstonesShapes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterEarringBackings {\n      nodes {\n        name\n        createdAt\n        alias\n        id\n        nodeId\n        updatedAt\n      }\n    }\n    allMasterGemstonesSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\nconst PRODUCTFILTERMASTER = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n        displayOrder\n      }\n    }\n  }\n`;\n\nconst ALLPRODUCTLIST = gql`\n  query {\n    allProductLists(first: 500) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLIST = (category) => gql`\n  query($Veiw: Int!, $Offset: Int!) {\n    allProductLists(first: $Veiw, offset: $Offset) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLISTS = gql`\n  query {\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\n      nodes {\n        vendorDelivaryDays\n        updatedAt\n        state\n        shortCode\n        partnerCategory\n        name\n        organization\n        gstNo\n        currency\n        createdAt\n        city\n        address\n      }\n      totalCount\n    }\n  }\n`;\n\nconst TaxList_1 = gql`\n  query {\n    allMasterTaxSettings {\n      nodes {\n        hsnNumber\n        taxName\n        taxValue\n        updatedAt\n        id\n      }\n      totalCount\n    }\n  }\n`; /*********** configuration query */\n\nconst TaxList = `\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      sgst\n      productAttributes\n      displayAttributes\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList = `\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL = `\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS = `\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      shortCode\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES = `\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER = `\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    alias\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER = `\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER = `\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER = `\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER = `\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER = `\nquery {\n  allMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      shortCode\n      diamondClarity\n      diamondColor\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n\n`;\n\nconst PAYMENTSTATUSMASTER = `\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS = `\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES = `\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES = `\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name\n    id\n    alias\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES = `\nquery{\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPAGES = `\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER = `\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING = `\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONES = `\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES = `\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES = `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`;\nconst ACTIVESHIPPINGZONES = `\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES = `\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS = `\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS = `\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES = `\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERATTRIBUTES = `\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    isTopMenu\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS = `\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES = `\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES = `\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER = `\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES = `\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      imageUrl\n        mobileImageUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        purity\n        vendorCode\n        updatedAt\n        sellingPriceType\n        sellingPrice\n        material\n        id\n        createdAt\n        costPrice\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDMARKUP = gql`\n  query MyQuery($vendorCode: String!) {\n    allPricingMarkups(\n      condition: { material: $vendorCode }\n      orderBy: UPDATED_AT_DESC\n    ) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        purities\n        markupValue\n        markupType\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\nconst ALLMARKUPPRICE = gql`\n  query MyQuery {\n    allPricingMarkups(orderBy: UPDATED_AT_DESC) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        purities\n        markupValue\n        markupType\n        id\n        createdAt\n        __typename\n      }\n      totalCount\n      __typename\n    }\n  }\n`;\nconst DIAMONDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        costPrice\n        createdAt\n        diamondClarity\n        diamondColour\n        id\n        sellingPrice\n        sellingPriceType\n        updatedAt\n        vendorCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst GEMPRICELIST = gql`\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\n    allGemstonePriceSettings(\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\n    ) {\n      nodes {\n        createdAt\n        id\n        sellingPriceType\n        updatedAt\n        vendorCode\n        gemstoneType\n        price\n        priceType\n        rateType\n        weightEnd\n        weightStart\n        __typename\n      }\n      totalCount\n      __typename\n    }\n  }\n`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\nconst CATGORYLIST = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        shortCode\n        id\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTTYPEMASTER = gql`\n  query {\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MATERIALMASTER = gql`\n  query {\n    allMasterMaterials {\n      nodes {\n        alias\n        name\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MASTERCOLORS = gql`\n  query {\n    allMasterMetalsColors {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst SALEDISCOUNTS = gql`\n  query {\n    allSaleDiscounts {\n      nodes {\n        id\n        discountName\n        discountType\n        discountValue\n        components\n        attributes\n        isActive\n        productAttributes\n        productAttributesText\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst VOUCHERDISCOUNTS = gql`\n  query {\n    allVouchers {\n      nodes {\n        id\n        name\n        code\n        uses\n        maxUses\n        isActive\n        voucherCodes\n        description\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst MASTERPURITIES = gql`\n  query {\n    allMasterMetalsPurities {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLIST = `\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER = `\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst MASTERCATEGORY = `\nquery {\n  \n    allMasterProductCategories {\n      nodes {\n        name\n        shortCode\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        name\n        shortCode\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        name\n        id\n        shortCode\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        shortCode\n      }\n    }\n  \n  \n}`;\n\nconst GEMSTONEMASTER = `\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\nconst MAKINGCHARGEPRICELIST = gql`\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\n    allMakingChargeSettings(\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\n    ) {\n      nodes {\n        weightStart\n        weightEnd\n        vendorCode\n        updatedAt\n        sellingPriceType\n        rateType\n        purity\n        priceType\n        price\n        material\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst PRODUCTLISTSTATUSEDIT = gql`\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\n    __typename\n    updateProductListByProductId(\n      input: {\n        productId: $productId\n        productListPatch: { isactive: $isActive }\n      }\n    ) {\n      clientMutationId\n      productList {\n        isactive\n      }\n    }\n  }\n`;\n\nconst CREATETAXSETUP = gql`\n  mutation MyMutation(\n    $id: UUID!\n    $updatedAt: Date!\n    $createdAt: Date!\n    $taxValue: Double!\n    $taxName: String!\n    $hsnNumber: String!\n  ) {\n    __typename\n    createMasterTaxSetting(\n      input: {\n        masterTaxSetting: {\n          id: $id\n          updatedAt: $updatedAt\n          createdAt: $createdAt\n          taxValue: $taxValue\n          taxName: $taxName\n          hsnNumber: $hsnNumber\n        }\n      }\n    ) {\n      clientMutationId\n    }\n  }\n`;\n\nconst VOUCHERSTATUSEDIT = gql`\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateVoucherById(\n      input: { id: $voucherId, voucherPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      voucher {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateSaleDiscountById(\n      input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      saleDiscount {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DELETEMARKUPPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deletePricingMarkupById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGOLDPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETESALEDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteSaleDiscountById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteVoucherById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEMAKINGCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGEMCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETEDIAMONDCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productId\n    productName\n    productType\n    prodDescription\n    vendorCode\n    productVendorCode\n    sellingQty\n    maxBookingQty\n    gender\n    earringBacking\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n   \n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        marginOnSalePercentage\n        markupPriceTax\n        marginOnSalePercentage\n        sellingPrice\n        discountDesc\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        availableStockQty\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n`;\n\nconst ALLMASTERRINGSIZE = `\n  query {\n    allMasterRingsSizes {\n      nodes {\n        gender\n        productType\n        name\n        size\n        sizeValue\n      }\n    }\n  }\n`;\n\nconst ALLSTYLORILANDINGBANNERS = `\nquery MyQuery {\n  allStyloriBanners {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n    }\n  }\n}\n`;\nconst ALLSTYLORISILVERLANDINGBANNERS = `\nquery MyQuery {\n  allStyloriSilverBanners {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}\n\n\n`;\n\nconst CREATESTYLORILANDINGBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createStyloriBanner(\n    input: {\n      styloriBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n      }\n    }\n  ) {\n    clientMutationId\n    styloriBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\nconst DELETESTYLORILANDINGBANNER = `\nmutation MyMutation($id : Int!) {\n  deleteStyloriBannerById(input: {id: $id}) {\n    styloriBanner {\n      id\n      mobile\n      position\n      url\n      web\n      \n    }\n  }\n}`;\n\nconst CREATESILVERLANDINGBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: String\n) {\n  createStyloriSilverBanner(\n    input: {\n      styloriSilverBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n      }\n    }\n  ) {\n    clientMutationId\n    styloriSilverBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}`;\nconst DELETESILVERLANDINGBANNER = `\nmutation MyMutation($id : Int!) {\n  deleteStyloriSilverBannerById(input: {id: $id}) {\n    styloriSilverBanner {\n      id\n      nodeId\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\nconst ALLSTYLORISILVERLISTINGPAGE = `\nquery MyQuery {\n  allStyloriSilverBanners(condition: {urlParam: \"listingPage\"}) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}\n\n`;\nconst CREATESILVERLISTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: String\n) {\n  createStyloriSilverBanner(\n    input: {\n      styloriSilverBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam : \"listingPage\"\n      }\n    }\n  ) {\n    clientMutationId\n    styloriSilverBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\nconst PRODUCTDESCRIPTIONEDIT = `\nmutation MyMutation($productId: String!, $prod_desc: String!) {\n  updateProductListByProductId(\n    input: {\n      productListPatch: { prodDescription: $prod_desc }\n      productId: $productId\n    }\n  ) {\n    productList {\n      prodDescription\n      id\n      productId\n    }\n  }\n}\n\n`;\n\nconst ALLSTYLORISILVERROUTINGPAGE = `\nquery MyQuery {\n  allStyloriSilverBanners(condition: {url: \"#\"}) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}`;\nconst CREATESTYLORISILVERROUTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $web: String\n  $mobile: String\n  $position: String\n  $urlParam: String\n) {\n  createStyloriSilverBanner(\n    input: {\n      styloriSilverBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: \"#\"\n        web: $web\n        urlParam: $urlParam\n      }\n    }\n  ) {\n    clientMutationId\n    styloriSilverBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n      urlParam\n    }\n  }\n}\n`;\n\nconst HOLIDAYLIST = gql`\n  query {\n    allHolidayManagers(orderBy: DATE_ASC) {\n      nodes {\n        id\n        holiday\n        date\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\n\nconst WAREHOUSELIST = gql`\n  query {\n    allWarehouses(orderBy: ID_ASC) {\n      nodes {\n        id\n        name\n        shippingInDays\n      }\n    }\n  }\n`;\n\nconst INVENTORYLIST = gql`\n  query($first: Int, $offset: Int, $filter: InventoryFilter) {\n    allInventories(first: $first, offset: $offset, filter: $filter) {\n      nodes {\n        id\n        generatedSku\n        numberOfItems\n        warehouse: warehouseByWarehouseId {\n          id\n          name\n        }\n      }\n      totalCount\n    }\n  }\n`;\n\nconst VALIDATEGENERATEDSKU = gql`\n  query($generatedSku: String!) {\n    allTransSkuLists(condition: { generatedSku: $generatedSku }) {\n      nodes {\n        id\n      }\n    }\n  }\n`;\n\nexport {\n  PRODUCTCATEGORY,\n  PRODUCTLIST,\n  PRODUCTEDIT,\n  PRODUCTLISTSTATUSEDIT,\n  PRODUCTDIAMONDTYPES,\n  GOLDPRICELIST,\n  DIAMONDPRICELIST,\n  GEMPRICELIST,\n  MAKINGCHARGEPRICELIST,\n  VENDORLIST,\n  ALLPRODUCTLIST,\n  DIAMONDMARKUP,\n  PRODUCTFILTERMASTER,\n  METALMASTER,\n  GEMSTONEMASTER,\n  MASTERCATEGORY,\n  DELETEMARKUPPRICE,\n  DELETEMAKINGCHARGE,\n  DELETEGEMCHARGE,\n  DELETEGOLDPRICE,\n  DELETESALEDISCOUNT,\n  CATGORYLIST,\n  DELETEDIAMONDCHARGE,\n  VENDORLISTS,\n  TaxList,\n  PRODUCTTYPEMASTER,\n  MATERIALMASTER,\n  MASTERCOLORS,\n  MASTERPURITIES,\n  SALEDISCOUNTS,\n  VOUCHERDISCOUNTS,\n  DELETEVOUCHERDISCOUNT,\n  VOUCHERSTATUSEDIT,\n  DISCOUNTSTATUSEDIT,\n  MASTERMATERIAL,\n  MASTERMATERIALCOLORS,\n  MASTERPRODUCTPURITIES,\n  COLLECTIONMASTER,\n  DESIGNMASTER,\n  DIAMONDMASTER,\n  DIAMONDSETTINGS,\n  DIAMONDSHAPES,\n  MASTERPRODUCTTYPES,\n  MASTERGEMSETTINGS,\n  MASTERGEMSHAPES,\n  MASTERGEMTYPES,\n  MASTERGENDER,\n  SEOPRIORITIES,\n  CREATETAXSETUP,\n  TaxSettingList,\n  MASTERCATEGORIES,\n  EARRINGBACKING,\n  MASTERATTRIBUTES,\n  MASTERSTONESHAPES,\n  MASTERSTONECOLORS,\n  MASTERSTONES,\n  MASTERWEIGHTS,\n  THEMEMASTER,\n  STYLEMASTER,\n  OCCASSIONSMASTER,\n  PAYMENTSTATUSMASTER,\n  SHIPPINGZONES,\n  MASTERCOUNTRIES,\n  SHIPPINGCHARGES,\n  ACTIVESHIPPINGZONES,\n  MASTERPAGES,\n  GOLDPRICESETUPMASTER,\n  ALLMASTERRINGSIZE,\n  ALLSTYLORILANDINGBANNERS,\n  CREATESTYLORILANDINGBANNER,\n  DELETESTYLORILANDINGBANNER,\n  ALLSTYLORISILVERLANDINGBANNERS,\n  CREATESILVERLANDINGBANNER,\n  DELETESILVERLANDINGBANNER,\n  PRODUCTDESCRIPTIONEDIT,\n  ALLMARKUPPRICE,\n  ALLSTYLORISILVERLISTINGPAGE,\n  CREATESILVERLISTINGPAGE,\n  ALLSTYLORISILVERROUTINGPAGE,\n  CREATESTYLORISILVERROUTINGPAGE,\n  HOLIDAYLIST,\n  WAREHOUSELIST,\n  INVENTORYLIST,\n  VALIDATEGENERATEDSKU,\n};\n","import { gql } from \"apollo-boost\";\n\nexport const PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const USERORDERS = gql`\n  query($userid: UUID!) {\n    allOrders(\n      filter: { userProfileByUserProfileId: { id: { equalTo: $userid } } }\n    ) {\n      nodes {\n        paymentMode\n        paymentStatus\n        updatedAt\n        createdAt\n        awbNumber\n        cartId\n        orderStatus\n        comments\n        id\n        shoppingCartByCartId {\n          shoppingCartItemsByShoppingCartId {\n            nodes {\n              transSkuListByProductSku {\n                generatedSku\n                productListByProductId {\n                  productCategory\n                  productType\n                  productCollectionsByProductId {\n                    nodes {\n                      collectionName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          giftwrapsByCartId {\n            nodes {\n              message\n              giftFrom\n              giftTo\n            }\n          }\n\n          cartAddressesByCartId {\n            nodes {\n              firstname\n              contactNumber\n              addressline1\n              addressline2\n              city\n              pincode\n              state\n            }\n          }\n          userProfileByUserprofileId {\n            firstName\n            mobile\n            email\n          }\n        }\n        paymentDetailsByOrderId {\n          nodes {\n            paymentResponse\n          }\n        }\n      }\n    }\n  }\n`;\nexport const ORDERS = (orderid) => gql`query {\n  allOrders(filter:  ${\n    orderid\n      ? `{userProfileId: {equalTo: \"${orderid}\"}}`\n      : `{id: {isNull: false}}`\n  },orderBy: CREATED_AT_DESC) {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n          userAddressesByUserProfileId {\n            nodes {\n              contactNumber\n            }\n          }\n          \n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`;\n\nexport const MATERIALMASTER = gql`\n  query {\n    allMasterVendors {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterPricingComponents(condition: { isActive: true }) {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductCategories {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const VOUCHERMASTER = gql`\n  query {\n    allMasterVendors {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterPricingComponents(condition: { isActive: true }) {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductCategories {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n\n    allMasterThemes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        shortCode\n        diamondColor\n        diamondClarity\n        id\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        name\n        alias\n        id\n      }\n    }\n  }\n`;\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`;\n\nexport const TAXMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._,\n        //     name: _.name,\n        //     size:_.size,\n        //     productType : _.productType ,\n        // }))\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking,\n            // metalSizeMinToMax\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const userOders = {\n    query: USERORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._\n        // }))\n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes,\n            // metalSizeMinToMax\n        }\n    }\n\n\n}","\n//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api-staging.stylori.com\";\nexport const API_URL = \"https://api-staging.stylori.com\";\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\";\nexport const URL = \"https://console-staging.stylori.com\";\n\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"\n// export const BASE_URL = \"http://localhost:8000\"\n// export const URL = \"https://localhost:3000\"","import React from \"react\";\nimport { productCategory } from \"../services/mapper\";\nimport { API_URL } from \"../config\";\nimport { isString } from \"util\";\n\nconst TOKEN = \"accesstoken\";\n\nconst initialNetworkCtx = {\n  networkCtx: {\n    mapper: productCategory,\n    status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n    notRequested: true,\n  },\n  setNetworkCtx: () => null,\n  sendNetworkRequest: () => null,\n};\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n  url = API_URL + url;\n  console.info(\"URL\", url, data);\n  const method = data ? \"POST\" : \"GET\",\n    headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n  let resdata = null;\n  if (auth) {\n    const token = localStorage.getItem(TOKEN);\n    if (token) headers[\"x-access-token\"] = token;\n    // else window.location = '/'\n  }\n  const response = await fetch(\n    url,\n    method === \"GET\"\n      ? { method }\n      : {\n          method,\n          body: isString(data) ? data : JSON.stringify(data),\n          headers,\n        }\n  );\n\n  if (response.status < 400) {\n    resdata = await response.json();\n  } else {\n    resdata = await response.json();\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n    // {\n    //    if(!resdata.auth)\n    //    {\n    //     //alert(resdata.message)\n    //    }\n    // }else{\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    // }\n  }\n  resdata[\"statuscode\"] = response.status;\n\n  return resdata;\n};\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n  const [networkCtx, setNetworkCtx] = React.useState(initialNetworkCtx.networkCtx);\n\n  return (\n    <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}>{props.children}</NetworkContext.Provider>\n  );\n};\n","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst productuploadCtxInitial = {\n  productCtx: {\n    product_categoy: \"\",\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\n    product_type: \"\",\n    productname: \"\",\n    material: \"\",\n    product_type_shortcode: \"\",\n    category: [],\n    metalColour: \"\",\n    metalpurities: \"\",\n    isExpand: false,\n    selectedgender: \"\",\n    selected_metal_colour: {},\n    gender: {},\n    product_gender: \"\",\n    vendorcode: \"\",\n    productseries: [],\n    size: 0,\n    sizes: [],\n    selected_sizes: [],\n    metal: {\n      value: 1,\n      label: \"Diamond\",\n    },\n    materials: [\n      \"Diamond\",\n      \"Gold\",\n      \"Gemstone\",\n      \"Solitaire\",\n      \"Silver\",\n      \"Platinum\",\n    ],\n    gemstontypes: \"\",\n    gemstonshapes: \"\",\n    product_code: \"\",\n    isactive: false,\n    gemstonelist: [],\n    diamondlist: [],\n    variants: [],\n    oldproductMetalColor: [],\n    oldproductMetalPurity: [],\n    productMetalColor: [],\n    productMetalPurity: [],\n    productDiamondColor: [],\n    productDiamondClarity: [],\n    productDiamondTypes: [],\n    productImages: [],\n    productDiamondTypesArray: [],\n    oldproductDiamondTypesArray: [],\n    productmaterials: [],\n    createVariantList: [],\n    editVariants: [],\n    editDiamondLists: [],\n    editGemstoneLists: [],\n    productVariantSize: [\n      8,\n      9,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      16,\n      17,\n      18,\n      19,\n      20,\n      21,\n      22,\n      23,\n      24,\n      25,\n    ],\n    variant_size: [],\n    gemstonetype: \"\",\n    gemstoneshape: \"\",\n    gemstonesettings: \"\",\n    gemstonesize: \"\",\n    gemstonecount: \"\",\n    gemstoneweight: \"\",\n    stonetype: \"\",\n\n    editleadtime: \"\",\n    editreadytoship: false,\n    editisdefault: false,\n    editisactive: false,\n\n    editcostprice: 0,\n    editsellingprice: 0,\n    editmarkupprice: 0,\n    editdiscountprice: 0,\n    editcostpricetax: 0,\n    editsellingpricetax: 0,\n    editmarkuppricetax: 0,\n    editdiscountpricetax: 0,\n\n    diamondclarity: \"\",\n    diamondcolor: \"\",\n    diamondsettings: \"\",\n    diamondshape: \"\",\n    diamondcount: \"\",\n    diamondweight: \"\",\n    metalindex: -1,\n    themes: \"\",\n    prod_styles: \"\",\n    occassions: \"\",\n    collections: \"\",\n    stonecount: \"\",\n    stonecolour: \"\",\n    product_images: {},\n    metalcolour: [],\n    metal_purity: [],\n    metalpurity: [],\n    metal_color: 0,\n    metal_weight: 0,\n    diamond_colour: 0,\n    diamond_clarity: 0,\n    metal_height: 0,\n    metal_width: 0,\n    metal_length: 0,\n    metal_object: 0,\n    diamondtype: 0,\n    metals: [],\n    error_message: {},\n    prod_desc : \"\"\n  },\n  masterData: {},\n  setProductCtx: () => null,\n};\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n  return productuploadCtxInitial.productCtx;\n};\n\nexport const ProductProvider = (props) => {\n  console.info(\"PROPS\", props, props.value.mappertype);\n  const [productCtx, setProductCtx] = React.useState(\n    mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\n  );\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"productCtx s\", productCtx);\n  }, [productCtx.material]);\n\n  return (\n    <ProductContext.Provider\n      value={{\n        productCtx,\n        setProductCtx,\n        masterData: mapDataToCtx(\n          props.value.data,\n          props.value.mapper,\n          props.value.mappertype\n        ),\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst voucherCtxInitial = {\n  voucherCtx: {\n    voucher: \"\",\n    attrobj: {},\n  },\n  voucherMaster: {\n    materials: [],\n  },\n  setVoucherCtx: () => null,\n};\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n  console.log(\"resposeobjvalue1\" + JSON.stringify(apiData));\n  voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n  return voucherCtxInitial.voucherCtx;\n};\n\nexport const VoucherProvider = (props) => {\n  const [voucherCtx, setVoucherCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"materialCtx s\", voucherCtx);\n  }, [voucherCtx.voucher]);\n\n  return (\n    <VoucherContext.Provider\n      value={{\n        voucherCtx,\n        setVoucherCtx,\n        masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype),\n      }}\n    >\n      {props.children}\n    </VoucherContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \n    if(Object.keys(apiData).length === 0) return {};\n \n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","import React from \"react\";\nexport let AlertProps = {\n  vertical: {\n    top: \"top\",\n    bottom: \"bottom\",\n  },\n  horizontal: {\n    left: \"left\",\n    right: \"right\",\n    center: \"center\",\n  },\n  severity: {\n    success: \"success\",\n    error: \"error\",\n    warning: \"warning\",\n    info: \"info\",\n  },\n};\n\n/**\n * AlertContext store the props which are neccessary to show the Alert component,\n * which is provided at the /src/App.js using the /src/App.alert.js.\n */\nexport let AlertContext = React.createContext({\n  open: false,\n  severity: AlertProps.severity.success,\n  msg: \"\",\n  vertical: AlertProps.vertical.top,\n  horizontal: AlertProps.horizontal.center,\n  onclose: () => null,\n  setSnack: () => null,\n});\n","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport gradients from \"../../../../utils/gradients\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { GlobalContext } from \"../../../../context\";\n\nimport { Card, CardContent, CardMedia, Typography, Divider, Link, Avatar } from \"@material-ui/core\";\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: \"is required\" },\n    email: true,\n  },\n  password: {\n    presence: { allowEmpty: false, message: \"is required\" },\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  card: {\n    maxWidth: \"100%\",\n    overflow: \"unset\",\n    display: \"flex\",\n    position: \"relative\",\n    \"& > *\": {\n      flexGrow: 1,\n      flexBasis: \"50%\",\n      width: \"50%\",\n    },\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4),\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: \"absolute\",\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32,\n  },\n  loginForm: {},\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n  person: {\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      flexGrow: 1,\n      margin: theme.spacing(1),\n    },\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {},\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState((formState) => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {},\n    }));\n  }, [formState.values]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setFormState((formState) => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.target.value,\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true,\n      },\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (formState.isValid) {\n      //alert(JSON.stringify(formState.values))\n      let signinobj = await sendNetworkRequest(\"/api/auth/signin\", {}, formState.values);\n\n      if (signinobj.statuscode === 200) {\n        localStorage.setItem(\"accesstoken\", signinobj.accessToken);\n\n        let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\n        let pages = [];\n        let pagepermissions = [];\n        let bannerpage = { pagename: \"Banners\", pageurl: \"/banners\", is_view: true, is_write: true };\n    \n        debugger;\n        console.log(pageaccess);\n        // pageaccess.pages.push(bannerpage);\n        pageaccess.pages.forEach((element) => {\n          pages.push(element.pageurl);\n          // pagepermissions[element.pageurl] = {\n          //   isread : element.is_view,\n          //   iswrite : element.is_write\n          // }\n          if (element.is_write) {\n            pagepermissions.push(element.pageurl);\n          }\n        });\n        // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n        //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n        localStorage.setItem(\"accesspages\", pages);\n        localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n        props.history.push(\"/productlist\");\n      } else {\n        setShowmessage(signinobj.message);\n        setOpen(true);\n      }\n    } else {\n      alert(\"has some error\");\n    }\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = (field) => (formState.touched[field] && formState.errors[field] ? true : false);\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography gutterBottom variant=\"h3\">\n          Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">{/* Sign in on the internal platform */}</Typography>\n\n        <form {...rest} className={clsx(classes.root, className)} autoComplete={\"off\"} onSubmit={handleSubmit}>\n          <div className={classes.fields}>\n            <TextField\n              error={hasError(\"email\")}\n              fullWidth\n              helperText={hasError(\"email\") ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || \"\"}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError(\"password\")}\n              fullWidth\n              helperText={hasError(\"password\") ? formState.errors.password[0] : null}\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || \"\"}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button className={classes.submitButton} color=\"primary\" size=\"large\" type=\"submit\" variant=\"contained\">\n            Log in\n          </Button>\n          <Snackbar\n            open={open}\n            autoHideDuration={6000}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            onClose={handleClose}\n          >\n            <Alert onClose={handleClose} severity=\"error\">\n              {showmessage}\n            </Alert>\n          </Snackbar>\n        </form>\n      </CardContent>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport clsx from \"clsx\";\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext } from \"../../context\";\nimport FullLoader from \"../../components/Loader\";\nimport \"./Productupload.css\";\nimport Select from \"react-select\";\nimport \"./floating_dropdown.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useQuery } from \"react-apollo\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n];\nconst useStyles = makeStyles((theme) => ({\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  dropdownlayout: {\n    \"& .menu\": {\n      position: \"Relative !important\",\n    },\n  },\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3),\n  },\n  fieldGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0),\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n    },\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  dateField: {\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AddressForm(props) {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [initailRingSize, updateRingSize] = useState([]);\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  async function getMasterRingSize() {\n    fetch(GRAPHQL_DEV_CLIENT, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\n    })\n      .then((res) => res.json())\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\n  }\n  React.useEffect(() => {\n    getMasterRingSize();\n  }, []);\n  React.useEffect(() => {}, [productCtx]);\n\n  // const handleChange = selectedOption => {\n\n  // };\n  const handlesizeChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\n  };\n  const handlevendorChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\n  };\n\n  const changeproducttype = (type) => (event, newvalue) => {\n    setProductCtx({ ...productCtx, product_type: newvalue });\n  };\n  const handlechange = (type) => (selectedOption) => {\n    if (type === \"product_type\") {\n      if (selectedOption) {\n        var size = \"\";\n        var minvalue = 0;\n        var maxvalue = 0;\n        var selected_sizes = [];\n        var default_size = 0;\n        if (selectedOption.shortCode === \"K\") {\n          selected_sizes.push({\n            value: \"KID\",\n            label: \"KID\",\n          });\n          selected_sizes.push({\n            value: \"XS\",\n            label: \"XS\",\n          });\n          selected_sizes.push({\n            value: \"S\",\n            label: \"S\",\n          });\n          selected_sizes.push({\n            value: \"M\",\n            label: \"M\",\n          });\n          selected_sizes.push({\n            value: \"L\",\n            label: \"L\",\n          });\n          selected_sizes.push({\n            value: \"XL\",\n            label: \"XL\",\n          });\n        } else {\n          if (selectedOption.shortCode === \"R\" && productCtx.selectedgender.name === \"Male\") {\n            minvalue = 13;\n            maxvalue = 25;\n            default_size = 15;\n          }\n          if (selectedOption.shortCode === \"R\" && productCtx.selectedgender.name === \"Female\") {\n            minvalue = 8;\n            maxvalue = 23;\n            default_size = 12;\n          }\n\n          for (var i = minvalue; i < maxvalue; i++) {\n            selected_sizes.push({\n              value: i,\n              label: \"\" + i,\n            });\n          }\n        }\n\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: selectedOption.shortCode,\n          product_type: selectedOption,\n          size,\n          default_size,\n          selected_sizes,\n        });\n      } else {\n        setProductCtx({ ...productCtx, product_type_shortcode: \"\", product_type: \"\", size, selected_sizes: \"\" });\n      }\n    } else {\n      setProductCtx({ ...productCtx, [type]: selectedOption });\n    }\n  };\n  const handleTextChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"vendorcode\") {\n      setProductCtx({ ...productCtx, [type]: value, vendorleadtime: value.vendorDelivaryDays });\n    } else {\n      setProductCtx({ ...productCtx, [type]: value });\n    }\n  };\n\n  const switchisorderable = (event) => {\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\n  };\n\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n\n  const handleGenderChange = (type) => (event, value) => {\n    var minvalue = 0;\n    var maxvalue = 0;\n    var selected_sizes = [];\n    var sizes = [];\n    var default_size = 0;\n    // if (productCtx.product_type.shortCode === \"K\") {\n    //   default_size = \"XS\";\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    // } else {\n    //   if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\n    //     minvalue = 13;\n    //     maxvalue = 26;\n    //     default_size = \"\" + 15;\n    //   }\n    //   if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\n    //     minvalue = 8;\n    //     maxvalue = 24;\n    //     default_size = \"\" + 12;\n    //   }\n\n    //   for (var i = minvalue; i < maxvalue; i++) {\n    //     selected_sizes.push(\"\" + i);\n    //     sizes.push(\"\" + i);\n    //   }\n    // }\n\n    initailRingSize.forEach((e) => {\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\n        selected_sizes.push(\"\" + e.sizeValue);\n        sizes.push(\"\" + e.sizeValue);\n      }\n    });\n    setProductCtx({ ...productCtx, [type]: value, sizes, selected_sizes, default_size });\n  };\n\n  const handleMaterialChange = (type) => (event, value) => {\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\n    if (value) {\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\n        if (steps.indexOf(\"Step3\") === -1) {\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n        }\n      }\n    }\n    setProductCtx({ ...productCtx, [type]: value, steps });\n  };\n\n  const handleInputChange = (type) => (e) => {\n    var size = productCtx.size;\n    var materials = productCtx.materials;\n    var selected_sizes = productCtx.selected_sizes;\n\n    if (type === \"selectedgender\") {\n      var minvalue = 0;\n      var maxvalue = 0;\n      selected_sizes = [];\n      if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\n        size = \"13-25\";\n        minvalue = 13;\n        maxvalue = 26;\n      }\n      if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\n        size = \"8-18\";\n        minvalue = 8;\n        maxvalue = 19;\n      }\n\n      for (var i = minvalue; i < maxvalue; i++) {\n        selected_sizes.push({\n          value: i,\n          label: \"\" + i,\n        });\n      }\n    }\n\n    if (type === \"product_categoy\") {\n      if (e.target.value === \"Platinum Jewellery\") {\n        materials.push(\"Platinum Jewellery\");\n        var index = materials.indexOf(\"Silver Jewellery\");\n\n        if (index >= 0) {\n          materials.splice(index, 1);\n        }\n      } else if (e.target.value === \"Silver Jewellery\") {\n        materials.push(\"Silver Jewellery\");\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\n        if (index1 >= 0) {\n          materials.splice(index1, 1);\n        }\n      } else {\n        var indexval = materials.indexOf(\"Silver Jewellery\");\n\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n        indexval = materials.indexOf(\"Platinum Jewellery\");\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n      }\n    }\n\n    setProductCtx({ ...productCtx, size, [type]: e, materials, selected_sizes });\n  };\n\n  const materialChange = (type) => (selectedOption) => {\n    //   let material = { ...productCtx.material, [type]: selectedOption }\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\n    //   if(material.material)\n    //   {\n    //   material.material.forEach(element => {\n    let material_names = [];\n    if (selectedOption) {\n      selectedOption.forEach((element) => {\n        material_names.push(element.name);\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\n          if (steps.indexOf(\"Step3\") === -1) {\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n          }\n        }\n      });\n    }\n    //   });\n    // }\n\n    setProductCtx({ ...productCtx, [type]: selectedOption, steps, material_names });\n  };\n  const keyPress = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {/* <FullLoader /> */}\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} spacing={1}>\n            <Card {...rest} className={clsx(classes.root, className)}>\n              <CardHeader title=\"Product Information 1\" />\n              <Divider />\n              <CardContent className={classes.cardcontent}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} sm={12} spacing={1}>\n                    <Input\n                      className={classes.helperinput}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      error={productCtx.error_message.productname}\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={keyPress(\"productname\")}\n                    />\n                  </Grid>\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\n                    <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange(\"product_categoy\")}\n                      options={productCtx.masterData.category.map((option) => option.label)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />)\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Category\"\n                          margin=\"dense\"\n                          error={productCtx.error_message.product_categoy}\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} spacing={1}>\n                    <Autocomplete\n                      id=\"product_type\"\n                      className={classes.fixedTag}\n                      getOptionLabel={(option) => option.label}\n                      defaultValue={productCtx.product_type}\n                      options={productCtx.masterData.product_type}\n                      onChange={handleoptionChange(\"product_type\")}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />)\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Type\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          error={productCtx.error_message.product_type}\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Product Information 2\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      {productCtx.product_type ? (\n                        <>\n                          <Grid item xs={12} sm={6}>\n                            <Autocomplete\n                              id=\"free-solo-2-demo\"\n                              multiple\n                              className={classes.fixedTag}\n                              defaultValue={productCtx.material_names}\n                              options={productCtx.masterData.material.map((option) => option.label)}\n                              onChange={handleMaterialChange(\"material_names\")}\n                              renderTags={(value, getTagProps) =>\n                                value.map((option, index) => (\n                                  <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                                ))\n                              }\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Select Product Materials\"\n                                  margin=\"dense\"\n                                  variant=\"outlined\"\n                                  error={productCtx.error_message.material_names}\n                                  fullWidth\n                                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                                />\n                              )}\n                            />\n                          </Grid>\n                        </>\n                      ) : null}\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.selectedgender}\n                          options={productCtx.masterData.gender.map((option) => option.label)}\n                          onChange={handleGenderChange(\"selectedgender\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Gender\"\n                              margin=\"dense\"\n                              error={productCtx.error_message.selectedgender}\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalpurity}\n                          options={productCtx.masterData.metalpurity}\n                          onChange={handleoptionChange(\"metalpurity\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Purity\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              error={productCtx.error_message.metalpurity}\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalcolour}\n                          options={productCtx.masterData.metalcolour}\n                          onChange={handleoptionChange(\"metalcolour\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Colour\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.metalcolour}\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </>\n            ) : null}\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Vendor Information\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.vendorcode}\n                          getOptionLabel={(option) => option.label}\n                          options={productCtx.masterData.vendorcode}\n                          onChange={handleoptionChange(\"vendorcode\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Vendor Code\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.vendorcode}\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Product Code\"\n                          fullWidth\n                          className={classes.helperinput}\n                          value={productCtx.productvendorcode}\n                          error={productCtx.error_message.productvendorcode}\n                          id=\"productvendorcode\"\n                          name=\"productvendorcode\"\n                          onChange={handleTextChange(\"productvendorcode\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Lead Time\"\n                          fullWidth\n                          className={classes.helperinput}\n                          error={productCtx.error_message.vendorleadtime}\n                          value={productCtx.vendorleadtime}\n                          InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                          id=\"vendorleadtime\"\n                          name=\"vendorleadtime\"\n                          onChange={handleTextChange(\"vendorleadtime\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n                          <RadioGroup\n                            aria-label=\"position\"\n                            name=\"position\"\n                            value={productCtx.isreorderable}\n                            onChange={switchisorderable}\n                            row\n                          >\n                            <FormControlLabel\n                              value=\"Yes\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"Yes\"\n                              labelPlacement=\"right\"\n                            />\n                            <FormControlLabel value=\"No\" control={<Radio color=\"primary\" />} label=\"No\" labelPlacement=\"right\" />\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>{\" \"}\n              </>\n            ) : null}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12}>\n                {productCtx.product_type ? (\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader\n                      title=\"Default SKU For Display\n  \"\n                    />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_colour}\n                            onChange={handleoptionChange(\"default_metal_colour\")}\n                            options={productCtx.metalcolour.map((option) => option.label)}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Colour\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_metal_colour}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_purity}\n                            onChange={handleoptionChange(\"default_metal_purity\")}\n                            options={productCtx.metalpurity.map((option) => option.label)}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Purity\"\n                                margin=\"dense\"\n                                error={productCtx.error_message.default_metal_purity}\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>\n                ) : null}\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              (productCtx.product_type.shortCode === \"BA\" ||\n                productCtx.product_type.shortCode === \"R\" ||\n                productCtx.product_type.shortCode === \"SK\" ||\n                productCtx.product_type.shortCode === \"K\") &&\n              productCtx.sizes.length > 0 ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Size Information\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            multiple\n                            freeSolo\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.selected_sizes}\n                            options={productCtx.sizes}\n                            onChange={handleoptionChange(\"selected_sizes\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Ring Sizes\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.selected_sizes}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_type\"\n                            className={classes.fixedTag}\n                            freeSolo\n                            defaultValue={productCtx.default_size}\n                            options={productCtx.selected_sizes}\n                            onChange={handleoptionChange(\"default_size\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Select Default Size\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_size}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type && productCtx.product_type.alias === \"Earrings\" ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Type of Fit\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.earringbacking}\n                            options={productCtx.masterData.earringbacking.map((option) => option.label)}\n                            onChange={handleoptionChange(\"earringbacking\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Earring Backing\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.earringbacking}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}></Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Checkbox, Card, CardHeader, TextField, Divider, Chip, CardContent } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Select from \"react-select\";\nimport { Input } from \"../../components/Input.js\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { ProductContext } from \"../../context\";\nimport Box from \"@material-ui/core/Box\";\nimport SelectPlaceholder from \"../../components/SelectPlaceholder.js\";\n\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const materialChange = (type) => (e) => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked };\n    setProductCtx({ ...productCtx, selected_metal_colour });\n  };\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n\n  console.log(productCtx);\n  return (\n    <React.Fragment>\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={6}>\n          <Card {...rest} className={clsx(classes.root, className)}>\n            <CardHeader title=\"Type of Fit\" />\n            <Divider />\n            <CardContent className={classes.cardcontent}>\n              <Grid container spacing={1}>\n                <Grid item container xs={12} sm={12}>\n                  <Grid item xs={6} sm={3}>\n                    {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange(\"product_code\")}\n                      name=\"size\"\n                      value={\"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1)}\n                    />\n                  </Grid>\n                </Grid>\n                {[\"R\", \"B\"].includes(productCtx.product_type.shortCode) ? null : (\n                  <>\n                    <Grid item xs={4}>\n                      <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Height\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(\"metal_height\")}\n                        value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n                      />\n                    </Grid>\n\n                    <Grid item xs={4}>\n                      <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Width\"\n                        name=\"size\"\n                        onChange={handleInputChange(\"metal_width\")}\n                        value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n                        autoComplete=\"size\"\n                      />\n                    </Grid>\n                  </>\n                )}\n\n                {productCtx.product_type === \"Bracelets\" ? (\n                  <Grid item xs={6}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id=\"size\"\n                      label=\"Length\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange(\"metal_length\")}\n                      value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n                    />\n                  </Grid>\n                ) : null}\n              </Grid>\n            </CardContent>\n          </Card>\n          <Card {...rest} className={clsx(classes.root, className)}>\n            <CardHeader\n              title=\"Enter weights for different Purity\n\"\n            />\n            <Divider />\n            <CardContent className={classes.cardcontent}>\n              <Grid container spacing={1}>\n                <Grid item xs={12}></Grid>\n                {productCtx.metalpurity.map((row) => (\n                  <Grid item container xs={12} spacing={2}>\n                    <Grid item xs={6}>\n                      <Input\n                        variant=\"outlined\"\n                        disabled\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Purity\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        value={row.name}\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Weight\"\n                        name=\"size\"\n                        error={productCtx.error_message[`${row.name}_metal_weight`]}\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(`${row.name}_metal_weight`)}\n                        value={productCtx[`${row.name}_metal_weight`] === 0 ? \"\" : productCtx[`${row.name}_metal_weight`]}\n                      />\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Card {...rest} className={clsx(classes.root, className)}>\n            <CardHeader title=\"Type of Fit\" />\n            <Divider />\n            <CardContent className={classes.cardcontent}>\n              <Grid container xs={12} sm={12} spacing={2}>\n                <Grid item xs={6} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.themes}\n                    onChange={handleoptionChange(\"themes\")}\n                    options={productCtx.masterData.themes.map((option) => option.label)}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.prod_styles}\n                    onChange={handleoptionChange(\"prod_styles\")}\n                    options={productCtx.masterData.styles.map((option) => option.label)}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.prod_styles}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.occassions}\n                    onChange={handleoptionChange(\"occassions\")}\n                    options={productCtx.masterData.occasions.map((option) => option.label)}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.occassions}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.collections}\n                    onChange={handleoptionChange(\"collections\")}\n                    options={productCtx.masterData.collections.map((option) => option.label)}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.collections}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n                {productCtx.material_names.indexOf(\"Gemstone\") > -1 ? (\n                  <>\n                    <Grid item xs={12} sm={6}>\n                      <Autocomplete\n                        id=\"product_category\"\n                        multiple\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.stonecount}\n                        onChange={handleoptionChange(\"stonecount\")}\n                        options={productCtx.masterData.stones.map((option) => option.label)}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"No of Stones\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\n                          />\n                        )}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <Autocomplete\n                        id=\"product_category\"\n                        multiple\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.stonecolour}\n                        onChange={handleoptionChange(\"stonecolour\")}\n                        options={productCtx.masterData.gemstonecolor.map((option) => option.label)}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Stone Colour\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\n                          />\n                        )}\n                      />\n                    </Grid>\n                  </>\n                ) : null}\n              </Grid>\n\n              <Grid item xs={6}></Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\n// Import React FilePond\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// Import FilePond styles\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\n\n// Register the plugins\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { file } from \"@babel/types\";\n\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginImageValidateSize,\n  FilePondPluginFileRename\n);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n  },\n  img: {\n    height: \"100%\",\n    width: \"100%\",\n    objectFit: \"contain\",\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function Review() {\n  let count = 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images, setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = [];\n    let product_images = [];\n\n    productCtx.metalcolour.forEach((element) => {\n      if (element.name === productCtx.default_metal_colour) {\n        product_images[element.name] = [];\n        if (metalcolour.length > 0) {\n          metalcolour.unshift(element);\n        } else {\n          metalcolour.push(element);\n        }\n      } else {\n        metalcolour.push(element);\n        product_images[element.name] = [];\n      }\n    });\n    setMetalcolour(metalcolour);\n  }, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n    //alert(JSON.stringify(bodaydata))\n\n    let prodimages = productCtx.product_images;\n    if (prodimages) {\n      var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1);\n      let imagecolourobj = productCtx.product_images[imagecolor];\n      var imagecount = 1;\n      if (imagecolourobj) {\n        imagecount = imagecolourobj.length + 1;\n      }\n\n      let imagename = prodid + \"-\" + imagecount + imagecolor.charAt(0);\n      let responsedata = await sendNetworkRequest(\n        \"/uploadimage\",\n        {},\n        { image: bodaydata.fileExtension, filename: imagename, product_id: prodid },\n        false\n      );\n      var returnData = responsedata.data.returnData;\n      var signedRequest = returnData.signedRequest;\n      var url = returnData.url;\n      console.log(\"responseurl\" + url);\n      var filepathname = returnData.filepath;\n      filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\n      var options = {\n        headers: {\n          \"Content-Type\": bodaydata.fileExtension,\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      };\n\n      if (imagecolourobj) {\n        const imageobj = {\n          name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\n          position: imagecolourobj.length + 1,\n          color: imagecolor,\n          image_url: filepathname,\n          url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\n        };\n        if (uploadtype === \"edit\") {\n          imagecolourobj[imageposition] = imageobj;\n        } else {\n          imagecolourobj.push(imageobj);\n        }\n        prodimages[imagecolor] = imagecolourobj;\n      } else {\n        const imageobj = {\n          name: prodid + \"_1\" + imagecolor.charAt(0),\n          position: imageposition,\n          color: imagecolor,\n          image_url: filepathname,\n          url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\n        };\n        imagecolourobj = [];\n        imagecolourobj.push(imageobj);\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n      setProductCtx({ ...productCtx, product_images: prodimages });\n      // setFiles([])\n    }\n    await axios.put(signedRequest, bodaydata.file, options);\n  }\n\n  function removefiles(imageposition, imagecolor) {\n    let prodimages = productCtx.product_images;\n\n    if (prodimages) {\n      let imagecolourobj = prodimages[imagecolor];\n\n      if (imagecolourobj) {\n        if (imagecolourobj.length > imageposition) {\n          let removedfile = imagecolourobj[imageposition];\n\n          imagecolourobj[imageposition] = { ...removedfile, url: \"\" };\n        }\n      }\n      prodimages[imagecolor] = imagecolourobj;\n      setProductCtx({ ...productCtx, product_images: prodimages });\n      //alert(JSON.stringify(productCtx.product_images))\n    }\n  }\n\n  const handleInit = () => {\n    // alert(\"initialized\")\n  };\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item direction=\"row\" xs={12}>\n          <Grid container justify=\"left\" spacing={2}>\n            {metalcolour === undefined\n              ? null\n              : metalcolour.map((value, index) => (\n                  <Grid xs={12} container spacing={1} item>\n                    <Grid xs={12} item>\n                      <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                        {value.name}\n                      </Typography>\n                    </Grid>\n                    {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n                    <Grid xs={12} sm={12} md={12} item>\n                      <FilePond\n                        allowImageValidateSize\n                        imageValidateSizeMinWidth=\"2400\"\n                        imageValidateSizeMinHeight=\"2400\"\n                        imageValidateSizeMeasure={(file) =>\n                          new Promise((resolve, reject) => {\n                            console.log(file);\n                            console.log(\"filepond property\");\n                            debugger;\n                          })\n                        }\n                        labelIdle=\"Upload Image\"\n                        allowMultiple={true}\n                        //files = {files}\n                        onupdatefiles={(fileItem) => {\n                          // Set currently active file objectsfiles to this.state\n                        }}\n                        onaddfile={(error, fileItem) => {\n                          uploadimagetoserver(fileItem, index, value.name, \"add\");\n                        }}\n                        onremovefile={(error, fileItem) => {}}\n                        fileRenameFunction={(file) =>\n                          new Promise((resolve) => {\n                            var prodid =\n                              \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1);\n                            let imagecolourobj = productCtx.product_images[value.name];\n                            var imagecount = 1;\n                            if (imagecolourobj) {\n                              imagecount = imagecolourobj.length + 1;\n                            }\n                            let imagename = prodid + \"_\" + imagecount + value.name.charAt(0) + file.extension;\n                            resolve(imagename);\n                          })\n                        }\n                      ></FilePond>\n                      {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n                    </Grid>\n                  </Grid>\n                ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { Grid } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nimport Step4 from \"./Step4\";\nimport Step5 from \"./Step5\";\nimport Step6 from \"./Step6\";\nimport Step7 from \"./Step7\";\nimport Step8 from \"./Step8\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { element } from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\",\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\",\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;\n    case \"Step6\":\n      return <Step6 />;\n\n    case \"Step7\":\n      return <Step7 />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var error_content = {};\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if (activeStep === 0) {\n      if (!productCtx.product_type) {\n        isvalid = false;\n        error_content[\"product_type\"] = \"Error messsage\";\n      }\n      if (!productCtx.productname) {\n        isvalid = false;\n        error_content[\"productname\"] = \"Error messsage\";\n      }\n      if (!productCtx.product_categoy) {\n        isvalid = false;\n        error_content[\"product_categoy\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.metalcolour) {\n        isvalid = false;\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n      if (!productCtx.material_names) {\n        isvalid = false;\n        error_content[\"material_names\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalpurity\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.vendorcode) {\n        isvalid = false;\n        error_content[\"vendorcode\"] = \"Error messsage\";\n      }\n      if (!productCtx.vendorleadtime) {\n        isvalid = false;\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.default_metal_colour) {\n        isvalid = false;\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\n      }\n      if (!productCtx.default_metal_purity) {\n        isvalid = false;\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\n      }\n      if (!productCtx.productvendorcode) {\n        isvalid = false;\n        error_content[\"productvendorcode\"] = \"Error messsage\";\n      }\n      if (\n        !productCtx.earringbacking &&\n        productCtx.product_type.alias === \"Earrings\"\n      ) {\n        isvalid = false;\n        error_content[\"earringbacking\"] = \"Error messsage\";\n      }\n      if (!productCtx.selectedgender) {\n        isvalid = false;\n        error_content[\"selectedgender\"] = \"Error messsage\";\n      }\n      if (\n        (!productCtx.selected_sizes ||\n          productCtx.selected_sizes.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"selected_sizes\"] = \"Error messsage\";\n      }\n\n      if (\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"default_size\"] = \"Error messsage\";\n      }\n      // isvalid = true;\n    }\n\n    if (activeStep === 1) {\n      productCtx.metalpurity.forEach((element) => {\n        const keyvalue = element.name + \"_metal_weight\";\n\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\n          isvalid = false;\n\n          error_content[keyvalue] = \"Error messsage\";\n        }\n      });\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (productCtx.product_type_shortcode === \"R\") {\n        if (!productCtx.metal_height) {\n          isvalid = false;\n          error_content[\"metal_height\"] = \"Error messsage\";\n        }\n        if (!productCtx.metal_width) {\n          isvalid = false;\n          error_content[\"metal_width\"] = \"Error messsage\";\n        }\n      }\n\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\n        isvalid = false;\n        error_content[\"prod_styles\"] = \"Error messsage\";\n      }\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\n        isvalid = false;\n        error_content[\"occassions\"] = \"Error messsage\";\n      }\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\n      // {\n      //   isvalid = false\n      //   error_content['collections'] = \"Error messsage\"\n      // }\n\n      //  isvalid = true;\n    }\n\n    setProductCtx({ ...productCtx, error_message: error_content });\n    if (activeStep === productCtx.steps.length - 1) {\n      console.info(\"HANDLE\", sendNetworkRequest);\n      const productseries =\n        productCtx.masterData.productseries[0].productSeries;\n\n      delete productCtx[\"masterData\"];\n\n      var formdata = productCtx;\n      formdata[\"productseries\"] = productseries;\n\n      setLoading(true);\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\n      setLoading(false);\n      setSuccess(true);\n      await sleep(500);\n      window.location.replace(\"/productlist\");\n    } else {\n      if (isvalid) {\n        setActiveStep(activeStep + 1);\n      }\n    }\n\n    //else\n    //  {\n    //  }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async function sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n  }\n  console.log(productCtx, \"Component Samir\");\n  return (\n    <Grid item xs={12} sm={12}>\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\n      </Snackbar>\n\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {productCtx.steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel></StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </Paper>\n\n      <React.Fragment>\n        {activeStep === productCtx.steps.length ? (\n          <React.Fragment>\n            <Typography variant=\"h5\" gutterBottom>\n              Product Added Successfully\n            </Typography>\n            <Typography variant=\"subtitle1\"></Typography>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {getStepContent(productCtx.steps[activeStep])}\n            <div className={classes.buttons}>\n              {activeStep !== 0 && (\n                <Button onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === productCtx.steps.length - 1\n                  ? \"Product Upload\"\n                  : \"Next\"}\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Component from \"./Component\";\nimport { ProductProvider } from \"../../context\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const Productupload = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n});\nexport default Productupload;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from \"react\";\nimport { Form, Grid, Select } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip } from \"@material-ui/core\";\n\nconst useStyless = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\",\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange = (type) => (e) => {\n    setSearchtext(e.target.value);\n  };\n  const handlecategoryChange = (type) => (event, value) => {\n    setCategory(value.name);\n    props.applyfilter(searchtext, value.name, producttype);\n  };\n  const handletypeChange = (type) => (event, value) => {\n    setProducttype(value.name);\n    props.applyfilter(searchtext, category, value.name);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  function applyfilter() {\n    props.applyfilter(searchtext, category, producttype);\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div\n      className=\"search\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        background: \"white\",\n        borderTop: \"1px solid #e4e4e4\",\n        borderBottom: \"1px solid #e4e4e4\",\n      }}\n    >\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          fullWidth\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.mastercategory}\n          onChange={handlecategoryChange(\"product_category\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.masterproducttype}\n          onChange={handletypeChange(\"product_type\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <TextField\n          fullWidth\n          margin=\"dense\"\n          onChange={handleinputChange(\"productname\")}\n          placeholder={\"Search by product name or product id\"}\n          onChange={handleinputChange(\"productname\")}\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Button\n          onClick={(e) => applyfilter()}\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          Search\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibityIcon from '@material-ui/icons/Visibility';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'vendor_code', label: 'vendor code' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'createdAt', label: 'Created on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('updatedAt');\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  \n  }, [])\n  useEffect( () => {\n    getproductlist(props.filterparams.searchtext,props.filterparams.categoryname,props.filterparams.product_type,\"\",\"\",order,orderBy)\n  \n  }, [props.filterparams])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n async function showproductdetails(prod_id){\n   let bodycontent = {\n    productid : prod_id\n   }\n\n    let response =  await sendNetworkRequest('/getproducturl', {}, bodycontent)\n    console.log(response)\n  //setProductlists(response.products.rows)\n window.open(response.url, '_blank');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button onClick={(e) => showproductdetails(row.product_id)}>\n                                    <VisibityIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\" onClick={() => showproductdetails(row)}>\n                                    {/* <Link variant=\"body2\">  */}\n                                    {row.product_name}\n\n                                    {/* </Link>   */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  \n\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React from \"react\";\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { URL } from \"../../config\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useHistory } from 'react-router-dom';\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.grey[300],\n    },\n    \"&:active\": {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info(\"You clicked a breadcrumb.\");\n}\n\nexport default function CustomizedBreadcrumbs(props) {\n  let history = useHistory();\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        onClick={() => history.goBack()}\n        // href={props.url ? `${URL + props.url}` : URL + \"/configuration\"}\n        label={props.name ? props.name : \"Configuration\"}\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n    </Breadcrumbs>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Chip,\n  Collapse,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Slider,\n  TextField,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: 420,\n    maxWidth: '100%'\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1\n  },\n  contentSection: {\n    padding: theme.spacing(2, 0)\n  },\n  contentSectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    cursor: 'pointer'\n  },\n  contentSectionContent: {},\n  formGroup: {\n   \n    padding: theme.spacing(2, 0)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  tags: {\n    marginTop: theme.spacing(1)\n  },\n  minAmount: {\n    marginRight: theme.spacing(3)\n  },\n  maxAmount: {\n    marginLeft: theme.spacing(3)\n  },\n  radioGroup: {},\n  actions: {\n    padding: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Filter = props => {\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n      name: '',\n      company: '',\n      mobile: '',\n      city: '',\n      version: null,\n      commodity: []\n  };\n\n  const [expandProject, setExpandProject] = useState(true);\n  const [expandCustomer, setExpandCustomer] = useState(false);\n  const [values, setValues] = useState({ ...initialValues });\n\n  const handleClear = () => {\n    setValues({ \n      ...initialValues });\n  };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n  const handleoptionchange = type => (event, value) => {\n    setValues(values => ({\n      ...values,\n      [type]: value\n    }));\n  }\n  const handleinputchange = type => (e) => {\n    setValues({\n      ...values,\n      [type]: e.target.value\n    })\n  }\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n  const handleDateChange = type => (date) => {\n    setValues({\n      ...values,\n      [type]: date\n    })\n  };\n  const handleToggleProject = () => {\n    setExpandProject(expandProject => !expandProject);\n  };\n\n  const handleToggleCustomer = () => {\n    setExpandCustomer(expandCustomer => !expandCustomer);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    onFilter && onFilter(values);\n    onClose && onClose()\n  };\n\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.header}>\n          <Button\n            onClick={onClose}\n            size=\"small\"\n          >\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </div>\n        <div className={classes.content}>\n          <Grid container xs={12} spacing={1}>\n            {/* <Grid item xs={12}>\n                      <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={values.name}\n                            onChange={handleinputchange('name')}\n                           label=\"Name\"\n                          />\n            </Grid> */}\n             <Grid xs={12}>\n            <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masters.product_categories}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_category}\n                  getOptionLabel={(option) => option.name}\n                  onChange={handleoptionchange('product_category')}\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n                      \n           \n            <Grid item xs={12}>\n            <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={masters.product_types}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_type}\n                  onChange={handleoptionchange('product_type')}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n           </Grid>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            fullWidth\n            onClick={handleClear}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Apply filters\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  masters : PropTypes.object,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, className, ...rest } = props;\n  const [searchcontent, setSearchcontent] = React.useState('');\n\n  const classes = useStyles();\n  const handleinputchange = type => e => {\n    setSearchcontent(e.target.value)\n  }\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search by order id, Name and Mobile\"\n          onChange={handleinputchange('searchcontent')}\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={() => onSearch(searchcontent)}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport { Search, Filter } from \"./components\";\n\nimport { CSVLink } from \"react-csv\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480,\n  },\n  filterButton: {\n    marginLeft: \"auto\",\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst ProductFilter = (props) => {\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid item>\n        <Search className={classes.search} onSearch={onSearch} />\n      </Grid>\n\n      <Grid item>\n        {window.location.pathname === \"/productlist\" ? (\n          <>\n            {\" \"}\n            <CSVLink\n              header={dataCSV.keyCSV}\n              data={dataCSV.valueCSV}\n              filename={\"ProductDetails.csv\"}\n              style={{ textDecoration: \"none \" }}\n            >\n              <Button\n                color=\"primary\"\n                style={{ marginRight: \"8px\" }}\n                size=\"small\"\n                variant=\"outlined\"\n              >\n                Download CSV\n              </Button>\n            </CSVLink>\n          </>\n        ) : (\n          \"\"\n        )}\n\n        <Button\n          className={classes.filterButton}\n          color=\"primary\"\n          onClick={handleFilterOpen}\n          size=\"small\"\n          variant=\"outlined\"\n        >\n          <FilterListIcon className={classes.filterIcon} /> Filter\n        </Button>\n      </Grid>\n\n      <Filter\n        onClose={handleFilterClose}\n        onFilter={onFilter}\n        open={openFilter}\n        masters={masters}\n      />\n    </Grid>\n  );\n};\n\nProductFilter.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n  masters: PropTypes.object,\n};\n\nexport default ProductFilter;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\n//MuiAlert component which is shown inside the Snackbar component\nlet Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nexport const Alerts = (props) => {\n  const [open, setOpen] = React.useState(props.open);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.onclose();\n    setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      id=\"main_alert_snackbar\"\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal,\n      }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <Alert id=\"main_alert\" severity={props.severity} onClose={handleClose}>\n        {props.msg}\n      </Alert>\n    </Snackbar>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { PRODUCTLIST, PRODUCTCATEGORY, PRODUCTFILTERMASTER, PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"../../components/Products\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport FullLoader from \"../../components/Loader\";\nimport { ProductFilter } from \"../../components\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nexport const Productlist = withRouter(\n  withApollo((props) => {\n    const [masters, setMasters] = useState({});\n    const [filterparams, setFilterparams] = useState({});\n    const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\n    const { sendNetworkRequest } = React.useContext(NetworkContext);\n    let responseCSV;\n    function onFilter(filterobj) {\n      let filtercontent = {};\n\n      if (filterobj.product_category) {\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      if (filterobj.product_type) {\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      setFilterparams({\n        ...filterparams,\n        ...filtercontent,\n      });\n      // fetchadminusers()\n    }\n    function onSearch(searchtext) {\n      //  alert(searchtext)\n      setFilterparams({\n        ...filterparams,\n        searchtext,\n      });\n      // fetchadminusers()\n    }\n\n    async function fetchCSVdata() {\n      responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\n      let responseData = responseCSV.res_json;\n\n      if (responseCSV.statuscode === 200) {\n        let keyData = [];\n\n        for (const [key] of Object.entries(responseData[0])) {\n          keyData.push({ label: key, key: key });\n        }\n\n        console.log(keyData);\n        setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\n      }\n    }\n    useEffect(() => {\n      const query = props.client.query;\n      query({\n        query: PRODUCTFILTERMASTER,\n        fetchPolicy: \"network-only\",\n      })\n        .then((data) => {\n          if (data) {\n            let product_categories = data.data.allMasterProductCategories.nodes;\n            let product_types = data.data.allMasterProductTypes.nodes;\n            setMasters({\n              product_categories,\n              product_types,\n            });\n          } else {\n          }\n        })\n        .catch((error) => {\n          console.log(\"smbcj\");\n        });\n\n      fetchCSVdata();\n    }, []);\n\n    return (\n      <Grid container spacing={2}>\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={6} sm={6}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Products\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\n            <Link underline=\"none\" component={RouterLink} to={\"/productupload\"}>\n              <Button variant=\"contained\" color=\"primary\">\n                Add New Product\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n        <ProductFilter masters={masters} onSearch={onSearch} onFilter={onFilter} dataCSV={dataCSV} />\n        <Product filterparams={filterparams} />\n      </Grid>\n    );\n  })\n);\n\nexport default Productlist;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport { Query, withApollo } from \"react-apollo\";\nimport { CATGORYLIST } from \"../../../../graphql/query\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  const { className, orders, ...rest } = props;\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  const [editcontent, setEditcontent] = React.useState({});\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias: vendordata.alias,\n      name: vendordata.name,\n      isedit: true,\n    });\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\n  }\n  async function Savevendor(refetch) {}\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    props.onCancel();\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Card>\n        <CardHeader title=\"Category\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n\n                  <TableCell align=\"left\">Alias</TableCell>\n\n                  <TableCell align=\"left\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  <Query\n                    query={CATGORYLIST}\n                    onCompleted={(data) =>\n                      setPageCount(data.allMasterProductCategories.totalCount)\n                    }\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\n                  >\n                    {({ data, loading, error, refetch }) => {\n                      if (loading) {\n                        // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>;\n                        // return false\n                      }\n                      if (data) {\n                        return (\n                          <>\n                            {data.allMasterProductCategories.nodes.map(\n                              (row, index) => (\n                                <>\n                                  {index == 0 && props.isadd ? (\n                                    <TableRow key={row.name}>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => Cancelcreate()}>\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    </TableRow>\n                                  ) : null}\n                                  <TableRow key={row.name}>\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"categoryname\"\n                                          name=\"categoryname\"\n                                          value={editcontent.name}\n                                          onChange={handleInputChange(\"name\")}\n                                          label=\"Name\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.name}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"alias\"\n                                          name=\"alias\"\n                                          value={editcontent.alias}\n                                          onChange={handleInputChange(\"alias\")}\n                                          label=\"alias\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.shortCode}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button\n                                          onClick={(e) => CancelEdit(row)}\n                                        >\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell\n                                        align=\"center\"\n                                        onClick={(e) => Editvendor(row)}\n                                        style={{ width: 20 }}\n                                      >\n                                        <Button>\n                                          <EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                    )}\n                                  </TableRow>\n                                </>\n                              )\n                            )}\n                          </>\n                        );\n                      } else {\n                        return <div>{\"Fetch Products\"}</div>;\n                      }\n                    }}\n                  </Query>\n                }\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  orders: [],\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { v4 as uuid } from 'uuid';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { v4 as uuid } from 'uuid';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { VoucherContext } from \"../../../../context\";\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from \"../../../../utils/commonmethod\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n\n    cursor: \"pointer\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n    cursor: \"pointer\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  cardcontent: {\n    display: \"flex\",\n    alignItems: \"flex-center\",\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n    // border: `3px solid ${theme.palette.divider}`,\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n    // border: `3px solid ${theme.palette.divider}`,\n  },\n  optionRadio: {\n    margin: -10,\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  selectedtext: {\n    color: theme.palette.common.white,\n  },\n}));\n\nconst AboutVoucher = (props) => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n\n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n  };\n\n  const handleproducttypechange = (type) => (event, option) => {\n    debugger;\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.name);\n    });\n    setFormData({ ...formData, producttypes: vendorsarray });\n    props.apply(formData.vendorid, formData.categories, vendorsarray, formData.material);\n  };\n  const handlecategorychange = (type) => (event, option) => {\n    debugger;\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.name);\n    });\n    setFormData({ ...formData, categories: vendorsarray });\n\n    props.apply(formData.vendorid, vendorsarray, formData.producttypes, formData.material);\n  };\n  const hangeoptionchange = (type) => (event, option) => {\n    debugger;\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.shortCode);\n    });\n    setFormData({ ...formData, vendorid: vendorsarray });\n\n    props.apply(vendorsarray, formData.categories, formData.producttypes, formData.material);\n  };\n\n  const handlematerialtypechange = (type) => (event, option) => {\n    debugger;\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.name);\n    });\n    setFormData({ ...formData, material: vendorsarray });\n\n    props.apply(formData.vendorid, formData.categories, formData.producttypes, vendorsarray);\n  };\n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest(\"/updatepricelist\", {}, formData, false);\n    if (response.status < 400) {\n    } else {\n      alert(\"error\");\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest(\"/getpriceupdatestatus\", {}, formData, false);\n    if (response.status < 400) {\n      setUpdatestatus(response.message);\n    } else {\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n  };\n  const handleInputChange = (type) => (e) => {\n    setVouchercode(e.target.value.toUpperCase());\n  };\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n    // alert(JSON.stringify(voucherCtx))\n    setVouchercode(makeid(10));\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n        <Grid container spacing={2}>\n          <Grid item xs={6} sm={6}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={(option) => option.display}\n              fullWidth\n              onChange={hangeoptionchange(\"vendorcode\")}\n              renderInput={(params) => <TextField {...params} label=\"Select Vendor\" variant=\"outlined\" fullWidth />}\n            />\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={(option) => option.name}\n              onChange={handlecategorychange(\"category\")}\n              fullWidth\n              renderInput={(params) => <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />}\n            />\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={(option) => option.name}\n              onChange={handleproducttypechange(\"product_type\")}\n              fullWidth\n              margin=\"dense\"\n              renderInput={(params) => <TextField {...params} label=\"Select Product Type\" variant=\"outlined\" fullWidth />}\n            />\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.material}\n              getOptionLabel={(option) => option.name}\n              onChange={handlematerialtypechange(\"material\")}\n              fullWidth\n              margin=\"dense\"\n              renderInput={(params) => <TextField {...params} label=\"Select Material Type\" variant=\"outlined\" fullWidth />}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disabled={props.isdisabled}\n              className={classes.fixedTag}\n              value={props.productids}\n              options={productids}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />)\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label={props.productids.length > 0 ? \"Products (\" + props.productids.length + \") \" : \"Products\"}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </Grid>\n\n          {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n          {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { VoucherContext } from \"../../context\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fullloader from \"../../components/Loader\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { v4 as uuid } from 'uuid';\nimport Page from \"../../components/Page\";\nimport { Header, Results, AboutVoucher } from \"./components\";\nimport { productCategory } from \"../../services/mapper\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport FullLoader from \"../../components/Loader\";\nconst rows = [\n  { id: \"Diamond\", label: \"Diamond\" },\n  { id: \"Gemstone\", label: \"Gemstone\" },\n  { id: \"Metal & Making Charge\", label: \"Gold\" },\n  { id: \"Markup & Discount price update\", label: \"updateskuprice\" },\n];\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3),\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component) {\n    setOpen(true);\n    var bodydata = {};\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id: products,\n    };\n    setStartrun(true);\n    let response = await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata, false);\n    setOpen(false);\n  }\n  async function rerun(component) {\n    var bodydata = {};\n    bodydata = {\n      component: component.label,\n      // req_product_id : products\n    };\n    let response = await sendNetworkRequest(\"/getincompletepricerun\", {}, bodydata, false);\n    let history_id = response.id;\n    let update_products = response.products;\n    if (response.products && response.products.length > 0) {\n      setOpen(true);\n\n      var bodydata = {};\n      bodydata = {\n        pricingcomponent: component.label,\n        req_product_id: update_products,\n        history_id: history_id,\n      };\n      setStartrun(true);\n      let response1 = await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata, false);\n      setOpen(false);\n    } else {\n      alert(\" Doesn't have any incomplete products\");\n    }\n  }\n\n  async function filterapllied(filterdata, categories, producttypes, material) {\n    var bodydata = {};\n\n    bodydata = {\n      vendorid: filterdata && filterdata.length > 0 ? filterdata : \"\",\n      product_category: categories && categories.length > 0 ? categories : \"\",\n      product_type: producttypes && producttypes.length > 0 ? producttypes : \"\",\n      material_list: material && material.length > 0 ? material : \"\",\n    };\n\n    let response = await sendNetworkRequest(\"/getdistinctproduct\", {}, bodydata, false);\n    setProducts(response.products);\n    setCategories(response.category);\n    setVendors(response.vendorlist);\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog() {\n    window.location.href = \"https://api-staging.stylori.com/getlogfile\";\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  }\n  async function getsizes() {\n    let response = await sendNetworkRequest(\"/getsizes\", {}, {}, false);\n    if (response.status < 400) {\n      setSizes(response.sizes);\n    } else {\n      alert(\"succes21s\");\n    }\n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <FullLoader title={\"Run Diamond Price\"} isopen={open}></FullLoader>\n        <AboutVoucher\n          isdisabled={startrun}\n          className={classes.aboutvoucher}\n          apply={filterapllied}\n          productids={products.length > 0 ? products : []}\n          categorylist={masters.category}\n          producttypelist={masters.product_type}\n          vendorlist={masters.vendorcode}\n          material={masters.material}\n          masterData={masters}\n          categories={[\"Fixed Amount\", \"percentage\", \"Free Shipping\"]}\n        />\n        <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun} />\n      </Page>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    // button: {\n    //     color:\"#06847B\",\n    //     border: \"1px solid #7bbcb7\",\n    //     '&:hover':{\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n    //         border: \"1px solid #06847B\",\n    //     }\n    //   },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n               \n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        \n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems:\"center\",\n  },\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n   //props.onSearch(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n\n      <Grid\n        className={classes.contantview}\n        container\n        spacing={3}\n      >\n        <Grid item xs={3} >\n           <Typography\n           variant=\"h4\"\n           style={{margin: \"8px\"}}\n          >\n            Orders\n          </Typography>\n           {/* <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography>  */}\n        </Grid>\n        <Grid container xs={6} item  >\n        <Grid xs={9} item >\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item >\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \n\n          </Grid>\n\n\n        </Grid>\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\n\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n \n  console.log(props);\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n        {props.columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            width={headCell.type == 9 ? 300 : null}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label ? headCell.label : headCell.name}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n   // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n    overflowY: 'auto',\n    maxHeight: '100vh'\n  },\n  containergrid: {\n    overflowX: 'scroll',\n    width: 1000,\n    height: 20,\n    overflowY: 'hidden'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  // debugger\n  console.log(props)\n  const { className, orders, ...rest } = props;\n  const [editcontent,setEditcontent] = React.useState({})\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : 'Order Date');\n  const handleRequestSort = (event, property) => {\n\n    const isAsc = orderBy === property && order === 'asc';\n\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    \n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent)\n   // setIsadd(false)\n  // alert(JSON.stringify(editcontent))\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  setBtnEdit({ ...btnEdit, id:'', action: false })\n // refetch()\n}\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  async function showorderdetails(orderurl){\n\n    \n  window.open(orderurl);\n   }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n      let paymentstatusobj = {}\n      props.orderstatus.forEach(element => {\n        if(vendordata.orderstatus === element.name)\n        {\n          paymentstatusobj = element;\n        }\n      });\n      \n     delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus : paymentstatusobj,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\n\n  }\n  function CancelEdit(diamondData) {\n  //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n \n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n \n    // }\n    //    setIsadd(false)\n     setEditcontent({})\n     setBtnEdit({ ...btnEdit, id:'', action: false })\n   }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    \n      <Card>\n       \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          \n         \n            <div className={classes.tableWrapper}>\n              \n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n                {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n              <EnhancedTableHead\n              columns={props.columnobjs}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  {/* </TableRow>\n                </TableHead> */}\n                <TableBody style={{overflow : \"scroll\"}}>\n                {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      {props.columnobjs.map(col => (\n                        <>\n                        {col.key === 'action' && props.iswrite?   \n                        <TableCell align=\"center\" style = {{width: 20}}>\n                        {\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                          </Button>\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\n                          </Button></> : <Button \n                           >\n                             <VisibilityIcon onClick={(e) => showorderdetails(`/orderdetails/${order.orderid}`)}/>\n                     </Button>\n                         } \n                   </TableCell> : \n                   <>\n                   {\n                    btnEdit.action && btnEdit.id == order.orderid  ?\n                        <TableCell>\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \n                        { col.type == 2 ? <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        \n                        id={col.key}\n                        name={col.key}\n                        value={editcontent[col.key]}\n                        onChange={handleInputChange(col.key)}\n    \n                        label={col.label}\n                       />:null } \n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                                       </Moment>:null } \n\n                   {col.type == 5 && order.paymentmode == 'COD' ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.paymentstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                /> : null }  \n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \n       \n                  {col.type == 3 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.orderstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                /> : null }\n                            \n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                             </Moment>: <Typography> {order[col.key]}</Typography> } \n\n                          \n                           \n                           </TableCell> }\n                        </>\n                        }\n                       \n                      </>\n                      ))}                      \n\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10,50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n   \n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { OrderContext } from \"../../context\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { v4 as uuid } from 'uuid';\nimport Page from \"../../components/Page\";\nimport { Header, Results } from \"./components\";\nimport Columns from \"./components/columnnames.json\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n}));\n\nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx, orderMaster } = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(\n    Columns.defaultcolumns\n  );\n  const [displaycolumns, setDisplaycolumns] = useState(\n    Columns.defaultcolumnnames\n  );\n\n  function columnchanged(columnnames) {\n    let displycolumns = [];\n    columnnames.forEach((element) => {\n      displycolumns.push(element.name);\n    });\n    setDisplaycolumns(columnnames);\n    setDisplaycolumnnames(displycolumns);\n  }\n\n  async function updateorder(ordercontent) {\n    let response = await sendNetworkRequest(\n      \"/updateorderstatus\",\n      {},\n      ordercontent\n    );\n    window.location.reload();\n\n    // getorders()\n  }\n  function searchorder(searchtext) {\n    if (searchtext.length > 0) {\n      var data_filter = orders.filter(\n        (element) =>\n          (element.email && element.email.match(searchtext + \".*\")) ||\n          (element.mobile && element.mobile.match(searchtext + \".*\")) ||\n          (element.orderid && element.orderid.match(searchtext + \".*\")) ||\n          (element.username && element.username.match(searchtext + \".*\"))\n      );\n      setFilteredorder(data_filter);\n    } else {\n      setFilteredorder(orders);\n    }\n  }\n  async function getorders() {\n    var orders_arr = [];\n    orderCtx.orderMaster.orders.forEach((element) => {\n      let orderobj = {};\n      orderobj[\"orderid\"] = element.id;\n      orderobj[\"orderdate\"] = element.createdAt;\n      orderobj[\"paymentmode\"] = element.paymentMode;\n      orderobj[\"cartid\"] = element.cartId;\n      // orderobj['paymentstatusmaster'] = element.paymentStatus\n      orderobj[\"awbNumber\"] = element.awbNumber ? element.awbNumber : \"\";\n      orderobj[\"comments\"] = element.comments ? element.comments : \"\";\n      orderobj[\"orderstatus\"] = element.orderStatus;\n      if (element.paymentMode === \"COD\") {\n        orderobj[\"paymentstatus\"] = element.paymentStatus;\n      }\n      if (element.paymentDetailsByOrderId) {\n        let pgresponseobj = element.paymentDetailsByOrderId.nodes;\n        pgresponseobj.forEach((pgres) => {\n          let response_pg = JSON.parse(pgres.paymentResponse);\n          if (element.paymentMode === \"Prepaid\") {\n            orderobj[\"paymentstatus\"] = `${\n              response_pg?.ipgTransactionId || response_pg?.APTRANSACTIONID\n            }\\n${response_pg?.fail_reason || \"\"}\\n${\n              response_pg?.status || response_pg?.TRANSACTIONPAYMENTSTATUS\n            }`;\n            /* response_pg?.ipgTransactionId ||\n              response_pg?.APTRANSACTIONID +\n                \" \\n\" +\n                response_pg?.fail_reason +\n                \" \\n\" +\n                response_pg?.status ||\n              response_pg?.TRANSACTIONPAYMENTSTATUS; */\n          }\n        });\n      }\n      if (element.shoppingCartByCartId) {\n        let cartcontent = element.shoppingCartByCartId;\n\n        if (cartcontent.cartAddressesByCartId) {\n          let addresscontent = cartcontent.cartAddressesByCartId.nodes;\n          addresscontent.forEach((addressobj) => {\n            orderobj[\"address\"] = addressobj.addressline1;\n            if (!orderobj[\"mobile\"]) {\n              orderobj[\"mobile\"] = addressobj.contactNumber;\n            }\n            if (!orderobj[\"username\"]) {\n              orderobj[\"username\"] = addressobj.firstname\n                ? addressobj.firstname\n                : \"\";\n            }\n          });\n        }\n        if (cartcontent.shoppingCartItemsByShoppingCartId) {\n          let cartitemscontent =\n            cartcontent.shoppingCartItemsByShoppingCartId.nodes;\n          let skus = [];\n\n          cartitemscontent.forEach((element) => {\n            if (element.transSkuListByProductSku) {\n              skus.push(element.transSkuListByProductSku.generatedSku);\n            }\n          });\n          orderobj[\"skus\"] = skus.join(\" , \");\n        }\n        if (cartcontent.userProfileByUserprofileId) {\n          // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n          let usercontent = cartcontent.userProfileByUserprofileId;\n          if (usercontent.firstName) {\n            orderobj[\"username\"] = usercontent.firstName\n              ? usercontent.firstName\n              : \"\";\n          }\n          orderobj[\"email\"] = usercontent.email ? usercontent.email : \"\";\n          if (!orderobj[\"username\"]) {\n            orderobj[\"username\"] = usercontent.firstname\n              ? usercontent.firstname\n              : \"\";\n          }\n\n          let useraddressess = usercontent.userAddressesByUserProfileId;\n          if (useraddressess) {\n            let address_arr = useraddressess.nodes;\n            address_arr.forEach((useraddressobj) => {\n              // if(!orderobj[\"mobile\"])\n              // {\n              //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n              // }\n              // if(!orderobj[\"mobile\"])\n              // {\n              //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n              // }\n            });\n          }\n        }\n\n        if (cartcontent.giftwrapsByCartId) {\n          let giftobj = cartcontent.giftwrapsByCartId.nodes;\n          giftobj.forEach((gift) => {\n            orderobj[\"giftmessage\"] = gift.message;\n          });\n        }\n      }\n      orders_arr.push(orderobj);\n    });\n\n    setOrders(orders_arr);\n    setFilteredorder(orders_arr);\n  }\n  async function getmaster(getmaster) {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem(\"pagepermissions\");\n    if (pagepermission.indexOf(\"/orderlist\") > -1) {\n      setIswrite(true);\n    } else {\n      setIswrite(false);\n    }\n    getmaster();\n  }, []);\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {};\n\n    getmaster();\n    getorders();\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n//   debugger\n// console.log(displaycolumnnames)\n// console.log(displaycolumns)\n  return (\n    <Page className={classes.root} title=\"Orders Management List\">\n      {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Orders\n          </Typography>\n          </Grid>\n          \n    </Grid> */}\n      <Header\n        getColumnnames={columnchanged}\n        onSearch={searchorder}\n        columns={columnnames}\n      />\n      {filteredorder ? (\n        <Results\n          className={classes.results}\n          orderstatus={paymentstatus}\n          paymentstatus={orderstatus}\n          iswrite={iswrite}\n          orders={filteredorder}\n          onupdate={updateorder}\n          showcolumns={displaycolumnnames}\n          columnobjs={displaycolumns}\n        />\n      ) : null}\n    </Page>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport { ORDERS } from '../../services/queries';\n\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n    let user_id = props.location.pathname.split('/')[2];\n      \n    const { data, loading, error } = useQuery(ORDERS(user_id));\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                   \n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Input } from \"@material-ui/core\";\nimport { Grid, Card } from \"@material-ui/core\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../config\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { DIAMONDPRICELIST, PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE, PRODUCTDIAMONDTYPES } from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport Adddiamondprice from \"./Adddiamondprice\";\n\nimport { Chip, TextField } from \"@material-ui/core\";\nconst columns = [\n  { id: \"Diamond Colour\", label: \"Diamond Colour\" },\n  { id: \"Diamond Clarity\", label: \"Diamond Clarity\" },\n  { id: \"Cost Price\", label: \"Cost Price\" },\n  { id: \"Selling Price\", label: \"Selling Price\" },\n  { id: \"Selling Price Type\", label: \"Selling Price Type\" },\n  { id: \"updatedAt\", label: \"updatedAt\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [editdiamond, setEditdiamond] = React.useState({});\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState(\"\");\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch) {\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEDIAMONDCHARGE, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id);\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent, refetch) {\n    alert(\"i am here\");\n    let bodydata = {};\n    bodydata[\"diamondcolor\"] = metalcontent.diamondtype.diamondColor;\n    bodydata[\"diamondclarity\"] = metalcontent.diamondtype.diamondClarity;\n    bodydata[\"costprice\"] = metalcontent.costPrice;\n    bodydata[\"pricetype\"] = metalcontent.pricetype.label;\n    bodydata[\"sellingprice\"] = metalcontent.sellingprice;\n    bodydata[\"vendor_code\"] = props.vendor;\n    bodydata[\"isadd\"] = true;\n\n    await sendNetworkRequest(\"/updatediamondprice\", {}, bodydata);\n    setOpen(false);\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function handleEdit(diamondData) {\n    setEditdiamond({\n      ...editdiamond,\n      priceid: diamondData.id,\n      costPrice: diamondData.costPrice,\n      sellingPriceType: diamondData.sellingPriceType,\n      sellingPrice: diamondData.sellingPrice,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n  async function handleSave(id, refetch) {\n    var bodydata = {};\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice: editdiamond.costPrice,\n      sellingprice: editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label,\n    };\n    await sendNetworkRequest(\"/updatediamondprice\", {}, bodydata);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n\n  const handleoptionChange = (type) => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value });\n  };\n  const handleinputChange = (type) => (e) => {\n    setEditdiamond({\n      ...editdiamond,\n      [type]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        // alert(JSON.stringify(fatchvalue))\n        setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes);\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error);\n  }, []);\n\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n  async function productItemStatusChange(id, isactive, refetch) {\n    let variables = {\n      productId: id,\n      isActive: isactive ? false : true,\n    };\n    await props.client\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n        }\n      })\n      .catch(console.error);\n  }\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      <Card className={classes.cardcontent}>\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\">{\"Diamond Price Setup\"}</Typography>\n          </Grid>\n\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <Query\n                query={DIAMONDPRICELIST}\n                onCompleted={(data) => setPageCount(data.allDiamondPriceSettings.totalCount)}\n                variables={{ vendorCode: props.vendor }}\n              >\n                {({ data, loading, error, refetch }) => {\n                 \n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    return (\n                      <>\n                        <ConformationAlert\n                          title={\"Are you sure to delete?\"}\n                          positivebtn={\"Yes\"}\n                          negativebtn={\"No\"}\n                          message={\"\"}\n                          refetch={refetch}\n                          data={deleteid}\n                          onSuccess={handledelete}\n                          onCancel={hidedeleteconformation}\n                          isshow={isconformation}\n                        />\n                        {open ? (\n                          <Adddiamondprice\n                            diamonds={diamondmaster}\n                            isadd={open}\n                            refetch={refetch}\n                            actionSave={handleAdd}\n                            actionclose={handleClose}\n                          />\n                        ) : null}\n\n                        {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                          <TableRow key={row.diamondClarity}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.diamondClarity}\n                            </TableCell>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.diamondColour}\n                            </TableCell>\n                            <TableCell align=\"left\">\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <Input\n                                  variant=\"outlined\"\n                                  margin=\"dense\"\n                                  label=\"Cost Price\"\n                                  fullWidth\n                                  className={classes.helperinput}\n                                  value={editdiamond.costPrice}\n                                  onChange={handleinputChange(\"costPrice\")}\n                                  id=\"productvendorcode\"\n                                  name=\"Cost Price\"\n                                />\n                              ) : (\n                                <Typography className={classes.heading}>{row.costPrice} </Typography>\n                              )}\n                            </TableCell>\n                            <TableCell align=\"left\">\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <Input\n                                  variant=\"outlined\"\n                                  margin=\"dense\"\n                                  label=\"Cost Price\"\n                                  fullWidth\n                                  className={classes.helperinput}\n                                  value={editdiamond.sellingPrice}\n                                  onChange={handleinputChange(\"sellingPrice\")}\n                                  id=\"productvendorcode\"\n                                  name=\"Cost Price\"\n                                />\n                              ) : (\n                                <Typography className={classes.heading}>{row.sellingPrice} </Typography>\n                              )}\n                            </TableCell>\n                            <TableCell align=\"left\">\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <Autocomplete\n                                  id=\"free-solo-2-demo\"\n                                  fullWidth\n                                  disableClearable\n                                  className={classes.fixedTag}\n                                  getOptionLabel={(option) => option.name}\n                                  options={[\n                                    { label: 1, name: \"Flat\" },\n                                    { label: 2, name: \"Percentage\" },\n                                  ]}\n                                  onChange={handleoptionChange(\"sellingPriceType\")}\n                                  renderTags={(value, getTagProps) =>\n                                    value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                    ))\n                                  }\n                                  renderInput={(params) => (\n                                    <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                                    />\n                                  )}\n                                />\n                              ) : (\n                                <Typography className={classes.heading}>\n                                  {row.sellingPriceType === 1 ? \"Flat\" : \"Percentage\"}{\" \"}\n                                </Typography>\n                              )}\n                            </TableCell>\n\n                            <TableCell align=\"left\">\n                              <Moment format=\"DD MMM YYYY hh:mm a\">{row.updatedAt}</Moment>\n                            </TableCell>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell style={{ width: 170 }} align=\"center\">\n                                <Button onClick={(e) => handleSave(row.generatedSku, refetch)}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </TableCell>\n                            ) : (\n                              <TableCell align=\"center\" style={{ width: 170 }}>\n                                <Button onClick={(e) => handleEdit(row)}>\n                                  <EditIcon />\n                                </Button>\n                                <Button onClick={(e) => handleDelete(row)}>\n                                  <DeleteIcon />\n                                </Button>\n                              </TableCell>\n                            )}\n                          </TableRow>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Fetch Products\"}</div>;\n                  }\n                }}\n              </Query>\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n            </TableBody>\n            {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { TextField, Grid, Chip } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose();\n  };\n\n  const handleSave = () => {\n    debugger;\n    props.actionSave(gemstonedata);\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    debugger;\n    setGemstonedata({ ...gemstonedata, [type]: value });\n  };\n  const handleinputChange = (type) => (e) => {\n    debugger;\n    setGemstonedata({\n      ...gemstonedata,\n      [type]: e.target.value,\n    });\n  };\n\n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"gemstone\")}\n                getOptionLabel={(option) => option.name}\n                options={props.gems}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose Gemstone\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                  />\n                )}\n              />\n            </Grid>\n            {props.viewtype == 1 ? \n             <>          \n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Weight Start\"\n                fullWidth\n                onChange={handleinputChange(\"weightstart\")}\n                id=\"productvendorcode\"\n                name=\"Cost Price\"\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Weight End\"\n                onChange={handleinputChange(\"weightend\")}\n                fullWidth\n                id=\"productvendorcode\"\n                name=\"Cost Price\"\n              />\n            </Grid>\n              </> : null }\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Cost Price\"\n                fullWidth\n                id=\"productvendorcode\"\n                onChange={handleinputChange(\"costprice\")}\n                name=\"Cost Price\"\n              />\n            </Grid>\n\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"pricetype\")}\n                getOptionLabel={(option) => option.name}\n                options={[\n                  { label: 1, name: \"Flat\" },\n                  { label: 2, name: \"Percentage\" },\n                ]}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Selling Price Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                  />\n                )}\n              />\n            </Grid>\n\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Selling Price\"\n                fullWidth\n                onChange={handleinputChange(\"sellingPrice\")}\n                id=\"productvendorcode\"\n                name=\"Cost Price\"\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Input } from \"@material-ui/core\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Grid } from \"@material-ui/core\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { GEMPRICELIST, GEMSTONEMASTER, DELETEGEMCHARGE, PRODUCTLISTSTATUSEDIT } from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport Addgemstoneprice from \"./Addgemstoneprice\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../config\";\n\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\nconst columns = [\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\n  { id: \"From weight\", label: \"From weight\" },\n  { id: \"To Weight\", label: \"To Weight\" },\n  { id: \"Cost Price\", label: \"Cost Price\" },\n\n  // { id: \"Selling Price Type\", label: \"Selling Price Type\" },\n  { id: \"updatedAt\", label: \"updatedAt\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\nconst stonecountcolumns = [\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\n  { id: \"From weight\", label: \"From weight\" },\n  { id: \"To Weight\", label: \"To Weight\" },\n\n  { id: \"Selling Price\", label: \"Selling Price\" },\n  // { id: \"Selling Price Type\", label: \"Selling Price Type\" },\n  { id: \"updatedAt\", label: \"updatedAt\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid, setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [editgem, setEditgem] = React.useState({});\n  const [gemlist, setgemlist] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(diamondcontent) {\n    // if (deleteid.length > 0) {\n    //   let variables = {\n    //     elementId: deleteid[0],\n    //   };\n    //   await props.client.mutate({ mutation: DELETEGEMCHARGE, variables });\n    // }\n    // if (deleteid.length > 1) {\n    //   let variables = {\n    //     elementId: deleteid[1],\n    //   };\n    //   await props.client.mutate({ mutation: DELETEGEMCHARGE, variables });\n    // }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    // setgemlist([]);\n\n    // setDeleteid([]);\n    // getgemlist();\n    // setIsconformation(false);\n\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEGEMCHARGE, variables })\n      .then((res) => {\n        if (res !== null) {\n          //refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n    getgemlist();\n  }\n  function handleDelete(diamondData) {\n    debugger;\n    setDeleteid(diamondData.id);\n    setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata) {\n    var bodydata = {};\n    bodydata[\"gemstone_type\"] = gemstonedata.gemstone.name;\n    bodydata[\"weight_start\"] = gemstonedata.weightstart;\n    bodydata[\"weight_end\"] = gemstonedata.weightend;\n    bodydata[\"cost_price\"] = gemstonedata.costprice;\n    bodydata[\"vendor_code\"] = props.vendor;\n    bodydata[\"selling_price_type\"] = gemstonedata.pricetype.label;\n    bodydata[\"selling_price\"] = gemstonedata.sellingPrice;\n    bodydata[\"isadd\"] = true;\n    bodydata[\"ratetype\"] = props.viewtype;\n    // alert(JSON.stringify(gemstonedata))\n\n    await sendNetworkRequest(\"/updategemstoneprice\", {}, bodydata);\n    setOpen(false);\n    getgemlist();\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n    add: false,\n  });\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function handleEdit(diamondData) {\n    setEditgem({\n      ...editgem,\n      price: diamondData.price,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n\n  async function handleSave(row) {\n    var bodydata = {};\n\n    console.log(row);\n    row.price = editgem.price;\n    console.log(row);\n\n    let variables = {\n      cost_price_id: row.id,\n\n      // weight_start: row.weight_start,\n      // weight_end: row.weight_end,\n      cost_price: editgem.price,\n    };\n\n    await sendNetworkRequest(\"/updategemstoneprice\", {}, variables);\n\n    getgemlist();\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  async function getgemlist() {\n    let bodydata = {\n      vendorid: props.vendor,\n      ratetype: props.viewtype,\n    };\n    let response = await sendNetworkRequest(\"/getvendorgemprice\", {}, bodydata);\n    // setProductlists(response.products)\n    setgemlist(response.gems);\n  }\n  useEffect(() => {\n    getgemlist();\n  }, [vendorid]);\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes);\n      })\n      .catch(console.error);\n  }, []);\n\n  const handleinputChange = (type) => (e) => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value,\n    });\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\n  };\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n  async function productItemStatusChange(id, isactive, refetch) {\n    let variables = {\n      productId: id,\n      isActive: isactive ? false : true,\n    };\n    await props.client\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n        }\n      })\n      .catch(console.error);\n  }\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      <ConformationAlert\n        title={\"Are you sure to delete?\"}\n        positivebtn={\"Yes\"}\n        negativebtn={\"No\"}\n        message={\"\"}\n        data={deleteid}\n        onSuccess={handledelete}\n        onCancel={hidedeleteconformation}\n        isshow={isconformation}\n      />\n\n      <Card className={classes.cardcontent}>\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\">{props.title}</Typography>\n          </Grid>\n          {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              {props.viewtype == 1 ? (\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ) : (\n                <TableRow>\n                  {stonecountcolumns.map((column) => (\n                    <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              )}\n            </TableHead>\n            <TableBody>\n              {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n\n              <Query\n                query={GEMPRICELIST}\n                onCompleted={(data) => setPageCount(data.allGemstonePriceSettings.totalCount)}\n                variables={{ vendorCode: props.vendor, ratetype: props.viewtype }}\n              >\n                {({ data, loading, error, refetch }) => {\n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    return (\n                      <>\n                        {data.allGemstonePriceSettings.nodes.map((row, index) => (\n                          <TableRow key={row.gemstoneType}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.gemstoneType}\n                            </TableCell>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.weightStart}\n                            </TableCell>\n                            <TableCell align=\"left\">\n                              <Typography className={classes.heading}>{row.weightEnd}</Typography>\n                            </TableCell>\n                            <TableCell align=\"left\">\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <Input\n                                  variant=\"outlined\"\n                                  margin=\"dense\"\n                                  label=\"Cost Price\"\n                                  fullWidth\n                                  className={classes.helperinput}\n                                  value={editgem.price}\n                                  onChange={handleinputChange(\"price\")}\n                                  id=\"productvendorcode\"\n                                  name=\"Cost Price\"\n                                />\n                              ) : (\n                                <Typography className={classes.heading}>{row.price} </Typography>\n                              )}\n                            </TableCell>\n                            {/* <TableCell align=\"left\">\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <Input\n                                  variant=\"outlined\"\n                                  margin=\"dense\"\n                                  label=\"Cost Price\"\n                                  fullWidth\n                                  className={classes.helperinput}\n                                  value={editgem.sellingPrice}\n                                  onChange={handleinputChange(\"sellingPrice\")}\n                                  id=\"productvendorcode\"\n                                  name=\"Cost Price\"\n                                />\n                              ) : (\n                                <Typography className={classes.heading}>{row.sellingPrice} </Typography>\n                              )}\n                            </TableCell> */}\n                            {/* <TableCell align=\"left\">\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <Autocomplete\n                                  id=\"free-solo-2-demo\"\n                                  fullWidth\n                                  disableClearable\n                                  className={classes.fixedTag}\n                                  getOptionLabel={(option) => option.name}\n                                  options={[\n                                    { label: 1, name: \"Flat\" },\n                                    { label: 2, name: \"Percentage\" },\n                                  ]}\n                                  renderTags={(value, getTagProps) =>\n                                    value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                    ))\n                                  }\n                                  renderInput={(params) => (\n                                    <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                                    />\n                                  )}\n                                />\n                              ) : (\n                                <Typography className={classes.heading}>\n                                  {row.sellingPriceType === 1 ? \"Flat\" : \"Percentage\"}{\" \"}\n                                </Typography>\n                              )}\n                            </TableCell> */}\n\n                            <TableCell align=\"left\">\n                              <Moment format=\"DD MMM YYYY hh:mm a\">{row.updatedAt}</Moment>\n                            </TableCell>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell style={{ width: 170 }} align=\"center\">\n                                <Button onClick={(e) => handleSave(row)}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </TableCell>\n                            ) : (\n                              <TableCell align=\"center\" style={{ width: 170 }}>\n                                <Button onClick={(e) => handleEdit(row)}>\n                                  <EditIcon />\n                                </Button>\n                                <Button onClick={(e) => handleDelete(row)}>\n                                  <DeleteIcon />\n                                </Button>\n                              </TableCell>\n                            )}\n                          </TableRow>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Fetch Products\"}</div>;\n                  }\n                }}\n              </Query>\n            </TableBody>\n          </Table>\n        </div>\n        {open ? (\n          <Addgemstoneprice\n            gems={gemmaster}\n            isadd={open}\n            viewtype={props.viewtype}\n            actionSave={handleAdd}\n            actionclose={handleClose}\n            title={props.title}\n            // gems={gemmaster}\n            //\n            // isadd={open}\n            // title={props.title}\n            // actionSave={handleAdd}\n            // actionclose={handleClose}\n          />\n        ) : null}\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid, Card } from \"@material-ui/core\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Input } from \"@material-ui/core\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { MAKINGCHARGEPRICELIST, PRODUCTLISTSTATUSEDIT, METALMASTER, DELETEMAKINGCHARGE } from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport Addmakingchargeprice from \"./Addmakingchargeprice\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../config\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\nconst columns = [\n  { id: \"Metal\", label: \"Metal\" },\n  { id: \"Purity\", label: \"Purity\" },\n  { id: \"From Weight\", label: \"From Weight\" },\n  { id: \"To weight\", label: \"To weight\" },\n  { id: \"Cost Price\", label: \"Cost Price / Selling Price\" },\n\n  { id: \"updated On\", label: \"updated On\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid, setVendorid] = React.useState(props.vendor);\n  const [editmc, setEditmc] = React.useState({});\n  const [puritymaster, setPuritymaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [editdiamond, setEditdiamond] = React.useState({});\n  const [mchargelist, setMchargelist] = React.useState([]);\n  const [deleteid, setDeleteid] = React.useState(\"\");\n  const [metalmaster, setMetalmaster] = React.useState([]);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n    add: false,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent) {\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEMAKINGCHARGE, variables })\n      .then((res) => {\n        if (res !== null) {\n          //refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id);\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false, add: true });\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata = {};\n    bodydata[\"material\"] = makingcontent.metal.name;\n    bodydata[\"weight_start\"] = makingcontent.weightstart;\n    bodydata[\"weight_end\"] = makingcontent.weightend;\n    bodydata[\"price_type\"] = makingcontent.pricetype.label;\n    bodydata[\"vendor_code\"] = props.vendor;\n    bodydata[\"purity\"] = makingcontent.purity.shortCode;\n    bodydata[\"cost_price\"] = makingcontent.costPrice;\n    bodydata[\"selling_price\"] = makingcontent.sellingprice;\n    bodydata[\"isadd\"] = true;\n\n    await sendNetworkRequest(\"/updatemakingcharge\", {}, bodydata);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    setOpen(false);\n    getmclist();\n  }\n  function handleEdit(diamondData) {\n    setEditmc({\n      ...editmc,\n      price: diamondData.price,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n  async function getmclist() {\n    let bodydata = {\n      vendorid: props.vendor,\n    };\n\n    let response = await sendNetworkRequest(\"/getvendormakingprice\", {}, bodydata);\n    setMchargelist(response.gems);\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes);\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes);\n      })\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    getmclist();\n  }, [vendorid]);\n  async function handleSave(row) {\n    var bodydata = {};\n    console.log(row);\n    row.price = editmc.price;\n    console.log(row);\n\n    let variables = {\n      cost_price_id: row.id,\n\n      weight_start: row.weight_start,\n      weight_end: row.weight_end,\n      cost_price: editmc.price,\n    };\n    console.log(editmc);\n    await sendNetworkRequest(\"/updatemakingcharge\", {}, variables);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    getmclist();\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  const handleinputChange = (type) => (e) => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value,\n    });\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\n  };\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n  async function productItemStatusChange(id, isactive, refetch) {\n    let variables = {\n      productId: id,\n      isActive: isactive ? false : true,\n    };\n    await props.client\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n        }\n      })\n      .catch(console.error);\n  }\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      <ConformationAlert\n        title={\"Are you sure to delete?\"}\n        positivebtn={\"Yes\"}\n        negativebtn={\"No\"}\n        message={\"\"}\n        data={deleteid}\n        onSuccess={handledelete}\n        onCancel={hidedeleteconformation}\n        isshow={isconformation}\n      />\n      <Card className={classes.cardcontent}>\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\">{props.title}</Typography>\n          </Grid>\n          {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                    {column.label === \"Cost Price\" ? (props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\") : column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <Query\n                query={MAKINGCHARGEPRICELIST}\n                onCompleted={(data) => setPageCount(data.allMakingChargeSettings.totalCount)}\n                variables={{ vendorCode: props.vendor, ratetype: props.ratetype }}\n              >\n                {({ data, loading, error, refetch }) => {\n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    return (\n                      <>\n                        {data.allMakingChargeSettings.nodes.map((row, index) => (\n                          <TableRow key={row.material}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.material}\n                            </TableCell>\n                            <TableCell align=\"left\">{row.purity}</TableCell>\n\n                            <TableCell align=\"left\">\n                              {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                              <Typography className={classes.heading}>{row.weightStart}</Typography>\n                            </TableCell>\n\n                            <TableCell align=\"left\">\n                              {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                              <Typography className={classes.heading}>{row.weightEnd}</Typography>\n                            </TableCell>\n\n                            <TableCell align=\"left\">\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <Input\n                                  variant=\"outlined\"\n                                  margin=\"dense\"\n                                  label=\"Cost Price\"\n                                  fullWidth\n                                  className={classes.helperinput}\n                                  value={editmc.price}\n                                  onChange={handleinputChange(\"price\")}\n                                  id=\"productvendorcode\"\n                                  name=\"Cost Price\"\n                                />\n                              ) : (\n                                <Typography className={classes.heading}>{row.price}</Typography>\n                              )}\n                            </TableCell>\n\n                            {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n                            <TableCell align=\"left\">\n                              <Moment format=\"DD MMM YYYY hh:mm a\">{row.updatedAt}</Moment>\n                            </TableCell>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell style={{ width: 170 }} align=\"left\">\n                                <Button onClick={(e) => handleSave(row)}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </TableCell>\n                            ) : (\n                              <TableCell align=\"left\" style={{ width: 170 }}>\n                                <Button onClick={(e) => handleEdit(row)}>\n                                  <EditIcon />\n                                </Button>\n                                <Button onClick={(e) => handleDelete(row)}>\n                                  <DeleteIcon />\n                                </Button>\n                              </TableCell>\n                            )}\n                          </TableRow>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Fetch Products\"}</div>;\n                  }\n                }}\n              </Query>\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n            </TableBody>\n            {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n          </Table>\n        </div>\n        {open ? (\n          <Addmakingchargeprice\n            metals={metalmaster}\n            purities={puritymaster}\n            isadd={open}\n            title={\"Add Making Charge Setup\"}\n            actionSave={handleAdd}\n            actionclose={handleClose}\n          />\n        ) : null}\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"./components/Product\";\nimport Diamonds from \"./components/Diamonds\";\nimport Gemstones from \"./components/Gemstones\";\nimport Makingcharge from \"./components/Makingcharge\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\n\nconst useStyle = makeStyles((theme) => ({}));\nexport const Vendorprice = withRouter((props) => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n  const classes = useStyle();\n\n  const handlevendorchange = (type) => (event, value) => {\n    setVendorcode(value.shortCode);\n  };\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setVendorlist({\n          ...vendorlist,\n          vendors: fatchvalue.data.allMasterVendors.nodes,\n        });\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12} sm={12}>\n        <Typography component=\"h6\" variant=\"h6\">\n          Vendor Based Price List\n        </Typography>\n      </Grid>\n\n      <Grid item xs={4} sm={4}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          fullWidth\n          disableClearable\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name + \"   (\" + option.shortCode + \") \"}\n          options={vendorlist.vendors}\n          onChange={handlevendorchange(\"vendor\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />)\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Choose Vendor\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      {vendorcode ? (\n        <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Product vendor={vendorcode} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Diamonds vendor={vendorcode} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Gemstones title={\"Gemstone Price Setup By Weight\"} vendor={vendorcode} viewtype={1} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Gemstones title={\"Gemstone Price Setup By No of Stones\"} vendor={vendorcode} viewtype={2} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n          </Grid>\n        </>\n      ) : null}\n    </Grid>\n  );\n});\n\nexport default withRouter(Vendorprice);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { TextField, Grid, Chip } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  console.log(props);\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup, props.refetch);\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setMarkup({ ...markup, [type]: value });\n  };\n  const handleinputChange = (type) => (e) => {\n    setMarkup({\n      ...markup,\n      [type]: e.target.value,\n    });\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose();\n  };\n\n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"category\")}\n                getOptionLabel={(option) => option.name}\n                options={props.category}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose category\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"producttype\")}\n                getOptionLabel={(option) => option.name}\n                options={props.producttype}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose product type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"materiallist\")}\n                getOptionLabel={(option) => option.name}\n                options={props.materiallist}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose Material type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"puritylist\")}\n                getOptionLabel={(option) => option.name}\n                options={props.puritylist}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose Purity type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Selling Price Min\"\n                fullWidth\n                onChange={handleinputChange(\"sellpricemin\")}\n                id=\"productvendorcode\"\n                name=\"Selling Price Min\"\n              />\n            </Grid>\n\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Selling Price Max\"\n                fullWidth\n                onChange={handleinputChange(\"sellpricemax\")}\n                id=\"productvendorcode\"\n                name=\"Cost Price\"\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                fullWidth\n                disableClearable\n                getOptionLabel={(option) => option.name}\n                onChange={handleoptionChange(\"markuptype\")}\n                options={[\n                  { label: 1, name: \"Flat\" },\n                  { label: 2, name: \"Percentage\" },\n                ]}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Markup Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Markup Value \"\n                onChange={handleinputChange(\"markup\")}\n                fullWidth\n                id=\"productvendorcode\"\n                name=\"Cost Price\"\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Input, Grid, Card } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { DIAMONDMARKUP, PRODUCTLISTSTATUSEDIT, DELETEMARKUPPRICE, ALLMARKUPPRICE } from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport Addmarkup from \"./Addmarkup\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nconst columns = [\n  { id: \"Component\", label: \"Components\" },\n  { id: \"Product Category\", label: \"product Category\" },\n  { id: \"Product Type\", label: \"Product Type\" },\n  { id: \"Selling Price Min\", label: \"Selling Price Min\" },\n  { id: \"Selling Price Max\", label: \"Selling Price Max\" },\n  { id: \"Markup Type\", label: \"Markup Type\" },\n  { id: \"Markup value\", label: \"Markup value\" },\n\n  { id: \"updatedAt\", label: \"updatedAt\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [editmarkup, setEditmarkup] = React.useState({});\n  const [goldpricelist, setGoldpricelist] = React.useState({});\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState(\"\");\n  const [refetch, setRefetch] = React.useState(null);\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch) {\n    setIsdelete(true);\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEMARKUPPRICE, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id);\n\n    setIsconformation(true);\n  }\n\n  async function updatemarkup(markupcontent, refetch) {\n    let product_type = markupcontent.producttype ? markupcontent.producttype :  [];\n    let material_list = markupcontent.materiallist ? markupcontent.materiallist : [];\n    let purity_list = markupcontent.puritylist ? markupcontent.puritylist : [];\n\n    var bodydata = {};\n    bodydata[\"category\"] = markupcontent.category.name;\n    bodydata[\"producttype\"] = product_type;\n    bodydata[\"sellingPriceMin\"] = markupcontent.sellpricemin;\n    bodydata[\"sellingPriceMax\"] = markupcontent.sellpricemax;\n    bodydata[\"markuptype\"] = markupcontent.markuptype.label;\n    bodydata[\"material_list\"] = material_list;\n    bodydata[\"purity_list\"] = purity_list;\n    bodydata[\"markupValue\"] = markupcontent.markup;\n    bodydata[\"material\"] = pricecomponent;\n    console.log(\"XXXXXXXX\");\n     await sendNetworkRequest(\"/addmarkup\", {}, bodydata);\n    setOpen(false);\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n      ...editmarkup,\n      markupid: diamondData.id,\n      sellingPriceMin: diamondData.sellingPriceMin,\n      sellingPriceMax: diamondData.sellingPriceMax,\n      markupValue: diamondData.markupValue,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n  async function handleSave(id, refetch) {\n    var bodydata = {};\n\n    await sendNetworkRequest(\"/updatemarkup\", {}, editmarkup);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value });\n  };\n  const handlecomponentChange = (type) => (event, value) => {\n    setPriceomponent(value);\n  };\n  const handleinputChange = (type) => (e) => {\n    setEditmarkup({\n      ...editmarkup,\n      [type]: e.target.value,\n    });\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\n  };\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      <Card className={classes.cardcontent}>\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\n          <Grid item xs={3}>\n            <Typography variant=\"h6\">{\"Selling Price Markup Setup\"}</Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              className={classes.fixedTag}\n              defaultValue={pricecomponent}\n              disableClearable\n              options={[\"Diamond\", \"Gem Stone\", \"Gold\", \"Making Charge\", \"All\"]}\n              onChange={handlecomponentChange(\"earringbacking\")}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />)\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Pricing Components\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  // error = {productCtx.error_message.earringbacking}\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <Query\n                query={DIAMONDMARKUP}\n                onCompleted={(data) => setPageCount(data.allPricingMarkups.totalCount)}\n                variables={{ vendorCode: pricecomponent }}\n              >\n                {({ data, loading, error, refetch }) => {\n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    setGoldpricelist(data);\n                    return (\n                      <>\n                        <ConformationAlert\n                          title={\"Are you sure to delete?\"}\n                          positivebtn={\"Yes\"}\n                          negativebtn={\"No\"}\n                          message={\"\"}\n                          refetch={refetch}\n                          onSuccess={handledelete}\n                          onCancel={hidedeleteconformation}\n                          isshow={isconformation}\n                        />\n                        {open ? (\n                          <Addmarkup\n                            isadd={open}\n                            material={pricecomponent}\n                            refetch={refetch}\n                            actionSave={updatemarkup}\n                            category={props.categories}\n                            producttype={props.producttypes}\n                            materiallist={props.materiallist}\n                            puritylist={props.puritylist}\n                            title={props.title}\n                            actionclose={handleClose}\n                          />\n                        ) : null}\n\n                        {data.allPricingMarkups.nodes.map((row, index) => (\n                          <>\n                            <TableRow key={row.category}>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.material}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.category}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.productType ? row.productType.join(' , ') : \"All\"}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.purities ? row.purities.join(' , ') : \"All\"}\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>{row.sellingPriceMin} </Typography>\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>{row.sellingPriceMax} </Typography>\n                              </TableCell>\n\n                              <TableCell align=\"center\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Autocomplete\n                                    id=\"free-solo-2-demo\"\n                                    fullWidth\n                                    disableClearable\n                                    className={classes.fixedTag}\n                                    getOptionLabel={(option) => option.name}\n                                    onChange={handleoptionChange(\"sellingPriceType\")}\n                                    options={[\n                                      { label: 1, name: \"Flat\" },\n                                      { label: 2, name: \"Percentage\" },\n                                    ]}\n                                    renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                        <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                    }\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label=\"Price Type\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                                      />\n                                    )}\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>\n                                    {row.markupType === 1 ? \"Flat\" : \"Percentage\"}{\" \"}\n                                  </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value={editmarkup.markupValue}\n                                    onChange={handleinputChange(\"markupValue\")}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>{row.markupValue} </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                </Moment>\n                              </TableCell>\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <TableCell style={{ width: 170 }} align=\"center\">\n                                  <Button onClick={(e) => handleSave(row.id, refetch)}>\n                                    <SaveIcon />\n                                  </Button>\n                                  <Button onClick={(e) => CancelEdit(row)}>\n                                    <CancelIcon />\n                                  </Button>\n                                </TableCell>\n                              ) : (\n                                <TableCell align=\"center\" style={{ width: 170 }}>\n                                  <Button onClick={(e) => handleEdit(row)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button onClick={(e) => handleDelete(row, refetch)}>\n                                    <DeleteIcon />\n                                  </Button>\n                                </TableCell>\n                              )}\n                            </TableRow>\n                          </>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Loading...\"}</div>;\n                  }\n                }}\n              </Query>\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n            </TableBody>\n            {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"./components/Product\";\nimport Diamonds from \"./components/Diamonds\";\nimport Gemstones from \"./components/Gemstones\";\nimport Makingcharge from \"./components/Makingcharge\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { VENDORLIST, MASTERCATEGORY, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\n\nconst useStyle = makeStyles((theme) => ({}));\nexport const Markupprice = withRouter((props) => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [materiallist, setMateriallist] = React.useState([]);\n  const [puritylist, setPuritylist] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n  const classes = useStyle();\n\n  const handlevendorchange = (type) => (event, value) => {\n    setVendorcode(value.shortCode);\n  };\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes);\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes);\n        setMateriallist(fatchvalue.data.allMasterMaterials.nodes);\n        setPuritylist(fatchvalue.data.allMasterMetalsPurities.nodes);\n        // setVendorlist({\n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <Grid container spacing={1}>\n      {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n\n      <Grid item xs={12} sm={12}>\n        <Product\n          categories={categorylist}\n          producttypes={producttypes}\n          materiallist={materiallist}\n          puritylist={puritylist}\n          vendor={\"Gold\"}\n        />\n      </Grid>\n      {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n      {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n      {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n      {/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  );\n});\n\nexport default withApollo(withRouter(Markupprice));\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '12px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '12px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { CategoryComponents } from \"./../../components\";\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { Card, Grid, Chip, Button, TextField, CardHeader, CardContent, Tabs, Tab, Divider, colors } from \"@material-ui/core\";\nimport { VoucherContext } from \"../../../../context\";\nconst tabs = [\n  { value: \"Category\", label: \"Category\" },\n  { value: \"Producttype\", label: \"Product type\" },\n  { value: \"Material\", label: \"Material\" },\n  { value: \"Collections\", label: \"Collections\" },\n  { value: \"Occations\", label: \"Occations\" },\n  { value: \"Styles\", label: \"Styles\" },\n  { value: \"Themes\", label: \"Themes\" },\n];\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  divider: {\n    backgroundColor: colors.grey[300],\n  },\n  cardcontent: {\n    display: \"flex\",\n    alignItems: \"flex-center\",\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200],\n  },\n  optionRadio: {\n    margin: -10,\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst VoucherComponent = (props) => {\n  const { className, ...rest } = props;\n\n  console.log(props);\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx, voucherMaster } = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\",\n    \"Purity\",\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n  };\n  const myFunction = () => {\n    props.onAdded(attrobj);\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"materials\") {\n      let elements_arr = [];\n      value.forEach((element) => {\n        elements_arr.push(element.name);\n      });\n      if (elements_arr.indexOf(\"Gold\") > -1) {\n        setIsgold(true);\n      } else {\n        setIsgold(false);\n      }\n\n      if (elements_arr.indexOf(\"Diamond\") > -1) {\n        setIsdiamond(true);\n      } else {\n        setIsdiamond(false);\n      }\n    }\n    setAttrobj({\n      ...attrobj,\n      [type]: value,\n    });\n\n    // props.onAdded(type,value)\n  };\n  const handleTabsChange = (event, value) => {\n    if (value == \"Material\") {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if (tabnames.indexOf(\"Purity\") === -1) {\n        tabnames.splice(3, 0, \"Purity\");\n      }\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {}, []);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <div className={classes.content}>\n        <Grid container spacing={2}>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              value={attrobj.category}\n              className={classes.fixedTag}\n              fullWidth\n              getOptionLabel={(option) => option.name}\n              options={voucherCtx.voucherMaster.product_categories}\n              onChange={handleoptionChange(\"category\")}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Product Category\" margin=\"dense\" variant=\"outlined\" fullWidth />\n              )}\n            />\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              value={attrobj.product_types}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.product_types}\n              onChange={handleoptionChange(\"product_types\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.product_types}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Product Types\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.materials}\n              onChange={handleoptionChange(\"materials\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.materials}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Materials\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n         \n            <Grid item xs={4} sm={4}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                //  value={attrobj.componenets}\n                className={classes.fixedTag}\n                fullWidth\n                options={voucherCtx.voucherMaster.purities}\n                onChange={handleoptionChange(\"purities\")}\n                getOptionLabel={(option) => option.name}\n                value={attrobj.purities}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    //  error = {productCtx.error_message.selected_sizes}\n\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\n                  />\n                )}\n              />\n            </Grid>\n         \n          {isdiamond ? (\n            <Grid item xs={4} sm={4}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                //  value={attrobj.componenets}\n                className={classes.fixedTag}\n                fullWidth\n                getOptionLabel={(option) => option.diamondtype}\n                options={voucherCtx.voucherMaster.diamondtypes}\n                onChange={handleoptionChange(\"diamondtype\")}\n                value={attrobj.diamondtype}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    //  error = {productCtx.error_message.selected_sizes}\n\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\n                  />\n                )}\n              />\n            </Grid>\n          ) : null}\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.collections}\n              onChange={handleoptionChange(\"collections\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.collections}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Collections\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.occations}\n              onChange={handleoptionChange(\"occations\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.occations}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Occassions\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.styles}\n              onChange={handleoptionChange(\"styles\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.styles}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Styles\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.themes}\n              onChange={handleoptionChange(\"themes\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.themes}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Themes\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n\n          <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\n            <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">\n              Check Applicable Products\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired,\n};\nexport default VoucherComponent;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen(prodskus)\n  {\n    setOpen(true)\n    setSelectskus(prodskus)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.title} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\n\nimport { VoucherContext } from \"../../context\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { Chip, IconButton } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { v4 as uuid } from 'uuid';\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { palette } from \"../../theme\";\nimport Page from \"../../components/Page\";\nimport { Header, Results, Products, AboutVoucher, VoucherComponent } from \"./components\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport FullLoader from \"../../components/Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3),\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n  productcontent: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1),\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor: theme.palette.white,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"Created Successfully\",\n    severity: \"Success\",\n  });\n\n  const { voucherCtx, setVoucherCtx, materialMaster } = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  async function getdiscountvalue(discount_id) {\n    let bodydata = {\n      discountid: discount_id,\n    };\n    let response = await sendNetworkRequest(\"/getdiscount\", {}, bodydata, false);\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach((comp) => {\n      comparr.push({\n        name: comp,\n      });\n    });\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids);\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname: response.discunt.discount_name,\n      discountvalue: response.discunt.discount_value,\n      discounttype: response.discunt.discount_type,\n      discounttitle: response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes),\n    });\n    setIsloaded(true);\n  }\n  async function creatediscount(ispricerun) {\n    let skuarray = [];\n    while (skus.length > 0) {\n      let sku_content = skus.splice(0, 25000);\n      skuarray.push(sku_content);\n    }\n    if (errorskus.length > 0) {\n      alert(\"Some skus are overlapping\");\n    } else {\n      let discount_count = 0;\n      setIsloading(true);\n      updatediscount(discount_count);\n      async function updatediscount() {\n        let bodydata = {\n          discountvalue: parseFloat(attributeobj.discountvalue),\n          discounttype: attributeobj.discounttype,\n          componenets: attributeobj.componenets,\n          discountname: attributeobj.discountname,\n          discounttitle: attributeobj.discounttitle,\n          product_attributes: productattr,\n          product_attributes_text: productattrtext,\n          skus: skuarray[discount_count],\n        };\n        console.log(JSON.stringify(productattr));\n        let response = await sendNetworkRequest(\"/creatediscount\", {}, bodydata, false);\n\n        discount_count = discount_count + 1;\n        if (skuarray.length > discount_count) {\n          setLoadingtitle(skus.length + \" Left\");\n          updatediscount(discount_count);\n        } else {\n          setIsloading(false);\n          setOpen(true);\n          setIsshowpriceupdate(false);\n\n          window.location = \"/salediscountlist\";\n        }\n      }\n    }\n  }\n  const handleDelete = (chipToDelete) => () => {\n    //setProducts([])\n    let errorindex = errorskus.indexOf(chipToDelete);\n    if (errorindex > -1) {\n      errorskus.splice(errorindex, 1);\n      var erroritems = [];\n      errorskus.forEach((itemname) => {\n        erroritems.push(itemname);\n      });\n      setErrorskus(erroritems);\n    }\n    let index = products.indexOf(chipToDelete);\n    products.splice(index, 1);\n    var items = [];\n    products.forEach((itemname) => {\n      items.push(itemname);\n    });\n    setProducts(items);\n\n    //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n  };\n\n  async function filterapllied(value) {\n    var bodydata = {};\n\n    let product_ids = [];\n    let response = await sendNetworkRequest(\"/getaliasproduct\", {}, value, false);\n    setProducts(response.products);\n    setSkus(response.skus);\n    setErrorskus(response.eror_skus);\n    setIsloading(false);\n    setTitlecontent(response.title);\n  }\n  async function updateprices() {\n    alert(\"i am here\");\n    var bodydata = {};\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id: products,\n    };\n    setIsshowpriceupdate(true);\n\n    let response = await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata, false);\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n      component: \"updateskuprice\",\n    };\n    let response = await sendNetworkRequest(\"/getcomponentpricestatus\", {}, bodydata, false);\n\n    setStatusmessage(response.message);\n  }\n  function attributeadded(value) {\n    \n    debugger;\n    let componentsstring = {};\n    let attrs = [];\n    let display_arr = [];\n    let keys = Object.keys(value);\n    keys.forEach((key) => {\n      let values = [];\n      let alias_arr = [];\n      value[key].forEach((valueobj) => {\n        values.push(valueobj.name);\n        alias_arr.push(valueobj.alias);\n        attrs.push(valueobj.name);\n      });\n      componentsstring[key] = {\n        values: values,\n        alias: alias_arr,\n      };\n      let displaytext = key + \" : \" + attrs.join(\" , \");\n      display_arr.push(displaytext);\n    });\n    setProductattr(componentsstring);\n    setProductattrtext(display_arr.join(\" | \"));\n    //alert(JSON.stringify(componentsstring))\n    setIsloading(true);\n    //setAttributeobj(value)\n    filterapllied(value);\n  }\n  function valuechange(type, value) {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value,\n    });\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {};\n    fetchOrders();\n    if (props.location.pathname && props.location.pathname.split(\"/\").length > 2) {\n      let discount_id = props.location.pathname.split(\"/\")[2];\n      setDiscount_id(discount_id);\n      getdiscountvalue(discount_id);\n    } else {\n      setIsloaded(true);\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n      <FullLoader title={loadingtitle} isopen={isloading} />\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Page className={classes.root} title=\"Orders Management List\">\n          {!discount_id ? (\n            <>\n              <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n              {products.length > 0 ? <Products title={titlecontent} products={errorskus} /> : null}\n              {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n              {isloaded || !discount_id ? (\n                <AboutVoucher\n                  discountcontent={attributeobj}\n                  className={classes.aboutvoucher}\n                  onAdded={valuechange}\n                  categories={[\"Fixed Amount\", \"percentage\"]}\n                />\n              ) : null}\n\n              {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n              <Grid container xs={12} spacing={2} style={{ textAlign: \"center\" }}>\n                <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }} spacing={2}>\n                  {!isshowpriceupdate ? (\n                    <>\n                      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{ margin: 16 }} variant=\"contained\">\n                        Submit\n                      </Button>\n\n                      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n                    </>\n                  ) : null}\n                </Grid>\n              </Grid>\n            </>\n          ) : (\n            <Grid container xs={12} spacing={2}>\n              <Grid item xs={6} style={{ marginTop: 16 }}>\n                <Grid item xs={12} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Name\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discountname}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Title\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discounttitle}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Value\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discounttype == 2 ? attributeobj.discountvalue + \"%\" : attributeobj.discountvalue}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Pricing Compponent\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.displaycomp}\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              {attributeobj.allkeys ? (\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  {attributeobj.allkeys.map((row, index) => (\n                    <Grid item xs={12} style={{ marginTop: 16 }}>\n                      <Typography variant=\"body2\" component=\"body2\">\n                        {row}\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"h5\">\n                        {attributeobj.attributes[row].values}\n                      </Typography>\n                    </Grid>\n                  ))}\n                  <Grid item xs={12} style={{ marginTop: 16 }}>\n                    <Typography variant=\"body2\" component=\"body2\">\n                      Total Sku\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h5\">\n                      {attributeobj.skucount}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              ) : null}\n              <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\n                {!isshowpriceupdate ? (\n                  <>{/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}</>\n                ) : (\n                  <>\n                    {\" \"}\n                    {statusmessage}\n                    <IconButton aria-label=\"delete\" onClick={(e) => handlestatus()} color=\"primary\">\n                      <RefreshIcon />\n                    </IconButton>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          )}\n        </Page>\n      </MuiPickersUtilsProvider>\n    </>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport \"../../tmp.css\";\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  Switch,\n  FormControlLabel,\n  Grid,\n  TextField,\n  Typography,\n  colors,\n  Input,\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    paddingBottom: theme.spacing(2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    marginRight: theme.spacing(2),\n    // backgroundColor: colors.green[600],\n    // '&:hover': {\n    //   backgroundColor: colors.green[900]\n    // }\n  },\n}));\n\nconst EditContent = (props) => {\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    ...diamond,\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  function previewimage(url) {\n    // setpreviewurl(url)\n    // setShowpreview(true)\n  }\n  const handleInputChange = (type) => (e) => {\n    debugger;\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const toggleChecked = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\n  };\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {}, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            {props.title}\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          {attributes.map((columnname, index) => (\n            <>\n              {showpreview && (\n                <Lightbox\n                  class=\"fade\"\n                  mainSrc={previewurl}\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                  onCloseRequest={() => setShowpreview(false)}\n                  onMovePrevRequest={() => alert(\"prev\")}\n                  onMoveNextRequest={() => alert(\"next\")}\n                />\n              )}\n              <Grid container xs={12} spacing={2}>\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                      disabled={columnname.type === 10}\n                    />\n                  </Grid>\n                ) : null}\n                {columnname.type === 2 && (\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      label={columnname.key}\n                      labelPlacement=\"start\"\n                      control={\n                        <Switch\n                          checked={editcontent[columnname.key]}\n                          name=\"checkedB\"\n                          color=\"primary\"\n                          onChange={toggleChecked(columnname.key)}\n                        />\n                      }\n                    />\n                  </Grid>\n                )}\n                {columnname.type === 3 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      multiple\n                      id=\"combo-box-demo\"\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      margin=\"dense\"\n                      fullWidth\n                      value={editcontent[columnname.defaultkey]}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />\n                  </Grid>\n                )}\n\n                {columnname.type == 4 && (\n                  <Grid item xs={12}>\n                    <Typography> {diamond[columnname.key]}</Typography>\n                  </Grid>\n                )}\n\n                {columnname.type == 5 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id=\"combo-box-demo\"\n                      // options={props.masters[columnname.mastervaluekey]}\n                      margin=\"dense\"\n                      fullWidth\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      value={editcontent[columnname.defaultkey]}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 6 && (\n                  <Grid item xs={12}>\n                    <Button variant=\"outlined\" color=\"primary\">\n                      {columnname.controllabel}\n                    </Button>{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 9 && (\n                  <Grid container item xs={12}>\n                    <Grid item xs={12}>\n                      <AvatarGroup max={2}>\n                        {diamond[columnname.key]\n                          ? diamond[columnname.key]\n                              .split(\",\")\n                              .map((diamond, index) => (\n                                <Avatar\n                                  alt=\"Remy Sharp\"\n                                  src={diamond}\n                                  onClick={() => previewimage(diamond)}\n                                  className={classes.small}\n                                />\n                              ))\n                          : null}\n                      </AvatarGroup>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <FilePond\n                        style={{ height: \"100\", width: \"100\" }}\n                        oninit={() => handleInit()}\n                        labelIdle=\"Add Banner Image\"\n                        onaddfile={(error, fileItem) => {\n                          if (!error) {\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\n                          } else {\n                            // alert(row[columnname.key])\n                          }\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </>\n          ))}\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\n            Save\n          </Button>\n          <Button onClick={() => onClose()} variant=\"contained\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditContent.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  attributes: PropTypes.array,\n\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditContent;\n","import React, { useEffect, useContext, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { TaxList, VENDORLISTS, PRODUCTFILTERMASTER, PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditContent from \"./components/EditContent\";\nimport { Button, Switch, Grid, FormControlLabel } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"./tmp.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport moment from \"moment\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst Vendor = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [masterlist, setMasterlist] = React.useState(props.values);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [openedit, setOpenedit] = React.useState(false);\n\n  const [isadd, setIsadd] = React.useState(false);\n  const [isedit, setIsedit] = React.useState(false);\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const [aliasName, setaliasName] = React.useState(\"\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function addnewvendor() {\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\n    setaliasName(props.prefix + sort_id);\n\n    setEditcontent({\n      alias: aliasName,\n      ...editcontent,\n      isedit: false,\n    });\n    // debugger;\n    console.log(editcontent);\n    // let masters = masterlist;\n    // masters.insert(0, []);\n\n    //setMasterlist(masters)\n    setIsadd(true);\n    setOpenedit(true);\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\n  }\n  Array.prototype.insert = function (index, item) {\n    this.splice(index, 0, item);\n  };\n  function Editvendor(vendordata) {\n    delete vendordata[\"action\"];\n\n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit: true,\n    });\n    setOpenedit(true);\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n  }\n  async function Savevendor(content) {\n    props.onCreate(content);\n    setIsadd(false);\n    setEditcontent(null);\n    setOpenedit(false);\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\n    // refetch()\n  }\n  function Cancelcreate() {\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function searrchcontent() {\n    props.onSearch(editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\");\n  }\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n  function removeimage(imagename, keyvalue) {\n    let previmagenames = editcontent[keyvalue];\n    let newimages = [];\n    let previmages = previmagenames.split(\",\");\n    previmages.forEach((element) => {\n      if (element == imagename) {\n      } else {\n        newimages.push(element);\n      }\n    });\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\n  }\n  function CancelEdit(diamondData) {\n    if (isadd) {\n      let masters = masterlist;\n\n      masters.splice(0, 1);\n      setMasterlist(masterlist);\n    }\n    setIsadd(false);\n    setEditcontent({});\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleSearchChange = (type) => (e) => {\n    props.onSearch(e.target.value);\n  };\n  const handleChange = (type) => (event) => {\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  useEffect(() => {\n    setMasterlist(props.values);\n  }, [props.values]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb.\");\n  }\n  function previewimage(url) {\n    setpreviewurl(url);\n    setShowpreview(true);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <>\n      {showpreview && (\n        <Lightbox\n          class=\"fade\"\n          mainSrc={previewurl}\n          // nextSrc={images[(photoIndex + 1) % images.length]}\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={() => setShowpreview(false)}\n          onMovePrevRequest={() => alert(\"prev\")}\n          onMoveNextRequest={() => alert(\"next\")}\n        />\n      )}\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={3} sm={3}>\n            <Typography component=\"h6\" variant=\"h6\">\n              {props.title}\n            </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\n            <Grid fullwidth item xs={9} sm={9}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                autoComplete=\"off\"\n                id=\"vendordeliverydays\"\n                name=\"vendordeliverydays\"\n                //  /  value={editcontent.searchcontent}\n                onChange={handleInputChange(\"searchcontent\")}\n                label=\"Search text\"\n              />\n            </Grid>\n            <Grid fullwidth item xs={3} sm={3}>\n              <Button variant=\"contained\" onClick={() => searrchcontent()} color=\"primary\">\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            {props.button_title ? (\n              <Button variant=\"contained\" onClick={() => addnewvendor()} color=\"primary\">\n                {props.button_title}\n              </Button>\n            ) : null}\n          </Grid>\n        </Grid>\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n            <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {masterlist.map((row, index) => (\n                <>\n                  <TableRow>\n                    {props.columns.map((columnname, index) => (\n                      <>\n                        {columnname.key === \"action\" ? (\n                          <TableCell align=\"center\" style={{ width: 20 }}>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <>\n                                <Button onClick={(e) => Savevendor()}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </>\n                            ) : (\n                              <Button onClick={(e) => Editvendor(row)}>\n                                <EditIcon />\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell align=\"left\">\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    onChange={handleChange(columnname.key)}\n                                    checked={editcontent[columnname.key]}\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button variant=\"outlined\" color=\"primary\">\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n                                {columnname.type == 3 ? (\n                                  <Autocomplete\n                                    multiple\n                                    id=\"combo-box-demo\"\n                                    options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[columnname.defaultkey]}\n                                    onChange={handleoptionChange(columnname.defaultkey)}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField {...params} label={columnname.label} variant=\"outlined\" />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 9 ? (\n                                  <>\n                                    <FilePond\n                                      oninit={() => handleInit()}\n                                      labelIdle=\"Add Banner Image\"\n                                      onaddfile={(error, fileItem) => {\n                                        if (!error) {\n                                          uploadimagetoserver(fileItem, columnname.key, \"add\");\n                                        } else {\n                                          // alert(row[columnname.key])\n                                        }\n                                      }}\n                                    />\n                                    <div className={classes.imagecontainer}>\n                                      {editcontent[columnname.key]\n                                        ? editcontent[columnname.key].split(\",\").map((row, index) => (\n                                            <Badge\n                                              overlap=\"circle\"\n                                              anchorOrigin={{\n                                                vertical: \"top\",\n                                                horizontal: \"right\",\n                                              }}\n                                              badgeContent={\n                                                <HighlightOffIcon\n                                                  fontSize=\"small\"\n                                                  onClick={() => removeimage(row, columnname.key)}\n                                                />\n                                              }\n                                            >\n                                              <Avatar alt=\"Remy Sharp\" src={row} className={classes.small} />\n                                            </Badge>\n                                          ))\n                                        : null}\n                                    </div>\n                                  </>\n                                ) : null}\n                                {columnname.type == 5 ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={props.masters[columnname.mastervaluekey]}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                                    onChange={handleoptionChange(columnname.defaultkey)}\n                                    value={editcontent[columnname.defaultkey]}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField {...params} label={columnname.label} variant=\"outlined\" />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 4 ? <Typography> {row[columnname.key]}</Typography> : null}\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {!columnname.type || columnname.type == 1 ? (\n                                  <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    id={columnname.key}\n                                    name={columnname.key}\n                                    value={editcontent[columnname.key]}\n                                    onChange={handleInputChange(columnname.key)}\n                                    label={columnname.label}\n                                  />\n                                ) : null}{\" \"}\n                              </TableCell>\n                            ) : (\n                              <TableCell>\n                 \n\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n\n                                {columnname.type === 9 ? (\n                                  <AvatarGroup max={2}>\n                                    {row[columnname.key]\n                                      ? row[columnname.key]\n                                          .split(\",\")\n                                          .map((row, index) => (\n                                            <Avatar\n                                              alt=\"Remy Sharp\"\n                                              src={row}\n                                              onClick={() => previewimage(row)}\n                                              className={classes.small}\n                                            />\n                                          ))\n                                      : null}{\" \"}\n                                    {/* className={classes.small} />)) : null } */}\n                                  </AvatarGroup>\n                                ) : null}\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    onChange={handleInputChange(columnname.key)}\n                                    checked={row[columnname.key]}\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type != 2 && columnname.type != 6 && columnname.type != 8 && columnname.type != 9 ? (\n                                  <Typography> {row[columnname.key]}</Typography>\n                                ) : null}\n                              </TableCell>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ))}\n                  </TableRow>\n                </>\n              ))}\n\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[50, 100, 200, 500]}\n                  count={[props.values.length]}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { \"aria-label\": \"rows per page\" },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  // ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n          {editcontent && (\n            <EditContent\n              diamond={editcontent}\n              attributes={props.columns}\n              title={props.title}\n              masters={props.masters}\n              onApply={Savevendor}\n              onClose={handleApplicationClose}\n              open={openedit}\n              prefix={aliasName}\n            />\n          )}\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  deleteIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Header = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Orders\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Order #{order.id}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {/* <Button\n            className={classes.deleteButton}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.deleteIcon} />\n            Delete\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nimport {\n  PAYMENTSTATUSMASTER,\n  PRODUCTDIAMONDTYPES,\n} from \"../../../../graphql/query\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField,\n  Link,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ReceiptIcon from \"@material-ui/icons/ReceiptOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  actions: {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    \"& > * + *\": {\n      marginLeft: 0,\n    },\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst OrderInfo = (props) => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = [\"Canceled\", \"Completed\", \"Rejected\"];\n\n  const [option, setOption] = useState(options[0]);\n  const [paymentstatus, setPaymentstatus] = useState([]);\n  const [orderstatus, setOrderstatus] = useState([]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  React.useEffect(() => {\n    getmaster();\n  }, []);\n  // debugger;\n  console.log(props);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Customer</TableCell>\n              <TableCell>\n                <Link\n                  target=\"_blank\"\n                  component={RouterLink}\n                  to={`/customerdetails/${order.user_profile.id}`}\n                >\n                  {order.user_profile.first_name} {order.user_profile.last_name}\n                </Link>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline1\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline2\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].city\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].state\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].country\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email ID</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.cart_addresses\n                    ? order.shopping_cart.cart_addresses.length > 0\n                      ? order.shopping_cart.cart_addresses[0].contact_number\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Mobile Number</TableCell>\n              <TableCell>{order.user_profile.email}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Amount</TableCell>\n              <TableCell>\n                {order.currency}\n                {order.shopping_cart.discounted_price}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Waybil Number</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Waybill Number\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Gift Message</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.giftwraps\n                    ? order.shopping_cart.giftwraps.length > 0\n                      ? order.shopping_cart.giftwraps[0].message\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Mode</TableCell>\n              <TableCell>{order.payment_mode}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {paymentstatus.map((option) => (\n                    <option key={option.name} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Order Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {orderstatus.map((option) => (\n                    <option key={option.id} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Comments</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Comments\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant=\"contained\" color=\"primary\">\n          {/* <EditIcon className={classes.buttonIcon} /> */}\n          Save\n        </Button>\n        {/* <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Resend invoice\n        </Button> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired,\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  }\n}));\n\nconst OrderItems = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Sku</TableCell>\n                  <TableCell>Product Image</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Amount</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {order.shopping_cart.shopping_cart_items.map(item => (\n                  <TableRow key={item.id}>\n                     <TableCell>\n                      {item.product_sku}\n                    </TableCell>\n                    <TableCell>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </TableCell>\n                    <TableCell>\n                      {item.qty}\n                    </TableCell>\n                    <TableCell>{item.price}</TableCell>\n                    \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardHeader, Divider, CardContent, Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  inner_card: {\n    padding: \"10px\",\n    marginBottom: \"16px\",\n  },\n  image_container: {\n    padding: \"16px\",\n  },\n  product_image: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  },\n  text_heading: {\n    // fontWeight: \"400\",\n    margin: \"8px 0px\",\n  },\n  text_content: {\n    margin: \"8px 0px\",\n  },\n  final_total_text: {\n    textAlign: \"right\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n  },\n}));\nconst OrderDetails = (props) => {\n  const { order, className, ...rest } = props;\n  console.log(order, \"samir\");\n  const classes = useStyles();\n  return (\n    <div style={{ marginTop: 30 }}>\n      <Card>\n        <CardHeader title=\"Order Details\" />\n        <Divider />\n\n        <CardContent>\n          {order.shopping_cart.shopping_cart_items.map((item) => (\n            <Card key={item.id} className={classes.inner_card}>\n              <Grid container xs={12}>\n                {/*-------------------------------- Image part-------------------------------- */}\n                <Grid container xs={12} md={3} className={classes.image_container}>\n                  <img src=\"\" alt=\"Product Image\" className={classes.product_image} />\n                </Grid>\n                <Grid container xs={12} md={9}>\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Product Code</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.product_sku}</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Metal</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>{`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}</p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.trans_sku_list.sku_weight}</p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Diamond Quality</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.trans_sku_list.diamond_type} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Diamond Weight (Ct)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> ? </p>\n                    </Grid>\n                  </Grid>\n                  {/* ----------------------------------------------------------------- */}\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Quantity</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.qty} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>{`₹${Math.round(item.trans_sku_list.discount_price)}`} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Saved</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.discount_price - item.trans_sku_list.markup_price)} (${\n                          item.trans_sku_list.discount === null ? \"0\" : item.trans_sku_list.discount\n                        }%off)`}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Shipping</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> Free </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Grand Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>{`₹${Math.round(item.trans_sku_list.markup_price)}`}</p>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Card>\n          ))}\n          <Grid>\n            <p className={classes.final_total_text}>Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;</p>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\nexport default OrderDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport { v4 as uuid } from 'uuid';\nimport moment from \"moment\";\nimport Page from \"../../components/Page\";\nimport { Header, OrderInfo, OrderItems } from \"./components\";\nimport { withRouter } from \"react-router-dom\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  container: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const OrderManagementDetails = withRouter((props) => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(null);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  async function fetchorderdetails(order_id) {\n    let response = await sendNetworkRequest(\n      \"/getorderdetails\",\n      {},\n      { order_id }\n    );\n    // debugger\n    console.log(response);\n    setOrder(response.orders);\n  }\n  useEffect(() => {\n    let mounted = true;\n    var com_id = props.location.pathname.split(\"/\")[2];\n    const fetchOrder = () => {\n      setOrder({\n        id: uuid(),\n        ref: \"FAD107\",\n        promoCode: null,\n        value: \"55.25\",\n        currency: \"$\",\n        status: \"canceled\",\n        customer: {\n          name: \"Ekaterina Tankova\",\n          address: \"Street King William, 42456\",\n          city: \"Montgomery\",\n          country: \"United States\",\n        },\n        items: [\n          {\n            id: uuid(),\n            name: \"Project Points\",\n            cuantity: 25,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"50.25\",\n            currency: \"$\",\n          },\n          {\n            id: uuid(),\n            name: \"Freelancer Subscription\",\n            cuantity: 1,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"5.00\",\n            currency: \"$\",\n          },\n        ],\n        created_at: moment(),\n      });\n    };\n\n    // fetchOrder();\n    fetchorderdetails(com_id);\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Order Management Details\">\n      <Header order={order} />\n      <Grid className={classes.container} container spacing={3}>\n        <Grid item md={4} xl={3} xs={12}>\n          <OrderInfo order={order} />\n        </Grid>\n        <Grid item md={8} xl={9} xs={12}>\n          <OrderItems order={order} />\n          <OrderDetails order={order} style={{ marginTop: 30 }} />\n        </Grid>\n      </Grid>\n    </Page>\n  );\n});\n\nexport default OrderManagementDetails;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n      alert(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.priority && x.priority == taxcontent ||\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\n\n\n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  // element.email &&  element.email.match(searchtext+'.*')  || \n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \n  //     element.username && element.username.match(searchtext+'.*')\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addtaxattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\nimport Attributescontent from './Attributescontent/Attributescontent';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n     <Attributescontent title= {\"Shipment Settings II\"} \n        masters={[]}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Mastercategories = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    alert(JSON.stringify(taxcontent));\n    let response = await sendNetworkRequest(\n      \"/managecategories\",\n      {},\n      taxcontent\n    );\n    getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          prefix={data.prefix}\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Mastercategories;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n\n    //getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n\n    getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":2  ,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport data from \"./data.json\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./Configuration.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n}));\nexport const Userconfiguration = withRouter((props) => {\n  const master_options = [\n    \"Attribute Master\",\n    \"Categories\",\n    \"ProductTypes\",\n    \"Materials\",\n    \"Metal Colours\",\n    \"Metal Purities\",\n    \"Collections\",\n    \"Occassions\",\n    \"Styles\",\n    \"Themes\",\n    \"Designs\",\n    \"Weights\",\n    \"Diamond Types\",\n    \"Diamond Settings\",\n    \"Diamond Shapes\",\n    \"Earring Backings\",\n    \"Gemstone Settings\",\n    \"Gemstone Shapes\",\n    \"Gemstone Types\",\n    \"Stones\",\n    \"Stone Colours\",\n    \"Stone Shapes\",\n    \"Gender\",\n    \"SEO Priorities\",\n    \"Tax Settings 1\",\n    \"Tax Settings 2\",\n    \"Payment Status\",\n    \"Order Status\",\n    \"Shipping Zones\",\n    \"Shipment Setting I\",\n    \"Shipment Setting II\",\n  ];\n  const master_options_url = [\n    \"masterattributes\",\n    \"categories\",\n    \"producttypes\",\n    \"materialmaster\",\n    \"mastercolors\",\n    \"masterpurities\",\n    \"collections\",\n    \"masteroccassions\",\n    \"masterstyles\",\n    \"masterthemes\",\n    \"designs\",\n    \"weights\",\n    \"diamonds\",\n    \"diamondsettings\",\n    \"diamondshapes\",\n    \"earringbacking\",\n    \"gemstonesettings\",\n    \"gemstoneshapes\",\n    \"gemstonetypes\",\n    \"masterstones\",\n    \"masterstonecolors\",\n    \"masterstoneshapes\",\n    \"genders\",\n    \"seopriority\",\n    \"Taxsetup\",\n    \"taxsettings\",\n    \"paymentstatus\",\n    \"orderstatus\",\n    \"zones\",\n    \"shipmensettings\",\n    \"shippingattributes\",\n  ];\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => {\n    setRaised(true);\n  };\n  const onMouseOut = () => {\n    setRaised(false);\n    // setCardindex(-1)\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          User and Roles Management\n        </Typography>\n      </Grid>\n\n      {data.options.map((menu, index) => (\n        <Grid item xs={6} sm={4} lg={3}>\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\n            <Card fullwidth className=\"card2\">\n              <CardContent>\n                <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                  {menu.title}\n                </Typography>\n\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n              </CardContent>\n            </Card>\n          </Link>\n        </Grid>\n      ))}\n    </Grid>\n  );\n});\n\nexport default Userconfiguration;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport Addpermissions from '../../components/Addpermissions/Addpermissions';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterroles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false)\n  const [masterpages, setMasterpages] = React.useState([])\n  const [editroleid, setEditroleid] = React.useState('')\n  const [editpermissons, setEditpermissions] = React.useState({})\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n\n    let response =  await sendNetworkRequest('/manageroles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n    setMastervalue(response.roles)\n    setFiltervalue(response.roles)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  async function showpermissions(rowcontent)\n  {\n    let response =  await sendNetworkRequest('/getrolepermissions', {}, {role_id: rowcontent.id})\n    setEditpermissions(response.permissions)\n    setEditroleid(rowcontent.id)\n    setIsshowpermissions(true)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent)\n  {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id : editroleid\n    }\n    console.log(JSON.stringify(bodydata))\n    setIsshowpermissions(false)\n    let response =  await sendNetworkRequest('/managepermissions', {}, bodydata)\n     getmaster()\n\n    \n  }\n  function cancelpermissions(rowcontent)\n  {\n    setIsshowpermissions(false)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n       <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? <Addpermissions role_id={editroleid} isopen={isshowpermissions} permissions={editpermissons} pages={masterpages} onClose={cancelpermissions} onSave={updatepermissions} /> : null}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onPermissionadd={showpermissions} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterroles;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterscreens = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  \n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managepages', {}, taxcontent)\n    getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes)\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Screens\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns}  values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterscreens;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageadminusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster()\n  }\n  async function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getadminusers', {}, {})\n    let adminusers = response.users;\n    let users = []\n    adminusers.forEach(element => {\n        let userobj = {}\n        userobj['id'] = element.id;\n        userobj['username'] = element.username;\n        userobj['password'] = element.password;\n        userobj['email'] = element.email;\n        userobj['mobile'] = element.mobile;\n        userobj['status'] = element.status === 'Active' ? true : false;\n        let roles = []\n        let rolesnames = []\n\n        let userroles = element.user_roles;\n        userroles.forEach(userroleobj => {\n\n          let roleobj = {}\n          roleobj['id'] = userroleobj.master_role.id\n          roleobj['name'] = userroleobj.master_role.name\n          roles.push(roleobj)\n          rolesnames.push(userroleobj.master_role.name)\n        })\n        userobj['roles'] = roles\n        userobj['rolenames'] = rolesnames.join(' , ')\n        users.push(userobj)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs url=\"/userconfiguration\" name=\"userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Admin Users\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageadminusers;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    if(element.shortCode == 'All')\n    {\n      mastervendors.forEach(element => {\n        vendorid.push(element.shortCode)\n      })\n      setSelectedvendors(vendorid)\n    }else{\n      vendorid.push(element.shortCode)\n      setSelectedvendors(vendorid)\n\n    }\n   })\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      var sellingprice = goldprice.selling_price\n      if(pricetype.value == 2) \n      {\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\n       \n      }\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*sellingprice\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                  disableClearable={true}\n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <Page\n    //   className={classes.root}\n    //   title=\"Customer Management Details\"\n    // >\n    //   <Header />\n    //    <Tabs\n    //     className={classes.tabs}\n    //     onChange={handleTabsChange}\n    //     scrollButtons=\"auto\"\n    //     value={tab}\n    //     variant=\"scrollable\"\n    //   >\n    //     {tabs.map(tab => (\n    //       <Tab\n    //         key={tab.value}\n    //         label={tab.label}\n    //         value={tab.value}\n    //       />\n    //     ))}\n    //   </Tabs>\n    //   <Divider className={classes.divider} />\n    //  {/* <div className={classes.content}>\n    //     {tab === 'summary' && <Summary />}\n    //     {tab === 'invoices' && <Invoices />}\n    //     {tab === 'logs' && <Logs />}\n    //   </div> */}\n    // </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Phone</TableCell>\n               <TableCell>{customer.mobile}\n               {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>}\n                </TableCell>\n            </TableRow>\n            \n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nconst master_options = ['Address Book','Wish List','Orders']\n  const master_options_url = ['/address','/userwishlist','/orderlist']\n\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    // history.push(`orderlist/${id}`)\n    window.location.href = `orderlist/${id}`\n  }\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid> */}\n    <Grid container item xs={12} sm={12} lg={12} >\n    <Grid  item xs={12} sm={6} lg={6} >\n    <General customer ={customer} /> \n\n      </Grid>\n\n    </Grid>\n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={2} lg={2} >\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\n     <Card fullwidth\n    //  onClick={(e) => ProductEdit(customer.id)}\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <div className={classes.root}>\n      \n    //   <Tabs\n    //     orientation=\"vertical\"\n    //     variant=\"standard\"\n    //     value={value}\n    //     onChange={handleChange}\n    //     aria-label=\"Vertical tabs example\"\n    //     className={classes.tabs}\n    //   >\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n    //   </Tabs>\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\n    //   <General customer ={customer} /> </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n    //   </TabPanel>\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n    //   </TabPanel>\n      \n     \n    // </div>\n  );\n});\n\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Userwishlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Useraddresses = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.hsnNumber}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Tax Settings\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addtaxattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n    let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\n    //  getmaster()\n     history.push('/taxsettings')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TAXMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n\n            var selectedcategory = []\n            \n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories)\n              {\n                if(categories.indexOf(catobj.alias) > -1)\n                {\n                  selectedcategory.push(catobj)\n                }\n              }\n              \n\n            })\n\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addtaxattributes;","import gql from \"graphql-tag\";\n\nlet CREATE_HOLIDAY = gql`\n  mutation($item: HolidayManagerInput!) {\n    createHolidayManager(input: { holidayManager: $item }) {\n      holidayManager {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_HOLIDAY = gql`\n  mutation($id: Int!, $item: HolidayManagerPatch!) {\n    updateHolidayManagerById(input: { id: $id, holidayManagerPatch: $item }) {\n      holidayManager {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_HOLIDAY = gql`\n  mutation($id: Int!) {\n    deleteHolidayManagerById(input: { id: $id }) {\n      clientMutationId\n    }\n  }\n`;\n\nlet CREATE_WAREHOUSE = gql`\n  mutation($item: WarehouseInput!) {\n    createWarehouse(input: { warehouse: $item }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_WAREHOUSE = gql`\n  mutation($id: Int!, $item: WarehousePatch!) {\n    updateWarehouseById(input: { id: $id, warehousePatch: $item }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_WAREHOUSE = gql`\n  mutation($id: Int!) {\n    deleteWarehouseById(input: { id: $id }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet CREATE_INVENTORY = gql`\n  mutation($item: InventoryInput!) {\n    createInventory(input: { inventory: $item }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_INVENTORY = gql`\n  mutation($id: UUID!, $item: InventoryPatch!) {\n    updateInventoryById(input: { id: $id, inventoryPatch: $item }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_INVENTORY = gql`\n  mutation($id: UUID!) {\n    deleteInventoryById(input: { id: $id }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nexport {\n  CREATE_HOLIDAY,\n  UPDATE_HOLIDAY,\n  DELETE_HOLIDAY,\n  CREATE_WAREHOUSE,\n  UPDATE_WAREHOUSE,\n  DELETE_WAREHOUSE,\n  CREATE_INVENTORY,\n  UPDATE_INVENTORY,\n  DELETE_INVENTORY,\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst HolidayModal = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Holiday-Modal\"}\n    >\n      <DialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{`${props.type} Holiday`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              label={\"Holiday\"}\n              name=\"holiday\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.holiday}\n              onChange={props.editItem}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                className={classes.inputField}\n                label={\"Date\"}\n                name=\"date\"\n                fullWidth\n                inputVariant=\"outlined\"\n                value={props.item.date}\n                onChange={(_, value) => props.editItem(value, \"date\")}\n                format={\"yyyy-MM-dd\"}\n              />\n            </MuiPickersUtilsProvider>\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type != \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default HolidayModal;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_HOLIDAY,\n  DELETE_HOLIDAY,\n  UPDATE_HOLIDAY,\n} from \"../../graphql/mutation\";\nimport { HOLIDAYLIST } from \"../../graphql/query\";\nimport HolidayModal from \"./HolidayModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport moment from \"moment\";\n\nexport const HolidayManager = (props) => {\n  const { loading, data, error, refetch } = useQuery(HOLIDAYLIST);\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({ holiday: \"\", date: null });\n\n  const editItem = (event, type) => {\n    var name, value;\n    if (type == \"date\") {\n      name = type;\n      value = event;\n    } else {\n      name = event.target.name;\n      value = event.target.value;\n    }\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n    setItem({ holiday: \"\", date: null });\n  };\n\n  const handleSave = () => {\n    if (type == \"Edit\") {\n      var id = item.id;\n      delete item.id;\n      delete item.createdAt;\n      delete item.updatedAt;\n      delete item.__typename;\n      client\n        .mutate({\n          mutation: UPDATE_HOLIDAY,\n          variables: {\n            id,\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_HOLIDAY,\n          variables: {\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Delete\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: DELETE_HOLIDAY,\n          variables: {\n            id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Holiday Manager</Typography>\n        <IconButton>\n          <Tooltip title=\"Upload Holidays\">\n            <CloudUploadIcon />\n          </Tooltip>\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n          }}\n        >\n          <Tooltip title=\"Add Holiday\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Holiday</TableCell>\n                <TableCell align={\"center\"}>Date</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading && (\n                <TableRow>\n                  <TableCell colSpan={3} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={3} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allHolidayManagers?.nodes.length == 0 && (\n                <TableRow>\n                  <TableCell colSpan={3} align={\"center\"}>\n                    <Typography>No Holidays found!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allHolidayManagers?.nodes.length > 0 &&\n                data?.allHolidayManagers?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.holiday}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.date, \"YYYY-MM-DD\").format(\"MMM DD,YYYY\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <HolidayModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst WarehouseModal = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Warehouse-Modal\"}\n    >\n      <DialogTitle\n        id=\"Warehouse-Modal\"\n        disableTypography\n        className={classes.root}\n      >\n        <Typography variant=\"h6\">{`${props.type} Warehouse`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              label={\"Name\"}\n              name=\"name\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.name}\n              onChange={props.editItem}\n            />\n            <TextField\n              className={classes.inputField}\n              label={\"Shipping In Days\"}\n              name=\"shippingInDays\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.shippingInDays}\n              onChange={props.editItem}\n            />\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type != \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default WarehouseModal;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_WAREHOUSE,\n  DELETE_WAREHOUSE,\n  UPDATE_WAREHOUSE,\n} from \"../../graphql/mutation\";\nimport { WAREHOUSELIST } from \"../../graphql/query\";\nimport WarehouseModal from \"./WarehouseModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nexport const Warehouse = (props) => {\n  const { loading, data, error, refetch } = useQuery(WAREHOUSELIST);\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({ name: \"\", shippingInDays: \"\" });\n\n  const editItem = (event) => {\n    var { name, value } = event.target;\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n    setItem({ name: \"\", shippingInDays: \"\" });\n  };\n\n  const handleSave = () => {\n    item[\"shippingInDays\"] = parseInt(item.shippingInDays);\n    if (type == \"Edit\") {\n      var id = item.id;\n      delete item.id;\n      delete item.createdAt;\n      delete item.updatedAt;\n      delete item.__typename;\n      client\n        .mutate({\n          mutation: UPDATE_WAREHOUSE,\n          variables: {\n            id,\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_WAREHOUSE,\n          variables: {\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setOpen(false);\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Delete\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: DELETE_WAREHOUSE,\n          variables: {\n            id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Warehouse</Typography>\n        <IconButton\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n          }}\n        >\n          <Tooltip title=\"Add Warehouse\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Name</TableCell>\n                <TableCell align={\"center\"}>Shipping In Days</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading && (\n                <TableRow>\n                  <TableCell colSpan={3} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={3} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allWarehouses?.nodes.length == 0 && (\n                <TableRow>\n                  <TableCell colSpan={3} align={\"center\"}>\n                    <Typography>No Warehouses found!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allWarehouses?.nodes.length > 0 &&\n                data?.allWarehouses?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.name}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.shippingInDays}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <WarehouseModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport { VALIDATEGENERATEDSKU, WAREHOUSELIST } from \"../../graphql/query\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst InventoryModal = (props) => {\n  const classes = useStyles();\n  const { loading, data } = useQuery(WAREHOUSELIST);\n\n  const client = useApolloClient();\n  const [error, setError] = React.useState(false);\n\n  const validateGeneratedSku = (generatedSku) => {\n    client\n      .mutate({\n        mutation: VALIDATEGENERATEDSKU,\n        variables: { generatedSku },\n      })\n      .then((res) => {\n        if (res?.data?.allTransSkuLists?.nodes?.length == 0) {\n          setError(\"Tag No doesn't exists!\");\n        } else {\n          setError(false);\n        }\n      });\n  };\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Holiday-Modal\"}\n    >\n      <DialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{`${props.type} Inventory`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              required\n              label={\"Tag No\"}\n              name=\"generatedSku\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.generatedSku}\n              onChange={props.editItem}\n              error={Boolean(error)}\n              helperText={error}\n              onBlur={() => validateGeneratedSku(props.item.generatedSku)}\n            />\n            <TextField\n              className={classes.inputField}\n              required\n              type={\"Number\"}\n              label={\"Quantity\"}\n              name=\"numberOfItems\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.numberOfItems}\n              onChange={props.editItem}\n            />\n            <Autocomplete\n              loading={loading}\n              options={data?.allWarehouses?.nodes}\n              getOptionSelected={(option, value) => option.name === value.name}\n              getOptionLabel={(option) => option.name}\n              value={props.item.warehouse}\n              onChange={props.editItem}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Warehouse\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                      <React.Fragment>\n                        {loading ? (\n                          <CircularProgress color=\"inherit\" size={20} />\n                        ) : null}\n                        {params.InputProps.endAdornment}\n                      </React.Fragment>\n                    ),\n                  }}\n                />\n              )}\n            />\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type != \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default InventoryModal;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_INVENTORY,\n  DELETE_INVENTORY,\n  UPDATE_INVENTORY,\n} from \"../../graphql/mutation\";\nimport { INVENTORYLIST } from \"../../graphql/query\";\nimport InventoryModal from \"./InventoryModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const Inventory = (props) => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const { loading, data, error, refetch } = useQuery(INVENTORYLIST, {\n    variables: { first: rowsPerPage, offset: page },\n  });\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({\n    generatedSku: \"\",\n    numberOfItems: \"\",\n    warehouse: { id: \"\", name: \"\" },\n  });\n\n  const editItem = (event, newValue) => {\n    var name, value;\n    if (newValue) {\n      console.log(newValue);\n      name = \"warehouse\";\n      value = newValue;\n    } else {\n      name = event.target.name;\n      value = event.target.value;\n    }\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n  };\n\n  const handleSave = () => {\n    if (type == \"Edit\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: UPDATE_INVENTORY,\n          variables: {\n            id,\n            item: {\n              generatedSku: item.generatedSku,\n              numberOfItems: parseInt(item.numberOfItems),\n              warehouseId: item.warehouse.id,\n            },\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_INVENTORY,\n          variables: {\n            item: {\n              id: uuid(),\n              generatedSku: item.generatedSku,\n              numberOfItems: parseInt(item.numberOfItems),\n              warehouseId: item.warehouse.id,\n            },\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Delete\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: DELETE_INVENTORY,\n          variables: {\n            id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Inventory</Typography>\n        <IconButton>\n          <Tooltip title=\"Upload Inventorys\">\n            <CloudUploadIcon />\n          </Tooltip>\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n            setItem({\n              generatedSku: \"\",\n              numberOfItems: \"\",\n              warehouse: { id: \"\", name: \"\" },\n            });\n          }}\n        >\n          <Tooltip title=\"Add Inventory\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Tag No</TableCell>\n                <TableCell align={\"center\"}>Quantity</TableCell>\n                <TableCell align={\"center\"}>Warehouse</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading && (\n                <TableRow>\n                  <TableCell colSpan={4} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={4} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allInventories?.nodes.length == 0 && (\n                <TableRow>\n                  <TableCell colSpan={4} align={\"center\"}>\n                    <Typography>No items in inventory!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allInventories?.nodes.length > 0 &&\n                data?.allInventories?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.generatedSku}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.numberOfItems}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.warehouse.name}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={4}\n                  align={\"right\"}\n                  rowsPerPageOptions={[10, 25, 100]}\n                  count={data?.allInventories?.totalCount}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <InventoryModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Typography from \"@material-ui/core/Typography\";\nconst Banners = (props) => {\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          Landing Page Banner\n        </Typography>\n      </Grid>\n\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/styloribanner\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                Stylori\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/silverbanner\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                Stylori Silver\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Banners;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORILANDINGBANNERS, CREATESTYLORILANDINGBANNER, DELETESTYLORILANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst StyloriLandingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORILANDINGBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESTYLORILANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    \n    let create_banner_data = {\n      position: Number(createlandingbanner.position),\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESTYLORILANDINGBANNER,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Stylori Landing Page Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.url} target=\"_blank\" className={classes.link_style}>\n                      {val.url}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default StyloriLandingPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Breadcrumbs } from \"../../../components\";\nimport StyloriLandingPage from \"./components/stylorilandingpage\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst Styloribanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"/banners\" name=\"Landing Page Banner\"></Breadcrumbs>\n      <StyloriLandingPage />\n    </>\n  );\n};\nexport default Styloribanner;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERLANDINGBANNERS, CREATESILVERLANDINGBANNER, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverLandingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLANDINGBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriSilverBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: createlandingbanner.position,\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLANDINGBANNER,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              Silver Landing Page Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.url} target=\"_blank\" className={classes.link_style}>\n                      {val.url}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverLandingPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Breadcrumbs } from \"../../../components\";\nimport SilverLandingPage from \"./components/silverlandingpage\";\nimport SilverListingPage from \"./components/silverlistingpage\";\nimport SilverListingRoutingPage from \"./components/silverlistingroutingpage\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst Silverbanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"/banners\" name=\"Landing Page Banner\"></Breadcrumbs>\n      <SilverLandingPage />\n      {/* <SilverListingPage /> */}\n      {/* <SilverListingRoutingPage /> */}\n      {/* <SilverLandingPage /> */}\n    </>\n  );\n};\nexport default Silverbanner;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERLISTINGPAGE, CREATESILVERLISTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLISTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriSilverBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: createlandingbanner.position,\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLISTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              Silver Listing Page Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.url} target=\"_blank\" className={classes.link_style}>\n                      {val.url}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverListingPage;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERROUTINGPAGE, CREATESTYLORISILVERROUTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingRoutingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    urlParam : \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERROUTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriSilverBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: createlandingbanner.position,\n      urlParam: createlandingbanner.urlParam,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESTYLORISILVERROUTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              Silver Listing Routing Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"urlParam\"\n              label=\"Router Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.urlParam}\n              name=\"urlParam\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Router Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.urlParam} target=\"_blank\" className={classes.link_style}>\n                      {val.urlParam}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverListingRoutingPage;\n","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from \"react\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { withRouter } from \"react-router-dom\";\nimport { useStyles } from \"./styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { ProductContext } from \"../../context\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { GlobalContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nimport { Paper, Avatar, Typography } from \"@material-ui/core\";\nimport data from \"../menupages.json\";\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload, setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem(\"accesspages\");\n  console.log(accesspages);\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  };\n  const handleClick = (type) => (e) => {\n    if (type === \"Pricing\") {\n      setGlobalCtx({ ...globalCtx, optionname: type, selectedIndex: 5, isExpand: !globalCtx.isExpand });\n    } else {\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\n    }\n  };\n  async function getmasterpages() {\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach((element) => {\n      pages.push(element.pageurl);\n      if (element.is_write) {\n        pagepermissions.push(element.pageurl);\n      }\n    });\n    // setPages(pageaccess)\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n    //setIsreload(true)\n\n    localStorage.setItem(\"accesspages\", pages);\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n    window.location.reload();\n  }\n  React.useEffect(() => {\n    //alert(globalCtx.accesspages)\n    if (!accesspages) {\n      // getmasterpages()\n    } else {\n      //  setIsreload(true)\n    }\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n  }, []);\n  function handleListItemClick(event, index) {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\n  }\n  console.log(data);\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>{theme.direction === \"rtl\" ? <ChevronRightIcon /> : <ChevronLeftIcon />}</IconButton>\n        </div>\n        <Divider />\n\n        <List>\n          {data.menus.map((menuobj, index) => (\n            <>\n              {menuobj.submenu ? (\n                <>\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <>\n                      <ListItem button onClick={handleClick(menuobj.name)}>\n                        <ListItemIcon>\n                          <InboxIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                        {globalCtx.isExpand && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse in={globalCtx.isExpand && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                          {menuobj.submenu.map((submenuobj, subindex) => (\n                            <>\n                              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ? (\n                                <Link underline=\"none\" component={RouterLink} to={submenuobj.url}>\n                                  <ListItem\n                                    button\n                                    className={classes.nested}\n                                    selected={globalCtx.selectedIndex === subindex}\n                                    onClick={(event) => handleListItemClick(event, subindex)}\n                                  >\n                                    <ListItemIcon>\n                                      <StarBorder />\n                                    </ListItemIcon>\n                                    <ListItemText primary={submenuobj.name} />\n                                  </ListItem>\n                                </Link>\n                              ) : null}\n                            </>\n                          ))}\n                        </List>\n                      </Collapse>{\" \"}\n                    </>\n                  ) : null}\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <Link underline=\"none\" component={RouterLink} to={menuobj.url}>\n                      <ListItem\n                        button\n                        key={\"Product List\"}\n                        selected={globalCtx.optionname === menuobj.name}\n                        onClick={handleClick(menuobj.name)}\n                      >\n                        <ListItemIcon>\n                          <InboxIcon />{\" \"}\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                      </ListItem>\n                    </Link>\n                  ) : null}{\" \"}\n                </>\n              )}\n            </>\n          ))}\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\")\n    window.location = '/'\n  }\n\n  \n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditDiamond = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    diamondweight  : diamond.diamondweight ? diamond.diamondweight : '',\n    diamondcount  : diamond.diamondcount ? diamond.diamondcount : '',\n    diamondsettings : diamond.diamondsettings ? diamond.diamondsettings : null,\n    diamondshape : diamond.diamondshape ? diamond.diamondshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.diamondweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.diamondcount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondsettings}\n                    value={editcontent.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditDiamond.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditDiamond;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditDiamond from './Components/EditDiamond/EditDiamond';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    \n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setEditcontent({\n      id : diamondData.id,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    setOpenedit(true)\n  }\n  async function DiamondSave(diamondobj){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight){\n      \n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(diamondobj.id===diamondListData.id){\n          diamondListData.diamondSettings=diamondobj.diamondsettings.name;\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\n          diamondListData.stoneCount = diamondobj.diamondcount;\n          diamondListData.stoneWeight = diamondobj.diamondweight;\n          bodydata['diamondSettings'] = diamondobj.diamondsettings.name\n          bodydata['diamondShape'] = diamondobj.diamondshape.name\n          bodydata['stoneCount'] = diamondobj.diamondcount;\n          bodydata['stoneWeight'] = diamondobj.diamondweight;\n          bodydata['diamondid'] = diamondobj.id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      let response =  await sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n   // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      setEditcontent(null)\n      setOpenedit(false)\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table> \n        {editcontent && <EditDiamond\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditGemstone = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    gemstonesettings  : diamond.gemstonesettings ? diamond.gemstonesettings : '',\n    gemstonecount  : diamond.gemstonecount ? diamond.gemstonecount : '',\n    gemstoneweight : diamond.gemstoneweight ? diamond.gemstoneweight : null,\n    gemstonesize : diamond.gemstonesize ? diamond.gemstonesize : null,\n\n    \n    gemstoneshape : diamond.gemstoneshape ? diamond.gemstoneshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n   // alert(JSON.stringify(editcontent.gemstonecount))\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        \n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstonesize}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstonesize')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstoneweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstoneweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.gemstonecount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.gemstonesettings}\n                    value={editcontent.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.gemstoneshape}\n                    options={productCtx.masterData.gemstoneshape}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditGemstone.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditGemstone;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport EditGemstone from './Components/EditGemstone/EditGemstone';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setEditcontent({\n      id : gemstoneData.id,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n   // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n   setOpenedit(true)\n  }\n async function GemstoneSave(gemdata) {\n    if (gemdata.gemstonesettings && gemdata.gemstoneshape && gemdata.gemstonecount && gemdata.gemstoneweight && gemdata.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (gemdata.id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\n          bodydata['gemstoneSetting'] = gemdata.gemstonesettings.name\n          bodydata['gemstoneShape'] = gemdata.gemstoneshape.name\n          bodydata['stoneCount'] = gemdata.gemstonecount;\n          bodydata['gemstoneSize'] = gemdata.gemstonesize;\n          bodydata['stoneWeight'] = gemdata.gemstoneweight;\n          bodydata['id'] = gemdata.id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===gemdata.id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setEditcontent(null)\n      setOpenedit(false)\n    //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && <EditGemstone\n        diamond={editcontent}\n        onApply={GemstoneSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      discount:diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n\n          skulistdata.discountDesc =  productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['discount'] = productCtx.discount;\n\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n\n        {props.displycolumns.indexOf('Quantity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.availableStockQty}\n                    id=\"qty\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"Qty\"\n                    label=\"Quantity\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('available_stock_qty')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.availableStockQty}</Typography>\n\n                  } </TableCell> : null}\n\n{props.displycolumns.indexOf('Discount') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.discount}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('discount')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.discountDesc}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(2, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditPrice = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    editcostprice:diamond.editcostprice,\n    editcostpricetax: diamond.editcostpricetax,\n    editsellingprice:diamond.editsellingprice,\n    editsellingpricetax:diamond.editsellingpricetax,\n    editmarkupprice: diamond.editmarkupprice,\n    editmarkuppricetax : diamond.editmarkuppricetax,\n    editdiscountprice: diamond.editdiscountprice,\n    editdiscountpricetax: diamond.editdiscountpricetax\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Price Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editcostprice}\n              placeholder={\"costPrice\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"costPriceTax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostpricetax')}\n              value={editcontent.editcostpricetax}\n              />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editsellingprice}\n              placeholder={\"Selling Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Selling Pricetax\"\n              placeholder=\"Selling Pricetax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingpricetax')}\n              value={editcontent.editsellingpricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editmarkupprice}\n              placeholder={\"Markup Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkupprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Markup Price Tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkuppricetax')}\n              value={editcontent.editmarkuppricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editdiscountprice}\n              placeholder={\"Discount Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Discount Price tax1\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountpricetax')}\n              value={editcontent.editdiscountpricetax}\n              />\n                 \n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditPrice.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditPrice;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditPrice from './Components/EditPrice/EditPrice';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setEditcontent({ ...editcontent, [type]: e.target.value})\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n    setEditcontent({\n      id : diamondData.generatedSku,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n     //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n   // setOpenedit(true)\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(priceobj){\n    \n    var bodydata = {}\n      let list_data=props.variants;\n     list_data.map((skulistdata,index)=>{\n        if(priceobj.generatedSku === skulistdata.generatedSku){\n          skulistdata.costPrice = priceobj.editcostprice;\n          skulistdata.costPriceTax = priceobj.editcostpricetax;\n          skulistdata.sellingPrice =  priceobj.editsellingprice;\n          skulistdata.sellingPriceTax = priceobj.editsellingpricetax\n          skulistdata.markupPrice = priceobj.editmarkupprice\n          skulistdata.markupPriceTax = priceobj.editmarkuppricetax\n          skulistdata.discountPrice = priceobj.editdiscountprice\n          skulistdata.discountPriceTax = priceobj.editdiscountpricetax\n           bodydata['costPrice'] = parseFloat(editcontent.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(editcontent.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(editcontent.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(editcontent.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(editcontent.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(editcontent.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(editcontent.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(editcontent.editdiscountpricetax)\n           bodydata['marginOnSalePercentage'] = parseFloat(editcontent.marginOnSalePercentage)\n           bodydata['generatedSku'] = editcontent.id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n     sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      // setEditcontent(null)\n      // setOpenedit(false)\n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                }  </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                {props.displycolumns.indexOf('View') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n\n<Button variant=\"outlined\" color=\"primary\" onClick={(e) => props.onShow(row.generatedSku)}>Summary\n</Button> </TableCell>: null }\n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && <EditPrice\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">{props.title ? props.title : \"Variants Table\"} </h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport axios from \"axios\";\nimport { makeid } from \"../../utils/commonmethod\";\n\nimport { Paper, Card, CardHeader, CardContent, Grid } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport \"./upload.css\";\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\",\n  },\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\n  },\n  formContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30,\n  },\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = \"\";\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach((imgobj) => {\n    if (props.color === imgobj.productColor) {\n      image_count = image_count + 1;\n      if (imgobj.productId) {\n        product_id = imgobj.productId;\n      }\n      // setTotalimages(image_count)\n    }\n  });\n  async function uploadimagetoserver(fileobj, filetype, imagename, prodid, imagecontent, isedit, position) {\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      { image: filetype, filename: imagename, product_id: prodid },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    var filepathname = returnData.filepath;\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\n    var options = {\n      headers: {\n        \"Content-Type\": filetype,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n    if (isedit) {\n      imagecontent[\"imageUrl\"] = filepathname.replace(\"jpeg\", \"jpg\");\n    } else {\n      const imageobj = {\n        name: product_id + \"_\" + (image_count + 1) + props.color.charAt(0),\n        imagePosition: image_count + 1,\n        productColor: props.color,\n        productId: product_id,\n        imageUrl: filepathname.replace(\"jpeg\", \"jpg\"),\n        url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\n      };\n      imagecontent = imageobj;\n    }\n    if (!isedit) {\n      var productimgs = [];\n      productimages.forEach((img) => {\n        productimgs.push(img);\n      });\n      productimgs.push(imagecontent);\n    }\n    await axios.put(signedRequest, fileobj, options);\n    let responsecontent = await sendNetworkRequest(\"/updateproductimage\", {}, { imageobj: imagecontent, isedit: isedit }, false);\n    image_count = image_count + 1;\n    if (!isedit) {\n      setProductimages(productimgs);\n    }\n  }\n  const handlenewAssetChange = (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => {\n      // const size = files[index].size;\n      var imagecount = 1;\n      if (productimages) {\n        imagecount = image_count + 1;\n      }\n      let imagename = product_id + \"-\" + imagecount + props.color.charAt(0);\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n\n      uploadimagetoserver(files[index], fileType, imagename, product_id, {}, false);\n    });\n  };\n  const handleAssetChange = (e, imageposition, category, endPoint) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => {\n      const size = files[index].size;\n      alert(imageposition);\n      let productimageobj = {};\n      productimages.forEach((content) => {\n        if (content.productColor === props.color && imageposition === content.imagePosition) {\n          productimageobj = content;\n        }\n      });\n      var prodid = productimageobj.productId;\n      var prodcolor = productimageobj.productColor;\n      var imagecount = 1;\n      let randomnum = makeid(1, \"\", 1);\n      if (productimages) {\n        //  imagecount = image_count + 1;\n      }\n      let imagename = prodid + \"-\" + imageposition + randomnum + prodcolor.charAt(0);\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n      //alert(imagename)\n      uploadimagetoserver(files[index], fileType, imagename, prodid, productimageobj, true);\n      // alert(imagename)\n    });\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color} />\n        <CardContent>\n          <Grid container spacing={2} className={classes.styleFile}>\n            {productimages.map((url) => (\n              <>\n                {props.color === url.productColor ? (\n                  <div style={{ position: \"relative\" }}>\n                    <i\n                      className=\"fa fa-window-edit\"\n                      style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: \"12\" }}\n                    />\n\n                    <Grid\n                      item\n                      style={{\n                        width: \"150px\",\n                        wordBreak: \"break-all\",\n                        height: \"150px\",\n                        padding: \"8px\",\n                        margin: \"0\",\n                        cursor: \"pointer\",\n                        position: \"relative\",\n                      }}\n                      className=\"container\"\n                    >\n                      <input\n                        type=\"file\"\n                        className=\"custom-file-input\"\n                        multiple\n                        onChange={(e) => handleAssetChange(e, url.imagePosition, \"\", \"\")}\n                      ></input>\n\n                      <img\n                        src={\n                          \"https://assets.stylori.com/\" +\n                          url.imageUrl.replace(url.productId, url.productId + \"/1000X1000\")\n                        }\n                        style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }}\n                      />\n                    </Grid>\n                    <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\n                      {\" \"}\n                      {url.imagePosition}{\" \"}\n                    </Typography>\n\n                    <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\n                      {\" \"}\n                      {url.ishover ? \"hover\" : \"\"}{\" \"}\n                    </Typography>\n                  </div>\n                ) : null}\n              </>\n            ))}\n            <Grid\n              item\n              style={{\n                width: \"150px\",\n                wordBreak: \"break-all\",\n                height: \"150px\",\n                padding: \"8px\",\n                margin: \"0\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                position: \"relative\",\n              }}\n              className=\"container\"\n            >\n              {\n                <label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                  <i\n                    className=\"fa fa-plus\"\n                    aria-hidden=\"true\"\n                    style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}\n                  ></i>\n                  <input type=\"file\" className=\"custom-file-input\" multiple onChange={(e) => handlenewAssetChange(e)}></input>\n                </label>\n              }\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n      \n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n         \n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\nimport columnnames from './columnnames.json';\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('lg');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose()\n  };\n\n  return (\n    <div>\n      \n      <Dialog\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\n        <DialogContent>\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\n        </DialogContent>\n        <DialogActions>\n       \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, TextField, Button, Fab } from \"@material-ui/core\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from \"./DiamondDetails\";\nimport GemstoneDetails from \"./GemstoneDetails\";\nimport Variants from \"./Variants\";\nimport Skupricing from \"./Skupricing\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES, PRODUCTDESCRIPTIONEDIT } from \"../../graphql/query\";\nimport CreateVariant from \"./CreateVariant\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SortHeader from \"./Components/SortHeader\";\nimport columnnames from \"./columnnames.json\";\nimport Productimages from \"./Productimages\";\nimport FullLoader from \"../../components/Loader\";\nimport Pricedetails from \"./Pricedetails\";\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { sk } from \"date-fns/locale\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.pricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(columnnames.defaultpricingnames);\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\n\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    createVariant();\n    setExpand(isExpanded ? true : false);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\",\n  });\n  let prod_id = props.location.pathname.split(\"/\")[2];\n\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = evt.target.validity.valid ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname });\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n\n  const handleinputChange = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n  const handledesinputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  // const handleinputChange = type => (event, value) => {\n  //   alert(event.target.value)\n  //       setProductCtx({ ...productCtx, [type]: value})\n  // }\n  function dismisspricesummary() {\n    setIsshowpricesummary(false);\n  }\n  function getColumnnames(columnnames, displytype) {\n    let displycolumns = [];\n    let displycolumnnames = [];\n\n    columnnames.forEach((element) => {\n      displycolumnnames.push(element.name);\n      displycolumns.push(element);\n    });\n    if (displytype === 1) {\n      setDisplycolumns(displycolumnnames);\n      setVarientcolumns(columnnames);\n    } else {\n      setPricingcolumns(columnnames);\n      setDisplypricingcolumns(displycolumns);\n      setDisplycolumnnames(displycolumnnames);\n    }\n  }\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist &&\n      productCtx.diamondlist.map((diamond_type) => {\n        let diamond_data = {\n          id: diamond_type.id,\n          diamondType: diamond_type.diamondType,\n        };\n        let status = diamondTypesArray.some((store_dia) => store_dia.diamondType == diamond_type.diamondType)\n          ? \"\"\n          : diamondTypesArray.push(diamond_data);\n        return diamond_type;\n      });\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\n\n    setProductCtx({\n      ...productCtx,\n      productCtx,\n    });\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES }),\n    };\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then((res) => res.json())\n      .then((diamondtypesData) => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, \"diamondtypesdata\");\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes,\n        });\n      })\n      .catch(console.error);\n\n    //setstate({ ...state, create_variant: true })\n  }\n  async function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions: productCtx.occassions,\n      collections: productCtx.collections,\n      stonecount: productCtx.stonecount,\n      stonecolour: productCtx.stonecolour,\n      gender: productCtx.product_gender,\n      // prodDescription: productCtx.prod_desc,\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    };\n    // debugger\n    console.log(productEditItem);\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: PRODUCTDESCRIPTIONEDIT,\n        variables: { productId: prod_id, prod_desc: productCtx.prod_desc },\n      }),\n    };\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fetchvalue) => {\n        console.log(fetchvalue);\n        setProductCtx({ ...productCtx, prod_desc: fetchvalue.data.updateProductListByProductId.productList.prodDescription });\n      });\n    let response = await sendNetworkRequest(\"/editproduct\", {}, productEditItem);\n    // debugger\n    console.log(\"************\");\n    console.log(JSON.stringify(productEditItem));\n    if (response) {\n      console.log(response);\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      console.log(JSON.stringify(productEditItem));\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem));\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = (name) => async (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      productid: prod_id,\n      isactive: event.target.checked,\n    };\n    let esbody = {\n      product_id: prod_id,\n    };\n    var endpoint = \"/reindex\";\n    if (event.target.checked) {\n      endpoint = \"/esearch_forceindex\";\n    }\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\n\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\n    let updateproductattr = await sendNetworkRequest(\"/updateproductattribute\", {}, esbody);\n\n    console.log(\"************\");\n    console.log(JSON.stringify(bodycontent));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  };\n  async function showpricesummary(sku) {\n    let response = await sendNetworkRequest(\"/viewskupricesummary/\" + sku, {}, null);\n    let price_summary = [];\n    let skuprice = response.price_summary.skuprice;\n    // let cost_obj = {\n    //   component: \"Cost Price\",\n    //   price : skuprice.cost_price - skuprice.cost_price_tax,\n    //   tax : skuprice.cost_price_tax,\n    //   total : skuprice.cost_price\n\n    // }\n    // price_summary.push(cost_obj)\n\n    // let selling_price = {\n    //   component: \"Selling Price\",\n    //   price : skuprice.selling_price ,\n    //   tax : skuprice.selling_price_tax,\n    //   total : skuprice.selling_price\n\n    // }\n    // price_summary.push(selling_price)\n    // let discount_price = {\n    //   component: \"discount Price\",\n    //   price : skuprice.discount_price ,\n    //   tax : skuprice.discount_price_tax,\n    //   total : skuprice.discount_price\n\n    // }\n    // price_summary.push(discount_price)\n    // let markup_price = {\n    //   component: \"markup Price\",\n    //   price : skuprice.markup_price ,\n    //   tax : skuprice.markup_price_tax,\n    //   total : skuprice.markup_price\n\n    // }\n\n    let metalprice = response.price_summary.metals;\n    metalprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n\n    let mateialprice = response.price_summary.materials;\n    mateialprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n    let obj = {\n      component: \"SKU Price\",\n      cost_price: skuprice.cost_price,\n      selling_price: skuprice.selling_price,\n      markup_price: skuprice.markup_price,\n      discount_price: skuprice.discount_price,\n    };\n    price_summary.push(obj);\n    //alert(JSON.stringify(metalprice))\n    //   price_summary.push(markup_price)\n    setPricesummaryvalue(price_summary);\n    setIsshowpricesummary(true);\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function Skumarkupsync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n      pricingcomponent: \"updateskuprice\",\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function backProductList() {\n    window.location = \"/productlist\";\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: PRODUCTEDIT,\n        variables: { productId: prod_id },\n      }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        var genders = fatchvalue.data.productListByProductId.gender;\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient;\n        let sizes_arr = [];\n        if (size_obj) {\n          let sizes = size_obj.split(\",\");\n          sizes.forEach((element) => {\n            sizes_arr.push(element);\n          });\n        }\n        let gender_arr = [];\n        if (genders) {\n          genders = genders.split(\",\");\n          genders.forEach((element) => {\n            let gender_obj = {\n              label: element,\n            };\n            gender_arr.push(gender_obj);\n          });\n        }\n        let defaultcolour = \"\";\n        var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes;\n        images_arr.forEach((element) => {\n          if (element.isdefault) {\n            defaultcolour = element.productColor;\n          }\n        });\n        var metalcolors = [];\n        Array.prototype.insert = function (index, item) {\n          this.splice(index, 0, item);\n        };\n        let metalcolor = fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes;\n        metalcolor.forEach((colorobj) => {\n          if (colorobj.productColor === defaultcolour) {\n            colorobj[\"isdefault\"] = true;\n            metalcolors.insert(0, colorobj);\n          } else {\n            colorobj[\"isdefault\"] = false;\n            metalcolors.push(colorobj);\n          }\n        });\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode: fatchvalue.data.productListByProductId.vendorCode,\n          product_gender: gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes, // productDiamondColor:diamondTypesArray,\n          occassions: fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections: fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount: fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour: fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes,\n          prod_desc: fatchvalue.data.productListByProductId.prodDescription,\n          // productDiamondClarity:diamondClaritySku,\n        });\n\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName)),\n        });\n        setLoadopen(false);\n      })\n      .catch(console.error);\n  }, []);\n  // debugger\n  return state.create_variant ? (\n    <CreateVariant\n      productMetalColor={productCtx.productMetalColor}\n      productMetalPurity={productCtx.productMetalPurity}\n      changeVariant={changeVariant}\n      productId={prod_id}\n    />\n  ) : (\n    <Grid container>\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <Grid item container spacing={1}>\n        <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}>\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            pattern=\"[a-zA-Z]*\"\n            value={productCtx.productname}\n            id=\"productname\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"productname\"\n            label=\"Product Name\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"productname\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.prod_desc ? productCtx.prod_desc : \"\"}\n            id=\"prod_desc\"\n            // error={\n            //   productCtx &&\n            //   productCtx.error_message &&\n            //   productCtx.error_message.productname\n            // }\n            name=\"prod_desc\"\n            label=\"Product Description\"\n            //onInput={keyPress.bind(this)}\n            onChange={handledesinputChange(\"prod_desc\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_categoy}\n            id=\"product_category\"\n            InputProps={{\n              readOnly: true,\n            }}\n            error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n            name=\"product_category\"\n            label=\"Product Category\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_type}\n            id=\"product_type\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"product_type\"\n            label=\"Product Type\"\n          />\n          <Input\n            variant=\"outlined\"\n            margin=\"dense\"\n            label=\"Vendor Name\"\n            fullWidth\n            className={classes.helperinput}\n            value={productCtx.vendorcode}\n            id=\"productvendorcode\"\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"Vendor Name\"\n          />\n\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"seo_text\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"seo_text\"\n            label=\"Minimum Order Quantity\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"url\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"url\"\n            label=\"Maximum Order Quantity\"\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productmaterials}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Product Materials\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{\n                  ...params.InputProps,\n                  readOnly: true,\n                  type: \"search\",\n                }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productMetalColor}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productMetalPurity}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Purity\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.product_gender}\n            getOptionLabel={(option) => option.label}\n            onChange={handleoptionChange(\"product_gender\")}\n            options={productCtx.masterData.gender}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Gender\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.themes}\n            options={productCtx.masterData.themes}\n            value={productCtx.themes}\n            onChange={handleoptionChange(\"themes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Themes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.prod_styles}\n            options={productCtx.masterData.styles}\n            onChange={handleoptionChange(\"prod_styles\")}\n            value={productCtx.prod_styles}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Styles\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.occassions}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.occassions}\n            options={productCtx.masterData.occasions}\n            onChange={handleoptionChange(\"occassions\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Occasions\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.collections}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.collections}\n            options={productCtx.masterData.collections}\n            onChange={handleoptionChange(\"collections\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Collections\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecount}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecount}\n            options={productCtx.masterData.stones}\n            onChange={handleoptionChange(\"stonecount\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"No of Stones\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecolour}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecolour}\n            options={productCtx.masterData.gemstonecolor}\n            onChange={handleoptionChange(\"stonecolour\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Stone Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <FormControlLabel\n            label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n            control={<Switch checked={productCtx.isactive} onChange={handledisableproduct(\"isactive\")} value=\"checkedA\" />}\n          />\n\n          <Grid\n            item\n            container\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\",\n            }}\n          >\n            <Grid item>\n              <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                Update\n              </Button>\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={9} lg={9} spacing={2} style={{ padding: \"15px\" }}>\n          <Grid container item md={6}></Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n          <DiamondDetails diamond={productCtx.diamondlist} />\n          {productCtx.gemstonelist.length > 0 ? (\n            <>\n              {\" \"}\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\n            </>\n          ) : null}\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>Variant Creation</Grid>\n\n          <Grid style={{}}>\n            {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n\n            <ExpansionPanel expanded={expand} onChange={handleChange()}>\n              <ExpansionPanelSummary\n                expandIcon={expand ? <CloseIcon /> : <AddIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n              >\n                <div className={classes.column}>\n                  <Typography className={classes.heading}>Add New variant</Typography>\n                </div>\n              </ExpansionPanelSummary>\n              <Divider />\n              <ExpansionPanelDetails className={classes.details}>\n                <CreateVariant\n                  productMetalColor={productCtx.productMetalColor}\n                  productMetalPurity={productCtx.productMetalPurity}\n                  changeVariant={changeVariant}\n                  productId={prod_id}\n                />\n              </ExpansionPanelDetails>\n              <Divider />\n              {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n            </ExpansionPanel>\n          </Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>\n            <SortHeader columnnames={columnnames.varients} getColumnnames={getColumnnames} displytype={1} />{\" \"}\n          </Grid>\n\n          <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>\n            <SortHeader\n              title={\"Pricing Table\"}\n              columnnames={pricingcolumns}\n              displycolumns={displypricingcolumns}\n              getColumnnames={getColumnnames}\n              displytype={2}\n            />\n            <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n              Price Run For This Product\n            </Button>\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <Button onClick={(e) => Skumarkupsync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n              Run Markup For This Product\n            </Button>\n          </Grid>\n          {isshowpricesummary ? <Pricedetails onClose={dismisspricesummary} values={pricesummaryvalues} /> : null}\n          <Skupricing\n            variants={productCtx.variants}\n            onShow={showpricesummary}\n            columns={displypricingcolumns}\n            displycolumns={displycolumnnames}\n          />\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n          {productCtx.productMetalColor.map((colors) => (\n            <Productimages color={colors.productColor} isdefault={colors.isdefault} prodimages={productCtx.product_images} />\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const ProductAttributes = withRouter((props) => {\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n\n  const _content = (\n    <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}>\n      <Component {...props} />\n    </ProductProvider>\n  );\n  return _content;\n});\nexport default withRouter(ProductAttributes);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport route from \"./route\";\nimport {\n  Dashboard,\n  Login,\n  Productupload,\n  Configuration,\n  Manageusers,\n  Customerdetails,\n  Priceupdate,\n  Vendorprice,\n  Vendorlist,\n  Markupprice,\n  Goldpriceupdate,\n  Userwishlist,\n  Productlist,\n  Materiallist,\n  Masterorderstatus,\n  Shippingzones,\n  Manageadminusers,\n  Shipmentsettings,\n  Addshippingattributes,\n  Userconfiguration,\n  Masterroles,\n  Masterscreens,\n  Useraddresses,\n  Addtaxattributes,\n  OrderManagementDetails,\n  Materialmaster,\n  CategoryList,\n  Mastermetalcolors,\n  Masterpurities,\n  Masterdesigns,\n  Shippingattributes,\n  Voucherdiscount,\n  Masterstyles,\n  Masterthemes,\n  Masteroccassions,\n  Masterpaymentstatus,\n  Salediscount,\n  Masterweights,\n  Taxsettings,\n  Masterstones,\n  Masterstonecolors,\n  Masterstoneshapes,\n  Masterattribute,\n  Mastercategories,\n  OrderList,\n  Mastergemsettings,\n  Seopriority,\n  Mastergenders,\n  Mastergemshapes,\n  Mastergemtypes,\n  Earringbacking,\n  Masterproducttypes,\n  Masterdiamondshapes,\n  Taxsetup,\n  Masterdiamonds,\n  Masterdiamondsettings,\n  DiscountList,\n  VoucherdiscountListing,\n  Mastercollections,\n  Masterpages,\n  HolidayManager,\n  Warehouse,\n  Inventory,\n} from \"../screens\";\nimport Banners from \"../screens/Banners/banners\";\nimport Styloribanner from \"../screens/Banners/styloribanner/styloribanner\";\nimport Silverbanner from \"../screens/Banners/silverbanner/silverbanner\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { NetworkProvider } from \"../context/NetworkContext\";\nimport { GlobalContext } from \"../context\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\nimport {\n  ProductContext,\n  ProductProvider,\n} from \"../context/ProductuploadContext\";\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\n\nconst MainApp = () => {\n  const { globalCtx } = React.useContext(GlobalContext);\n  const { productCtx } = React.useContext(ProductContext);\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\n\n  return (\n    <ApolloProvider client={client}>\n      {/* <ProductProvider > */}\n      <NetworkProvider>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Login} />\n          <Route path={route.login} component={Login} />\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\n          <PrivateRoute path={route.productupload} component={Productupload} />\n          <PrivateRoute path={route.configuration} component={Configuration} />\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\n          <PrivateRoute path={route.productlist} component={Productlist} />\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n          <PrivateRoute\n            path={route.producttypes}\n            component={Masterproducttypes}\n          />\n          <PrivateRoute\n            path={route.voucherdiscount}\n            component={Voucherdiscount}\n          />\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n          <PrivateRoute path={route.orderlist} component={OrderList} />\n          <PrivateRoute path={route.userorders} component={OrderList} />\n          <PrivateRoute path={route.address} component={Useraddresses} />\n\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n          <PrivateRoute path={route.category} component={Mastercategories} />\n          <PrivateRoute\n            path={route.masterattributes}\n            component={Masterattribute}\n          />\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\n          <PrivateRoute\n            path={route.masterstonecolors}\n            component={Masterstonecolors}\n          />\n          <PrivateRoute\n            path={route.masterstoneshapes}\n            component={Masterstoneshapes}\n          />\n          <PrivateRoute path={route.weights} component={Masterweights} />\n          <PrivateRoute\n            path={route.masteroccassions}\n            component={Masteroccassions}\n          />\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\n          <PrivateRoute\n            path={route.manageadminusers}\n            component={Manageadminusers}\n          />\n          <PrivateRoute\n            path={route.goldpriceupdate}\n            component={Goldpriceupdate}\n          />\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\n          <PrivateRoute\n            path={route.customerdetails}\n            component={Customerdetails}\n          />\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\n          <PrivateRoute\n            path={route.orderdetails}\n            component={OrderManagementDetails}\n          />\n\n          <PrivateRoute\n            path={route.userconfiguration}\n            component={Userconfiguration}\n          />\n\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n          <PrivateRoute\n            path={route.mastermaterial}\n            component={Materialmaster}\n          />\n          <PrivateRoute\n            path={route.mastercolors}\n            component={Mastermetalcolors}\n          />\n          <PrivateRoute\n            path={route.masterpurities}\n            component={Masterpurities}\n          />\n          <PrivateRoute\n            path={route.salediscountlist}\n            component={DiscountList}\n          />\n          <PrivateRoute\n            path={route.voucherdiscountlist}\n            component={VoucherdiscountListing}\n          />\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n          <PrivateRoute\n            path={route.mastercollections}\n            component={Mastercollections}\n          />\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n          <PrivateRoute\n            path={route.masterdiamonds}\n            component={Masterdiamonds}\n          />\n          <PrivateRoute\n            path={route.diamondsettings}\n            component={Masterdiamondsettings}\n          />\n          <PrivateRoute\n            path={route.diamondshapes}\n            component={Masterdiamondshapes}\n          />\n          <PrivateRoute\n            path={route.earringbacking}\n            component={Earringbacking}\n          />\n          <PrivateRoute\n            path={route.gemsettings}\n            component={Mastergemsettings}\n          />\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n          <PrivateRoute\n            path={route.masterpaymentstatus}\n            component={Masterpaymentstatus}\n          />\n          <PrivateRoute\n            path={route.masterorderstatus}\n            component={Masterorderstatus}\n          />\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n          <PrivateRoute\n            path={route.shippingattributes}\n            component={Shippingattributes}\n          />\n          <PrivateRoute\n            path={route.addshippingattributes}\n            component={Addshippingattributes}\n          />\n          <PrivateRoute\n            path={route.addtaxattributes}\n            component={Addtaxattributes}\n          />\n\n          <PrivateRoute path={route.gender} component={Mastergenders} />\n          <PrivateRoute path={route.seo} component={Seopriority} />\n\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n          <PrivateRoute\n            exact\n            path={route.editdiscount}\n            component={Salediscount}\n          />\n\n          <PrivateRoute\n            exact\n            path={`${route.productAttributes}/:id`}\n            component={ProductAttributes}\n          />\n          <PrivateRoute\n            exact\n            path={`${route.createVariant}`}\n            component={CreateVariant}\n          />\n          <PrivateRoute\n            path={route.shipmentsettings}\n            component={Shipmentsettings}\n          />\n          <PrivateRoute path={route.banners} component={Banners} />\n          <PrivateRoute path={route.styloribanner} component={Styloribanner} />\n          <PrivateRoute path={route.silverbanner} component={Silverbanner} />\n          <PrivateRoute\n            path={route.holiday_manager}\n            component={HolidayManager}\n          />\n          <PrivateRoute path={route.warehouse} component={Warehouse} />\n          <PrivateRoute path={route.inventory} component={Inventory} />\n        </Switch>\n      </NetworkProvider>\n      {/* </ProductProvider> */}\n    </ApolloProvider>\n  );\n};\n\nexport default MainApp;\n","import React from \"react\";\nimport { Alerts as Alert } from \"./components\";\nimport { AlertProps, AlertContext } from \"./context\";\n\nclass AppAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      severity: AlertProps.severity.success,\n      msg: \"\",\n      vertical: AlertProps.vertical.top,\n      horizontal: AlertProps.horizontal.center,\n    };\n  }\n\n  close = () => {\n    this.setState({\n      open: false,\n      severity: AlertProps.severity.success,\n      msg: \"\",\n      vertical: AlertProps.vertical.top,\n      horizontal: AlertProps.horizontal.center,\n    });\n  };\n\n  set = (props) => {\n    this.setState({ ...props });\n  };\n\n  render() {\n    return (\n      <AlertContext.Provider\n        value={{\n          ...this.state,\n          onclose: this.close,\n          setSnack: this.set,\n        }}\n      >\n        {this.state.open ? <Alert {...this.state} onclose={this.close} /> : \"\"}\n        {this.props.children}\n      </AlertContext.Provider>\n    );\n  }\n}\n\nexport default AppAlert;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport MainApp from \"./routes\";\nimport { GlobalProvider } from \"./context\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport theme from \"./theme\";\n\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppAlert from \"./App.Alert\";\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n\n//       'Roboto'\n\n//     ].join(','),\n//   },\n// });\nfunction App() {\n  return (\n    <GlobalProvider>\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n          <Router>\n            <AppAlert>\n              <MainApp />\n            </AppAlert>\n          </Router>\n        </div>\n      </MuiThemeProvider>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}