{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","userorders","userwishlist","address","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","addtaxattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","category","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","queries_templateObject2","ORDERS","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","URL","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","size","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","useEffect","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_React$useContext2","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","handleChange","persist","target","type","checked","handleSubmit","signinobj","pageaccess","pages","pagepermissions","statuscode","setItem","accessToken","forEach","element","push","pageurl","is_write","history","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","Access-Control-Allow-Origin","image_url","axios","put","file","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","useStyless","border","&:hover","typography","FormPropsTextFields","_React$createElement","anchorEl","searchtext","setSearchtext","setCategory","producttype","setProducttype","handleinputChange","Boolean","borderTop","mastercategory","applyfilter","readOnly","masterproducttype","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","then","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","productcategory","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","allproductlists","mastercategories","masterproducttypes","categoryname","typename","searchproduct","filter","l","productId","toLowerCase","match","productName","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","product_name","product_category","Switch","Productlist","Product","Header","_useState3","_useState4","searchcontent","setSearchcontent","onSearch","onAdd","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","href","ArrowBackIos_default","filterButton","inner","actions","Results","_useState5","_useState6","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","Math","floor","random","toUpperCase","cursor","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","pathname","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","masters","setMasters","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","_callee4","_context4","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","setAnchorEl","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","Header_SortHeader","containergrid","columnobjs","orderdate","onupdate","components_EnhancedTableHead_EnhancedTableHead","col","iswrite","paymentstatusobj","orderstatus","Editvendor","paymentmode","paymentstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","fail_reason","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","join","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","opts","res","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","mobile","username","OrderList_components_Results_Results","showcolumns","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","closeButton","other","disableTypography","Close_default","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","esm_Input_Input","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","handleDelete","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","drawer","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","onDelete","Viewsku_DialogActions","Products","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","masterlist","setMasterlist","onCreate","Array","prototype","insert","button_title","columnname","controllabel","mastervaluekey","defaultkey","onPermissionadd","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","Materialmaster","Mastermetalcolors","Masterpurities","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","Visibility_default","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings","Mastergemshapes","Mastergemtypes","Mastergenders","Seopriority","allSeoUrlPriorities","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","country","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","prod_id","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","filtercontent","setFiltercontent","_React$useState33","_React$useState34","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","bodycontent","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","buttonIcon","General","first_name","last_name","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","setInvoices","invoice","moment","date","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Addtaxattributes","AttributesComponent_AttributesComponent","grow","menuButton","search","fade","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","minHeight","_clsx2","accesspages","isreload","setIsreload","optionname","Drawer","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","selected","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","max","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","diamond","DiamondDetails_Alert","diamondType","stoneWeight","stoneCount","diamondSettings","diamondShape","diamondListData","DiamondSave","settingData","shapeData","colSpan","ActionsComponent","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","_GemstoneSave","list_data","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","availableStockQty","discount","discountDesc","isReadyToShip","isdefault","skulistdata","pricerun","Skupricesync","_Skupricesync","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","src","ishover","class","aria-hidden","handlenewAssetChange","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","textDecoration","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","state","setstate","changeVariant","_saveProductEditItem","productEditItem","_showpricesummary","sku","price_summary","skuprice","obj","material_name","markup_price","discount_price","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productVendorCode","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","esbody","endpoint","productid","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.980e3c27.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    userorders: '/orderlist/:userid',\n    userwishlist: '/userwishlist/:userid',\n    address: '/address/:userid',\n\n    \n    materiallist: '/material',\n    mastermaterial: '/materialmaster',\n    mastercolors: '/mastercolors',\n    masterpurities: '/masterpurities',\n    salediscountlist: '/salediscountlist',\n    voucherdiscountlist: '/voucherdiscountlist',\n\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    salediscount: '/salediscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory',\n    vendorPrice:'/vendorpricesetup',\n    markupPrice: '/markuppricesetup',\n    taxsetup: '/taxsetup',\n    editdiscount: '/salediscount/:id',\n    editvoucher: '/voucherdiscount/:id',\n    masterstyles: '/masterstyles',\n    masterthemes: '/masterthemes',\n    masteroccassions: '/masteroccassions',\n    masterpaymentstatus : '/paymentstatus',\n    mastercollections: '/collections',\n    masterdesigns: '/designs',\n    masterorderstatus : '/orderstatus',\n    shippingzones : '/zones',\n    shipmentsettings : '/shipmensettings',\n    shippingattributes : '/shippingattributes',\n    masterdiamonds: '/diamonds',\n    diamondsettings: '/diamondsettings',\n    diamondshapes: '/diamondshapes',\n    earringbacking: '/earringbacking',\n    addshippingattributes : '/addshippingattributes',\n    addtaxattributes : '/addtaxattributes',\n    userconfiguration : '/userconfiguration',\n    masterroles : '/masterroles',\n    manageadminusers : '/manageadminusers',\n    goldpriceupdate : '/goldpriceupdate',\n        \nmanageusers : '/manageusers',\n\n    masterpages : '/masterpages',\n\n    gemsettings: '/gemstonesettings',\n    gemshapes: '/gemstoneshapes',\n    gemtypes: '/gemstonetypes',\n    gender: '/genders',\n    seo: '/seopriority',\n    taxsettings: '/taxsettings',\n    masterattributes: '/masterattributes',\n\n    masterstones: '/masterstones',\n    masterstonecolors: '/masterstonecolors',\n    masterstoneshapes: '/masterstoneshapes',\n    weights: '/weights',\n    customerdetails: '/customerdetails/:id',\n\n    \n    category: '/categories',\n    \n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTFILTERMASTER = gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n      displayOrder\n    }\n  }\n}\n`;\n\nconst ALLPRODUCTLIST = gql`\nquery  {\n  allProductLists(first: 500)  {\n    nodes {\n      id\n      nodeId\n      productName\n      productCategory\n      productType\n      productId\n      createdAt\n      isactive\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLIST = (category) => gql`\nquery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName,\n      productCategory,\n      productType\n      productId,\n      createdAt\n      isactive,\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLISTS = gql`\nquery  {\n  allMasterVendors(orderBy: CREATED_AT_DESC) {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n    totalCount\n  }\n}\n`;\n\nconst TaxList_1 = gql`\nquery  {\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;/*********** configuration query */\n\nconst TaxList =`\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      productAttributes\n      displayAttributes\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList =`\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL =`\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS =`\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES =`\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER =`\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER =`\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER =`\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER =`\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER =`\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER =`\nquery  {\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\n\nconst PAYMENTSTATUSMASTER =`\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS =`\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES =`\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES =`\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name,\n    alias,\n    id\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES =`\nquery  {\n  allMasterProductCategories(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\nconst MASTERPAGES =`\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER =`\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING =`\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\n\n\nconst MASTERSTONES =`\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES =`\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES= `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`\nconst ACTIVESHIPPINGZONES =`\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES =`\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS =`\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS =`\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES =`\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\nconst MASTERATTRIBUTES =`\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS =`\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES =`\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES =`\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER =`\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES =`\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      purity\n      vendorCode\n      updatedAt\n      sellingPriceType\n      sellingPrice\n      material\n      id\n      createdAt\n      costPrice\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDMARKUP = gql`\nquery MyQuery($vendorCode: String!) {\n  allPricingMarkups(condition: {material: $vendorCode},orderBy: UPDATED_AT_DESC) {\n    nodes {\n      updatedAt\n      sellingPriceMin\n      sellingPriceMax\n      material\n      category\n      productType\n      markupValue\n      markupType\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allDiamondPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      costPrice\n      createdAt\n      diamondClarity\n      diamondColour\n      id\n      sellingPrice\n      sellingPriceType\n      updatedAt\n      vendorCode\n    }\n    totalCount\n  }\n}`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\n\nconst CATGORYLIST =gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      alias\n      name\n      shortCode\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTTYPEMASTER =gql`\nquery  {\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\nconst MATERIALMASTER =gql`\nquery  {\n  allMasterMaterials {\n    nodes {\n      alias\n      name\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst MASTERCOLORS =gql`\nquery  {\n  allMasterMetalsColors {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst SALEDISCOUNTS =gql`\nquery  {\n  allSaleDiscounts {\n    nodes {\n      id\n      discountName\n      discountType\n      discountValue\n      components\n      attributes\n      isActive\n      productAttributes\n      productAttributesText\n    }\n\n    totalCount\n  }\n}\n`;\n\n\nconst VOUCHERDISCOUNTS =gql`\nquery  {\n  allVouchers {\n    nodes {\n      id\n      name\n      code\n      uses\n      maxUses\n      isActive\n      voucherCodes\n      description\n      \n    }\n\n    totalCount\n  }\n}\n`;\n\n\n\n\nconst MASTERPURITIES =gql`\nquery  {\n  allMasterMetalsPurities {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLIST =`\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER =`\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst MASTERCATEGORY =`\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst GEMSTONEMASTER =`\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\n\n\nconst MAKINGCHARGEPRICELIST = gql`\nquery MyQuery($vendorCode: String!,$ratetype: Int!) {\n  allMakingChargeSettings(condition: {vendorCode: $vendorCode,rateType: $ratetype}) {\n    nodes {\n      weightStart\n      weightEnd\n      vendorCode\n      updatedAt\n      sellingPriceType\n      rateType\n      purity\n      priceType\n      price\n      material\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\nconst GEMPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allGemstonePriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      price\n      rateType\n      priceType\n      sellingPriceType\n      vendorCode\n      weightEnd\n      weightStart\n      updatedAt\n      id\n      createdAt\n      gemstoneType\n    }\n    totalCount\n  }\n}`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\n\nconst CREATETAXSETUP = gql`\nmutation MyMutation($id:UUID!,$updatedAt:Date!,$createdAt:Date!,$taxValue:Double!,$taxName:String!,$hsnNumber:String!) {\n  __typename\n  createMasterTaxSetting(input: {masterTaxSetting: {id: $id, updatedAt: $updatedAt, createdAt: $createdAt, taxValue: $taxValue, taxName: $taxName, hsnNumber: $hsnNumber}}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst VOUCHERSTATUSEDIT = gql`\nmutation MyMutation($voucherId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateVoucherById(input: {id: $voucherId, voucherPatch: {isActive: $isActive}}) {\n    clientMutationId\n    voucher {\n      isActive\n    }\n  }\n}\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\nmutation MyMutation($discountId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateSaleDiscountById(input: {id: $discountId, saleDiscountPatch: {isActive: $isActive}}) {\n    clientMutationId\n    saleDiscount {\n      isActive\n    }\n  }\n}\n`;\n\nconst DELETEMARKUPPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deletePricingMarkupById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGOLDPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGoldPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETESALEDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteSaleDiscountById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteVoucherById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEMAKINGCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteMakingChargeSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGEMCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGemstonePriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETEDIAMONDCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteDiamondPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    productVendorCode\n    gender\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n   \n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        marginOnSalePercentage\n        markupPriceTax\n        marginOnSalePercentage\n        sellingPrice\n        discountDesc\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        availableStockQty\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES,\n    GOLDPRICELIST,\n    DIAMONDPRICELIST,\n    GEMPRICELIST,\n    MAKINGCHARGEPRICELIST,\n    VENDORLIST,\n    ALLPRODUCTLIST,\n    DIAMONDMARKUP,\n    PRODUCTFILTERMASTER,\n    METALMASTER,\n    GEMSTONEMASTER,\n    MASTERCATEGORY,\n    DELETEMARKUPPRICE,\n    DELETEMAKINGCHARGE,\n    DELETEGEMCHARGE,\n    DELETEGOLDPRICE,\n    DELETESALEDISCOUNT,\n    CATGORYLIST,\n    DELETEDIAMONDCHARGE,\n    VENDORLISTS,\n    TaxList,\n    PRODUCTTYPEMASTER,\n    MATERIALMASTER,\n    MASTERCOLORS,\n    MASTERPURITIES,\n    SALEDISCOUNTS,\n    VOUCHERDISCOUNTS,\n    DELETEVOUCHERDISCOUNT,\n    VOUCHERSTATUSEDIT,\n    DISCOUNTSTATUSEDIT,\n    MASTERMATERIAL,\n    MASTERMATERIALCOLORS,\n    MASTERPRODUCTPURITIES,\n    COLLECTIONMASTER,\n    DESIGNMASTER,\n    DIAMONDMASTER,\n    DIAMONDSETTINGS,\n    DIAMONDSHAPES,\n    MASTERPRODUCTTYPES,\n    MASTERGEMSETTINGS,\n    MASTERGEMSHAPES ,\n    MASTERGEMTYPES,\n    MASTERGENDER ,\n    SEOPRIORITIES,\n    CREATETAXSETUP,\n    TaxSettingList,\n    MASTERCATEGORIES,\n    EARRINGBACKING,\n    MASTERATTRIBUTES,\n    MASTERSTONESHAPES,\n    MASTERSTONECOLORS,\n    MASTERSTONES,\n    MASTERWEIGHTS,\n    THEMEMASTER,\n    STYLEMASTER,\n    OCCASSIONSMASTER,\n    PAYMENTSTATUSMASTER,\n    SHIPPINGZONES,\n    MASTERCOUNTRIES,\n    SHIPPINGCHARGES,\n    ACTIVESHIPPINGZONES,\n    MASTERPAGES,\n    GOLDPRICESETUPMASTER\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export const USERORDERS = gql`query($userid: UUID!) {\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\n      nodes {\n        paymentMode\n        paymentStatus\n        updatedAt\n        createdAt\n        awbNumber\n        cartId\n        orderStatus\n        comments\n        id\n        shoppingCartByCartId {\n          shoppingCartItemsByShoppingCartId {\n            nodes {\n              transSkuListByProductSku {\n                generatedSku\n                productListByProductId {\n                  productCategory\n                  productType\n                  productCollectionsByProductId {\n                    nodes {\n                      collectionName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          giftwrapsByCartId {\n            nodes {\n              message\n              giftFrom\n              giftTo\n            }\n          }\n          \n          cartAddressesByCartId {\n            nodes {\n              firstname\n              contactNumber\n              addressline1\n              addressline2\n              city\n              pincode\n              state\n            }\n          }\n          userProfileByUserprofileId {\n            firstName\n            mobile\n            email\n          }\n        }\n        paymentDetailsByOrderId {\n          nodes {\n            paymentResponse\n          }\n        }\n      }\n    }\n  \n  }`\nexport const ORDERS = orderid  => gql`query {\n  allOrders(filter:  ${orderid ? `{userProfileId: {equalTo: \"${orderid}\"}}` : `{id: {isNull: false}}`},orderBy: CREATED_AT_DESC) {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n          userAddressesByUserProfileId {\n            nodes {\n              contactNumber\n            }\n          }\n          \n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\n\nexport const TAXMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const userOders = {\n    query: USERORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes\n        }\n    }\n\n\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api.stylori.com\"\n export const API_URL = \"https://api.stylori.com\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api.stylori.com/graphql\"\nexport const URL = \"https://console.stylori.com\"\n\n//  export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"\n// export const BASE_URL = \"http://localhost:8000\"\n// export const URL = \"https://localhost:3000\"\n\n","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"x-access-token\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        isactive: false,\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        oldproductMetalColor:[],\n        oldproductMetalPurity:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        oldproductDiamondTypesArray:[],\n        productmaterials:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        earringbacking:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \n    if(Object.keys(apiData).length === 0) return {};\n \n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { GlobalContext } from '../../../../context';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      // pagepermissions[element.pageurl] = {\n      //   isread : element.is_view,\n      //   iswrite : element.is_write\n      // }\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n    localStorage.setItem('accesspages', pages);\n    localStorage.setItem('pagepermissions', pagepermissions);\n\n    \n    props.history.push('/productlist')\n\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport FullLoader from '../../components/Loader'\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const switchisorderable = event => {\n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n      {/* <FullLoader /> */}\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={switchisorderable} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n \n  const handleClose =  (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n \n      setLoading(true)\n       await sendNetworkRequest('/productupload', {}, formdata)\n      setLoading(false)\n      setSuccess(true)\n      await sleep(500)\n      window.location.replace('/productlist')\n    }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async  function sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n  }\n  \n  return (\n    \n    <Grid item xs={12} sm={12}  >\n       <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} >\n          Product Created Successfully\n        </Alert>\n      </Snackbar>\n\n    <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n  </Snackbar> \n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  Chip\n\n} from '@material-ui/core';\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n \n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n  }\n  const handlecategoryChange = type => (event, value) => {\n    setCategory( value.name)\n    props.applyfilter(searchtext, value.name, producttype)\n\n}\nconst handletypeChange = type => (event, value) => {\n  setProducttype(value.name)\n  props.applyfilter(searchtext, category, value.name  )\n\n}\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n   function applyfilter() {\n     props.applyfilter(searchtext, category, producttype)\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={3} md={3} sm={3}  >\n      <Autocomplete\n                      \n                      fullWidth\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.mastercategory}\n                      onChange={handlecategoryChange('product_category')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Category\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3} >\n\n      <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.masterproducttype}\n                      onChange={handletypeChange('product_type')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Type\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n          <TextField fullWidth margin=\"dense\" onChange={handleinputChange('productname')} placeholder={\"Search by product name or product id\"} onChange={handleinputChange('productname')} id=\"outlined-basic\" variant=\"outlined\"  style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }}/>\n          \n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Button onClick={(e) => applyfilter()} color=\"primary\" variant=\"contained\" style={{ marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }} >\n                  Search\n          </Button>\n          </Grid>\n\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'createdAt', label: 'Created on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('updatedAt');\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} />\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {/* <Link target='blank_' href={row.trans_sku_lists.length > 0 ? BASE_URL+row.trans_sku_lists[0].sku_url : '-'}  variant=\"body2\"> */}\n                                    {row.product_name}\n\n                                    {/* </Link>  */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FullLoader from '../../components/Loader'\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n  //alert(JSON.stringify(props.nameevent))\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Products\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"contained\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React from 'react';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Chip from '@material-ui/core/Chip';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {URL} from '../../config'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nexport default function CustomizedBreadcrumbs(props) {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        href= {props.url ? URL+props.url : URL+\"/configuration\"}\n        label={props.name ? props.name : \"Configuration\"}\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n      \n    </Breadcrumbs>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {CATGORYLIST} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={CATGORYLIST}\n                    onCompleted={data => setPageCount( data.allMasterProductCategories.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterProductCategories.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.shortCode} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    // button: {\n    //     color:\"#06847B\",\n    //     border: \"1px solid #7bbcb7\",\n    //     '&:hover':{\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n    //         border: \"1px solid #06847B\",\n    //     }\n    //   },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n               \n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        \n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems:\"center\",\n  },\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n   //props.onSearch(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n\n      <Grid\n        className={classes.contantview}\n        container\n        spacing={3}\n      >\n        <Grid item xs={3} >\n           <Typography\n           variant=\"h4\"\n           style={{margin: \"8px\"}}\n          >\n            Orders\n          </Typography>\n           {/* <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography>  */}\n        </Grid>\n        <Grid container xs={6} item  >\n        <Grid xs={9} item >\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item >\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \n\n          </Grid>\n\n\n        </Grid>\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\n\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = property => event => {\n      onRequestSort(event, property);\n    };\n  \n    return (\n      <TableHead>\n        <TableRow>\n          {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n          {props.columns.map(headCell => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? 'right' : 'left'}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label ? headCell.label : headCell.name}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === 'desc' ? '' : ''}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n  \n  EnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n  };\n\n  export default EnhancedTableHead;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n   // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n    overflowY: 'auto',\n    maxHeight: '100vh'\n  },\n  containergrid: {\n    overflowX: 'scroll',\n    width: 1000,\n    height: 20,\n    overflowY: 'hidden'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [editcontent,setEditcontent] = React.useState({})\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : 'Order Date');\n  const handleRequestSort = (event, property) => {\n\n    const isAsc = orderBy === property && order === 'asc';\n\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    \n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent)\n   // setIsadd(false)\n  // alert(JSON.stringify(editcontent))\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  setBtnEdit({ ...btnEdit, id:'', action: false })\n // refetch()\n}\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n      let paymentstatusobj = {}\n      props.orderstatus.forEach(element => {\n        if(vendordata.orderstatus === element.name)\n        {\n          paymentstatusobj = element;\n        }\n      });\n      \n     delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus : paymentstatusobj,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\n\n  }\n  function CancelEdit(diamondData) {\n  //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n \n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n \n    // }\n    //    setIsadd(false)\n     setEditcontent({})\n     setBtnEdit({ ...btnEdit, id:'', action: false })\n   }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    \n      <Card>\n       \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          \n         \n            <div className={classes.tableWrapper}>\n              \n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n                {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n              <EnhancedTableHead\n              columns={props.columnobjs}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  {/* </TableRow>\n                </TableHead> */}\n                <TableBody>\n                {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      {props.columnobjs.map(col => (\n                        <>\n                        {col.key === 'action' && props.iswrite?   \n                        <TableCell align=\"center\" style = {{width: 20}}>\n                        {\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                          </Button>\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\n                          </Button></> : <Button onClick={(e) => Editvendor(order)} ><EditIcon />\n                     </Button>\n                         } \n                   </TableCell> : \n                   <>\n                   {\n                    btnEdit.action && btnEdit.id == order.orderid  ?\n                        <TableCell>\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \n                        { col.type == 2 ? <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        \n                        id={col.key}\n                        name={col.key}\n                        value={editcontent[col.key]}\n                        onChange={handleInputChange(col.key)}\n    \n                        label={col.label}\n                       />:null } \n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                                       </Moment>:null } \n\n                   {col.type == 5 && order.paymentmode == 'COD' ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.paymentstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                /> : null }  \n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \n       \n                  {col.type == 3 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.orderstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                /> : null }\n                            \n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                             </Moment>: <Typography> {order[col.key]}</Typography> } \n\n                          \n                           \n                           </TableCell> }\n                        </>\n                        }\n                       \n                      </>\n                      ))}                      \n\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10,50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n   \n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n\n  async function updateorder(ordercontent)\n  {\n  let response =  await sendNetworkRequest('/updateorderstatus', {}, ordercontent)\n    window.location.reload();\n\n   // getorders()\n  }\n  function searchorder(searchtext)\n  {\n    if(searchtext.length > 0)\n    {\n    var data_filter = orders.filter( element => \n      element.email &&  element.email.match(searchtext+'.*')  || \n      element.mobile && element.mobile.match(searchtext+'.*') ||\n      element.orderid && element.orderid.match(searchtext+'.*') || \n      element.username && element.username.match(searchtext+'.*')\n      )\n      setFilteredorder(data_filter)\n    }else{\n      setFilteredorder(orders)\n    }\n  }\n  async function getorders()\n  {\n    var orders_arr = []\n    orderCtx.orderMaster.orders.forEach(element => {\n\n        let orderobj = {}\n        orderobj['orderid'] = element.id\n        orderobj['orderdate'] = element.createdAt\n        orderobj['paymentmode'] = element.paymentMode\n        orderobj['cartid'] = element.cartId\n       // orderobj['paymentstatusmaster'] = element.paymentStatus\n       orderobj['awbNumber'] = element.awbNumber ? element.awbNumber : \"\"\n       orderobj['comments'] = element.comments ? element.comments : \"\"\n       orderobj['orderstatus'] = element.orderStatus\n       if(element.paymentMode === 'COD')\n       {\n        orderobj['paymentstatus'] = element.paymentStatus\n\n       }\n        if(element.paymentDetailsByOrderId)\n        {\n            let pgresponseobj = element.paymentDetailsByOrderId.nodes\n            pgresponseobj.forEach(pgres => {\n           let response_pg =   JSON.parse(pgres.paymentResponse)\n                    if(element.paymentMode === 'Prepaid')\n                    {\n                      orderobj['paymentstatus'] = response_pg.ipgTransactionId + ' \\n'+response_pg.fail_reason+ ' \\n'+response_pg.status\n\n                    }\n\n            } )\n        }\n        if(element.shoppingCartByCartId)\n        {\n            let cartcontent = element.shoppingCartByCartId\n\n                if(cartcontent.cartAddressesByCartId)\n                {\n                    let addresscontent = cartcontent.cartAddressesByCartId.nodes;\n                    addresscontent.forEach(addressobj => {\n                        orderobj['address'] = addressobj.addressline1\n                        if(!orderobj[\"mobile\"])\n                        {\n                          orderobj['mobile'] = addressobj.contactNumber\n\n                        }\n                        if(!orderobj[\"username\"])\n                        {\n                          orderobj['username'] = addressobj.firstname ? addressobj.firstname : \"\"\n\n                        }\n\n                    })\n\n                }\n            if(cartcontent.shoppingCartItemsByShoppingCartId)\n            {\n              \n\n                let cartitemscontent = cartcontent.shoppingCartItemsByShoppingCartId.nodes\n                let skus = []\n                \n                cartitemscontent.forEach(element => {\n                    if(element.transSkuListByProductSku)\n                    {\n                        skus.push(element.transSkuListByProductSku.generatedSku)\n                    }\n\n                    \n                })\n                orderobj['skus'] = skus.join(' , ')\n            }\n            if(cartcontent.userProfileByUserprofileId)\n            {\n             // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n              let usercontent = cartcontent.userProfileByUserprofileId\n              if(usercontent.firstName)\n              {\n                orderobj['username'] = usercontent.firstName ? usercontent.firstName : \"\"\n\n              }\n                orderobj['email'] = usercontent.email ? usercontent.email : \"\"\n                if(!orderobj[\"username\"])\n                            {\n                              orderobj['username'] = usercontent.firstname ? usercontent.firstname : \"\"\n\n\n                            }\n\n              let useraddressess = usercontent.userAddressesByUserProfileId\n              if(useraddressess)\n              {\n                let address_arr = useraddressess.nodes\n                address_arr.forEach(useraddressobj => {\n\n                  if(!orderobj[\"mobile\"])\n                  {\n                    orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  }\n                  if(!orderobj[\"mobile\"])\n                  {\n                    orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  }\n                });\n              }\n            }\n\n            if(cartcontent.giftwrapsByCartId)\n            {\n                let giftobj = cartcontent.giftwrapsByCartId.nodes;\n                giftobj.forEach(gift => {\n                    orderobj['giftmessage'] = gift.message\n                })\n            }\n        }\n        orders_arr.push(orderobj)\n    });\n    \n    setOrders(orders_arr)\n    setFilteredorder(orders_arr)\n  }\n  async function getmaster(getmaster)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes)\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\n\n        \n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem('pagepermissions')\n    if(pagepermission.indexOf('/orderlist') > -1)\n    {\n      setIswrite(true)\n\n    }else\n    {\n      setIswrite(false)\n    }\n    getmaster()\n  }, [])\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n        \n     \n    };\n\n    getmaster()\n    getorders()\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Orders\n          </Typography>\n          </Grid>\n          \n    </Grid> */}\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\n    {filteredorder ? <Results\n      className={classes.results}\n      orderstatus={paymentstatus}\n      paymentstatus={orderstatus}\n      iswrite={iswrite}\n     orders={filteredorder}\n     onupdate={updateorder}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    /> : null }\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport { ORDERS } from '../../services/queries';\n\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n    let user_id = props.location.pathname.split('/')[2];\n      \n    const { data, loading, error } = useQuery(ORDERS(user_id));\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    if(deleteid.length > 0)\n    {\n      let variables ={\n        elementId:deleteid[0]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    if(deleteid.length > 1)\n    {\n      let variables ={\n        elementId:deleteid[1]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    setgemlist([])\n\n    setDeleteid([])\n    getgemlist()\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n\n    let deleteids = [];\n    deleteids.push(diamondData.costprice.id)\n    deleteids.push(diamondData.sellprice.id)\n\n     setDeleteid(deleteids)\n     setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata ={}\n    bodydata['material'] = makingcontent.metal.name;\n    bodydata['weight_start'] = makingcontent.weightstart;\n    bodydata['weight_end'] = makingcontent.weightend;\n    bodydata['price_type'] = makingcontent.pricetype.label;\n    bodydata['vendor_code'] = props.vendor;\n    bodydata['purity'] = makingcontent.purity.shortCode;\n    bodydata['cost_price'] = makingcontent.costPrice;\n    bodydata['selling_price'] = makingcontent.sellingprice;\n    bodydata['isadd'] = true\n\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\n\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     setOpen(false)\n     getmclist()\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds vendor={vendorcode}/>\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Component', label: 'Components' },\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    \n    setIsconformation(true);\n  }\n\n\n async function updatemarkup(markupcontent,refetch)\n  {\n    var bodydata = {}\n    bodydata['category'] = markupcontent.category.name;\n    bodydata['producttype'] = markupcontent.producttype.name;\n    bodydata['sellingPriceMin'] = markupcontent.sellpricemin\n    bodydata['sellingPriceMax'] = markupcontent.sellpricemax\n    bodydata['markuptype'] = markupcontent.markuptype.label\n    bodydata['markupValue'] = markupcontent.markup\n    bodydata['material'] = pricecomponent\n    console.log(\"XXXXXXXX\")\n    await sendNetworkRequest('/addmarkup', {}, bodydata)\n    setOpen(false)\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     refetch()\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\nconst handlecomponentChange = type => (event, value) => {\n  \n  setPriceomponent(value)\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={3}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n     <Grid item xs={3}> \n          \n     <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                     defaultValue={pricecomponent}\n                    options={[\"Diamond\",\"Gem Stone\",\"Gold\",\"Making Charge\"]}\n                    onChange={handlecomponentChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Pricing Components\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    // error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n       </Grid> \n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"   size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": pricecomponent}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                title={\"Are you sure to delete?\"} \n                                positivebtn={\"Yes\"} \n                                negativebtn={\"No\"} \n                                message={\"\"} \n                                refetch={refetch}\n                                onSuccess={handledelete}\n                                onCancel={hidedeleteconformation}\n                                isshow={isconformation} />\n                                {open ? <Addmarkup isadd={open} material={pricecomponent} refetch={refetch} actionSave={updatemarkup} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                <>\n                                  <TableRow key={row.category}>\n                                      <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                                </>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n       \n      </div>\n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n      if(type === 'materials')\n      {\n        let elements_arr = []\n        value.forEach(element => {\n          elements_arr.push(element.name)\n          \n        });\n        if(elements_arr.indexOf(\"Gold\") > -1)\n        {\n          setIsgold(true)\n        }else\n        {\n          setIsgold(false)\n        }\n\n        if(elements_arr.indexOf(\"Diamond\") > -1)\n        {\n          setIsdiamond(true)\n        }else\n        {\n          setIsdiamond(false)\n        }\n      }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n           options={voucherCtx.voucherMaster.diamondtypes}\n           onChange={handleoptionChange('diamondtype')}\n           value={attrobj.diamondtype}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen(prodskus)\n  {\n    setOpen(true)\n    setSelectskus(prodskus)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.title} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Chip,IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {palette} from '../../theme'\nimport Page from '../../components/Page'\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n \n  \n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  \n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      discountid : discount_id\n      }\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach(comp => {\n      comparr.push({\n        name: comp\n      })\n    })\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids)\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname:response.discunt.discount_name,\n      discountvalue:response.discunt.discount_value,\n      discounttype:response.discunt.discount_type,\n      discounttitle:response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes)\n    })\n    setIsloaded(true)\n  }\n  async function creatediscount(ispricerun)\n  {\n   let skuarray  = []\n    while(skus.length > 0)\n    {\n        let sku_content = skus.splice(0,25000)\n        skuarray.push(sku_content)\n    }\n    if(errorskus.length > 0 )\n    {\n      alert(\"Some skus are overlapping\")\n    }else{\n     \n    let discount_count = 0\n   setIsloading(true)\n      updatediscount(discount_count)\n     async function updatediscount()\n      {\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      discountname : attributeobj.discountname,\n      discounttitle : attributeobj.discounttitle,\n      product_attributes: productattr,\n      product_attributes_text : productattrtext,\n      skus : skuarray[discount_count]\n    }\n    console.log(JSON.stringify(productattr))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n   \n    discount_count = discount_count + 1\n    if(skuarray.length > discount_count)\n    {\n      setLoadingtitle(skus.length+\" Left\")\n      updatediscount(discount_count)\n    }else{\n      setIsloading(false)\n      setOpen(true)\n      setIsshowpriceupdate(false)\n\n     window.location='/salediscountlist'\n\n    }\n  }\n  }\n}\nconst handleDelete = chipToDelete => () => {\n  //setProducts([]) \n  let errorindex =  errorskus.indexOf(chipToDelete)\n  if(errorindex > -1)\n  {\n    errorskus.splice(errorindex,1)\n    var erroritems = []\n    errorskus.forEach(itemname =>{\n      erroritems.push(itemname)\n    })\n   setErrorskus(erroritems) \n  }\n  let index = products.indexOf(chipToDelete)\n  products.splice(index,1)\n  var items = []\n  products.forEach(itemname =>{\n    items.push(itemname)\n  })\n setProducts(items) \n\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setErrorskus(response.eror_skus)\n   setIsloading(false)\n   setTitlecontent(response.title)\n    \n  }\n  async function updateprices()\n  {\n    alert('i am here')\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id : products\n    }\n    setIsshowpriceupdate(true)\n\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n     \"component\":\"updateskuprice\"\n    }\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n \n   setStatusmessage(response.message)\n   }\n  function attributeadded( value)\n  {\n  let componentsstring = {}\n  let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      componentsstring[key] = {\n        values : values,\n        alias : alias_arr\n      }\n      let displaytext = key + ' : ' + attrs.join(' , ')\n      display_arr.push(displaytext)\n    })\n    setProductattr(componentsstring)\n    setProductattrtext(display_arr.join(' | '))\n   //alert(JSON.stringify(componentsstring))\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n  {\n    let discount_id = props.location.pathname.split('/')[2];\n    setDiscount_id(discount_id)\n    getdiscountvalue(discount_id)\n\n  }else\n  {\n    setIsloaded(true)\n  }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title={loadingtitle} isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {!discount_id ?\n    <>\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n    {products.length > 0 ? <Products  title={titlecontent} products={errorskus} /> : null }\n  {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n   \n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\n    {!isshowpriceupdate ? <>\n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\n         \n      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n      </>:null} \n    </Grid>\n    </Grid>\n    </> : \n        <Grid container xs={12} spacing={2} >\n            <Grid item xs={6} style={{marginTop:16}} >\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Name\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discountname}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Title\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttitle}\n\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Value\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttype == 2 ? attributeobj.discountvalue+ \"%\" : attributeobj.discountvalue}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Pricing Compponent\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.displaycomp}\n\n            </Typography>\n            </Grid>\n            </Grid>\n            \n            {attributeobj.allkeys ? <Grid item xs={6} style={{marginTop:16}} >\n                   {attributeobj.allkeys.map((row, index) => (\n                     <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          {row}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.attributes[row].values}\n                        </Typography>\n                       </Grid>\n                  ))}  \n                  <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          Total Sku\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.skucount}\n                        </Typography>\n                       </Grid>\n            </Grid> : null}\n                      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n                      {!isshowpriceupdate ? <>\n         \n      {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n      </>:<> {statusmessage}<IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\n                            <RefreshIcon />\n                          </IconButton></>} \n                        \n                        \n      </Grid>\n      </Grid>\n} \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor.toLowerCase() ? x.diamondColor.toLowerCase().match(taxcontent+ \".*\") : null ||\n      x.diamondClarity.toLowerCase() ? x.diamondClarity.toLowerCase().match(taxcontent+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addtaxattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\nimport Attributescontent from './Attributescontent/Attributescontent';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n     <Attributescontent title= {\"Shipment Settings II\"} \n        masters={[]}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercategories = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercategories;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor.toLowerCase() ? x.diamondColor.toLowerCase().match(taxcontent+ \".*\") : null ||\n      x.diamondClarity.toLowerCase() ? x.diamondClarity.toLowerCase().match(taxcontent+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor.toLowerCase() ? x.diamondColor.toLowerCase().match(taxcontent+ \".*\") : null ||\n      x.diamondClarity.toLowerCase() ? x.diamondClarity.toLowerCase().match(taxcontent+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport data from \"./data.json\"\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Userconfiguration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            User and Roles Management\n          </Typography>\n    </Grid>\n    \n    {data.options.map((menu, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={menu.url}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {menu.title}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Userconfiguration;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport Addpermissions from '../../components/Addpermissions/Addpermissions';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterroles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false)\n  const [masterpages, setMasterpages] = React.useState([])\n  const [editroleid, setEditroleid] = React.useState('')\n  const [editpermissons, setEditpermissions] = React.useState({})\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n\n    let response =  await sendNetworkRequest('/manageroles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n    setMastervalue(response.roles)\n    setFiltervalue(response.roles)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  async function showpermissions(rowcontent)\n  {\n    let response =  await sendNetworkRequest('/getrolepermissions', {}, {role_id: rowcontent.id})\n    setEditpermissions(response.permissions)\n    setEditroleid(rowcontent.id)\n    setIsshowpermissions(true)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent)\n  {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id : editroleid\n    }\n    console.log(JSON.stringify(bodydata))\n    setIsshowpermissions(false)\n    let response =  await sendNetworkRequest('/managepermissions', {}, bodydata)\n     getmaster()\n\n    \n  }\n  function cancelpermissions(rowcontent)\n  {\n    setIsshowpermissions(false)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n       <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? <Addpermissions role_id={editroleid} isopen={isshowpermissions} permissions={editpermissons} pages={masterpages} onClose={cancelpermissions} onSave={updatepermissions} /> : null}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onPermissionadd={showpermissions} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterroles;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterscreens = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  \n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managepages', {}, taxcontent)\n    getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes)\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Screens\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns}  values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterscreens;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageadminusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster()\n  }\n  async function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getadminusers', {}, {})\n    let adminusers = response.users;\n    let users = []\n    adminusers.forEach(element => {\n        let userobj = {}\n        userobj['id'] = element.id;\n        userobj['username'] = element.username;\n        userobj['password'] = element.password;\n        userobj['email'] = element.email;\n        userobj['mobile'] = element.mobile;\n        userobj['status'] = element.status === 'Active' ? true : false;\n        let roles = []\n        let rolesnames = []\n\n        let userroles = element.user_roles;\n        userroles.forEach(userroleobj => {\n\n          let roleobj = {}\n          roleobj['id'] = userroleobj.master_role.id\n          roleobj['name'] = userroleobj.master_role.name\n          roles.push(roleobj)\n          rolesnames.push(userroleobj.master_role.name)\n        })\n        userobj['roles'] = roles\n        userobj['rolenames'] = rolesnames.join(' , ')\n        users.push(userobj)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs url=\"/userconfiguration\" name=\"userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Admin Users\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageadminusers;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    if(element.shortCode == 'All')\n    {\n      mastervendors.forEach(element => {\n        vendorid.push(element.shortCode)\n      })\n      setSelectedvendors(vendorid)\n    }else{\n      vendorid.push(element.shortCode)\n      setSelectedvendors(vendorid)\n\n    }\n   })\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      var sellingprice = goldprice.selling_price\n      if(pricetype.value == 2) \n      {\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\n       \n      }\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*sellingprice\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                  disableClearable={true}\n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <Page\n    //   className={classes.root}\n    //   title=\"Customer Management Details\"\n    // >\n    //   <Header />\n    //    <Tabs\n    //     className={classes.tabs}\n    //     onChange={handleTabsChange}\n    //     scrollButtons=\"auto\"\n    //     value={tab}\n    //     variant=\"scrollable\"\n    //   >\n    //     {tabs.map(tab => (\n    //       <Tab\n    //         key={tab.value}\n    //         label={tab.label}\n    //         value={tab.value}\n    //       />\n    //     ))}\n    //   </Tabs>\n    //   <Divider className={classes.divider} />\n    //  {/* <div className={classes.content}>\n    //     {tab === 'summary' && <Summary />}\n    //     {tab === 'invoices' && <Invoices />}\n    //     {tab === 'logs' && <Logs />}\n    //   </div> */}\n    // </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Phone</TableCell>\n               <TableCell>{customer.mobile}\n               {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>}\n                </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>State/Region</TableCell>\n              <TableCell>{customer.address && customer.address.city}</TableCell>\n            </TableRow>\n            <TableRow >\n              <TableCell>Country</TableCell>\n              <TableCell>{customer.address && customer.address.country}</TableCell>\n            </TableRow>\n            {/* <TableRow>\n              <TableCell>Address 1</TableCell>\n              <TableCell>{customer.address}</TableCell>\n            </TableRow> */}\n            <TableRow>\n              <TableCell>Pincode</TableCell>\n              <TableCell>{customer.address && customer.address.pincode}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nconst master_options = ['Address Book','Wish List','Orders']\n  const master_options_url = ['/address','/userwishlist','/orderlist']\n\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    // history.push(`orderlist/${id}`)\n    window.location.href = `orderlist/${id}`\n  }\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid> */}\n    <Grid container item xs={12} sm={12} lg={12} >\n    <Grid  item xs={12} sm={6} lg={6} >\n    <General customer ={customer} /> \n\n      </Grid>\n\n    </Grid>\n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={2} lg={2} >\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\n     <Card fullwidth\n    //  onClick={(e) => ProductEdit(customer.id)}\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <div className={classes.root}>\n      \n    //   <Tabs\n    //     orientation=\"vertical\"\n    //     variant=\"standard\"\n    //     value={value}\n    //     onChange={handleChange}\n    //     aria-label=\"Vertical tabs example\"\n    //     className={classes.tabs}\n    //   >\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n    //   </Tabs>\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\n    //   <General customer ={customer} /> </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n    //   </TabPanel>\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n    //   </TabPanel>\n      \n     \n    // </div>\n  );\n});\n\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Userwishlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Useraddresses = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.hsnNumber}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Tax Settings\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addtaxattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n    let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\n    //  getmaster()\n     history.push('/taxsettings')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TAXMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n\n            var selectedcategory = []\n            \n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories)\n              {\n                if(categories.indexOf(catobj.alias) > -1)\n                {\n                  selectedcategory.push(catobj)\n                }\n              }\n              \n\n            })\n\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addtaxattributes;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {NetworkContext}  from '../../context/NetworkContext';\n\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\nimport data from \"../menupages.json\"\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload,setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem('accesspages')\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  const handleClick = type => e => {\n    if(type === 'Pricing')\n    {\n      setGlobalCtx({ ...globalCtx, \"optionname\": type,selectedIndex: 5 , isExpand: !globalCtx.isExpand})\n\n    }else{\n      setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: false})\n\n    }\n\n  }\n  async function getmasterpages()\n  {\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n   // setPages(pageaccess)\n  // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n   //setIsreload(true)\n\n   localStorage.setItem('accesspages', pages);\n   localStorage.setItem('pagepermissions', pagepermissions);\n\n    window.location.reload()\n  }\n  React.useEffect( () => {\n   //alert(globalCtx.accesspages)\n   if(!accesspages)\n   {\n   // getmasterpages()\n\n   }else{\n   //  setIsreload(true)\n   }\n //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n},[])\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          {\n            data.menus.map((menuobj, index) => (\n              <>\n             {menuobj.submenu  ?  \n             <>\n          {accesspages && accesspages.indexOf(menuobj.url) > -1 ?\n              <>\n             <ListItem button  onClick={handleClick(menuobj.name)}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary={menuobj.name} />\n              {globalCtx.isExpand  && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n            {menuobj.submenu.map((submenuobj, subindex) => (\n              <>\n              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ?\n                          <Link underline='none' component={RouterLink} to={submenuobj.url}>\n              <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === subindex} onClick={event => handleListItemClick(event, subindex)}>\n                <ListItemIcon>\n                  <StarBorder />\n                </ListItemIcon>\n                <ListItemText primary={submenuobj.name} />\n              </ListItem>\n              </Link> : null }\n\n              </>\n            ))}\n\n            </List>\n            </Collapse> </>: null}\n            </>\n             :<> {accesspages && accesspages.indexOf(menuobj.url) > -1 ?\n              <Link underline='none' component={RouterLink} to={menuobj.url}>\n              <ListItem button key={\"Product List\"} selected={globalCtx.optionname === menuobj.name} onClick={handleClick(menuobj.name)} >\n              <ListItemIcon><InboxIcon /> </ListItemIcon>\n                <ListItemText primary={menuobj.name} />\n              </ListItem>\n              </Link> : null\n             } </>}\n              </>\n            ))\n          }\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n      {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\")\n    window.location = '/'\n  }\n\n  \n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata['diamondSettings'] = productCtx.diamondsettings.name\n          bodydata['diamondShape'] = productCtx.diamondshape.name\n          bodydata['stoneCount'] = productCtx.diamondcount;\n          bodydata['stoneWeight'] = productCtx.diamondweight;\n          bodydata['diamondid'] = id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n      console.log(\"------******\")\n      console.log(JSON.stringify(bodydata))\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      // setSnackMessage({\n      //   ...snackMessage,\n      //   message:\"This is successfully saved\",\n      //   severity:\"success\"\n      // })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table>         \n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n async function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          bodydata['gemstoneSetting'] = productCtx.gemstonesettings.name\n          bodydata['gemstoneShape'] = productCtx.gemstoneshape.name\n          bodydata['stoneCount'] = productCtx.gemstonecount;\n          bodydata['gemstoneSize'] = productCtx.gemstonesize;\n          bodydata['stoneWeight'] = productCtx.gemstoneweight;\n          bodydata['id'] = id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      discount:diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n\n          skulistdata.discountDesc =  productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['discount'] = productCtx.discount;\n\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n\n        {props.displycolumns.indexOf('Quantity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.availableStockQty}\n                    id=\"qty\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"Qty\"\n                    label=\"Quantity\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('available_stock_qty')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.availableStockQty}</Typography>\n\n                  } </TableCell> : null}\n\n{props.displycolumns.indexOf('Discount') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.discount}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('discount')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.discountDesc}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.costPrice = productCtx.editcostprice;\n          skulistdata.costPriceTax = productCtx.editcostpricetax;\n          skulistdata.sellingPrice =  productCtx.editsellingprice;\n          skulistdata.sellingPriceTax = productCtx.editsellingpricetax\n          skulistdata.markupPrice = productCtx.editmarkupprice\n          skulistdata.markupPriceTax = productCtx.editmarkuppricetax\n          skulistdata.discountPrice = productCtx.editdiscountprice\n          skulistdata.discountPriceTax = productCtx.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(productCtx.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(productCtx.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(productCtx.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(productCtx.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(productCtx.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(productCtx.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(productCtx.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(productCtx.editdiscountpricetax)\n           bodydata['marginOnSalePercentage'] = parseFloat(productCtx.marginOnSalePercentage)\n\n           bodydata['generatedSku'] = id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n\n      sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  \n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                }  </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                {props.displycolumns.indexOf('View') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n\n<Button variant=\"outlined\" color=\"primary\" onClick={(e) => props.onShow(row.generatedSku)}>Summary\n</Button> </TableCell>: null }\n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">{props.title ? props.title : \"Variants Table\"} </h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { makeid } from '../../utils/commonmethod';\n\nimport {Paper,    Card,CardHeader,\n  CardContent,\nGrid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport \"./upload.css\"\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\"\n},\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\n},\nformContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30\n}\n\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = props.prod_id;\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach(imgobj => {\n      if(props.color === imgobj.productColor)\n      {\n        image_count = image_count + 1;\n        if(imgobj.productId)\n        {\n          product_id = imgobj.productId\n\n        }\n        // setTotalimages(image_count)\n      }\n  })\n  async function uploadimagetoserver(fileobj,filetype, imagename, prodid, imagecontent, isedit,position)\n  {\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:filetype, filename :imagename, product_id: prodid },false)\n        var returnData = responsedata.data.returnData;\n        var signedRequest = returnData.signedRequest;\n       \n        var url = returnData.url;\n        var filepathname = returnData.filepath\n        filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n        var options = {\n            headers: {\n                'Content-Type': filetype,\n                'Access-Control-Allow-Origin':'*'\n            }\n        };\n        if(isedit)\n        {\n          imagecontent['imageUrl'] = filepathname.replace(\"jpeg\",\"jpg\")\n\n        }else{\n          const imageobj = {\n            \"name\": (product_id+\"_\"+(image_count+1)+props.color.charAt(0)),\n            \"imagePosition\":(image_count+1),\n            \"productColor\":props.color,\n            \"productId\":product_id,\n            \"imageUrl\":filepathname.replace(\"jpeg\",\"jpg\"),\n            \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n          } \n          imagecontent = imageobj;\n        }\n        if(!isedit)\n      {\n        var productimgs = [];\n        productimages.forEach(img => {\n          productimgs.push(img)\n        })\n        productimgs.push(imagecontent)\n      }\n    let res =   await axios.put(signedRequest, fileobj, options)\n    let responsecontent = await sendNetworkRequest('/updateproductimage', {}, {imageobj:imagecontent, isedit: isedit },false)\n      image_count =  image_count + 1;\n      if(isedit)\n      {\n      }else{\n      setProductimages(productimgs)\n      }\n\n  }\n  const handlenewAssetChange =  (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => { \n      // const size = files[index].size;\n      var imagecount  = 1;\n      if(productimages)\n      {\n        imagecount = image_count + 1;\n      }\n      let imagename = (product_id+\"-\"+(imagecount)+props.color.charAt(0));\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n     \n      uploadimagetoserver(files[index],fileType,imagename,product_id,{}, false)\n\n\n        \n    })\n  }\n  const handleAssetChange =  (e,imageposition, category, endPoint) => {\n    const files = e.target.files;\n      Object.keys(files).map((file, index) => { \n        const size = files[index].size;\n        let productimageobj = {}\n        productimages.forEach(content => {\n          if(content.productColor === props.color && imageposition === content.imagePosition)\n          {\n            productimageobj = content;\n          }\n        })\n        var prodid = productimageobj.productId;\n        var prodcolor = productimageobj.productColor;\n        var imagecount  = 1;\n      let randomnum =  makeid(1,\"\",1)\n        if(productimages)\n        {\n        //  imagecount = image_count + 1;\n        }\n        let imagename = (prodid+\"-\"+(imageposition)+randomnum+prodcolor.charAt(0));\n        const fileParts = files[index].type.split(\"/\");\n        const fileType = fileParts[1];\n        //alert(imagename)\n        uploadimagetoserver(files[index],fileType,imagename,prodid,productimageobj, true)\n       // alert(imagename)\n      });\n  };\n\n  return (\n    <Paper className={classes.root} >\n       <Card className={classes.card}>\n       <CardHeader\n       \n        title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color}\n      />\n                        <CardContent>\n                            <Grid container spacing={2} className={classes.styleFile}>\n                          \n                            {productimages.map(url => (\n                             <>\n                             {props.color === url.productColor  ? \n                               <div style={{ position: \"relative\" }}>\n                                 \n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\n                                                \n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\n                                                          <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handleAssetChange(e,url.imagePosition, \"\", \"\"\n                                                        )}\n\n                                                                ></input>\n                                                      \n                                                            <img src={\"https://styloriimages.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\n                                                    \n                                                </Grid>\n                                                <Typography style={{textAlign: \"center\"}}  variant=\"h5\"> {url.imagePosition} </Typography>\n\n                                                <Typography style={{textAlign: \"center\"}} variant=\"h6\"> {url.ishover ? 'hover' : ''} </Typography>\n\n\n                          </div> : null }\n                                </> \n                              ))}   \n                                <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\",textAlign: \"center\", position: \"relative\" }} className=\"container\">\n                            {\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handlenewAssetChange(e\n                                                                    )}\n                                                                ></input>\n                                                            </label>)\n                                                        }\n                              </Grid>                      \n                            </Grid>\n                            \n                      </CardContent>\n                </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n      \n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n         \n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\nimport columnnames from './columnnames.json';\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('lg');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose()\n  };\n\n  return (\n    <div>\n      \n      <Dialog\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\n        <DialogContent>\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\n        </DialogContent>\n        <DialogActions>\n       \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SortHeader from './Components/SortHeader';\nimport columnnames from './columnnames.json';\nimport Productimages from './Productimages'\nimport FullLoader from '../../components/Loader'\nimport Pricedetails from './Pricedetails'\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { sk } from 'date-fns/locale';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.pricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(columnnames.defaultpricingnames);\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\n\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\n// const handleinputChange = type => (event, value) => {\n//   alert(event.target.value)\n//       setProductCtx({ ...productCtx, [type]: value})\n// }\n  function dismisspricesummary()\n  {\n    setIsshowpricesummary(false)\n  }\nfunction getColumnnames(columnnames,displytype) {\n  let displycolumns = [];\n  let displycolumnnames = [];\n\n    columnnames.forEach(element => {\n      displycolumnnames.push(element.name)\n      displycolumns.push(element)\n    })\n  if(displytype === 1)\n  {\n    setDisplycolumns(displycolumnnames)\n    setVarientcolumns(columnnames)\n  }else{\n    setPricingcolumns(columnnames)\n    setDisplypricingcolumns(displycolumns)\n    setDisplycolumnnames(displycolumnnames)\n  }\n    \n   \n\n}\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\n\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = name => async event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      \"productid\": prod_id,\n      \"isactive\" : event.target.checked\n    }\n    let esbody = {\n      \"product_id\": prod_id\n    }\n    var endpoint = '/reindex'\n    if(event.target.checked)\n    {\n      endpoint = '/esearch_forceindex'\n    }\n    let response =  await sendNetworkRequest('/disableproduct', {}, bodycontent)\n\n    let esresponse =  await sendNetworkRequest(endpoint, {}, esbody)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(bodycontent))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n        // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  };\n async function showpricesummary(sku)\n  {\n    let response =  await sendNetworkRequest('/viewskupricesummary/'+sku, {}, null)\n    let price_summary = []\n    let skuprice = response.price_summary.skuprice;\n    // let cost_obj = {\n    //   component: \"Cost Price\",\n    //   price : skuprice.cost_price - skuprice.cost_price_tax,\n    //   tax : skuprice.cost_price_tax,\n    //   total : skuprice.cost_price\n\n    // }\n    // price_summary.push(cost_obj)\n\n    // let selling_price = {\n    //   component: \"Selling Price\",\n    //   price : skuprice.selling_price ,\n    //   tax : skuprice.selling_price_tax,\n    //   total : skuprice.selling_price\n\n    // }\n    // price_summary.push(selling_price)\n    // let discount_price = {\n    //   component: \"discount Price\",\n    //   price : skuprice.discount_price ,\n    //   tax : skuprice.discount_price_tax,\n    //   total : skuprice.discount_price\n\n    // }\n    // price_summary.push(discount_price)\n    // let markup_price = {\n    //   component: \"markup Price\",\n    //   price : skuprice.markup_price ,\n    //   tax : skuprice.markup_price_tax,\n    //   total : skuprice.markup_price\n\n    // }\n\n    let metalprice = response.price_summary.metals;\n    metalprice.forEach(element => {\n        let obj = {\n          component : element.material_name,\n          cost_price : element.cost_price,\n          selling_price : element.selling_price,\n          markup_price : element.markup,\n          discount_price : element.discount_price\n\n\n        }\n        price_summary.push(obj)\n    })\n\n    let mateialprice = response.price_summary.materials;\n    mateialprice.forEach(element => {\n        let obj = {\n          component :  element.material_name,\n          cost_price : element.cost_price,\n          selling_price : element.selling_price,\n          markup_price : element.markup,\n          discount_price : element.discount_price\n\n\n        }\n        price_summary.push(obj)\n    })\n    let obj = {\n      component : \"SKU Price\",\n      cost_price : skuprice.cost_price,\n      selling_price : skuprice.selling_price,\n      markup_price : skuprice.markup_price,\n      discount_price : skuprice.discount_price\n\n\n    }\n    price_summary.push(obj)\n//alert(JSON.stringify(metalprice))\n //   price_summary.push(markup_price)\n    setPricesummaryvalue(price_summary)\n    setIsshowpricesummary(true)\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id }  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient\n        let sizes_arr = []\n        if(size_obj)\n        {\n          let sizes = size_obj.split(',')\n          sizes.forEach(element => {\n            \n            sizes_arr.push(element)\n          });\n        }\n        let gender_arr = []\n        if(genders)\n        {\n        genders = genders.split(',')\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n      }\n        let defaultcolour = \"\";\n       var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes\n       images_arr.forEach(element => {\n          if(element.isdefault)\n          {\n            defaultcolour = element.productColor\n          }\n      });\n      var metalcolors = []\n      Array.prototype.insert = function ( index, item ) {\n        this.splice( index, 0, item );\n    };\n     let metalcolor =  fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes\n     metalcolor.forEach(colorobj => {\n          if(colorobj.productColor === defaultcolour)\n          {\n            colorobj['isdefault'] = true\n            metalcolors.insert(0, colorobj);\n\n          }else\n          {\n            colorobj['isdefault'] = false\n            metalcolors.push(colorobj)\n          }\n     })\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          productvendorcode:fatchvalue.data.productListByProductId.productVendorCode,\n          height:fatchvalue.data.productListByProductId.height,\n          width:fatchvalue.data.productListByProductId.width,\n          length:fatchvalue.data.productListByProductId.length,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n        setLoadopen(false)\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n           <Grid container>\n             <FullLoader title=\"Getting Product Details\" isopen={loadopen}/>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n   <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Product Vendor Code\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.productvendorcode ? productCtx.productvendorcode : \"\"}\n                        id=\"productvendorcode\"\n                       \n                        name=\"Product Vendor Code\"\n                        />\n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"seo_text\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"seo_text\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productmaterials}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Divider marginTop={2}/>\n                       \n                       <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Height\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.height ? productCtx.height : \"\"}\n                        id=\"Height\"\n                       \n                        name=\"Height\"\n                        />\n              <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Width\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.width ? productCtx.width : \"\"}\n                        id=\"productvendorcode\"\n                       \n                        name=\"Width\"\n                        />\n                        <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Length\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.length ? productCtx.length : \"\"}\n                        id=\"productvendorcode\"\n                       \n                        name=\"Length\"\n                        />\n                    {productCtx.product_type == \"Earrings\" &&    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />}\n              <FormControlLabel\n                                label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n\n                  control={\n                    <Switch checked={productCtx.isactive} onChange={handledisableproduct('isactive')} value=\"checkedA\" />\n                  }\n                />\n              \n              \n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Update\n             </Button>\n                {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n              </Grid>\n            </Grid>\n              \n              </Grid>\n             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\n\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n                  \n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \n              <SortHeader title={\"Pricing Table\"} columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n              </Button>\n            </Grid>\n              {isshowpricesummary ? <Pricedetails onClose={dismisspricesummary} values={pricesummaryvalues}/> : null}\n              <Skupricing variants={productCtx.variants} onShow={showpricesummary} columns={displypricingcolumns} displycolumns={displycolumnnames} />\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n              {productCtx.productMetalColor.map(colors => (\n                    <Productimages color={colors.productColor} isdefault={colors.isdefault  } prodimages={productCtx.product_images} prod_id = {prod_id} />\n\n              ))}\n            \n            </Grid>\n            \n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport {\n    Dashboard, Login, Productupload, Configuration,Manageusers,Customerdetails,\n    Priceupdate, Vendorprice, Vendorlist, Markupprice,Goldpriceupdate,Userwishlist,\n    Productlist, Materiallist, Masterorderstatus, Shippingzones,Manageadminusers,\n    Shipmentsettings,Addshippingattributes,Userconfiguration,Masterroles,Masterscreens,Useraddresses,Addtaxattributes,\n    Materialmaster, CategoryList, Mastermetalcolors, Masterpurities, Masterdesigns, Shippingattributes, Voucherdiscount, Masterstyles, Masterthemes, Masteroccassions, Masterpaymentstatus, Salediscount, Masterweights, Taxsettings, Masterstones, Masterstonecolors, Masterstoneshapes, Masterattribute, Mastercategories, OrderList, Mastergemsettings, Seopriority, Mastergenders, Mastergemshapes, Mastergemtypes, Earringbacking, Masterproducttypes, Masterdiamondshapes, Taxsetup, Masterdiamonds, Masterdiamondsettings, DiscountList, VoucherdiscountListing, Mastercollections, Masterpages\n} from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport { NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext, ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return (\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute path={route.productupload} component={Productupload} />\n                    <PrivateRoute path={route.configuration} component={Configuration} />\n                    <PrivateRoute path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute path={route.productlist} component={Productlist} />\n                    <PrivateRoute path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n                    <PrivateRoute path={route.producttypes} component={Masterproducttypes} />\n                    <PrivateRoute path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute path={route.orderlist} component={OrderList} />\n                    <PrivateRoute path={route.userorders} component={OrderList} />\n                    <PrivateRoute path={route.address} component={Useraddresses} />\n\n              \n                    <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n                    <PrivateRoute path={route.markupPrice} component={Markupprice} />\n                    <PrivateRoute path={route.salediscount} component={Salediscount} />\n                    <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n                    <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n                    <PrivateRoute path={route.category} component={Mastercategories} />\n                    <PrivateRoute path={route.masterattributes} component={Masterattribute} />\n                    <PrivateRoute path={route.masterstones} component={Masterstones} />\n                    <PrivateRoute path={route.masterstonecolors} component={Masterstonecolors} />\n                    <PrivateRoute path={route.masterstoneshapes} component={Masterstoneshapes} />\n                    <PrivateRoute path={route.weights} component={Masterweights} />\n                    <PrivateRoute path={route.masteroccassions} component={Masteroccassions} />\n                    <PrivateRoute path={route.masterroles} component={Masterroles} />\n                    <PrivateRoute path={route.masterpages} component={Masterscreens} />\n                    <PrivateRoute path={route.manageadminusers} component={Manageadminusers} />\n                    <PrivateRoute path={route.goldpriceupdate} component={Goldpriceupdate} />\n                    <PrivateRoute path={route.manageusers} component={Manageusers} />\n                    <PrivateRoute path={route.customerdetails} component={Customerdetails} />\n                    <PrivateRoute path={route.userwishlist} component={Userwishlist} />\n\n                    \n                    \n                    <PrivateRoute path={route.userconfiguration} component={Userconfiguration} />\n\n                    <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n                    <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n\n                    <PrivateRoute path={route.mastermaterial} component={Materialmaster} />\n                    <PrivateRoute path={route.mastercolors} component={Mastermetalcolors} />\n                    <PrivateRoute path={route.masterpurities} component={Masterpurities} />\n                    <PrivateRoute path={route.salediscountlist} component={DiscountList} />\n                    <PrivateRoute path={route.voucherdiscountlist} component={VoucherdiscountListing} />\n                    <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n                    <PrivateRoute path={route.mastercollections} component={Mastercollections} />\n                    <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n                    <PrivateRoute path={route.masterdiamonds} component={Masterdiamonds} />\n                    <PrivateRoute path={route.diamondsettings} component={Masterdiamondsettings} />\n                    <PrivateRoute path={route.diamondshapes} component={Masterdiamondshapes} />\n                    <PrivateRoute path={route.earringbacking} component={Earringbacking} />\n                    <PrivateRoute path={route.gemsettings} component={Mastergemsettings} />\n                    <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n                    <PrivateRoute path={route.masterpaymentstatus} component={Masterpaymentstatus} />\n                    <PrivateRoute path={route.masterorderstatus} component={Masterorderstatus} />\n                    <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n                    <PrivateRoute path={route.shippingattributes} component={Shippingattributes} />\n                    <PrivateRoute path={route.addshippingattributes} component={Addshippingattributes} />\n                    <PrivateRoute path={route.addtaxattributes} component={Addtaxattributes} />\n\n\n                    \n\n                    <PrivateRoute path={route.gender} component={Mastergenders} />\n                    <PrivateRoute path={route.seo} component={Seopriority} />\n\n\n                    <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n                    <PrivateRoute exact path={route.editdiscount} component={Salediscount} />\n\n                    <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />\n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />\n                    <PrivateRoute path={route.shipmentsettings} component={Shipmentsettings} />\n\n                </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}