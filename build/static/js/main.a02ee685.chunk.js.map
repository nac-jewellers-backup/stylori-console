{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","components/ProductFilter/ProductFilter.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","screens/Banners/banners.js","screens/Banners/styloribanner/components/stylorilandingpage.js","screens/Banners/styloribanner/styloribanner.js","screens/Banners/silverbanner/components/silverlandingpage.js","screens/Banners/silverbanner/silverbanner.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","orderdetails","userorders","userwishlist","address","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","addtaxattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","category","banners","styloribanner","silverbanner","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","ALLMARKUPPRICE","_templateObject9","DIAMONDPRICELIST","_templateObject10","CATGORYLIST","_templateObject11","MATERIALMASTER","_templateObject12","_templateObject13","SALEDISCOUNTS","_templateObject14","_templateObject15","VOUCHERDISCOUNTS","_templateObject16","METALMASTER","_templateObject17","MAKINGCHARGEPRICELIST","_templateObject18","GEMPRICELIST","_templateObject19","VOUCHERSTATUSEDIT","_templateObject20","_templateObject21","_templateObject22","DISCOUNTSTATUSEDIT","_templateObject23","DELETEMARKUPPRICE","_templateObject24","DELETEGOLDPRICE","_templateObject25","DELETESALEDISCOUNT","_templateObject26","DELETEVOUCHERDISCOUNT","_templateObject27","DELETEMAKINGCHARGE","_templateObject28","DELETEGEMCHARGE","_templateObject29","DELETEDIAMONDCHARGE","_templateObject30","PRODUCTDIAMONDTYPES","PRODUCTEDIT","ALLMASTERRINGSIZE","ALLSTYLORILANDINGBANNERS","ALLSTYLORISILVERLANDINGBANNERS","PRODUCTDESCRIPTIONEDIT","queries_templateObject","queries_templateObject2","ORDERS","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","size","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","useEffect","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_React$useContext2","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","handleChange","persist","target","type","checked","handleSubmit","signinobj","pageaccess","pages","pagepermissions","statuscode","setItem","accessToken","forEach","element","push","pageurl","is_write","history","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","initailRingSize","updateRingSize","_getMasterRingSize","then","res","allMasterRingsSizes","getMasterRingSize","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","image_url","axios","put","file","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","border","&:hover","typography","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","showproductdetails","_showproductdetails","prod_id","bodycontent","productid","filterparams","categoryname","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","Visibility_default","product_name","vendor_code","product_category","Switch","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","goBack","ArrowBackIos_default","drawer","header","buttonIcon","contentSection","contentSectionHeader","cursor","contentSectionContent","addButton","minAmount","maxAmount","radioGroup","actions","Filter","masters","onFilter","initialValues","company","mobile","version","commodity","_useState3","_useState4","_useState5","_useState6","setValues","handleoptionchange","Drawer","anchor","Close_default","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","searchcontent","setSearchcontent","Search_default","esm_Input_Input","disableUnderline","filterButton","filterIcon","ProductFilter","dataCSV","openFilter","setOpenFilter","components_Search_Search","pathname","react_csv","keyCSV","valueCSV","textDecoration","FilterList_default","components_Filter_Filter","Productlist","responseCSV","setMasters","setFilterparams","setDataCSV","_fetchCSVdata","responseData","keyData","_i","_Object$entries","_Object$entries$_i","res_json","entries","fetchCSVdata","components_ProductFilter_ProductFilter","filterobj","filtercontent","Product","Header","onAdd","inner","Results","CardActions","results","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","i","Math","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","_React$createElement","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","_callee4","_context4","href","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","anchorEl","setAnchorEl","Boolean","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","borderTop","Header_SortHeader","containergrid","columnobjs","orderdate","onupdate","_showorderdetails","orderurl","components_EnhancedTableHead_EnhancedTableHead","col","iswrite","showorderdetails","paymentmode","paymentstatus","orderstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","fail_reason","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","join","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","opts","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","filter","match","username","OrderList_components_Results_Results","showcolumns","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","closeButton","other","disableTypography","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","handleinputChange","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","readOnly","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","handleDelete","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","onDelete","Viewsku_DialogActions","Products","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","author","applyButton","EditContent","diamond","onApply","showpreview","setShowpreview","previewurl","toggleChecked","imageurl","previmagenames","previmages","moment","foldername","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","alt","src","small","oninit","imagecontainer","masterlist","setMasterlist","openedit","setOpenedit","aliasName","setaliasName","onCreate","Array","prototype","insert","setpreviewurl","_React$useState33","_React$useState34","_React$useState35","_React$useState36","toLowerCase","button_title","sort_id","filterOrder","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","toolbar","deleteButton","deleteIcon","OrderInfo","setOption","setPaymentstatus","setOrderstatus","user_profile","first_name","last_name","shopping_cart","cart_addresses","addressline2","state","country","contact_number","discounted_price","awb_number","giftwraps","payment_mode","select","OrderItems","react_perfect_scrollbar_lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","text_heading","text_content","final_total_text","OrderDetails","trans_sku_list","sku_weight","diamond_type","round","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","_fetchorderdetails","order_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","Materialmaster","Mastermetalcolors","Masterpurities","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings","Mastergemshapes","Mastergemtypes","Mastergenders","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","setFiltercontent","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","General","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","setInvoices","invoice","date","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Addtaxattributes","AttributesComponent_AttributesComponent","Banners","link_style","StyloriLandingPage","alllandingbanner","setalllandingbanner","web","createlandingbanner","setCreatelandingbanner","_styloribannerfetch","allStyloriBanners","styloribannerfetch","onChangeData","onsubmitvalue","create_banner_data","Number","now","toISOString","Styloribanner","stylorilandingpage","SilverLandingPage","allStyloriSilverBanners","Silverbanner","silverlandingpage","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","minHeight","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","selected","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","EditDiamond","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","DiamondSave","_DiamondSave","diamondobj","list_data","diamondListData","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","diamondType","settingData","shapeData","colSpan","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","pricerun","Skupricesync","_Skupricesync","productId","priceobj","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","ishover","aria-hidden","handlenewAssetChange","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","changeVariant","_saveProductEditItem","productEditItem","productName","prod_desc","fetchvalue","updateProductListByProductId","productList","prodDescription","_showpricesummary","sku","price_summary","skuprice","obj","material_name","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","handledesinputChange","materialName","esbody","endpoint","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a02ee685.chunk.js","sourcesContent":["const route = {\n  login: \"/login\",\n  dashboard: \"/dashboard\",\n  profile: \"/profile\",\n  productupload: \"/productupload\",\n  configuration: \"/Configuration\",\n  vendor: \"/vendorlist\",\n  productlist: \"/productlist\",\n  orderlist: \"/orderlist\",\n  orderdetails: \"/orderdetails/:id\",\n  userorders: \"/orderlist/:userid\",\n  userwishlist: \"/userwishlist/:userid\",\n  address: \"/address/:userid\",\n\n  materiallist: \"/material\",\n  mastermaterial: \"/materialmaster\",\n  mastercolors: \"/mastercolors\",\n  masterpurities: \"/masterpurities\",\n  salediscountlist: \"/salediscountlist\",\n  voucherdiscountlist: \"/voucherdiscountlist\",\n\n  producttypes: \"/producttypes\",\n  voucherdiscount: \"/voucherdiscount\",\n  salediscount: \"/salediscount\",\n  priceupdate: \"/priceupdate\",\n  productAttributes: \"/product_attributes\",\n  diamondDetails: \"/diamond_details\",\n  gemstoneDetails: \"/gemstone-details\",\n  variants: \"/variants\",\n  images: \"/images\",\n  createVariant: \"/create_variant\",\n  materiallistpage: \"/newmaterial\",\n  editCategory: \"/editcategory\",\n  vendorPrice: \"/vendorpricesetup\",\n  markupPrice: \"/markuppricesetup\",\n  taxsetup: \"/taxsetup\",\n  editdiscount: \"/salediscount/:id\",\n  editvoucher: \"/voucherdiscount/:id\",\n  masterstyles: \"/masterstyles\",\n  masterthemes: \"/masterthemes\",\n  masteroccassions: \"/masteroccassions\",\n  masterpaymentstatus: \"/paymentstatus\",\n  mastercollections: \"/collections\",\n  masterdesigns: \"/designs\",\n  masterorderstatus: \"/orderstatus\",\n  shippingzones: \"/zones\",\n  shipmentsettings: \"/shipmensettings\",\n  shippingattributes: \"/shippingattributes\",\n  masterdiamonds: \"/diamonds\",\n  diamondsettings: \"/diamondsettings\",\n  diamondshapes: \"/diamondshapes\",\n  earringbacking: \"/earringbacking\",\n  addshippingattributes: \"/addshippingattributes\",\n  addtaxattributes: \"/addtaxattributes\",\n  userconfiguration: \"/userconfiguration\",\n  masterroles: \"/masterroles\",\n  manageadminusers: \"/manageadminusers\",\n  goldpriceupdate: \"/goldpriceupdate\",\n\n  manageusers: \"/manageusers\",\n\n  masterpages: \"/masterpages\",\n\n  gemsettings: \"/gemstonesettings\",\n  gemshapes: \"/gemstoneshapes\",\n  gemtypes: \"/gemstonetypes\",\n  gender: \"/genders\",\n  seo: \"/seopriority\",\n  taxsettings: \"/taxsettings\",\n  masterattributes: \"/masterattributes\",\n\n  masterstones: \"/masterstones\",\n  masterstonecolors: \"/masterstonecolors\",\n  masterstoneshapes: \"/masterstoneshapes\",\n  weights: \"/weights\",\n  customerdetails: \"/customerdetails/:id\",\n\n  category: \"/categories\",\n\n  banners: \"/banners\",\n  styloribanner: \"/styloribanner\",\n  silverbanner : \"/silverbanner\"\n};\n\nexport default route;\n","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from \"graphql-tag\";\n\nconst PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterGenders {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        diamondClarity\n        diamondColor\n        id\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondsShapes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterThemes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        id\n        alias\n        name\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondClarities {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterVendors {\n      nodes {\n        id\n        name\n        shortCode\n        vendorDelivaryDays\n      }\n    }\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n      nodes {\n        productSeries\n        id\n      }\n    }\n    allMasterGemstonesTypes {\n      nodes {\n        alias\n        colorCode\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterGemstonesShapes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterEarringBackings {\n      nodes {\n        name\n        createdAt\n        alias\n        id\n        nodeId\n        updatedAt\n      }\n    }\n    allMasterGemstonesSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\nconst PRODUCTFILTERMASTER = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n        displayOrder\n      }\n    }\n  }\n`;\n\nconst ALLPRODUCTLIST = gql`\n  query {\n    allProductLists(first: 500) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLIST = (category) => gql`\n  query($Veiw: Int!, $Offset: Int!) {\n    allProductLists(first: $Veiw, offset: $Offset) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLISTS = gql`\n  query {\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\n      nodes {\n        vendorDelivaryDays\n        updatedAt\n        state\n        shortCode\n        partnerCategory\n        name\n        organization\n        gstNo\n        currency\n        createdAt\n        city\n        address\n      }\n      totalCount\n    }\n  }\n`;\n\nconst TaxList_1 = gql`\n  query {\n    allMasterTaxSettings {\n      nodes {\n        hsnNumber\n        taxName\n        taxValue\n        updatedAt\n        id\n      }\n      totalCount\n    }\n  }\n`; /*********** configuration query */\n\nconst TaxList = `\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      sgst\n      productAttributes\n      displayAttributes\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList = `\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL = `\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS = `\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      shortCode\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES = `\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER = `\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    alias\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER = `\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER = `\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER = `\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER = `\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER = `\nquery  {\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\n\nconst PAYMENTSTATUSMASTER = `\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS = `\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES = `\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES = `\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name\n    id\n    alias\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES = `\nquery{\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPAGES = `\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER = `\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING = `\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONES = `\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES = `\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES = `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`;\nconst ACTIVESHIPPINGZONES = `\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES = `\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS = `\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS = `\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES = `\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERATTRIBUTES = `\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    isTopMenu\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS = `\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES = `\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES = `\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER = `\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES = `\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      imageUrl\n        mobileImageUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        purity\n        vendorCode\n        updatedAt\n        sellingPriceType\n        sellingPrice\n        material\n        id\n        createdAt\n        costPrice\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDMARKUP = gql`\n  query MyQuery($vendorCode: String!) {\n    allPricingMarkups(condition: { material: $vendorCode }, orderBy: UPDATED_AT_DESC) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        markupValue\n        markupType\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\nconst ALLMARKUPPRICE = gql`\n  query MyQuery {\n    allPricingMarkups(orderBy: UPDATED_AT_DESC) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        markupValue\n        markupType\n        id\n        createdAt\n        __typename\n      }\n      totalCount\n      __typename\n    }\n  }\n`;\nconst DIAMONDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        costPrice\n        createdAt\n        diamondClarity\n        diamondColour\n        id\n        sellingPrice\n        sellingPriceType\n        updatedAt\n        vendorCode\n      }\n      totalCount\n    }\n  }\n`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\nconst CATGORYLIST = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        shortCode\n        id\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTTYPEMASTER = gql`\n  query {\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MATERIALMASTER = gql`\n  query {\n    allMasterMaterials {\n      nodes {\n        alias\n        name\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MASTERCOLORS = gql`\n  query {\n    allMasterMetalsColors {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst SALEDISCOUNTS = gql`\n  query {\n    allSaleDiscounts {\n      nodes {\n        id\n        discountName\n        discountType\n        discountValue\n        components\n        attributes\n        isActive\n        productAttributes\n        productAttributesText\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst VOUCHERDISCOUNTS = gql`\n  query {\n    allVouchers {\n      nodes {\n        id\n        name\n        code\n        uses\n        maxUses\n        isActive\n        voucherCodes\n        description\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst MASTERPURITIES = gql`\n  query {\n    allMasterMetalsPurities {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLIST = `\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER = `\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst MASTERCATEGORY = `\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst GEMSTONEMASTER = `\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\nconst MAKINGCHARGEPRICELIST = gql`\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\n    allMakingChargeSettings(condition: { vendorCode: $vendorCode, rateType: $ratetype }) {\n      nodes {\n        weightStart\n        weightEnd\n        vendorCode\n        updatedAt\n        sellingPriceType\n        rateType\n        purity\n        priceType\n        price\n        material\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\nconst GEMPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        price\n        rateType\n        priceType\n        sellingPriceType\n        vendorCode\n        weightEnd\n        weightStart\n        updatedAt\n        id\n        createdAt\n        gemstoneType\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLISTSTATUSEDIT = gql`\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\n    __typename\n    updateProductListByProductId(input: { productId: $productId, productListPatch: { isactive: $isActive } }) {\n      clientMutationId\n      productList {\n        isactive\n      }\n    }\n  }\n`;\n\nconst CREATETAXSETUP = gql`\n  mutation MyMutation(\n    $id: UUID!\n    $updatedAt: Date!\n    $createdAt: Date!\n    $taxValue: Double!\n    $taxName: String!\n    $hsnNumber: String!\n  ) {\n    __typename\n    createMasterTaxSetting(\n      input: {\n        masterTaxSetting: {\n          id: $id\n          updatedAt: $updatedAt\n          createdAt: $createdAt\n          taxValue: $taxValue\n          taxName: $taxName\n          hsnNumber: $hsnNumber\n        }\n      }\n    ) {\n      clientMutationId\n    }\n  }\n`;\n\nconst VOUCHERSTATUSEDIT = gql`\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateVoucherById(input: { id: $voucherId, voucherPatch: { isActive: $isActive } }) {\n      clientMutationId\n      voucher {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateSaleDiscountById(input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }) {\n      clientMutationId\n      saleDiscount {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DELETEMARKUPPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deletePricingMarkupById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGOLDPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETESALEDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteSaleDiscountById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteVoucherById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEMAKINGCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGEMCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETEDIAMONDCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productId\n    productName\n    productType\n    prodDescription\n    vendorCode\n    productVendorCode\n    sellingQty\n    maxBookingQty\n    gender\n    earringBacking\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n   \n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        marginOnSalePercentage\n        markupPriceTax\n        marginOnSalePercentage\n        sellingPrice\n        discountDesc\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        availableStockQty\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n`;\n\nconst ALLMASTERRINGSIZE = `\n  query {\n    allMasterRingsSizes {\n      nodes {\n        gender\n        productType\n        name\n        size\n        sizeValue\n      }\n    }\n  }\n`;\n\nconst ALLSTYLORILANDINGBANNERS = `\nquery MyQuery {\n  allStyloriBanners {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n    }\n  }\n}\n`;\nconst ALLSTYLORISILVERLANDINGBANNERS = `\nquery MyQuery {\n  allStyloriSilverBanners {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n    }\n  }\n}\n\n`;\n\nconst CREATESTYLORILANDINGBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createStyloriBanner(\n    input: {\n      styloriBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n      }\n    }\n  ) {\n    clientMutationId\n    styloriBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\nconst DELETESTYLORILANDINGBANNER = `\nmutation MyMutation($id : Int!) {\n  deleteStyloriBannerById(input: {id: $id}) {\n    styloriBanner {\n      id\n      mobile\n      position\n      url\n      web\n      \n    }\n  }\n}`;\n\nconst CREATESILVERLANDINGBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: String\n) {\n  createStyloriSilverBanner(\n    input: {\n      styloriSilverBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n      }\n    }\n  ) {\n    clientMutationId\n    styloriSilverBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}`;\nconst DELETESILVERLANDINGBANNER = `\nmutation MyMutation($id : Int!) {\n  deleteStyloriSilverBannerById(input: {id: $id}) {\n    styloriSilverBanner {\n      id\n      nodeId\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nconst PRODUCTDESCRIPTIONEDIT = `\nmutation MyMutation($productId: String!, $prod_desc: String!) {\n  updateProductListByProductId(\n    input: {\n      productListPatch: { prodDescription: $prod_desc }\n      productId: $productId\n    }\n  ) {\n    productList {\n      prodDescription\n      id\n      productId\n    }\n  }\n}\n\n`;\n\nexport {\n  PRODUCTCATEGORY,\n  PRODUCTLIST,\n  PRODUCTEDIT,\n  PRODUCTLISTSTATUSEDIT,\n  PRODUCTDIAMONDTYPES,\n  GOLDPRICELIST,\n  DIAMONDPRICELIST,\n  GEMPRICELIST,\n  MAKINGCHARGEPRICELIST,\n  VENDORLIST,\n  ALLPRODUCTLIST,\n  DIAMONDMARKUP,\n  PRODUCTFILTERMASTER,\n  METALMASTER,\n  GEMSTONEMASTER,\n  MASTERCATEGORY,\n  DELETEMARKUPPRICE,\n  DELETEMAKINGCHARGE,\n  DELETEGEMCHARGE,\n  DELETEGOLDPRICE,\n  DELETESALEDISCOUNT,\n  CATGORYLIST,\n  DELETEDIAMONDCHARGE,\n  VENDORLISTS,\n  TaxList,\n  PRODUCTTYPEMASTER,\n  MATERIALMASTER,\n  MASTERCOLORS,\n  MASTERPURITIES,\n  SALEDISCOUNTS,\n  VOUCHERDISCOUNTS,\n  DELETEVOUCHERDISCOUNT,\n  VOUCHERSTATUSEDIT,\n  DISCOUNTSTATUSEDIT,\n  MASTERMATERIAL,\n  MASTERMATERIALCOLORS,\n  MASTERPRODUCTPURITIES,\n  COLLECTIONMASTER,\n  DESIGNMASTER,\n  DIAMONDMASTER,\n  DIAMONDSETTINGS,\n  DIAMONDSHAPES,\n  MASTERPRODUCTTYPES,\n  MASTERGEMSETTINGS,\n  MASTERGEMSHAPES,\n  MASTERGEMTYPES,\n  MASTERGENDER,\n  SEOPRIORITIES,\n  CREATETAXSETUP,\n  TaxSettingList,\n  MASTERCATEGORIES,\n  EARRINGBACKING,\n  MASTERATTRIBUTES,\n  MASTERSTONESHAPES,\n  MASTERSTONECOLORS,\n  MASTERSTONES,\n  MASTERWEIGHTS,\n  THEMEMASTER,\n  STYLEMASTER,\n  OCCASSIONSMASTER,\n  PAYMENTSTATUSMASTER,\n  SHIPPINGZONES,\n  MASTERCOUNTRIES,\n  SHIPPINGCHARGES,\n  ACTIVESHIPPINGZONES,\n  MASTERPAGES,\n  GOLDPRICESETUPMASTER,\n  ALLMASTERRINGSIZE,\n  ALLSTYLORILANDINGBANNERS,\n  CREATESTYLORILANDINGBANNER,\n  DELETESTYLORILANDINGBANNER,\n  ALLSTYLORISILVERLANDINGBANNERS,\n  CREATESILVERLANDINGBANNER,\n  DELETESILVERLANDINGBANNER,\n  PRODUCTDESCRIPTIONEDIT,\n  ALLMARKUPPRICE,\n};\n","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export const USERORDERS = gql`query($userid: UUID!) {\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\n      nodes {\n        paymentMode\n        paymentStatus\n        updatedAt\n        createdAt\n        awbNumber\n        cartId\n        orderStatus\n        comments\n        id\n        shoppingCartByCartId {\n          shoppingCartItemsByShoppingCartId {\n            nodes {\n              transSkuListByProductSku {\n                generatedSku\n                productListByProductId {\n                  productCategory\n                  productType\n                  productCollectionsByProductId {\n                    nodes {\n                      collectionName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          giftwrapsByCartId {\n            nodes {\n              message\n              giftFrom\n              giftTo\n            }\n          }\n          \n          cartAddressesByCartId {\n            nodes {\n              firstname\n              contactNumber\n              addressline1\n              addressline2\n              city\n              pincode\n              state\n            }\n          }\n          userProfileByUserprofileId {\n            firstName\n            mobile\n            email\n          }\n        }\n        paymentDetailsByOrderId {\n          nodes {\n            paymentResponse\n          }\n        }\n      }\n    }\n  \n  }`\nexport const ORDERS = orderid  => gql`query {\n  allOrders(filter:  ${orderid ? `{userProfileId: {equalTo: \"${orderid}\"}}` : `{id: {isNull: false}}`},orderBy: CREATED_AT_DESC) {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n          userAddressesByUserProfileId {\n            nodes {\n              contactNumber\n            }\n          }\n          \n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\n\nexport const TAXMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._,\n        //     name: _.name,\n        //     size:_.size,\n        //     productType : _.productType ,\n        // }))\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking,\n            // metalSizeMinToMax\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const userOders = {\n    query: USERORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._\n        // }))\n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes,\n            // metalSizeMinToMax\n        }\n    }\n\n\n}","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api-staging.stylori.com\";\nexport const API_URL = \"https://api-staging.stylori.com\";\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\";\nexport const URL = \"https://console-staging.stylori.com\";\n\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"\n// export const BASE_URL = \"http://localhost:8000\"\n// export const URL = \"https://localhost:3000\"\n","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json',\n            \"Access-Control-Allow-Origin\": \"*\"\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"x-access-token\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst productuploadCtxInitial = {\n  productCtx: {\n    product_categoy: \"\",\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\n    product_type: \"\",\n    productname: \"\",\n    material: \"\",\n    product_type_shortcode: \"\",\n    category: [],\n    metalColour: \"\",\n    metalpurities: \"\",\n    isExpand: false,\n    selectedgender: \"\",\n    selected_metal_colour: {},\n    gender: {},\n    product_gender: \"\",\n    vendorcode: \"\",\n    productseries: [],\n    size: 0,\n    sizes: [],\n    selected_sizes: [],\n    metal: {\n      value: 1,\n      label: \"Diamond\",\n    },\n    materials: [\n      \"Diamond\",\n      \"Gold\",\n      \"Gemstone\",\n      \"Solitaire\",\n      \"Silver\",\n      \"Platinum\",\n    ],\n    gemstontypes: \"\",\n    gemstonshapes: \"\",\n    product_code: \"\",\n    isactive: false,\n    gemstonelist: [],\n    diamondlist: [],\n    variants: [],\n    oldproductMetalColor: [],\n    oldproductMetalPurity: [],\n    productMetalColor: [],\n    productMetalPurity: [],\n    productDiamondColor: [],\n    productDiamondClarity: [],\n    productDiamondTypes: [],\n    productImages: [],\n    productDiamondTypesArray: [],\n    oldproductDiamondTypesArray: [],\n    productmaterials: [],\n    createVariantList: [],\n    editVariants: [],\n    editDiamondLists: [],\n    editGemstoneLists: [],\n    productVariantSize: [\n      8,\n      9,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      16,\n      17,\n      18,\n      19,\n      20,\n      21,\n      22,\n      23,\n      24,\n      25,\n    ],\n    variant_size: [],\n    gemstonetype: \"\",\n    gemstoneshape: \"\",\n    gemstonesettings: \"\",\n    gemstonesize: \"\",\n    gemstonecount: \"\",\n    gemstoneweight: \"\",\n    stonetype: \"\",\n\n    editleadtime: \"\",\n    editreadytoship: false,\n    editisdefault: false,\n    editisactive: false,\n\n    editcostprice: 0,\n    editsellingprice: 0,\n    editmarkupprice: 0,\n    editdiscountprice: 0,\n    editcostpricetax: 0,\n    editsellingpricetax: 0,\n    editmarkuppricetax: 0,\n    editdiscountpricetax: 0,\n\n    diamondclarity: \"\",\n    diamondcolor: \"\",\n    diamondsettings: \"\",\n    diamondshape: \"\",\n    diamondcount: \"\",\n    diamondweight: \"\",\n    metalindex: -1,\n    themes: \"\",\n    prod_styles: \"\",\n    occassions: \"\",\n    collections: \"\",\n    stonecount: \"\",\n    stonecolour: \"\",\n    product_images: {},\n    metalcolour: [],\n    metal_purity: [],\n    metalpurity: [],\n    metal_color: 0,\n    metal_weight: 0,\n    diamond_colour: 0,\n    diamond_clarity: 0,\n    metal_height: 0,\n    metal_width: 0,\n    metal_length: 0,\n    metal_object: 0,\n    diamondtype: 0,\n    metals: [],\n    error_message: {},\n  },\n  masterData: {},\n  setProductCtx: () => null,\n};\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n  return productuploadCtxInitial.productCtx;\n};\n\nexport const ProductProvider = (props) => {\n  console.info(\"PROPS\", props, props.value.mappertype);\n  const [productCtx, setProductCtx] = React.useState(\n    mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\n  );\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"productCtx s\", productCtx);\n  }, [productCtx.material]);\n\n  return (\n    <ProductContext.Provider\n      value={{\n        productCtx,\n        setProductCtx,\n        masterData: mapDataToCtx(\n          props.value.data,\n          props.value.mapper,\n          props.value.mappertype\n        ),\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \n    if(Object.keys(apiData).length === 0) return {};\n \n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport gradients from \"../../../../utils/gradients\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { GlobalContext } from \"../../../../context\";\n\nimport { Card, CardContent, CardMedia, Typography, Divider, Link, Avatar } from \"@material-ui/core\";\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: \"is required\" },\n    email: true,\n  },\n  password: {\n    presence: { allowEmpty: false, message: \"is required\" },\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  card: {\n    maxWidth: \"100%\",\n    overflow: \"unset\",\n    display: \"flex\",\n    position: \"relative\",\n    \"& > *\": {\n      flexGrow: 1,\n      flexBasis: \"50%\",\n      width: \"50%\",\n    },\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4),\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: \"absolute\",\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32,\n  },\n  loginForm: {},\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n  person: {\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      flexGrow: 1,\n      margin: theme.spacing(1),\n    },\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {},\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState((formState) => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {},\n    }));\n  }, [formState.values]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setFormState((formState) => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.target.value,\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true,\n      },\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (formState.isValid) {\n      //alert(JSON.stringify(formState.values))\n      let signinobj = await sendNetworkRequest(\"/api/auth/signin\", {}, formState.values);\n\n      if (signinobj.statuscode === 200) {\n        localStorage.setItem(\"accesstoken\", signinobj.accessToken);\n\n        let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\n        let pages = [];\n        let pagepermissions = [];\n        let bannerpage = { pagename: \"Banners\", pageurl: \"/banners\", is_view: true, is_write: true };\n    \n        debugger;\n        console.log(pageaccess);\n        // pageaccess.pages.push(bannerpage);\n        pageaccess.pages.forEach((element) => {\n          pages.push(element.pageurl);\n          // pagepermissions[element.pageurl] = {\n          //   isread : element.is_view,\n          //   iswrite : element.is_write\n          // }\n          if (element.is_write) {\n            pagepermissions.push(element.pageurl);\n          }\n        });\n        // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n        //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n        localStorage.setItem(\"accesspages\", pages);\n        localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n        props.history.push(\"/productlist\");\n      } else {\n        setShowmessage(signinobj.message);\n        setOpen(true);\n      }\n    } else {\n      alert(\"has some error\");\n    }\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = (field) => (formState.touched[field] && formState.errors[field] ? true : false);\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography gutterBottom variant=\"h3\">\n          Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">{/* Sign in on the internal platform */}</Typography>\n\n        <form {...rest} className={clsx(classes.root, className)} autoComplete={\"off\"} onSubmit={handleSubmit}>\n          <div className={classes.fields}>\n            <TextField\n              error={hasError(\"email\")}\n              fullWidth\n              helperText={hasError(\"email\") ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || \"\"}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError(\"password\")}\n              fullWidth\n              helperText={hasError(\"password\") ? formState.errors.password[0] : null}\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || \"\"}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button className={classes.submitButton} color=\"primary\" size=\"large\" type=\"submit\" variant=\"contained\">\n            Log in\n          </Button>\n          <Snackbar\n            open={open}\n            autoHideDuration={6000}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            onClose={handleClose}\n          >\n            <Alert onClose={handleClose} severity=\"error\">\n              {showmessage}\n            </Alert>\n          </Snackbar>\n        </form>\n      </CardContent>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport clsx from \"clsx\";\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext } from \"../../context\";\nimport FullLoader from \"../../components/Loader\";\nimport \"./Productupload.css\";\nimport Select from \"react-select\";\nimport \"./floating_dropdown.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useQuery } from \"react-apollo\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n];\nconst useStyles = makeStyles((theme) => ({\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  dropdownlayout: {\n    \"& .menu\": {\n      position: \"Relative !important\",\n    },\n  },\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3),\n  },\n  fieldGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0),\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n    },\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  dateField: {\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AddressForm(props) {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [initailRingSize, updateRingSize] = useState([]);\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  async function getMasterRingSize() {\n    fetch(GRAPHQL_DEV_CLIENT, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\n    })\n      .then((res) => res.json())\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\n  }\n  React.useEffect(() => {\n    getMasterRingSize();\n  }, []);\n  React.useEffect(() => {}, [productCtx]);\n\n  // const handleChange = selectedOption => {\n\n  // };\n  const handlesizeChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\n  };\n  const handlevendorChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\n  };\n\n  const changeproducttype = (type) => (event, newvalue) => {\n    setProductCtx({ ...productCtx, product_type: newvalue });\n  };\n  const handlechange = (type) => (selectedOption) => {\n    if (type === \"product_type\") {\n      if (selectedOption) {\n        var size = \"\";\n        var minvalue = 0;\n        var maxvalue = 0;\n        var selected_sizes = [];\n        var default_size = 0;\n        if (selectedOption.shortCode === \"K\") {\n          selected_sizes.push({\n            value: \"KID\",\n            label: \"KID\",\n          });\n          selected_sizes.push({\n            value: \"XS\",\n            label: \"XS\",\n          });\n          selected_sizes.push({\n            value: \"S\",\n            label: \"S\",\n          });\n          selected_sizes.push({\n            value: \"M\",\n            label: \"M\",\n          });\n          selected_sizes.push({\n            value: \"L\",\n            label: \"L\",\n          });\n          selected_sizes.push({\n            value: \"XL\",\n            label: \"XL\",\n          });\n        } else {\n          if (selectedOption.shortCode === \"R\" && productCtx.selectedgender.name === \"Male\") {\n            minvalue = 13;\n            maxvalue = 25;\n            default_size = 15;\n          }\n          if (selectedOption.shortCode === \"R\" && productCtx.selectedgender.name === \"Female\") {\n            minvalue = 8;\n            maxvalue = 23;\n            default_size = 12;\n          }\n\n          for (var i = minvalue; i < maxvalue; i++) {\n            selected_sizes.push({\n              value: i,\n              label: \"\" + i,\n            });\n          }\n        }\n\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: selectedOption.shortCode,\n          product_type: selectedOption,\n          size,\n          default_size,\n          selected_sizes,\n        });\n      } else {\n        setProductCtx({ ...productCtx, product_type_shortcode: \"\", product_type: \"\", size, selected_sizes: \"\" });\n      }\n    } else {\n      setProductCtx({ ...productCtx, [type]: selectedOption });\n    }\n  };\n  const handleTextChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"vendorcode\") {\n      setProductCtx({ ...productCtx, [type]: value, vendorleadtime: value.vendorDelivaryDays });\n    } else {\n      setProductCtx({ ...productCtx, [type]: value });\n    }\n  };\n\n  const switchisorderable = (event) => {\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\n  };\n\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n\n  const handleGenderChange = (type) => (event, value) => {\n    var minvalue = 0;\n    var maxvalue = 0;\n    var selected_sizes = [];\n    var sizes = [];\n    var default_size = 0;\n    // if (productCtx.product_type.shortCode === \"K\") {\n    //   default_size = \"XS\";\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    // } else {\n    //   if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\n    //     minvalue = 13;\n    //     maxvalue = 26;\n    //     default_size = \"\" + 15;\n    //   }\n    //   if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\n    //     minvalue = 8;\n    //     maxvalue = 24;\n    //     default_size = \"\" + 12;\n    //   }\n\n    //   for (var i = minvalue; i < maxvalue; i++) {\n    //     selected_sizes.push(\"\" + i);\n    //     sizes.push(\"\" + i);\n    //   }\n    // }\n  \n    initailRingSize.forEach((e) => {\n     \n      console.log(productCtx.product_type.shortCode, e.name, value, e.gender, e.sizeValue);\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\n        selected_sizes.push(\"\" + e.sizeValue);\n        sizes.push(\"\" + e.sizeValue);\n      }\n    });\n    setProductCtx({ ...productCtx, [type]: value, sizes, selected_sizes, default_size });\n  };\n\n  const handleMaterialChange = (type) => (event, value) => {\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\n    if (value) {\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\n        if (steps.indexOf(\"Step3\") === -1) {\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n        }\n      }\n    }\n    setProductCtx({ ...productCtx, [type]: value, steps });\n  };\n\n  const handleInputChange = (type) => (e) => {\n    var size = productCtx.size;\n    var materials = productCtx.materials;\n    var selected_sizes = productCtx.selected_sizes;\n\n    if (type === \"selectedgender\") {\n      var minvalue = 0;\n      var maxvalue = 0;\n      selected_sizes = [];\n      if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\n        size = \"13-25\";\n        minvalue = 13;\n        maxvalue = 26;\n      }\n      if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\n        size = \"8-18\";\n        minvalue = 8;\n        maxvalue = 19;\n      }\n\n      for (var i = minvalue; i < maxvalue; i++) {\n        selected_sizes.push({\n          value: i,\n          label: \"\" + i,\n        });\n      }\n    }\n\n    if (type === \"product_categoy\") {\n      if (e.target.value === \"Platinum Jewellery\") {\n        materials.push(\"Platinum Jewellery\");\n        var index = materials.indexOf(\"Silver Jewellery\");\n\n        if (index >= 0) {\n          materials.splice(index, 1);\n        }\n      } else if (e.target.value === \"Silver Jewellery\") {\n        materials.push(\"Silver Jewellery\");\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\n        if (index1 >= 0) {\n          materials.splice(index1, 1);\n        }\n      } else {\n        var indexval = materials.indexOf(\"Silver Jewellery\");\n\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n        indexval = materials.indexOf(\"Platinum Jewellery\");\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n      }\n    }\n\n    setProductCtx({ ...productCtx, size, [type]: e, materials, selected_sizes });\n  };\n\n  const materialChange = (type) => (selectedOption) => {\n    //   let material = { ...productCtx.material, [type]: selectedOption }\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\n    //   if(material.material)\n    //   {\n    //   material.material.forEach(element => {\n    let material_names = [];\n    if (selectedOption) {\n      selectedOption.forEach((element) => {\n        material_names.push(element.name);\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\n          if (steps.indexOf(\"Step3\") === -1) {\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n          }\n        }\n      });\n    }\n    //   });\n    // }\n\n    setProductCtx({ ...productCtx, [type]: selectedOption, steps, material_names });\n  };\n  const keyPress = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {/* <FullLoader /> */}\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} spacing={1}>\n            <Card {...rest} className={clsx(classes.root, className)}>\n              <CardHeader title=\"Product Information 1\" />\n              <Divider />\n              <CardContent className={classes.cardcontent}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} sm={12} spacing={1}>\n                    <Input\n                      className={classes.helperinput}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      error={productCtx.error_message.productname}\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={keyPress(\"productname\")}\n                    />\n                  </Grid>\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\n                    <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange(\"product_categoy\")}\n                      options={productCtx.masterData.category.map((option) => option.label)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />)\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Category\"\n                          margin=\"dense\"\n                          error={productCtx.error_message.product_categoy}\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} spacing={1}>\n                    <Autocomplete\n                      id=\"product_type\"\n                      className={classes.fixedTag}\n                      getOptionLabel={(option) => option.label}\n                      defaultValue={productCtx.product_type}\n                      options={productCtx.masterData.product_type}\n                      onChange={handleoptionChange(\"product_type\")}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />)\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Type\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          error={productCtx.error_message.product_type}\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Product Information 2\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      {productCtx.product_type ? (\n                        <>\n                          <Grid item xs={12} sm={6}>\n                            <Autocomplete\n                              id=\"free-solo-2-demo\"\n                              multiple\n                              className={classes.fixedTag}\n                              defaultValue={productCtx.material_names}\n                              options={productCtx.masterData.material.map((option) => option.label)}\n                              onChange={handleMaterialChange(\"material_names\")}\n                              renderTags={(value, getTagProps) =>\n                                value.map((option, index) => (\n                                  <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                                ))\n                              }\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Select Product Materials\"\n                                  margin=\"dense\"\n                                  variant=\"outlined\"\n                                  error={productCtx.error_message.material_names}\n                                  fullWidth\n                                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                                />\n                              )}\n                            />\n                          </Grid>\n                        </>\n                      ) : null}\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.selectedgender}\n                          options={productCtx.masterData.gender.map((option) => option.label)}\n                          onChange={handleGenderChange(\"selectedgender\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Gender\"\n                              margin=\"dense\"\n                              error={productCtx.error_message.selectedgender}\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalpurity}\n                          options={productCtx.masterData.metalpurity}\n                          onChange={handleoptionChange(\"metalpurity\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Purity\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              error={productCtx.error_message.metalpurity}\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalcolour}\n                          options={productCtx.masterData.metalcolour}\n                          onChange={handleoptionChange(\"metalcolour\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Colour\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.metalcolour}\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </>\n            ) : null}\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Vendor Information\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.vendorcode}\n                          getOptionLabel={(option) => option.label}\n                          options={productCtx.masterData.vendorcode}\n                          onChange={handleoptionChange(\"vendorcode\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Vendor Code\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.vendorcode}\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Product Code\"\n                          fullWidth\n                          className={classes.helperinput}\n                          value={productCtx.productvendorcode}\n                          error={productCtx.error_message.productvendorcode}\n                          id=\"productvendorcode\"\n                          name=\"productvendorcode\"\n                          onChange={handleTextChange(\"productvendorcode\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Lead Time\"\n                          fullWidth\n                          className={classes.helperinput}\n                          error={productCtx.error_message.vendorleadtime}\n                          value={productCtx.vendorleadtime}\n                          InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                          id=\"vendorleadtime\"\n                          name=\"vendorleadtime\"\n                          onChange={handleTextChange(\"vendorleadtime\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n                          <RadioGroup\n                            aria-label=\"position\"\n                            name=\"position\"\n                            value={productCtx.isreorderable}\n                            onChange={switchisorderable}\n                            row\n                          >\n                            <FormControlLabel\n                              value=\"Yes\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"Yes\"\n                              labelPlacement=\"right\"\n                            />\n                            <FormControlLabel value=\"No\" control={<Radio color=\"primary\" />} label=\"No\" labelPlacement=\"right\" />\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>{\" \"}\n              </>\n            ) : null}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12}>\n                {productCtx.product_type ? (\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader\n                      title=\"Default SKU For Display\n  \"\n                    />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_colour}\n                            onChange={handleoptionChange(\"default_metal_colour\")}\n                            options={productCtx.metalcolour.map((option) => option.label)}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Colour\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_metal_colour}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_purity}\n                            onChange={handleoptionChange(\"default_metal_purity\")}\n                            options={productCtx.metalpurity.map((option) => option.label)}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Purity\"\n                                margin=\"dense\"\n                                error={productCtx.error_message.default_metal_purity}\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>\n                ) : null}\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              (productCtx.product_type.shortCode === \"BA\" ||\n                productCtx.product_type.shortCode === \"R\" ||\n                productCtx.product_type.shortCode === \"SK\" ||\n                productCtx.product_type.shortCode === \"K\") &&\n              productCtx.sizes.length > 0 ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Size Information\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            multiple\n                            freeSolo\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.selected_sizes}\n                            options={productCtx.sizes}\n                            onChange={handleoptionChange(\"selected_sizes\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Ring Sizes\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.selected_sizes}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_type\"\n                            className={classes.fixedTag}\n                            freeSolo\n                            defaultValue={productCtx.default_size}\n                            options={productCtx.selected_sizes}\n                            onChange={handleoptionChange(\"default_size\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Select Default Size\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_size}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type && productCtx.product_type.alias === \"Earrings\" ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Type of Fit\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.earringbacking}\n                            options={productCtx.masterData.earringbacking.map((option) => option.label)}\n                            onChange={handleoptionChange(\"earringbacking\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Earring Backing\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.earringbacking}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}></Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\n// Import React FilePond\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// Import FilePond styles\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\n\n// Register the plugins\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { file } from \"@babel/types\";\n\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginImageValidateSize,\n  FilePondPluginFileRename\n);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n  },\n  img: {\n    height: \"100%\",\n    width: \"100%\",\n    objectFit: \"contain\",\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function Review() {\n  let count = 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images, setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = [];\n    let product_images = [];\n\n    productCtx.metalcolour.forEach((element) => {\n      if (element.name === productCtx.default_metal_colour) {\n        product_images[element.name] = [];\n        if (metalcolour.length > 0) {\n          metalcolour.unshift(element);\n        } else {\n          metalcolour.push(element);\n        }\n      } else {\n        metalcolour.push(element);\n        product_images[element.name] = [];\n      }\n    });\n    setMetalcolour(metalcolour);\n  }, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n    //alert(JSON.stringify(bodaydata))\n\n    let prodimages = productCtx.product_images;\n    if (prodimages) {\n      var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1);\n      let imagecolourobj = productCtx.product_images[imagecolor];\n      var imagecount = 1;\n      if (imagecolourobj) {\n        imagecount = imagecolourobj.length + 1;\n      }\n\n      let imagename = prodid + \"-\" + imagecount + imagecolor.charAt(0);\n      let responsedata = await sendNetworkRequest(\n        \"/uploadimage\",\n        {},\n        { image: bodaydata.fileExtension, filename: imagename, product_id: prodid },\n        false\n      );\n      var returnData = responsedata.data.returnData;\n      var signedRequest = returnData.signedRequest;\n      var url = returnData.url;\n      console.log(\"responseurl\" + url);\n      var filepathname = returnData.filepath;\n      filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\n      var options = {\n        headers: {\n          \"Content-Type\": bodaydata.fileExtension,\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      };\n\n      if (imagecolourobj) {\n        const imageobj = {\n          name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\n          position: imagecolourobj.length + 1,\n          color: imagecolor,\n          image_url: filepathname,\n          url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\n        };\n        if (uploadtype === \"edit\") {\n          imagecolourobj[imageposition] = imageobj;\n        } else {\n          imagecolourobj.push(imageobj);\n        }\n        prodimages[imagecolor] = imagecolourobj;\n      } else {\n        const imageobj = {\n          name: prodid + \"_1\" + imagecolor.charAt(0),\n          position: imageposition,\n          color: imagecolor,\n          image_url: filepathname,\n          url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\n        };\n        imagecolourobj = [];\n        imagecolourobj.push(imageobj);\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n      setProductCtx({ ...productCtx, product_images: prodimages });\n      // setFiles([])\n    }\n    await axios.put(signedRequest, bodaydata.file, options);\n  }\n\n  function removefiles(imageposition, imagecolor) {\n    let prodimages = productCtx.product_images;\n\n    if (prodimages) {\n      let imagecolourobj = prodimages[imagecolor];\n\n      if (imagecolourobj) {\n        if (imagecolourobj.length > imageposition) {\n          let removedfile = imagecolourobj[imageposition];\n\n          imagecolourobj[imageposition] = { ...removedfile, url: \"\" };\n        }\n      }\n      prodimages[imagecolor] = imagecolourobj;\n      setProductCtx({ ...productCtx, product_images: prodimages });\n      //alert(JSON.stringify(productCtx.product_images))\n    }\n  }\n\n  const handleInit = () => {\n    // alert(\"initialized\")\n  };\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item direction=\"row\" xs={12}>\n          <Grid container justify=\"left\" spacing={2}>\n            {metalcolour === undefined\n              ? null\n              : metalcolour.map((value, index) => (\n                  <Grid xs={12} container spacing={1} item>\n                    <Grid xs={12} item>\n                      <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                        {value.name}\n                      </Typography>\n                    </Grid>\n                    {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n                    <Grid xs={12} sm={12} md={12} item>\n                      <FilePond\n                        allowImageValidateSize\n                        imageValidateSizeMinWidth=\"2400\"\n                        imageValidateSizeMinHeight=\"2400\"\n                        imageValidateSizeMeasure={(file) =>\n                          new Promise((resolve, reject) => {\n                            console.log(file);\n                            console.log(\"filepond property\");\n                            debugger;\n                          })\n                        }\n                        labelIdle=\"Upload Image\"\n                        allowMultiple={true}\n                        //files = {files}\n                        onupdatefiles={(fileItem) => {\n                          // Set currently active file objectsfiles to this.state\n                        }}\n                        onaddfile={(error, fileItem) => {\n                          uploadimagetoserver(fileItem, index, value.name, \"add\");\n                        }}\n                        onremovefile={(error, fileItem) => {}}\n                        fileRenameFunction={(file) =>\n                          new Promise((resolve) => {\n                            var prodid =\n                              \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1);\n                            let imagecolourobj = productCtx.product_images[value.name];\n                            var imagecount = 1;\n                            if (imagecolourobj) {\n                              imagecount = imagecolourobj.length + 1;\n                            }\n                            let imagename = prodid + \"_\" + imagecount + value.name.charAt(0) + file.extension;\n                            resolve(imagename);\n                          })\n                        }\n                      ></FilePond>\n                      {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n                    </Grid>\n                  </Grid>\n                ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { Grid } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nimport Step4 from \"./Step4\";\nimport Step5 from \"./Step5\";\nimport Step6 from \"./Step6\";\nimport Step7 from \"./Step7\";\nimport Step8 from \"./Step8\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { element } from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\",\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\",\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;\n    case \"Step6\":\n      return <Step6 />;\n\n    case \"Step7\":\n      return <Step7 />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var error_content = {};\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if (activeStep === 0) {\n      if (!productCtx.product_type) {\n        isvalid = false;\n        error_content[\"product_type\"] = \"Error messsage\";\n      }\n      if (!productCtx.productname) {\n        isvalid = false;\n        error_content[\"productname\"] = \"Error messsage\";\n      }\n      if (!productCtx.product_categoy) {\n        isvalid = false;\n        error_content[\"product_categoy\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.metalcolour) {\n        isvalid = false;\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n      if (!productCtx.material_names) {\n        isvalid = false;\n        error_content[\"material_names\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalpurity\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.vendorcode) {\n        isvalid = false;\n        error_content[\"vendorcode\"] = \"Error messsage\";\n      }\n      if (!productCtx.vendorleadtime) {\n        isvalid = false;\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.default_metal_colour) {\n        isvalid = false;\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\n      }\n      if (!productCtx.default_metal_purity) {\n        isvalid = false;\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\n      }\n      if (!productCtx.productvendorcode) {\n        isvalid = false;\n        error_content[\"productvendorcode\"] = \"Error messsage\";\n      }\n      if (\n        !productCtx.earringbacking &&\n        productCtx.product_type.alias === \"Earrings\"\n      ) {\n        isvalid = false;\n        error_content[\"earringbacking\"] = \"Error messsage\";\n      }\n      if (!productCtx.selectedgender) {\n        isvalid = false;\n        error_content[\"selectedgender\"] = \"Error messsage\";\n      }\n      if (\n        (!productCtx.selected_sizes ||\n          productCtx.selected_sizes.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"selected_sizes\"] = \"Error messsage\";\n      }\n\n      if (\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"default_size\"] = \"Error messsage\";\n      }\n      // isvalid = true;\n    }\n\n    if (activeStep === 1) {\n      productCtx.metalpurity.forEach((element) => {\n        const keyvalue = element.name + \"_metal_weight\";\n\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\n          isvalid = false;\n\n          error_content[keyvalue] = \"Error messsage\";\n        }\n      });\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (productCtx.product_type_shortcode === \"R\") {\n        if (!productCtx.metal_height) {\n          isvalid = false;\n          error_content[\"metal_height\"] = \"Error messsage\";\n        }\n        if (!productCtx.metal_width) {\n          isvalid = false;\n          error_content[\"metal_width\"] = \"Error messsage\";\n        }\n      }\n\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\n        isvalid = false;\n        error_content[\"prod_styles\"] = \"Error messsage\";\n      }\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\n        isvalid = false;\n        error_content[\"occassions\"] = \"Error messsage\";\n      }\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\n      // {\n      //   isvalid = false\n      //   error_content['collections'] = \"Error messsage\"\n      // }\n\n      //  isvalid = true;\n    }\n\n    setProductCtx({ ...productCtx, error_message: error_content });\n    if (activeStep === productCtx.steps.length - 1) {\n      console.info(\"HANDLE\", sendNetworkRequest);\n      const productseries =\n        productCtx.masterData.productseries[0].productSeries;\n\n      delete productCtx[\"masterData\"];\n\n      var formdata = productCtx;\n      formdata[\"productseries\"] = productseries;\n\n      setLoading(true);\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\n      setLoading(false);\n      setSuccess(true);\n      await sleep(500);\n      window.location.replace(\"/productlist\");\n    } else {\n      if (isvalid) {\n        setActiveStep(activeStep + 1);\n      }\n    }\n\n    //else\n    //  {\n    //  }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async function sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n  }\n  console.log(productCtx, \"Component Samir\");\n  return (\n    <Grid item xs={12} sm={12}>\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\n      </Snackbar>\n\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {productCtx.steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel></StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </Paper>\n\n      <React.Fragment>\n        {activeStep === productCtx.steps.length ? (\n          <React.Fragment>\n            <Typography variant=\"h5\" gutterBottom>\n              Product Added Successfully\n            </Typography>\n            <Typography variant=\"subtitle1\"></Typography>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {getStepContent(productCtx.steps[activeStep])}\n            <div className={classes.buttons}>\n              {activeStep !== 0 && (\n                <Button onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === productCtx.steps.length - 1\n                  ? \"Product Upload\"\n                  : \"Next\"}\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Component from \"./Component\";\nimport { ProductProvider } from \"../../context\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const Productupload = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n});\nexport default Productupload;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from \"react\";\nimport { Form, Grid, Select } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip } from \"@material-ui/core\";\n\nconst useStyless = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\",\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange = (type) => (e) => {\n    setSearchtext(e.target.value);\n  };\n  const handlecategoryChange = (type) => (event, value) => {\n    setCategory(value.name);\n    props.applyfilter(searchtext, value.name, producttype);\n  };\n  const handletypeChange = (type) => (event, value) => {\n    setProducttype(value.name);\n    props.applyfilter(searchtext, category, value.name);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  function applyfilter() {\n    props.applyfilter(searchtext, category, producttype);\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div\n      className=\"search\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        background: \"white\",\n        borderTop: \"1px solid #e4e4e4\",\n        borderBottom: \"1px solid #e4e4e4\",\n      }}\n    >\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          fullWidth\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.mastercategory}\n          onChange={handlecategoryChange(\"product_category\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.masterproducttype}\n          onChange={handletypeChange(\"product_type\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <TextField\n          fullWidth\n          margin=\"dense\"\n          onChange={handleinputChange(\"productname\")}\n          placeholder={\"Search by product name or product id\"}\n          onChange={handleinputChange(\"productname\")}\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Button\n          onClick={(e) => applyfilter()}\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          Search\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibityIcon from '@material-ui/icons/Visibility';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'vendor_code', label: 'vendor code' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'createdAt', label: 'Created on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('updatedAt');\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  \n  }, [])\n  useEffect( () => {\n    getproductlist(props.filterparams.searchtext,props.filterparams.categoryname,props.filterparams.product_type,\"\",\"\",order,orderBy)\n  \n  }, [props.filterparams])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n async function showproductdetails(prod_id){\n   let bodycontent = {\n    productid : prod_id\n   }\n\n    let response =  await sendNetworkRequest('/getproducturl', {}, bodycontent)\n    console.log(response)\n  //setProductlists(response.products.rows)\n window.open(response.url, '_blank');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button onClick={(e) => showproductdetails(row.product_id)}>\n                                    <VisibityIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\" onClick={() => showproductdetails(row)}>\n                                    {/* <Link variant=\"body2\">  */}\n                                    {row.product_name}\n\n                                    {/* </Link>   */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  \n\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React from \"react\";\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { URL } from \"../../config\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useHistory } from 'react-router-dom';\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.grey[300],\n    },\n    \"&:active\": {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info(\"You clicked a breadcrumb.\");\n}\n\nexport default function CustomizedBreadcrumbs(props) {\n  let history = useHistory();\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        onClick={() => history.goBack()}\n        // href={props.url ? `${URL + props.url}` : URL + \"/configuration\"}\n        label={props.name ? props.name : \"Configuration\"}\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n    </Breadcrumbs>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Chip,\n  Collapse,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Slider,\n  TextField,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: 420,\n    maxWidth: '100%'\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1\n  },\n  contentSection: {\n    padding: theme.spacing(2, 0)\n  },\n  contentSectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    cursor: 'pointer'\n  },\n  contentSectionContent: {},\n  formGroup: {\n   \n    padding: theme.spacing(2, 0)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  tags: {\n    marginTop: theme.spacing(1)\n  },\n  minAmount: {\n    marginRight: theme.spacing(3)\n  },\n  maxAmount: {\n    marginLeft: theme.spacing(3)\n  },\n  radioGroup: {},\n  actions: {\n    padding: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Filter = props => {\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n      name: '',\n      company: '',\n      mobile: '',\n      city: '',\n      version: null,\n      commodity: []\n  };\n\n  const [expandProject, setExpandProject] = useState(true);\n  const [expandCustomer, setExpandCustomer] = useState(false);\n  const [values, setValues] = useState({ ...initialValues });\n\n  const handleClear = () => {\n    setValues({ \n      ...initialValues });\n  };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n  const handleoptionchange = type => (event, value) => {\n    setValues(values => ({\n      ...values,\n      [type]: value\n    }));\n  }\n  const handleinputchange = type => (e) => {\n    setValues({\n      ...values,\n      [type]: e.target.value\n    })\n  }\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n  const handleDateChange = type => (date) => {\n    setValues({\n      ...values,\n      [type]: date\n    })\n  };\n  const handleToggleProject = () => {\n    setExpandProject(expandProject => !expandProject);\n  };\n\n  const handleToggleCustomer = () => {\n    setExpandCustomer(expandCustomer => !expandCustomer);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    onFilter && onFilter(values);\n    onClose && onClose()\n  };\n\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.header}>\n          <Button\n            onClick={onClose}\n            size=\"small\"\n          >\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </div>\n        <div className={classes.content}>\n          <Grid container xs={12} spacing={1}>\n            {/* <Grid item xs={12}>\n                      <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={values.name}\n                            onChange={handleinputchange('name')}\n                           label=\"Name\"\n                          />\n            </Grid> */}\n             <Grid xs={12}>\n            <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masters.product_categories}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_category}\n                  getOptionLabel={(option) => option.name}\n                  onChange={handleoptionchange('product_category')}\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n                      \n           \n            <Grid item xs={12}>\n            <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={masters.product_types}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_type}\n                  onChange={handleoptionchange('product_type')}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n           </Grid>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            fullWidth\n            onClick={handleClear}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Apply filters\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  masters : PropTypes.object,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, className, ...rest } = props;\n  const [searchcontent, setSearchcontent] = React.useState('');\n\n  const classes = useStyles();\n  const handleinputchange = type => e => {\n    setSearchcontent(e.target.value)\n  }\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search by order id, Name and Mobile\"\n          onChange={handleinputchange('searchcontent')}\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={() => onSearch(searchcontent)}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport { Search, Filter } from \"./components\";\n\nimport { CSVLink } from \"react-csv\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480,\n  },\n  filterButton: {\n    marginLeft: \"auto\",\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst ProductFilter = (props) => {\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid item>\n        <Search className={classes.search} onSearch={onSearch} />\n      </Grid>\n\n      <Grid item>\n        {window.location.pathname === \"/productlist\" ? (\n          <>\n            {\" \"}\n            <CSVLink\n              header={dataCSV.keyCSV}\n              data={dataCSV.valueCSV}\n              filename={\"ProductDetails.csv\"}\n              style={{ textDecoration: \"none \" }}\n            >\n              <Button\n                color=\"primary\"\n                style={{ marginRight: \"8px\" }}\n                size=\"small\"\n                variant=\"outlined\"\n              >\n                Download CSV\n              </Button>\n            </CSVLink>\n          </>\n        ) : (\n          \"\"\n        )}\n\n        <Button\n          className={classes.filterButton}\n          color=\"primary\"\n          onClick={handleFilterOpen}\n          size=\"small\"\n          variant=\"outlined\"\n        >\n          <FilterListIcon className={classes.filterIcon} /> Filter\n        </Button>\n      </Grid>\n\n      <Filter\n        onClose={handleFilterClose}\n        onFilter={onFilter}\n        open={openFilter}\n        masters={masters}\n      />\n    </Grid>\n  );\n};\n\nProductFilter.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n  masters: PropTypes.object,\n};\n\nexport default ProductFilter;\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  PRODUCTLIST,\n  PRODUCTCATEGORY,\n  PRODUCTFILTERMASTER,\n  PRODUCTLISTSTATUSEDIT,\n} from \"../../graphql/query\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"../../components/Products\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport FullLoader from \"../../components/Loader\";\nimport { ProductFilter } from \"../../components\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nexport const Productlist = withRouter(\n  withApollo((props) => {\n    const [masters, setMasters] = useState({});\n    const [filterparams, setFilterparams] = useState({});\n    const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\n    const { sendNetworkRequest } = React.useContext(NetworkContext);\n    let responseCSV;\n    function onFilter(filterobj) {\n      let filtercontent = {};\n\n      if (filterobj.product_category) {\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      if (filterobj.product_type) {\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      setFilterparams({\n        ...filterparams,\n        ...filtercontent,\n      });\n      // fetchadminusers()\n    }\n    function onSearch(searchtext) {\n      //  alert(searchtext)\n      setFilterparams({\n        ...filterparams,\n        searchtext,\n      });\n      // fetchadminusers()\n    }\n    useEffect(() => {\n      const query = props.client.query;\n      query({\n        query: PRODUCTFILTERMASTER,\n        fetchPolicy: \"network-only\",\n      })\n        .then((data) => {\n          if (data) {\n            let product_categories = data.data.allMasterProductCategories.nodes;\n            let product_types = data.data.allMasterProductTypes.nodes;\n            setMasters({\n              product_categories,\n              product_types,\n            });\n          } else {\n          }\n        })\n        .catch((error) => {\n          console.log(\"smbcj\");\n        });\n\n      async function fetchCSVdata() {\n        responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\n        let responseData = responseCSV.res_json;\n\n        if (responseCSV.statuscode === 200) {\n          let keyData = [];\n\n          for (const [key] of Object.entries(responseData[0])) {\n            keyData.push({ label: key, key: key });\n          }\n\n          console.log(keyData);\n          setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\n        }\n      }\n      fetchCSVdata();\n    }, []);\n\n    return (\n      <Grid container spacing={2}>\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={6} sm={6}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Products\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\n            <Link underline=\"none\" component={RouterLink} to={\"/productupload\"}>\n              <Button variant=\"contained\" color=\"primary\">\n                Add New Product\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n        <ProductFilter\n          masters={masters}\n          onSearch={onSearch}\n          onFilter={onFilter}\n          dataCSV={dataCSV}\n        />\n        <Product filterparams={filterparams} />\n      </Grid>\n    );\n  })\n);\n\nexport default Productlist;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport { Query, withApollo } from \"react-apollo\";\nimport { CATGORYLIST } from \"../../../../graphql/query\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  const { className, orders, ...rest } = props;\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  const [editcontent, setEditcontent] = React.useState({});\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias: vendordata.alias,\n      name: vendordata.name,\n      isedit: true,\n    });\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\n  }\n  async function Savevendor(refetch) {}\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    props.onCancel();\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Card>\n        <CardHeader title=\"Category\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n\n                  <TableCell align=\"left\">Alias</TableCell>\n\n                  <TableCell align=\"left\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  <Query\n                    query={CATGORYLIST}\n                    onCompleted={(data) =>\n                      setPageCount(data.allMasterProductCategories.totalCount)\n                    }\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\n                  >\n                    {({ data, loading, error, refetch }) => {\n                      if (loading) {\n                        // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>;\n                        // return false\n                      }\n                      if (data) {\n                        return (\n                          <>\n                            {data.allMasterProductCategories.nodes.map(\n                              (row, index) => (\n                                <>\n                                  {index == 0 && props.isadd ? (\n                                    <TableRow key={row.name}>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => Cancelcreate()}>\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    </TableRow>\n                                  ) : null}\n                                  <TableRow key={row.name}>\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"categoryname\"\n                                          name=\"categoryname\"\n                                          value={editcontent.name}\n                                          onChange={handleInputChange(\"name\")}\n                                          label=\"Name\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.name}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"alias\"\n                                          name=\"alias\"\n                                          value={editcontent.alias}\n                                          onChange={handleInputChange(\"alias\")}\n                                          label=\"alias\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.shortCode}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button\n                                          onClick={(e) => CancelEdit(row)}\n                                        >\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell\n                                        align=\"center\"\n                                        onClick={(e) => Editvendor(row)}\n                                        style={{ width: 20 }}\n                                      >\n                                        <Button>\n                                          <EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                    )}\n                                  </TableRow>\n                                </>\n                              )\n                            )}\n                          </>\n                        );\n                      } else {\n                        return <div>{\"Fetch Products\"}</div>;\n                      }\n                    }}\n                  </Query>\n                }\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  orders: [],\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    // button: {\n    //     color:\"#06847B\",\n    //     border: \"1px solid #7bbcb7\",\n    //     '&:hover':{\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n    //         border: \"1px solid #06847B\",\n    //     }\n    //   },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n               \n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        \n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems:\"center\",\n  },\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n   //props.onSearch(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n\n      <Grid\n        className={classes.contantview}\n        container\n        spacing={3}\n      >\n        <Grid item xs={3} >\n           <Typography\n           variant=\"h4\"\n           style={{margin: \"8px\"}}\n          >\n            Orders\n          </Typography>\n           {/* <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography>  */}\n        </Grid>\n        <Grid container xs={6} item  >\n        <Grid xs={9} item >\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item >\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \n\n          </Grid>\n\n\n        </Grid>\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\n\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n \n  console.log(props);\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n        {props.columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            width={headCell.type == 9 ? 300 : null}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label ? headCell.label : headCell.name}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n   // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n    overflowY: 'auto',\n    maxHeight: '100vh'\n  },\n  containergrid: {\n    overflowX: 'scroll',\n    width: 1000,\n    height: 20,\n    overflowY: 'hidden'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  debugger\n  console.log(props)\n  const { className, orders, ...rest } = props;\n  const [editcontent,setEditcontent] = React.useState({})\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : 'Order Date');\n  const handleRequestSort = (event, property) => {\n\n    const isAsc = orderBy === property && order === 'asc';\n\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    \n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent)\n   // setIsadd(false)\n  // alert(JSON.stringify(editcontent))\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  setBtnEdit({ ...btnEdit, id:'', action: false })\n // refetch()\n}\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  async function showorderdetails(orderurl){\n    \n  window.open(orderurl, '_blank');\n   }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n      let paymentstatusobj = {}\n      props.orderstatus.forEach(element => {\n        if(vendordata.orderstatus === element.name)\n        {\n          paymentstatusobj = element;\n        }\n      });\n      \n     delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus : paymentstatusobj,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\n\n  }\n  function CancelEdit(diamondData) {\n  //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n \n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n \n    // }\n    //    setIsadd(false)\n     setEditcontent({})\n     setBtnEdit({ ...btnEdit, id:'', action: false })\n   }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    \n      <Card>\n       \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          \n         \n            <div className={classes.tableWrapper}>\n              \n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n                {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n              <EnhancedTableHead\n              columns={props.columnobjs}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  {/* </TableRow>\n                </TableHead> */}\n                <TableBody style={{overflow : \"scroll\"}}>\n                {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      {props.columnobjs.map(col => (\n                        <>\n                        {col.key === 'action' && props.iswrite?   \n                        <TableCell align=\"center\" style = {{width: 20}}>\n                        {\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                          </Button>\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\n                          </Button></> : <Button \n                           >\n                             <VisibilityIcon onClick={(e) => showorderdetails(`/orderdetails/${order.orderid}`)}/>\n                     </Button>\n                         } \n                   </TableCell> : \n                   <>\n                   {\n                    btnEdit.action && btnEdit.id == order.orderid  ?\n                        <TableCell>\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \n                        { col.type == 2 ? <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        \n                        id={col.key}\n                        name={col.key}\n                        value={editcontent[col.key]}\n                        onChange={handleInputChange(col.key)}\n    \n                        label={col.label}\n                       />:null } \n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                                       </Moment>:null } \n\n                   {col.type == 5 && order.paymentmode == 'COD' ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.paymentstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                /> : null }  \n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \n       \n                  {col.type == 3 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.orderstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                /> : null }\n                            \n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                             </Moment>: <Typography> {order[col.key]}</Typography> } \n\n                          \n                           \n                           </TableCell> }\n                        </>\n                        }\n                       \n                      </>\n                      ))}                      \n\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10,50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n   \n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n\n  async function updateorder(ordercontent)\n  {\n  let response =  await sendNetworkRequest('/updateorderstatus', {}, ordercontent)\n    window.location.reload();\n\n   // getorders()\n  }\n  function searchorder(searchtext)\n  {\n    if(searchtext.length > 0)\n    {\n    var data_filter = orders.filter( element => \n      element.email &&  element.email.match(searchtext+'.*')  || \n      element.mobile && element.mobile.match(searchtext+'.*') ||\n      element.orderid && element.orderid.match(searchtext+'.*') || \n      element.username && element.username.match(searchtext+'.*')\n      )\n      setFilteredorder(data_filter)\n    }else{\n      setFilteredorder(orders)\n    }\n  }\n  async function getorders()\n  {\n    var orders_arr = []\n    orderCtx.orderMaster.orders.forEach(element => {\n\n        let orderobj = {}\n        orderobj['orderid'] = element.id\n        orderobj['orderdate'] = element.createdAt\n        orderobj['paymentmode'] = element.paymentMode\n        orderobj['cartid'] = element.cartId\n       // orderobj['paymentstatusmaster'] = element.paymentStatus\n       orderobj['awbNumber'] = element.awbNumber ? element.awbNumber : \"\"\n       orderobj['comments'] = element.comments ? element.comments : \"\"\n       orderobj['orderstatus'] = element.orderStatus\n       if(element.paymentMode === 'COD')\n       {\n        orderobj['paymentstatus'] = element.paymentStatus\n\n       }\n        if(element.paymentDetailsByOrderId)\n        {\n            let pgresponseobj = element.paymentDetailsByOrderId.nodes\n            pgresponseobj.forEach(pgres => {\n           let response_pg =   JSON.parse(pgres.paymentResponse)\n                    if(element.paymentMode === 'Prepaid')\n                    {\n                      orderobj['paymentstatus'] = response_pg.ipgTransactionId + ' \\n'+response_pg.fail_reason+ ' \\n'+response_pg.status\n\n                    }\n\n            } )\n        }\n        if(element.shoppingCartByCartId)\n        {\n            let cartcontent = element.shoppingCartByCartId\n\n                if(cartcontent.cartAddressesByCartId)\n                {\n                    let addresscontent = cartcontent.cartAddressesByCartId.nodes;\n                    addresscontent.forEach(addressobj => {\n                        orderobj['address'] = addressobj.addressline1\n                        if(!orderobj[\"mobile\"])\n                        {\n                          orderobj['mobile'] = addressobj.contactNumber\n\n                        }\n                        if(!orderobj[\"username\"])\n                        {\n                          orderobj['username'] = addressobj.firstname ? addressobj.firstname : \"\"\n\n                        }\n\n                    })\n\n                }\n            if(cartcontent.shoppingCartItemsByShoppingCartId)\n            {\n              \n\n                let cartitemscontent = cartcontent.shoppingCartItemsByShoppingCartId.nodes\n                let skus = []\n                \n                cartitemscontent.forEach(element => {\n                    if(element.transSkuListByProductSku)\n                    {\n                        skus.push(element.transSkuListByProductSku.generatedSku)\n                    }\n\n                    \n                })\n                orderobj['skus'] = skus.join(' , ')\n            }\n            if(cartcontent.userProfileByUserprofileId)\n            {\n             // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n              let usercontent = cartcontent.userProfileByUserprofileId\n              if(usercontent.firstName)\n              {\n                orderobj['username'] = usercontent.firstName ? usercontent.firstName : \"\"\n\n              }\n                orderobj['email'] = usercontent.email ? usercontent.email : \"\"\n                if(!orderobj[\"username\"])\n                            {\n                              orderobj['username'] = usercontent.firstname ? usercontent.firstname : \"\"\n\n\n                            }\n\n              let useraddressess = usercontent.userAddressesByUserProfileId\n              if(useraddressess)\n              {\n                let address_arr = useraddressess.nodes\n                address_arr.forEach(useraddressobj => {\n\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                });\n              }\n            }\n\n            if(cartcontent.giftwrapsByCartId)\n            {\n                let giftobj = cartcontent.giftwrapsByCartId.nodes;\n                giftobj.forEach(gift => {\n                    orderobj['giftmessage'] = gift.message\n                })\n            }\n        }\n        orders_arr.push(orderobj)\n    });\n    \n    setOrders(orders_arr)\n    setFilteredorder(orders_arr)\n  }\n  async function getmaster(getmaster)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes)\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\n\n        \n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem('pagepermissions')\n    if(pagepermission.indexOf('/orderlist') > -1)\n    {\n      setIswrite(true)\n\n    }else\n    {\n      setIswrite(false)\n    }\n    getmaster()\n  }, [])\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n        \n     \n    };\n\n    getmaster()\n    getorders()\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  debugger\nconsole.log(displaycolumnnames)\nconsole.log(displaycolumns)\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Orders\n          </Typography>\n          </Grid>\n          \n    </Grid> */}\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\n    {filteredorder ? <Results\n      className={classes.results}\n      orderstatus={paymentstatus}\n      paymentstatus={orderstatus}\n      iswrite={iswrite}\n     orders={filteredorder}\n     onupdate={updateorder}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    /> : null }\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport { ORDERS } from '../../services/queries';\n\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n    let user_id = props.location.pathname.split('/')[2];\n      \n    const { data, loading, error } = useQuery(ORDERS(user_id));\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    if(deleteid.length > 0)\n    {\n      let variables ={\n        elementId:deleteid[0]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    if(deleteid.length > 1)\n    {\n      let variables ={\n        elementId:deleteid[1]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    setgemlist([])\n\n    setDeleteid([])\n    getgemlist()\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n\n    let deleteids = [];\n    deleteids.push(diamondData.costprice.id)\n    deleteids.push(diamondData.sellprice.id)\n\n     setDeleteid(deleteids)\n     setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid, Card } from \"@material-ui/core\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Input } from \"@material-ui/core\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { MAKINGCHARGEPRICELIST, PRODUCTLISTSTATUSEDIT, METALMASTER, DELETEMAKINGCHARGE } from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport Addmakingchargeprice from \"./Addmakingchargeprice\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../config\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\nconst columns = [\n  { id: \"Metal\", label: \"Metal\" },\n  { id: \"Purity\", label: \"Purity\" },\n  { id: \"From Weight\", label: \"From Weight\" },\n  { id: \"To weight\", label: \"To weight\" },\n  { id: \"Cost Price\", label: \"Cost Price\" },\n\n  { id: \"updated On\", label: \"updated On\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid, setVendorid] = React.useState(props.vendor);\n  const [editmc, setEditmc] = React.useState({});\n  const [puritymaster, setPuritymaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [editdiamond, setEditdiamond] = React.useState({});\n  const [mchargelist, setMchargelist] = React.useState([]);\n  const [deleteid, setDeleteid] = React.useState(\"\");\n  const [metalmaster, setMetalmaster] = React.useState([]);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n    add: false,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent) {\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEMAKINGCHARGE, variables })\n      .then((res) => {\n        if (res !== null) {\n          //refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id);\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false, add: true });\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata = {};\n    bodydata[\"material\"] = makingcontent.metal.name;\n    bodydata[\"weight_start\"] = makingcontent.weightstart;\n    bodydata[\"weight_end\"] = makingcontent.weightend;\n    bodydata[\"price_type\"] = makingcontent.pricetype.label;\n    bodydata[\"vendor_code\"] = props.vendor;\n    bodydata[\"purity\"] = makingcontent.purity.shortCode;\n    bodydata[\"cost_price\"] = makingcontent.costPrice;\n    bodydata[\"selling_price\"] = makingcontent.sellingprice;\n    bodydata[\"isadd\"] = true;\n\n    await sendNetworkRequest(\"/updatemakingcharge\", {}, bodydata);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    setOpen(false);\n    getmclist();\n  }\n  function handleEdit(diamondData) {\n    setEditmc({\n      ...editmc,\n      price: diamondData.price,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n  async function getmclist() {\n    let bodydata = {\n      vendorid: props.vendor,\n    };\n\n    let response = await sendNetworkRequest(\"/getvendormakingprice\", {}, bodydata);\n    setMchargelist(response.gems);\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes);\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes);\n      })\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    getmclist();\n  }, [vendorid]);\n  async function handleSave(row) {\n    var bodydata = {};\n    console.log(row);\n    row.price = editmc.price;\n    console.log(row);\n\n    let variables = {\n      cost_price_id: row.id,\n\n      weight_start: row.weight_start,\n      weight_end: row.weight_end,\n      cost_price: editmc.price,\n    };\n    console.log(editmc);\n    await sendNetworkRequest(\"/updatemakingcharge\", {}, variables);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    getmclist();\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  const handleinputChange = (type) => (e) => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value,\n    });\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\n  };\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n  async function productItemStatusChange(id, isactive, refetch) {\n    let variables = {\n      productId: id,\n      isActive: isactive ? false : true,\n    };\n    await props.client\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n        }\n      })\n      .catch(console.error);\n  }\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      <ConformationAlert\n        title={\"Are you sure to delete?\"}\n        positivebtn={\"Yes\"}\n        negativebtn={\"No\"}\n        message={\"\"}\n        data={deleteid}\n        onSuccess={handledelete}\n        onCancel={hidedeleteconformation}\n        isshow={isconformation}\n      />\n      <Card className={classes.cardcontent}>\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\">{props.title}</Typography>\n          </Grid>\n          {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                    {column.label === \"Cost Price\" ? (props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\") : column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <Query\n                query={MAKINGCHARGEPRICELIST}\n                onCompleted={(data) => setPageCount(data.allMakingChargeSettings.totalCount)}\n                variables={{ vendorCode: props.vendor, ratetype: props.ratetype }}\n              >\n                {({ data, loading, error, refetch }) => {\n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    return (\n                      <>\n                        {data.allMakingChargeSettings.nodes.map((row, index) => (\n                          <TableRow key={row.material}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.material}\n                            </TableCell>\n                            <TableCell align=\"left\">{row.purity}</TableCell>\n\n                            <TableCell align=\"left\">\n                              {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                              <Typography className={classes.heading}>{row.weightStart}</Typography>\n                            </TableCell>\n\n                            <TableCell align=\"left\">\n                              {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                              <Typography className={classes.heading}>{row.weightEnd}</Typography>\n                            </TableCell>\n\n                            <TableCell align=\"left\">\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <Input\n                                  variant=\"outlined\"\n                                  margin=\"dense\"\n                                  label=\"Cost Price\"\n                                  fullWidth\n                                  className={classes.helperinput}\n                                  value={editmc.price}\n                                  onChange={handleinputChange(\"price\")}\n                                  id=\"productvendorcode\"\n                                  name=\"Cost Price\"\n                                />\n                              ) : (\n                                <Typography className={classes.heading}>{row.price}</Typography>\n                              )}\n                            </TableCell>\n\n                            {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n                            <TableCell align=\"left\">\n                              <Moment format=\"DD MMM YYYY hh:mm a\">{row.updatedAt}</Moment>\n                            </TableCell>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell style={{ width: 170 }} align=\"left\">\n                                <Button onClick={(e) => handleSave(row)}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </TableCell>\n                            ) : (\n                              <TableCell align=\"left\" style={{ width: 170 }}>\n                                <Button onClick={(e) => handleEdit(row)}>\n                                  <EditIcon />\n                                </Button>\n                                <Button onClick={(e) => handleDelete(row)}>\n                                  <DeleteIcon />\n                                </Button>\n                              </TableCell>\n                            )}\n                          </TableRow>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Fetch Products\"}</div>;\n                  }\n                }}\n              </Query>\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n            </TableBody>\n            {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n          </Table>\n        </div>\n        {open ? (\n          <Addmakingchargeprice\n            metals={metalmaster}\n            purities={puritymaster}\n            isadd={open}\n            title={\"Add Making Charge Setup\"}\n            actionSave={handleAdd}\n            actionclose={handleClose}\n          />\n        ) : null}\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"./components/Product\";\nimport Diamonds from \"./components/Diamonds\";\nimport Gemstones from \"./components/Gemstones\";\nimport Makingcharge from \"./components/Makingcharge\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\n\nconst useStyle = makeStyles((theme) => ({}));\nexport const Vendorprice = withRouter((props) => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n  const classes = useStyle();\n\n  const handlevendorchange = (type) => (event, value) => {\n    setVendorcode(value.shortCode);\n  };\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setVendorlist({\n          ...vendorlist,\n          vendors: fatchvalue.data.allMasterVendors.nodes,\n        });\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12} sm={12}>\n        <Typography component=\"h6\" variant=\"h6\">\n          Vendor Based Price List\n        </Typography>\n      </Grid>\n\n      <Grid item xs={4} sm={4}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          fullWidth\n          disableClearable\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name + \"   (\" + option.shortCode + \") \"}\n          options={vendorlist.vendors}\n          onChange={handlevendorchange(\"vendor\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />)\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Choose Vendor\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      {vendorcode ? (\n        <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Product vendor={vendorcode} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Diamonds vendor={vendorcode} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Gemstones title={\"Gemstone Price Setup By Weight\"} vendor={vendorcode} viewtype={1} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Gemstones title={\"Gemstone Price Setup By No of Stones\"} vendor={vendorcode} viewtype={2} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n          </Grid>\n        </>\n      ) : null}\n    </Grid>\n  );\n});\n\nexport default withRouter(Vendorprice);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Input, Grid, Card } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { DIAMONDMARKUP, PRODUCTLISTSTATUSEDIT, DELETEMARKUPPRICE , ALLMARKUPPRICE} from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport Addmarkup from \"./Addmarkup\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nconst columns = [\n  { id: \"Component\", label: \"Components\" },\n  { id: \"Product Category\", label: \"product Category\" },\n  { id: \"Product Type\", label: \"Product Type\" },\n  { id: \"Selling Price Min\", label: \"Selling Price Min\" },\n  { id: \"Selling Price Max\", label: \"Selling Price Max\" },\n  { id: \"Markup Type\", label: \"Markup Type\" },\n  { id: \"Markup value\", label: \"Markup value\" },\n\n  { id: \"updatedAt\", label: \"updatedAt\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [editmarkup, setEditmarkup] = React.useState({});\n  const [goldpricelist, setGoldpricelist] = React.useState({});\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState(\"\");\n  const [refetch, setRefetch] = React.useState(null);\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch) {\n    setIsdelete(true);\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEMARKUPPRICE, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id);\n\n    setIsconformation(true);\n  }\n\n  async function updatemarkup(markupcontent, refetch) {\n    var bodydata = {};\n    bodydata[\"category\"] = markupcontent.category.name;\n    bodydata[\"producttype\"] = markupcontent.producttype.name;\n    bodydata[\"sellingPriceMin\"] = markupcontent.sellpricemin;\n    bodydata[\"sellingPriceMax\"] = markupcontent.sellpricemax;\n    bodydata[\"markuptype\"] = markupcontent.markuptype.label;\n    bodydata[\"markupValue\"] = markupcontent.markup;\n    bodydata[\"material\"] = pricecomponent;\n    console.log(\"XXXXXXXX\");\n    await sendNetworkRequest(\"/addmarkup\", {}, bodydata);\n    setOpen(false);\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n      ...editmarkup,\n      markupid: diamondData.id,\n      sellingPriceMin: diamondData.sellingPriceMin,\n      sellingPriceMax: diamondData.sellingPriceMax,\n      markupValue: diamondData.markupValue,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n  async function handleSave(id, refetch) {\n    var bodydata = {};\n\n    await sendNetworkRequest(\"/updatemarkup\", {}, editmarkup);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value });\n  };\n  const handlecomponentChange = (type) => (event, value) => {\n    setPriceomponent(value);\n  };\n  const handleinputChange = (type) => (e) => {\n    setEditmarkup({\n      ...editmarkup,\n      [type]: e.target.value,\n    });\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\n  };\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      <Card className={classes.cardcontent}>\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\n          <Grid item xs={3}>\n            <Typography variant=\"h6\">{\"Selling Price Markup Setup\"}</Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              className={classes.fixedTag}\n              defaultValue={pricecomponent}\n              options={[\"Diamond\", \"Gem Stone\", \"Gold\", \"Making Charge\", \"All\"]}\n              onChange={handlecomponentChange(\"earringbacking\")}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />)\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Pricing Components\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  // error = {productCtx.error_message.earringbacking}\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <Query\n                query={pricecomponent === \"All\" ? ALLMARKUPPRICE : DIAMONDMARKUP}\n                onCompleted={(data) => setPageCount(data.allPricingMarkups.totalCount)}\n                variables={{ vendorCode: pricecomponent }}\n              >\n                {({ data, loading, error, refetch }) => {\n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    setGoldpricelist(data);\n                    return (\n                      <>\n                        <ConformationAlert\n                          title={\"Are you sure to delete?\"}\n                          positivebtn={\"Yes\"}\n                          negativebtn={\"No\"}\n                          message={\"\"}\n                          refetch={refetch}\n                          onSuccess={handledelete}\n                          onCancel={hidedeleteconformation}\n                          isshow={isconformation}\n                        />\n                        {open ? (\n                          <Addmarkup\n                            isadd={open}\n                            material={pricecomponent}\n                            refetch={refetch}\n                            actionSave={updatemarkup}\n                            category={props.categories}\n                            producttype={props.producttypes}\n                            title={props.title}\n                            actionclose={handleClose}\n                          />\n                        ) : null}\n\n                        {data.allPricingMarkups.nodes.map((row, index) => (\n                          <>\n                            <TableRow key={row.category}>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.material}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.category}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.productType ? row.productType : \"All\"}\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>{row.sellingPriceMin} </Typography>\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>{row.sellingPriceMax} </Typography>\n                              </TableCell>\n\n                              <TableCell align=\"center\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Autocomplete\n                                    id=\"free-solo-2-demo\"\n                                    fullWidth\n                                    disableClearable\n                                    className={classes.fixedTag}\n                                    getOptionLabel={(option) => option.name}\n                                    onChange={handleoptionChange(\"sellingPriceType\")}\n                                    options={[\n                                      { label: 1, name: \"Flat\" },\n                                      { label: 2, name: \"Percentage\" },\n                                    ]}\n                                    renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                        <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                    }\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label=\"Price Type\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                                      />\n                                    )}\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>\n                                    {row.markupType === 1 ? \"Flat\" : \"Percentage\"}{\" \"}\n                                  </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value={editmarkup.markupValue}\n                                    onChange={handleinputChange(\"markupValue\")}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>{row.markupValue} </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                </Moment>\n                              </TableCell>\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <TableCell style={{ width: 170 }} align=\"center\">\n                                  <Button onClick={(e) => handleSave(row.id, refetch)}>\n                                    <SaveIcon />\n                                  </Button>\n                                  <Button onClick={(e) => CancelEdit(row)}>\n                                    <CancelIcon />\n                                  </Button>\n                                </TableCell>\n                              ) : (\n                                <TableCell align=\"center\" style={{ width: 170 }}>\n                                  <Button onClick={(e) => handleEdit(row)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button onClick={(e) => handleDelete(row, refetch)}>\n                                    <DeleteIcon />\n                                  </Button>\n                                </TableCell>\n                              )}\n                            </TableRow>\n                          </>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Fetch Products\"}</div>;\n                  }\n                }}\n              </Query>\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n            </TableBody>\n            {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '12px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '12px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n      if(type === 'materials')\n      {\n        let elements_arr = []\n        value.forEach(element => {\n          elements_arr.push(element.name)\n          \n        });\n        if(elements_arr.indexOf(\"Gold\") > -1)\n        {\n          setIsgold(true)\n        }else\n        {\n          setIsgold(false)\n        }\n\n        if(elements_arr.indexOf(\"Diamond\") > -1)\n        {\n          setIsdiamond(true)\n        }else\n        {\n          setIsdiamond(false)\n        }\n      }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n           options={voucherCtx.voucherMaster.diamondtypes}\n           onChange={handleoptionChange('diamondtype')}\n           value={attrobj.diamondtype}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen(prodskus)\n  {\n    setOpen(true)\n    setSelectskus(prodskus)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.title} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Chip,IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {palette} from '../../theme'\nimport Page from '../../components/Page'\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n \n  \n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  \n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      discountid : discount_id\n      }\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach(comp => {\n      comparr.push({\n        name: comp\n      })\n    })\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids)\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname:response.discunt.discount_name,\n      discountvalue:response.discunt.discount_value,\n      discounttype:response.discunt.discount_type,\n      discounttitle:response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes)\n    })\n    setIsloaded(true)\n  }\n  async function creatediscount(ispricerun)\n  {\n   let skuarray  = []\n    while(skus.length > 0)\n    {\n        let sku_content = skus.splice(0,25000)\n        skuarray.push(sku_content)\n    }\n    if(errorskus.length > 0 )\n    {\n      alert(\"Some skus are overlapping\")\n    }else{\n     \n    let discount_count = 0\n   setIsloading(true)\n      updatediscount(discount_count)\n     async function updatediscount()\n      {\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      discountname : attributeobj.discountname,\n      discounttitle : attributeobj.discounttitle,\n      product_attributes: productattr,\n      product_attributes_text : productattrtext,\n      skus : skuarray[discount_count]\n    }\n    console.log(JSON.stringify(productattr))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n   \n    discount_count = discount_count + 1\n    if(skuarray.length > discount_count)\n    {\n      setLoadingtitle(skus.length+\" Left\")\n      updatediscount(discount_count)\n    }else{\n      setIsloading(false)\n      setOpen(true)\n      setIsshowpriceupdate(false)\n\n     window.location='/salediscountlist'\n\n    }\n  }\n  }\n}\nconst handleDelete = chipToDelete => () => {\n  //setProducts([]) \n  let errorindex =  errorskus.indexOf(chipToDelete)\n  if(errorindex > -1)\n  {\n    errorskus.splice(errorindex,1)\n    var erroritems = []\n    errorskus.forEach(itemname =>{\n      erroritems.push(itemname)\n    })\n   setErrorskus(erroritems) \n  }\n  let index = products.indexOf(chipToDelete)\n  products.splice(index,1)\n  var items = []\n  products.forEach(itemname =>{\n    items.push(itemname)\n  })\n setProducts(items) \n\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setErrorskus(response.eror_skus)\n   setIsloading(false)\n   setTitlecontent(response.title)\n    \n  }\n  async function updateprices()\n  {\n    alert('i am here')\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id : products\n    }\n    setIsshowpriceupdate(true)\n\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n     \"component\":\"updateskuprice\"\n    }\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n \n   setStatusmessage(response.message)\n   }\n  function attributeadded( value)\n  {\n  let componentsstring = {}\n  let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      componentsstring[key] = {\n        values : values,\n        alias : alias_arr\n      }\n      let displaytext = key + ' : ' + attrs.join(' , ')\n      display_arr.push(displaytext)\n    })\n    setProductattr(componentsstring)\n    setProductattrtext(display_arr.join(' | '))\n   //alert(JSON.stringify(componentsstring))\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n  {\n    let discount_id = props.location.pathname.split('/')[2];\n    setDiscount_id(discount_id)\n    getdiscountvalue(discount_id)\n\n  }else\n  {\n    setIsloaded(true)\n  }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title={loadingtitle} isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {!discount_id ?\n    <>\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n    {products.length > 0 ? <Products  title={titlecontent} products={errorskus} /> : null }\n  {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n   \n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\n    {!isshowpriceupdate ? <>\n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\n         \n      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n      </>:null} \n    </Grid>\n    </Grid>\n    </> : \n        <Grid container xs={12} spacing={2} >\n            <Grid item xs={6} style={{marginTop:16}} >\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Name\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discountname}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Title\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttitle}\n\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Value\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttype == 2 ? attributeobj.discountvalue+ \"%\" : attributeobj.discountvalue}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Pricing Compponent\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.displaycomp}\n\n            </Typography>\n            </Grid>\n            </Grid>\n            \n            {attributeobj.allkeys ? <Grid item xs={6} style={{marginTop:16}} >\n                   {attributeobj.allkeys.map((row, index) => (\n                     <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          {row}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.attributes[row].values}\n                        </Typography>\n                       </Grid>\n                  ))}  \n                  <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          Total Sku\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.skucount}\n                        </Typography>\n                       </Grid>\n            </Grid> : null}\n                      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n                      {!isshowpriceupdate ? <>\n         \n      {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n      </>:<> {statusmessage}<IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\n                            <RefreshIcon />\n                          </IconButton></>} \n                        \n                        \n      </Grid>\n      </Grid>\n} \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport \"../../tmp.css\";\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  Switch,\n  FormControlLabel,\n  Grid,\n  TextField,\n  Typography,\n  colors,\n  Input,\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    paddingBottom: theme.spacing(2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    marginRight: theme.spacing(2),\n    // backgroundColor: colors.green[600],\n    // '&:hover': {\n    //   backgroundColor: colors.green[900]\n    // }\n  },\n}));\n\nconst EditContent = (props) => {\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    ...diamond,\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  function previewimage(url) {\n    // setpreviewurl(url)\n    // setShowpreview(true)\n  }\n  const handleInputChange = (type) => (e) => {\n    debugger;\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const toggleChecked = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\n  };\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {}, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            {props.title}\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          {attributes.map((columnname, index) => (\n            <>\n              {showpreview && (\n                <Lightbox\n                  class=\"fade\"\n                  mainSrc={previewurl}\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                  onCloseRequest={() => setShowpreview(false)}\n                  onMovePrevRequest={() => alert(\"prev\")}\n                  onMoveNextRequest={() => alert(\"next\")}\n                />\n              )}\n              <Grid container xs={12} spacing={2}>\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                      disabled={columnname.type === 10}\n                    />\n                  </Grid>\n                ) : null}\n                {columnname.type === 2 && (\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      label={columnname.key}\n                      labelPlacement=\"start\"\n                      control={\n                        <Switch\n                          checked={editcontent[columnname.key]}\n                          name=\"checkedB\"\n                          color=\"primary\"\n                          onChange={toggleChecked(columnname.key)}\n                        />\n                      }\n                    />\n                  </Grid>\n                )}\n                {columnname.type === 3 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      multiple\n                      id=\"combo-box-demo\"\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      margin=\"dense\"\n                      fullWidth\n                      value={editcontent[columnname.defaultkey]}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />\n                  </Grid>\n                )}\n\n                {columnname.type == 4 && (\n                  <Grid item xs={12}>\n                    <Typography> {diamond[columnname.key]}</Typography>\n                  </Grid>\n                )}\n\n                {columnname.type == 5 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id=\"combo-box-demo\"\n                      // options={props.masters[columnname.mastervaluekey]}\n                      margin=\"dense\"\n                      fullWidth\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      value={editcontent[columnname.defaultkey]}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 6 && (\n                  <Grid item xs={12}>\n                    <Button variant=\"outlined\" color=\"primary\">\n                      {columnname.controllabel}\n                    </Button>{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 9 && (\n                  <Grid container item xs={12}>\n                    <Grid item xs={12}>\n                      <AvatarGroup max={2}>\n                        {diamond[columnname.key]\n                          ? diamond[columnname.key]\n                              .split(\",\")\n                              .map((diamond, index) => (\n                                <Avatar\n                                  alt=\"Remy Sharp\"\n                                  src={diamond}\n                                  onClick={() => previewimage(diamond)}\n                                  className={classes.small}\n                                />\n                              ))\n                          : null}\n                      </AvatarGroup>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <FilePond\n                        style={{ height: \"100\", width: \"100\" }}\n                        oninit={() => handleInit()}\n                        labelIdle=\"Add Banner Image\"\n                        onaddfile={(error, fileItem) => {\n                          if (!error) {\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\n                          } else {\n                            // alert(row[columnname.key])\n                          }\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </>\n          ))}\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\n            Save\n          </Button>\n          <Button onClick={() => onClose()} variant=\"contained\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditContent.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  attributes: PropTypes.array,\n\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditContent;\n","import React, { useEffect, useContext, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { TaxList, VENDORLISTS, PRODUCTFILTERMASTER, PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditContent from \"./components/EditContent\";\nimport { Button, Switch, Grid, FormControlLabel } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"./tmp.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport moment from \"moment\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst Vendor = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [masterlist, setMasterlist] = React.useState(props.values);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [openedit, setOpenedit] = React.useState(false);\n\n  const [isadd, setIsadd] = React.useState(false);\n  const [isedit, setIsedit] = React.useState(false);\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const [aliasName, setaliasName] = React.useState(\"\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function addnewvendor() {\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\n    setaliasName(props.prefix + sort_id);\n\n    setEditcontent({\n      alias: aliasName,\n      ...editcontent,\n      isedit: false,\n    });\n    // debugger;\n    console.log(editcontent);\n    // let masters = masterlist;\n    // masters.insert(0, []);\n\n    //setMasterlist(masters)\n    setIsadd(true);\n    setOpenedit(true);\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\n  }\n  Array.prototype.insert = function (index, item) {\n    this.splice(index, 0, item);\n  };\n  function Editvendor(vendordata) {\n    delete vendordata[\"action\"];\n\n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit: true,\n    });\n    setOpenedit(true);\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n  }\n  async function Savevendor(content) {\n    props.onCreate(content);\n    setIsadd(false);\n    setEditcontent(null);\n    setOpenedit(false);\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\n    // refetch()\n  }\n  function Cancelcreate() {\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function searrchcontent() {\n    props.onSearch(editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\");\n  }\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n  function removeimage(imagename, keyvalue) {\n    let previmagenames = editcontent[keyvalue];\n    let newimages = [];\n    let previmages = previmagenames.split(\",\");\n    previmages.forEach((element) => {\n      if (element == imagename) {\n      } else {\n        newimages.push(element);\n      }\n    });\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\n  }\n  function CancelEdit(diamondData) {\n    if (isadd) {\n      let masters = masterlist;\n\n      masters.splice(0, 1);\n      setMasterlist(masterlist);\n    }\n    setIsadd(false);\n    setEditcontent({});\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleSearchChange = (type) => (e) => {\n    props.onSearch(e.target.value);\n  };\n  const handleChange = (type) => (event) => {\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  useEffect(() => {\n    setMasterlist(props.values);\n  }, [props.values]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb.\");\n  }\n  function previewimage(url) {\n    setpreviewurl(url);\n    setShowpreview(true);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <>\n      {showpreview && (\n        <Lightbox\n          class=\"fade\"\n          mainSrc={previewurl}\n          // nextSrc={images[(photoIndex + 1) % images.length]}\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={() => setShowpreview(false)}\n          onMovePrevRequest={() => alert(\"prev\")}\n          onMoveNextRequest={() => alert(\"next\")}\n        />\n      )}\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={3} sm={3}>\n            <Typography component=\"h6\" variant=\"h6\">\n              {props.title}\n            </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\n            <Grid fullwidth item xs={9} sm={9}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                autoComplete=\"off\"\n                id=\"vendordeliverydays\"\n                name=\"vendordeliverydays\"\n                //  /  value={editcontent.searchcontent}\n                onChange={handleInputChange(\"searchcontent\")}\n                label=\"Search text\"\n              />\n            </Grid>\n            <Grid fullwidth item xs={3} sm={3}>\n              <Button variant=\"contained\" onClick={() => searrchcontent()} color=\"primary\">\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            {props.button_title ? (\n              <Button variant=\"contained\" onClick={() => addnewvendor()} color=\"primary\">\n                {props.button_title}\n              </Button>\n            ) : null}\n          </Grid>\n        </Grid>\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n            <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {masterlist.map((row, index) => (\n                <>\n                  <TableRow>\n                    {props.columns.map((columnname, index) => (\n                      <>\n                        {columnname.key === \"action\" ? (\n                          <TableCell align=\"center\" style={{ width: 20 }}>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <>\n                                <Button onClick={(e) => Savevendor()}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </>\n                            ) : (\n                              <Button onClick={(e) => Editvendor(row)}>\n                                <EditIcon />\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell align=\"left\">\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    onChange={handleChange(columnname.key)}\n                                    checked={editcontent[columnname.key]}\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button variant=\"outlined\" color=\"primary\">\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n                                {columnname.type == 3 ? (\n                                  <Autocomplete\n                                    multiple\n                                    id=\"combo-box-demo\"\n                                    options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[columnname.defaultkey]}\n                                    onChange={handleoptionChange(columnname.defaultkey)}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField {...params} label={columnname.label} variant=\"outlined\" />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 9 ? (\n                                  <>\n                                    <FilePond\n                                      oninit={() => handleInit()}\n                                      labelIdle=\"Add Banner Image\"\n                                      onaddfile={(error, fileItem) => {\n                                        if (!error) {\n                                          uploadimagetoserver(fileItem, columnname.key, \"add\");\n                                        } else {\n                                          // alert(row[columnname.key])\n                                        }\n                                      }}\n                                    />\n                                    <div className={classes.imagecontainer}>\n                                      {editcontent[columnname.key]\n                                        ? editcontent[columnname.key].split(\",\").map((row, index) => (\n                                            <Badge\n                                              overlap=\"circle\"\n                                              anchorOrigin={{\n                                                vertical: \"top\",\n                                                horizontal: \"right\",\n                                              }}\n                                              badgeContent={\n                                                <HighlightOffIcon\n                                                  fontSize=\"small\"\n                                                  onClick={() => removeimage(row, columnname.key)}\n                                                />\n                                              }\n                                            >\n                                              <Avatar alt=\"Remy Sharp\" src={row} className={classes.small} />\n                                            </Badge>\n                                          ))\n                                        : null}\n                                    </div>\n                                  </>\n                                ) : null}\n                                {columnname.type == 5 ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={props.masters[columnname.mastervaluekey]}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                                    onChange={handleoptionChange(columnname.defaultkey)}\n                                    value={editcontent[columnname.defaultkey]}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField {...params} label={columnname.label} variant=\"outlined\" />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 4 ? <Typography> {row[columnname.key]}</Typography> : null}\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {!columnname.type || columnname.type == 1 ? (\n                                  <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    id={columnname.key}\n                                    name={columnname.key}\n                                    value={editcontent[columnname.key]}\n                                    onChange={handleInputChange(columnname.key)}\n                                    label={columnname.label}\n                                  />\n                                ) : null}{\" \"}\n                              </TableCell>\n                            ) : (\n                              <TableCell>\n                                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n\n                                {columnname.type === 9 ? (\n                                  <AvatarGroup max={2}>\n                                    {row[columnname.key]\n                                      ? row[columnname.key]\n                                          .split(\",\")\n                                          .map((row, index) => (\n                                            <Avatar\n                                              alt=\"Remy Sharp\"\n                                              src={row}\n                                              onClick={() => previewimage(row)}\n                                              className={classes.small}\n                                            />\n                                          ))\n                                      : null}{\" \"}\n                                    {/* className={classes.small} />)) : null } */}\n                                  </AvatarGroup>\n                                ) : null}\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    onChange={handleInputChange(columnname.key)}\n                                    checked={row[columnname.key]}\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type != 2 && columnname.type != 6 && columnname.type != 8 && columnname.type != 9 ? (\n                                  <Typography> {row[columnname.key]}</Typography>\n                                ) : null}\n                              </TableCell>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ))}\n                  </TableRow>\n                </>\n              ))}\n\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[50, 100, 200, 500]}\n                  count={[props.values.length]}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { \"aria-label\": \"rows per page\" },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  // ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n          {editcontent && (\n            <EditContent\n              diamond={editcontent}\n              attributes={props.columns}\n              title={props.title}\n              masters={props.masters}\n              onApply={Savevendor}\n              onClose={handleApplicationClose}\n              open={openedit}\n              prefix={aliasName}\n            />\n          )}\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  deleteIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Header = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Orders\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Order #{order.id}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {/* <Button\n            className={classes.deleteButton}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.deleteIcon} />\n            Delete\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nimport {\n  PAYMENTSTATUSMASTER,\n  PRODUCTDIAMONDTYPES,\n} from \"../../../../graphql/query\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField,\n  Link,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ReceiptIcon from \"@material-ui/icons/ReceiptOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  actions: {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    \"& > * + *\": {\n      marginLeft: 0,\n    },\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst OrderInfo = (props) => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = [\"Canceled\", \"Completed\", \"Rejected\"];\n\n  const [option, setOption] = useState(options[0]);\n  const [paymentstatus, setPaymentstatus] = useState([]);\n  const [orderstatus, setOrderstatus] = useState([]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  React.useEffect(() => {\n    getmaster();\n  }, []);\n  debugger;\n  console.log(props);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Customer</TableCell>\n              <TableCell>\n                <Link\n                  target=\"_blank\"\n                  component={RouterLink}\n                  to={`/customerdetails/${order.user_profile.id}`}\n                >\n                  {order.user_profile.first_name} {order.user_profile.last_name}\n                </Link>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline1\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline2\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].city\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].state\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].country\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email ID</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.cart_addresses\n                    ? order.shopping_cart.cart_addresses.length > 0\n                      ? order.shopping_cart.cart_addresses[0].contact_number\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Mobile Number</TableCell>\n              <TableCell>{order.user_profile.email}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Amount</TableCell>\n              <TableCell>\n                {order.currency}\n                {order.shopping_cart.discounted_price}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Waybil Number</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Waybill Number\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Gift Message</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.giftwraps\n                    ? order.shopping_cart.giftwraps.length > 0\n                      ? order.shopping_cart.giftwraps[0].message\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Mode</TableCell>\n              <TableCell>{order.payment_mode}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {paymentstatus.map((option) => (\n                    <option key={option.name} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Order Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {orderstatus.map((option) => (\n                    <option key={option.id} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Comments</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Comments\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant=\"contained\" color=\"primary\">\n          {/* <EditIcon className={classes.buttonIcon} /> */}\n          Save\n        </Button>\n        {/* <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Resend invoice\n        </Button> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired,\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  }\n}));\n\nconst OrderItems = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Sku</TableCell>\n                  <TableCell>Product Image</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Amount</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {order.shopping_cart.shopping_cart_items.map(item => (\n                  <TableRow key={item.id}>\n                     <TableCell>\n                      {item.product_sku}\n                    </TableCell>\n                    <TableCell>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </TableCell>\n                    <TableCell>\n                      {item.qty}\n                    </TableCell>\n                    <TableCell>{item.price}</TableCell>\n                    \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardHeader, Divider, CardContent, Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  inner_card: {\n    padding: \"10px\",\n    marginBottom: \"16px\",\n  },\n  image_container: {\n    padding: \"16px\",\n  },\n  product_image: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  },\n  text_heading: {\n    // fontWeight: \"400\",\n    margin: \"8px 0px\",\n  },\n  text_content: {\n    margin: \"8px 0px\",\n  },\n  final_total_text: {\n    textAlign: \"right\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n  },\n}));\nconst OrderDetails = (props) => {\n  const { order, className, ...rest } = props;\n  console.log(order, \"samir\");\n  const classes = useStyles();\n  return (\n    <div style={{ marginTop: 30 }}>\n      <Card>\n        <CardHeader title=\"Order Details\" />\n        <Divider />\n\n        <CardContent>\n          {order.shopping_cart.shopping_cart_items.map((item) => (\n            <Card key={item.id} className={classes.inner_card}>\n              <Grid container xs={12}>\n                {/*-------------------------------- Image part-------------------------------- */}\n                <Grid container xs={12} md={3} className={classes.image_container}>\n                  <img src=\"\" alt=\"Product Image\" className={classes.product_image} />\n                </Grid>\n                <Grid container xs={12} md={9}>\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Product Code</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.product_sku}</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Metal</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>{`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}</p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.trans_sku_list.sku_weight}</p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Diamond Quality</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.trans_sku_list.diamond_type} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Diamond Weight (Ct)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> ? </p>\n                    </Grid>\n                  </Grid>\n                  {/* ----------------------------------------------------------------- */}\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Quantity</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.qty} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>{`₹${Math.round(item.trans_sku_list.discount_price)}`} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Saved</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.discount_price - item.trans_sku_list.markup_price)} (${\n                          item.trans_sku_list.discount === null ? \"0\" : item.trans_sku_list.discount\n                        }%off)`}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Shipping</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> Free </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Grand Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>{`₹${Math.round(item.trans_sku_list.markup_price)}`}</p>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Card>\n          ))}\n          <Grid>\n            <p className={classes.final_total_text}>Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;</p>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\nexport default OrderDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport uuid from \"uuid/v1\";\nimport moment from \"moment\";\nimport Page from \"../../components/Page\";\nimport { Header, OrderInfo, OrderItems } from \"./components\";\nimport { withRouter } from \"react-router-dom\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  container: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const OrderManagementDetails = withRouter((props) => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(null);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  async function fetchorderdetails(order_id) {\n    let response = await sendNetworkRequest(\n      \"/getorderdetails\",\n      {},\n      { order_id }\n    );\n    console.log(response);\n    setOrder(response.orders);\n  }\n  useEffect(() => {\n    let mounted = true;\n    var com_id = props.location.pathname.split(\"/\")[2];\n    const fetchOrder = () => {\n      setOrder({\n        id: uuid(),\n        ref: \"FAD107\",\n        promoCode: null,\n        value: \"55.25\",\n        currency: \"$\",\n        status: \"canceled\",\n        customer: {\n          name: \"Ekaterina Tankova\",\n          address: \"Street King William, 42456\",\n          city: \"Montgomery\",\n          country: \"United States\",\n        },\n        items: [\n          {\n            id: uuid(),\n            name: \"Project Points\",\n            cuantity: 25,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"50.25\",\n            currency: \"$\",\n          },\n          {\n            id: uuid(),\n            name: \"Freelancer Subscription\",\n            cuantity: 1,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"5.00\",\n            currency: \"$\",\n          },\n        ],\n        created_at: moment(),\n      });\n    };\n\n    // fetchOrder();\n    fetchorderdetails(com_id);\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Order Management Details\">\n      <Header order={order} />\n      <Grid className={classes.container} container spacing={3}>\n        <Grid item md={4} xl={3} xs={12}>\n          <OrderInfo order={order} />\n        </Grid>\n        <Grid item md={8} xl={9} xs={12}>\n          <OrderItems order={order} />\n          <OrderDetails order={order} style={{ marginTop: 30 }} />\n        </Grid>\n      </Grid>\n    </Page>\n  );\n});\n\nexport default OrderManagementDetails;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n      alert(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.priority && x.priority == taxcontent ||\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\n\n\n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  // element.email &&  element.email.match(searchtext+'.*')  || \n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \n  //     element.username && element.username.match(searchtext+'.*')\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addtaxattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\nimport Attributescontent from './Attributescontent/Attributescontent';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n     <Attributescontent title= {\"Shipment Settings II\"} \n        masters={[]}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Mastercategories = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    alert(JSON.stringify(taxcontent));\n    // let response = await sendNetworkRequest(\n    //   \"/managecategories\",\n    //   {},\n    //   taxcontent\n    // );\n    // getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          prefix={data.prefix}\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Mastercategories;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n\n    //getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n\n    getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":2  ,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport data from \"./data.json\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./Configuration.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n}));\nexport const Userconfiguration = withRouter((props) => {\n  const master_options = [\n    \"Attribute Master\",\n    \"Categories\",\n    \"ProductTypes\",\n    \"Materials\",\n    \"Metal Colours\",\n    \"Metal Purities\",\n    \"Collections\",\n    \"Occassions\",\n    \"Styles\",\n    \"Themes\",\n    \"Designs\",\n    \"Weights\",\n    \"Diamond Types\",\n    \"Diamond Settings\",\n    \"Diamond Shapes\",\n    \"Earring Backings\",\n    \"Gemstone Settings\",\n    \"Gemstone Shapes\",\n    \"Gemstone Types\",\n    \"Stones\",\n    \"Stone Colours\",\n    \"Stone Shapes\",\n    \"Gender\",\n    \"SEO Priorities\",\n    \"Tax Settings 1\",\n    \"Tax Settings 2\",\n    \"Payment Status\",\n    \"Order Status\",\n    \"Shipping Zones\",\n    \"Shipment Setting I\",\n    \"Shipment Setting II\",\n  ];\n  const master_options_url = [\n    \"masterattributes\",\n    \"categories\",\n    \"producttypes\",\n    \"materialmaster\",\n    \"mastercolors\",\n    \"masterpurities\",\n    \"collections\",\n    \"masteroccassions\",\n    \"masterstyles\",\n    \"masterthemes\",\n    \"designs\",\n    \"weights\",\n    \"diamonds\",\n    \"diamondsettings\",\n    \"diamondshapes\",\n    \"earringbacking\",\n    \"gemstonesettings\",\n    \"gemstoneshapes\",\n    \"gemstonetypes\",\n    \"masterstones\",\n    \"masterstonecolors\",\n    \"masterstoneshapes\",\n    \"genders\",\n    \"seopriority\",\n    \"Taxsetup\",\n    \"taxsettings\",\n    \"paymentstatus\",\n    \"orderstatus\",\n    \"zones\",\n    \"shipmensettings\",\n    \"shippingattributes\",\n  ];\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => {\n    setRaised(true);\n  };\n  const onMouseOut = () => {\n    setRaised(false);\n    // setCardindex(-1)\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          User and Roles Management\n        </Typography>\n      </Grid>\n\n      {data.options.map((menu, index) => (\n        <Grid item xs={6} sm={4} lg={3}>\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\n            <Card fullwidth className=\"card2\">\n              <CardContent>\n                <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                  {menu.title}\n                </Typography>\n\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n              </CardContent>\n            </Card>\n          </Link>\n        </Grid>\n      ))}\n    </Grid>\n  );\n});\n\nexport default Userconfiguration;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport Addpermissions from '../../components/Addpermissions/Addpermissions';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterroles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false)\n  const [masterpages, setMasterpages] = React.useState([])\n  const [editroleid, setEditroleid] = React.useState('')\n  const [editpermissons, setEditpermissions] = React.useState({})\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n\n    let response =  await sendNetworkRequest('/manageroles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n    setMastervalue(response.roles)\n    setFiltervalue(response.roles)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  async function showpermissions(rowcontent)\n  {\n    let response =  await sendNetworkRequest('/getrolepermissions', {}, {role_id: rowcontent.id})\n    setEditpermissions(response.permissions)\n    setEditroleid(rowcontent.id)\n    setIsshowpermissions(true)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent)\n  {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id : editroleid\n    }\n    console.log(JSON.stringify(bodydata))\n    setIsshowpermissions(false)\n    let response =  await sendNetworkRequest('/managepermissions', {}, bodydata)\n     getmaster()\n\n    \n  }\n  function cancelpermissions(rowcontent)\n  {\n    setIsshowpermissions(false)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n       <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? <Addpermissions role_id={editroleid} isopen={isshowpermissions} permissions={editpermissons} pages={masterpages} onClose={cancelpermissions} onSave={updatepermissions} /> : null}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onPermissionadd={showpermissions} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterroles;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterscreens = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  \n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managepages', {}, taxcontent)\n    getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes)\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Screens\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns}  values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterscreens;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageadminusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster()\n  }\n  async function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getadminusers', {}, {})\n    let adminusers = response.users;\n    let users = []\n    adminusers.forEach(element => {\n        let userobj = {}\n        userobj['id'] = element.id;\n        userobj['username'] = element.username;\n        userobj['password'] = element.password;\n        userobj['email'] = element.email;\n        userobj['mobile'] = element.mobile;\n        userobj['status'] = element.status === 'Active' ? true : false;\n        let roles = []\n        let rolesnames = []\n\n        let userroles = element.user_roles;\n        userroles.forEach(userroleobj => {\n\n          let roleobj = {}\n          roleobj['id'] = userroleobj.master_role.id\n          roleobj['name'] = userroleobj.master_role.name\n          roles.push(roleobj)\n          rolesnames.push(userroleobj.master_role.name)\n        })\n        userobj['roles'] = roles\n        userobj['rolenames'] = rolesnames.join(' , ')\n        users.push(userobj)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs url=\"/userconfiguration\" name=\"userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Admin Users\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageadminusers;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    if(element.shortCode == 'All')\n    {\n      mastervendors.forEach(element => {\n        vendorid.push(element.shortCode)\n      })\n      setSelectedvendors(vendorid)\n    }else{\n      vendorid.push(element.shortCode)\n      setSelectedvendors(vendorid)\n\n    }\n   })\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      var sellingprice = goldprice.selling_price\n      if(pricetype.value == 2) \n      {\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\n       \n      }\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*sellingprice\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                  disableClearable={true}\n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <Page\n    //   className={classes.root}\n    //   title=\"Customer Management Details\"\n    // >\n    //   <Header />\n    //    <Tabs\n    //     className={classes.tabs}\n    //     onChange={handleTabsChange}\n    //     scrollButtons=\"auto\"\n    //     value={tab}\n    //     variant=\"scrollable\"\n    //   >\n    //     {tabs.map(tab => (\n    //       <Tab\n    //         key={tab.value}\n    //         label={tab.label}\n    //         value={tab.value}\n    //       />\n    //     ))}\n    //   </Tabs>\n    //   <Divider className={classes.divider} />\n    //  {/* <div className={classes.content}>\n    //     {tab === 'summary' && <Summary />}\n    //     {tab === 'invoices' && <Invoices />}\n    //     {tab === 'logs' && <Logs />}\n    //   </div> */}\n    // </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Phone</TableCell>\n               <TableCell>{customer.mobile}\n               {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>}\n                </TableCell>\n            </TableRow>\n            \n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nconst master_options = ['Address Book','Wish List','Orders']\n  const master_options_url = ['/address','/userwishlist','/orderlist']\n\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    // history.push(`orderlist/${id}`)\n    window.location.href = `orderlist/${id}`\n  }\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid> */}\n    <Grid container item xs={12} sm={12} lg={12} >\n    <Grid  item xs={12} sm={6} lg={6} >\n    <General customer ={customer} /> \n\n      </Grid>\n\n    </Grid>\n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={2} lg={2} >\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\n     <Card fullwidth\n    //  onClick={(e) => ProductEdit(customer.id)}\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <div className={classes.root}>\n      \n    //   <Tabs\n    //     orientation=\"vertical\"\n    //     variant=\"standard\"\n    //     value={value}\n    //     onChange={handleChange}\n    //     aria-label=\"Vertical tabs example\"\n    //     className={classes.tabs}\n    //   >\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n    //   </Tabs>\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\n    //   <General customer ={customer} /> </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n    //   </TabPanel>\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n    //   </TabPanel>\n      \n     \n    // </div>\n  );\n});\n\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Userwishlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Useraddresses = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.hsnNumber}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Tax Settings\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addtaxattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n    let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\n    //  getmaster()\n     history.push('/taxsettings')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TAXMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n\n            var selectedcategory = []\n            \n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories)\n              {\n                if(categories.indexOf(catobj.alias) > -1)\n                {\n                  selectedcategory.push(catobj)\n                }\n              }\n              \n\n            })\n\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addtaxattributes;","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Typography from \"@material-ui/core/Typography\";\nconst Banners = (props) => {\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          Landing Page Banner\n        </Typography>\n      </Grid>\n\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/styloribanner\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                Stylori\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/silverbanner\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                Stylori Silver\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Banners;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORILANDINGBANNERS, CREATESTYLORILANDINGBANNER, DELETESTYLORILANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst StyloriLandingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORILANDINGBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESTYLORILANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    \n    let create_banner_data = {\n      position: Number(createlandingbanner.position),\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESTYLORILANDINGBANNER,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Stylori Landing Page Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.url} target=\"_blank\" className={classes.link_style}>\n                      {val.url}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default StyloriLandingPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Breadcrumbs } from \"../../../components\";\nimport StyloriLandingPage from \"./components/stylorilandingpage\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst Styloribanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"/banners\" name=\"Landing Page Banner\"></Breadcrumbs>\n      <StyloriLandingPage />\n    </>\n  );\n};\nexport default Styloribanner;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERLANDINGBANNERS, CREATESILVERLANDINGBANNER, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverLandingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLANDINGBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriSilverBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: createlandingbanner.position,\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLANDINGBANNER,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Silver Landing Page Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.url} target=\"_blank\" className={classes.link_style}>\n                      {val.url}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverLandingPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Breadcrumbs } from \"../../../components\";\nimport SilverLandingPage from \"./components/silverlandingpage\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst Silverbanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"/banners\" name=\"Landing Page Banner\"></Breadcrumbs>\n      <SilverLandingPage />\n    </>\n  );\n};\nexport default Silverbanner;\n","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from \"react\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { withRouter } from \"react-router-dom\";\nimport { useStyles } from \"./styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { ProductContext } from \"../../context\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { GlobalContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nimport { Paper, Avatar, Typography } from \"@material-ui/core\";\nimport data from \"../menupages.json\";\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload, setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem(\"accesspages\");\n  console.log(accesspages);\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  };\n  const handleClick = (type) => (e) => {\n    if (type === \"Pricing\") {\n      setGlobalCtx({ ...globalCtx, optionname: type, selectedIndex: 5, isExpand: !globalCtx.isExpand });\n    } else {\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\n    }\n  };\n  async function getmasterpages() {\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach((element) => {\n      pages.push(element.pageurl);\n      if (element.is_write) {\n        pagepermissions.push(element.pageurl);\n      }\n    });\n    // setPages(pageaccess)\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n    //setIsreload(true)\n\n    localStorage.setItem(\"accesspages\", pages);\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n    window.location.reload();\n  }\n  React.useEffect(() => {\n    //alert(globalCtx.accesspages)\n    if (!accesspages) {\n      // getmasterpages()\n    } else {\n      //  setIsreload(true)\n    }\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n  }, []);\n  function handleListItemClick(event, index) {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\n  }\n  console.log(data);\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>{theme.direction === \"rtl\" ? <ChevronRightIcon /> : <ChevronLeftIcon />}</IconButton>\n        </div>\n        <Divider />\n\n        <List>\n          {data.menus.map((menuobj, index) => (\n            <>\n              {menuobj.submenu ? (\n                <>\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <>\n                      <ListItem button onClick={handleClick(menuobj.name)}>\n                        <ListItemIcon>\n                          <InboxIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                        {globalCtx.isExpand && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse in={globalCtx.isExpand && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                          {menuobj.submenu.map((submenuobj, subindex) => (\n                            <>\n                              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ? (\n                                <Link underline=\"none\" component={RouterLink} to={submenuobj.url}>\n                                  <ListItem\n                                    button\n                                    className={classes.nested}\n                                    selected={globalCtx.selectedIndex === subindex}\n                                    onClick={(event) => handleListItemClick(event, subindex)}\n                                  >\n                                    <ListItemIcon>\n                                      <StarBorder />\n                                    </ListItemIcon>\n                                    <ListItemText primary={submenuobj.name} />\n                                  </ListItem>\n                                </Link>\n                              ) : null}\n                            </>\n                          ))}\n                        </List>\n                      </Collapse>{\" \"}\n                    </>\n                  ) : null}\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <Link underline=\"none\" component={RouterLink} to={menuobj.url}>\n                      <ListItem\n                        button\n                        key={\"Product List\"}\n                        selected={globalCtx.optionname === menuobj.name}\n                        onClick={handleClick(menuobj.name)}\n                      >\n                        <ListItemIcon>\n                          <InboxIcon />{\" \"}\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                      </ListItem>\n                    </Link>\n                  ) : null}{\" \"}\n                </>\n              )}\n            </>\n          ))}\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\")\n    window.location = '/'\n  }\n\n  \n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditDiamond = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    diamondweight  : diamond.diamondweight ? diamond.diamondweight : '',\n    diamondcount  : diamond.diamondcount ? diamond.diamondcount : '',\n    diamondsettings : diamond.diamondsettings ? diamond.diamondsettings : null,\n    diamondshape : diamond.diamondshape ? diamond.diamondshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.diamondweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.diamondcount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondsettings}\n                    value={editcontent.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditDiamond.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditDiamond;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditDiamond from './Components/EditDiamond/EditDiamond';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    \n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setEditcontent({\n      id : diamondData.id,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    setOpenedit(true)\n  }\n  async function DiamondSave(diamondobj){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight){\n      \n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(diamondobj.id===diamondListData.id){\n          diamondListData.diamondSettings=diamondobj.diamondsettings.name;\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\n          diamondListData.stoneCount = diamondobj.diamondcount;\n          diamondListData.stoneWeight = diamondobj.diamondweight;\n          bodydata['diamondSettings'] = diamondobj.diamondsettings.name\n          bodydata['diamondShape'] = diamondobj.diamondshape.name\n          bodydata['stoneCount'] = diamondobj.diamondcount;\n          bodydata['stoneWeight'] = diamondobj.diamondweight;\n          bodydata['diamondid'] = diamondobj.id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      let response =  await sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n   // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      setEditcontent(null)\n      setOpenedit(false)\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table> \n        {editcontent && <EditDiamond\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditGemstone = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    gemstonesettings  : diamond.gemstonesettings ? diamond.gemstonesettings : '',\n    gemstonecount  : diamond.gemstonecount ? diamond.gemstonecount : '',\n    gemstoneweight : diamond.gemstoneweight ? diamond.gemstoneweight : null,\n    gemstonesize : diamond.gemstonesize ? diamond.gemstonesize : null,\n\n    \n    gemstoneshape : diamond.gemstoneshape ? diamond.gemstoneshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n   // alert(JSON.stringify(editcontent.gemstonecount))\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        \n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstonesize}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstonesize')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstoneweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstoneweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.gemstonecount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.gemstonesettings}\n                    value={editcontent.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.gemstoneshape}\n                    options={productCtx.masterData.gemstoneshape}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditGemstone.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditGemstone;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport EditGemstone from './Components/EditGemstone/EditGemstone';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setEditcontent({\n      id : gemstoneData.id,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n   // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n   setOpenedit(true)\n  }\n async function GemstoneSave(gemdata) {\n    if (gemdata.gemstonesettings && gemdata.gemstoneshape && gemdata.gemstonecount && gemdata.gemstoneweight && gemdata.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (gemdata.id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\n          bodydata['gemstoneSetting'] = gemdata.gemstonesettings.name\n          bodydata['gemstoneShape'] = gemdata.gemstoneshape.name\n          bodydata['stoneCount'] = gemdata.gemstonecount;\n          bodydata['gemstoneSize'] = gemdata.gemstonesize;\n          bodydata['stoneWeight'] = gemdata.gemstoneweight;\n          bodydata['id'] = gemdata.id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===gemdata.id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setEditcontent(null)\n      setOpenedit(false)\n    //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && <EditGemstone\n        diamond={editcontent}\n        onApply={GemstoneSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      discount:diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n\n          skulistdata.discountDesc =  productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['discount'] = productCtx.discount;\n\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n\n{props.displycolumns.indexOf('Discount') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.discount}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('discount')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.discountDesc}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(2, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditPrice = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    editcostprice:diamond.editcostprice,\n    editcostpricetax: diamond.editcostpricetax,\n    editsellingprice:diamond.editsellingprice,\n    editsellingpricetax:diamond.editsellingpricetax,\n    editmarkupprice: diamond.editmarkupprice,\n    editmarkuppricetax : diamond.editmarkuppricetax,\n    editdiscountprice: diamond.editdiscountprice,\n    editdiscountpricetax: diamond.editdiscountpricetax\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Price Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editcostprice}\n              placeholder={\"costPrice\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"costPriceTax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostpricetax')}\n              value={editcontent.editcostpricetax}\n              />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editsellingprice}\n              placeholder={\"Selling Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Selling Pricetax\"\n              placeholder=\"Selling Pricetax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingpricetax')}\n              value={editcontent.editsellingpricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editmarkupprice}\n              placeholder={\"Markup Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkupprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Markup Price Tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkuppricetax')}\n              value={editcontent.editmarkuppricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editdiscountprice}\n              placeholder={\"Discount Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Discount Price tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountpricetax')}\n              value={editcontent.editdiscountpricetax}\n              />\n                 \n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditPrice.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditPrice;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditPrice from './Components/EditPrice/EditPrice';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n    setEditcontent({\n      id : diamondData.generatedSku,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n     //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n   // setOpenedit(true)\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(priceobj){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(priceobj.id===skulistdata.generatedSku){\n          skulistdata.costPrice = priceobj.editcostprice;\n          skulistdata.costPriceTax = priceobj.editcostpricetax;\n          skulistdata.sellingPrice =  priceobj.editsellingprice;\n          skulistdata.sellingPriceTax = priceobj.editsellingpricetax\n          skulistdata.markupPrice = priceobj.editmarkupprice\n          skulistdata.markupPriceTax = priceobj.editmarkuppricetax\n          skulistdata.discountPrice = priceobj.editdiscountprice\n          skulistdata.discountPriceTax = priceobj.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(priceobj.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(priceobj.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(priceobj.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(priceobj.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(priceobj.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(priceobj.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(priceobj.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(priceobj.editdiscountpricetax)\n           bodydata['marginOnSalePercentage'] = parseFloat(priceobj.marginOnSalePercentage)\n\n           bodydata['generatedSku'] = priceobj.id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n      alert(JSON.stringify(bodydata))\n     // sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      // setEditcontent(null)\n      // setOpenedit(false)\n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                }  </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                {props.displycolumns.indexOf('View') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n\n<Button variant=\"outlined\" color=\"primary\" onClick={(e) => props.onShow(row.generatedSku)}>Summary\n</Button> </TableCell>: null }\n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && <EditPrice\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">{props.title ? props.title : \"Variants Table\"} </h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport axios from \"axios\";\nimport { makeid } from \"../../utils/commonmethod\";\n\nimport { Paper, Card, CardHeader, CardContent, Grid } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport \"./upload.css\";\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\",\n  },\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\n  },\n  formContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30,\n  },\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = \"\";\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach((imgobj) => {\n    if (props.color === imgobj.productColor) {\n      image_count = image_count + 1;\n      if (imgobj.productId) {\n        product_id = imgobj.productId;\n      }\n      // setTotalimages(image_count)\n    }\n  });\n  async function uploadimagetoserver(fileobj, filetype, imagename, prodid, imagecontent, isedit, position) {\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      { image: filetype, filename: imagename, product_id: prodid },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    var filepathname = returnData.filepath;\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\n    var options = {\n      headers: {\n        \"Content-Type\": filetype,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n    if (isedit) {\n      imagecontent[\"imageUrl\"] = filepathname.replace(\"jpeg\", \"jpg\");\n    } else {\n      const imageobj = {\n        name: product_id + \"_\" + (image_count + 1) + props.color.charAt(0),\n        imagePosition: image_count + 1,\n        productColor: props.color,\n        productId: product_id,\n        imageUrl: filepathname.replace(\"jpeg\", \"jpg\"),\n        url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\n      };\n      imagecontent = imageobj;\n    }\n    if (!isedit) {\n      var productimgs = [];\n      productimages.forEach((img) => {\n        productimgs.push(img);\n      });\n      productimgs.push(imagecontent);\n    }\n    await axios.put(signedRequest, fileobj, options);\n    let responsecontent = await sendNetworkRequest(\"/updateproductimage\", {}, { imageobj: imagecontent, isedit: isedit }, false);\n    image_count = image_count + 1;\n    if (!isedit) {\n      setProductimages(productimgs);\n    }\n  }\n  const handlenewAssetChange = (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => {\n      // const size = files[index].size;\n      var imagecount = 1;\n      if (productimages) {\n        imagecount = image_count + 1;\n      }\n      let imagename = product_id + \"-\" + imagecount + props.color.charAt(0);\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n\n      uploadimagetoserver(files[index], fileType, imagename, product_id, {}, false);\n    });\n  };\n  const handleAssetChange = (e, imageposition, category, endPoint) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => {\n      const size = files[index].size;\n      alert(imageposition);\n      let productimageobj = {};\n      productimages.forEach((content) => {\n        if (content.productColor === props.color && imageposition === content.imagePosition) {\n          productimageobj = content;\n        }\n      });\n      var prodid = productimageobj.productId;\n      var prodcolor = productimageobj.productColor;\n      var imagecount = 1;\n      let randomnum = makeid(1, \"\", 1);\n      if (productimages) {\n        //  imagecount = image_count + 1;\n      }\n      let imagename = prodid + \"-\" + imageposition + randomnum + prodcolor.charAt(0);\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n      //alert(imagename)\n      uploadimagetoserver(files[index], fileType, imagename, prodid, productimageobj, true);\n      // alert(imagename)\n    });\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color} />\n        <CardContent>\n          <Grid container spacing={2} className={classes.styleFile}>\n            {productimages.map((url) => (\n              <>\n                {props.color === url.productColor ? (\n                  <div style={{ position: \"relative\" }}>\n                    <i\n                      className=\"fa fa-window-edit\"\n                      style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: \"12\" }}\n                    />\n\n                    <Grid\n                      item\n                      style={{\n                        width: \"150px\",\n                        wordBreak: \"break-all\",\n                        height: \"150px\",\n                        padding: \"8px\",\n                        margin: \"0\",\n                        cursor: \"pointer\",\n                        position: \"relative\",\n                      }}\n                      className=\"container\"\n                    >\n                      <input\n                        type=\"file\"\n                        className=\"custom-file-input\"\n                        multiple\n                        onChange={(e) => handleAssetChange(e, url.imagePosition, \"\", \"\")}\n                      ></input>\n\n                      <img\n                        src={\n                          \"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\" +\n                          url.imageUrl.replace(url.productId, url.productId + \"/1000X1000\")\n                        }\n                        style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }}\n                      />\n                    </Grid>\n                    <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\n                      {\" \"}\n                      {url.imagePosition}{\" \"}\n                    </Typography>\n\n                    <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\n                      {\" \"}\n                      {url.ishover ? \"hover\" : \"\"}{\" \"}\n                    </Typography>\n                  </div>\n                ) : null}\n              </>\n            ))}\n            <Grid\n              item\n              style={{\n                width: \"150px\",\n                wordBreak: \"break-all\",\n                height: \"150px\",\n                padding: \"8px\",\n                margin: \"0\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                position: \"relative\",\n              }}\n              className=\"container\"\n            >\n              {\n                <label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                  <i\n                    className=\"fa fa-plus\"\n                    aria-hidden=\"true\"\n                    style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}\n                  ></i>\n                  <input type=\"file\" className=\"custom-file-input\" multiple onChange={(e) => handlenewAssetChange(e)}></input>\n                </label>\n              }\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n      \n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n         \n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\nimport columnnames from './columnnames.json';\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('lg');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose()\n  };\n\n  return (\n    <div>\n      \n      <Dialog\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\n        <DialogContent>\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\n        </DialogContent>\n        <DialogActions>\n       \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, TextField, Button, Fab } from \"@material-ui/core\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from \"./DiamondDetails\";\nimport GemstoneDetails from \"./GemstoneDetails\";\nimport Variants from \"./Variants\";\nimport Skupricing from \"./Skupricing\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES, PRODUCTDESCRIPTIONEDIT } from \"../../graphql/query\";\nimport CreateVariant from \"./CreateVariant\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SortHeader from \"./Components/SortHeader\";\nimport columnnames from \"./columnnames.json\";\nimport Productimages from \"./Productimages\";\nimport FullLoader from \"../../components/Loader\";\nimport Pricedetails from \"./Pricedetails\";\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { sk } from \"date-fns/locale\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.pricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(columnnames.defaultpricingnames);\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\n\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    createVariant();\n    setExpand(isExpanded ? true : false);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\",\n  });\n  let prod_id = props.location.pathname.split(\"/\")[2];\n\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = evt.target.validity.valid ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname });\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n\n  const handleinputChange = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n  const handledesinputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  // const handleinputChange = type => (event, value) => {\n  //   alert(event.target.value)\n  //       setProductCtx({ ...productCtx, [type]: value})\n  // }\n  function dismisspricesummary() {\n    setIsshowpricesummary(false);\n  }\n  function getColumnnames(columnnames, displytype) {\n    let displycolumns = [];\n    let displycolumnnames = [];\n\n    columnnames.forEach((element) => {\n      displycolumnnames.push(element.name);\n      displycolumns.push(element);\n    });\n    if (displytype === 1) {\n      setDisplycolumns(displycolumnnames);\n      setVarientcolumns(columnnames);\n    } else {\n      setPricingcolumns(columnnames);\n      setDisplypricingcolumns(displycolumns);\n      setDisplycolumnnames(displycolumnnames);\n    }\n  }\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist &&\n      productCtx.diamondlist.map((diamond_type) => {\n        let diamond_data = {\n          id: diamond_type.id,\n          diamondType: diamond_type.diamondType,\n        };\n        let status = diamondTypesArray.some((store_dia) => store_dia.diamondType == diamond_type.diamondType)\n          ? \"\"\n          : diamondTypesArray.push(diamond_data);\n        return diamond_type;\n      });\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\n\n    setProductCtx({\n      ...productCtx,\n      productCtx,\n    });\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES }),\n    };\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then((res) => res.json())\n      .then((diamondtypesData) => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, \"diamondtypesdata\");\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes,\n        });\n      })\n      .catch(console.error);\n\n    //setstate({ ...state, create_variant: true })\n  }\n  async function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions: productCtx.occassions,\n      collections: productCtx.collections,\n      stonecount: productCtx.stonecount,\n      stonecolour: productCtx.stonecolour,\n      gender: productCtx.product_gender,\n      // prodDescription: productCtx.prod_desc,\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    };\n    // debugger\n    console.log(productEditItem);\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: PRODUCTDESCRIPTIONEDIT,\n        variables: { productId: prod_id, prod_desc: productCtx.prod_desc },\n      }),\n    };\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fetchvalue) => {\n        console.log(fetchvalue);\n        setProductCtx({ ...productCtx, prod_desc: fetchvalue.data.updateProductListByProductId.productList.prodDescription });\n      });\n    let response = await sendNetworkRequest(\"/editproduct\", {}, productEditItem);\n    // debugger\n    console.log(\"************\");\n    console.log(JSON.stringify(productEditItem));\n    if (response) {\n      console.log(response);\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      console.log(JSON.stringify(productEditItem));\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem));\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = (name) => async (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      productid: prod_id,\n      isactive: event.target.checked,\n    };\n    let esbody = {\n      product_id: prod_id,\n    };\n    var endpoint = \"/reindex\";\n    if (event.target.checked) {\n      endpoint = \"/esearch_forceindex\";\n    }\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\n\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\n    let updateproductattr = await sendNetworkRequest(\"/updateproductattribute\", {}, esbody);\n\n    console.log(\"************\");\n    console.log(JSON.stringify(bodycontent));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  };\n  async function showpricesummary(sku) {\n    let response = await sendNetworkRequest(\"/viewskupricesummary/\" + sku, {}, null);\n    let price_summary = [];\n    let skuprice = response.price_summary.skuprice;\n    // let cost_obj = {\n    //   component: \"Cost Price\",\n    //   price : skuprice.cost_price - skuprice.cost_price_tax,\n    //   tax : skuprice.cost_price_tax,\n    //   total : skuprice.cost_price\n\n    // }\n    // price_summary.push(cost_obj)\n\n    // let selling_price = {\n    //   component: \"Selling Price\",\n    //   price : skuprice.selling_price ,\n    //   tax : skuprice.selling_price_tax,\n    //   total : skuprice.selling_price\n\n    // }\n    // price_summary.push(selling_price)\n    // let discount_price = {\n    //   component: \"discount Price\",\n    //   price : skuprice.discount_price ,\n    //   tax : skuprice.discount_price_tax,\n    //   total : skuprice.discount_price\n\n    // }\n    // price_summary.push(discount_price)\n    // let markup_price = {\n    //   component: \"markup Price\",\n    //   price : skuprice.markup_price ,\n    //   tax : skuprice.markup_price_tax,\n    //   total : skuprice.markup_price\n\n    // }\n\n    let metalprice = response.price_summary.metals;\n    metalprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n\n    let mateialprice = response.price_summary.materials;\n    mateialprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n    let obj = {\n      component: \"SKU Price\",\n      cost_price: skuprice.cost_price,\n      selling_price: skuprice.selling_price,\n      markup_price: skuprice.markup_price,\n      discount_price: skuprice.discount_price,\n    };\n    price_summary.push(obj);\n    //alert(JSON.stringify(metalprice))\n    //   price_summary.push(markup_price)\n    setPricesummaryvalue(price_summary);\n    setIsshowpricesummary(true);\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function backProductList() {\n    window.location = \"/productlist\";\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: PRODUCTEDIT,\n        variables: { productId: prod_id },\n      }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        var genders = fatchvalue.data.productListByProductId.gender;\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient;\n        let sizes_arr = [];\n        if (size_obj) {\n          let sizes = size_obj.split(\",\");\n          sizes.forEach((element) => {\n            sizes_arr.push(element);\n          });\n        }\n        let gender_arr = [];\n        if (genders) {\n          genders = genders.split(\",\");\n          genders.forEach((element) => {\n            let gender_obj = {\n              label: element,\n            };\n            gender_arr.push(gender_obj);\n          });\n        }\n        let defaultcolour = \"\";\n        var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes;\n        images_arr.forEach((element) => {\n          if (element.isdefault) {\n            defaultcolour = element.productColor;\n          }\n        });\n        var metalcolors = [];\n        Array.prototype.insert = function (index, item) {\n          this.splice(index, 0, item);\n        };\n        let metalcolor = fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes;\n        metalcolor.forEach((colorobj) => {\n          if (colorobj.productColor === defaultcolour) {\n            colorobj[\"isdefault\"] = true;\n            metalcolors.insert(0, colorobj);\n          } else {\n            colorobj[\"isdefault\"] = false;\n            metalcolors.push(colorobj);\n          }\n        });\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode: fatchvalue.data.productListByProductId.vendorCode,\n          product_gender: gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes, // productDiamondColor:diamondTypesArray,\n          occassions: fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections: fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount: fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour: fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes,\n          prod_desc: fatchvalue.data.productListByProductId.prodDescription,\n          // productDiamondClarity:diamondClaritySku,\n        });\n\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName)),\n        });\n        setLoadopen(false);\n      })\n      .catch(console.error);\n  }, []);\n  // debugger\n  return state.create_variant ? (\n    <CreateVariant\n      productMetalColor={productCtx.productMetalColor}\n      productMetalPurity={productCtx.productMetalPurity}\n      changeVariant={changeVariant}\n      productId={prod_id}\n    />\n  ) : (\n    <Grid container>\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <Grid item container spacing={1}>\n        <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}>\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            pattern=\"[a-zA-Z]*\"\n            value={productCtx.productname}\n            id=\"productname\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"productname\"\n            label=\"Product Name\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"productname\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.prod_desc ? productCtx.prod_desc : \"\"}\n            id=\"prod_desc\"\n            // error={\n            //   productCtx &&\n            //   productCtx.error_message &&\n            //   productCtx.error_message.productname\n            // }\n            name=\"prod_desc\"\n            label=\"Product Description\"\n            //onInput={keyPress.bind(this)}\n            onChange={handledesinputChange(\"prod_desc\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_categoy}\n            id=\"product_category\"\n            InputProps={{\n              readOnly: true,\n            }}\n            error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n            name=\"product_category\"\n            label=\"Product Category\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_type}\n            id=\"product_type\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"product_type\"\n            label=\"Product Type\"\n          />\n          <Input\n            variant=\"outlined\"\n            margin=\"dense\"\n            label=\"Vendor Name\"\n            fullWidth\n            className={classes.helperinput}\n            value={productCtx.vendorcode}\n            id=\"productvendorcode\"\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"Vendor Name\"\n          />\n\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"seo_text\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"seo_text\"\n            label=\"Minimum Order Quantity\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"url\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"url\"\n            label=\"Maximum Order Quantity\"\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productmaterials}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Product Materials\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{\n                  ...params.InputProps,\n                  readOnly: true,\n                  type: \"search\",\n                }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productMetalColor}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productMetalPurity}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Purity\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.product_gender}\n            getOptionLabel={(option) => option.label}\n            onChange={handleoptionChange(\"product_gender\")}\n            options={productCtx.masterData.gender}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Gender\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.themes}\n            options={productCtx.masterData.themes}\n            value={productCtx.themes}\n            onChange={handleoptionChange(\"themes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Themes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.prod_styles}\n            options={productCtx.masterData.styles}\n            onChange={handleoptionChange(\"prod_styles\")}\n            value={productCtx.prod_styles}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Styles\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.occassions}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.occassions}\n            options={productCtx.masterData.occasions}\n            onChange={handleoptionChange(\"occassions\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Occasions\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.collections}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.collections}\n            options={productCtx.masterData.collections}\n            onChange={handleoptionChange(\"collections\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Collections\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecount}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecount}\n            options={productCtx.masterData.stones}\n            onChange={handleoptionChange(\"stonecount\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"No of Stones\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecolour}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecolour}\n            options={productCtx.masterData.gemstonecolor}\n            onChange={handleoptionChange(\"stonecolour\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Stone Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <FormControlLabel\n            label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n            control={<Switch checked={productCtx.isactive} onChange={handledisableproduct(\"isactive\")} value=\"checkedA\" />}\n          />\n\n          <Grid\n            item\n            container\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\",\n            }}\n          >\n            <Grid item>\n              <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                Update\n              </Button>\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={9} lg={9} spacing={2} style={{ padding: \"15px\" }}>\n          <Grid container item md={6}></Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n          <DiamondDetails diamond={productCtx.diamondlist} />\n          {productCtx.gemstonelist.length > 0 ? (\n            <>\n              {\" \"}\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\n            </>\n          ) : null}\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>Variant Creation</Grid>\n\n          <Grid style={{}}>\n            {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n\n            <ExpansionPanel expanded={expand} onChange={handleChange()}>\n              <ExpansionPanelSummary\n                expandIcon={expand ? <CloseIcon /> : <AddIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n              >\n                <div className={classes.column}>\n                  <Typography className={classes.heading}>Add New variant</Typography>\n                </div>\n              </ExpansionPanelSummary>\n              <Divider />\n              <ExpansionPanelDetails className={classes.details}>\n                <CreateVariant\n                  productMetalColor={productCtx.productMetalColor}\n                  productMetalPurity={productCtx.productMetalPurity}\n                  changeVariant={changeVariant}\n                  productId={prod_id}\n                />\n              </ExpansionPanelDetails>\n              <Divider />\n              {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n            </ExpansionPanel>\n          </Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>\n            <SortHeader columnnames={columnnames.varients} getColumnnames={getColumnnames} displytype={1} />{\" \"}\n          </Grid>\n\n          <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>\n            <SortHeader\n              title={\"Pricing Table\"}\n              columnnames={pricingcolumns}\n              displycolumns={displypricingcolumns}\n              getColumnnames={getColumnnames}\n              displytype={2}\n            />\n            <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n              Price Run For This Product\n            </Button>\n          </Grid>\n          {isshowpricesummary ? <Pricedetails onClose={dismisspricesummary} values={pricesummaryvalues} /> : null}\n          <Skupricing\n            variants={productCtx.variants}\n            onShow={showpricesummary}\n            columns={displypricingcolumns}\n            displycolumns={displycolumnnames}\n          />\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n          {productCtx.productMetalColor.map((colors) => (\n            <Productimages color={colors.productColor} isdefault={colors.isdefault} prodimages={productCtx.product_images} />\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const ProductAttributes = withRouter((props) => {\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n\n  const _content = (\n    <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}>\n      <Component {...props} />\n    </ProductProvider>\n  );\n  return _content;\n});\nexport default withRouter(ProductAttributes);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport route from \"./route\";\nimport {\n  Dashboard,\n  Login,\n  Productupload,\n  Configuration,\n  Manageusers,\n  Customerdetails,\n  Priceupdate,\n  Vendorprice,\n  Vendorlist,\n  Markupprice,\n  Goldpriceupdate,\n  Userwishlist,\n  Productlist,\n  Materiallist,\n  Masterorderstatus,\n  Shippingzones,\n  Manageadminusers,\n  Shipmentsettings,\n  Addshippingattributes,\n  Userconfiguration,\n  Masterroles,\n  Masterscreens,\n  Useraddresses,\n  Addtaxattributes,\n  OrderManagementDetails,\n  Materialmaster,\n  CategoryList,\n  Mastermetalcolors,\n  Masterpurities,\n  Masterdesigns,\n  Shippingattributes,\n  Voucherdiscount,\n  Masterstyles,\n  Masterthemes,\n  Masteroccassions,\n  Masterpaymentstatus,\n  Salediscount,\n  Masterweights,\n  Taxsettings,\n  Masterstones,\n  Masterstonecolors,\n  Masterstoneshapes,\n  Masterattribute,\n  Mastercategories,\n  OrderList,\n  Mastergemsettings,\n  Seopriority,\n  Mastergenders,\n  Mastergemshapes,\n  Mastergemtypes,\n  Earringbacking,\n  Masterproducttypes,\n  Masterdiamondshapes,\n  Taxsetup,\n  Masterdiamonds,\n  Masterdiamondsettings,\n  DiscountList,\n  VoucherdiscountListing,\n  Mastercollections,\n  Masterpages,\n} from \"../screens\";\nimport Banners from \"../screens/Banners/banners\";\nimport Styloribanner from \"../screens/Banners/styloribanner/styloribanner\";\nimport Silverbanner from \"../screens/Banners/silverbanner/silverbanner\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { NetworkProvider } from \"../context/NetworkContext\";\nimport { GlobalContext } from \"../context\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\nimport { ProductContext, ProductProvider } from \"../context/ProductuploadContext\";\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\n\nconst MainApp = () => {\n  const { globalCtx } = React.useContext(GlobalContext);\n  const { productCtx } = React.useContext(ProductContext);\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\n\n  return (\n    <ApolloProvider client={client}>\n      {/* <ProductProvider > */}\n      <NetworkProvider>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Login} />\n          <Route path={route.login} component={Login} />\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\n          <PrivateRoute path={route.productupload} component={Productupload} />\n          <PrivateRoute path={route.configuration} component={Configuration} />\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\n          <PrivateRoute path={route.productlist} component={Productlist} />\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n          <PrivateRoute path={route.producttypes} component={Masterproducttypes} />\n          <PrivateRoute path={route.voucherdiscount} component={Voucherdiscount} />\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n          <PrivateRoute path={route.orderlist} component={OrderList} />\n          <PrivateRoute path={route.userorders} component={OrderList} />\n          <PrivateRoute path={route.address} component={Useraddresses} />\n\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n          <PrivateRoute path={route.category} component={Mastercategories} />\n          <PrivateRoute path={route.masterattributes} component={Masterattribute} />\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\n          <PrivateRoute path={route.masterstonecolors} component={Masterstonecolors} />\n          <PrivateRoute path={route.masterstoneshapes} component={Masterstoneshapes} />\n          <PrivateRoute path={route.weights} component={Masterweights} />\n          <PrivateRoute path={route.masteroccassions} component={Masteroccassions} />\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\n          <PrivateRoute path={route.manageadminusers} component={Manageadminusers} />\n          <PrivateRoute path={route.goldpriceupdate} component={Goldpriceupdate} />\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\n          <PrivateRoute path={route.customerdetails} component={Customerdetails} />\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\n          <PrivateRoute path={route.orderdetails} component={OrderManagementDetails} />\n\n          <PrivateRoute path={route.userconfiguration} component={Userconfiguration} />\n\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n          <PrivateRoute path={route.mastermaterial} component={Materialmaster} />\n          <PrivateRoute path={route.mastercolors} component={Mastermetalcolors} />\n          <PrivateRoute path={route.masterpurities} component={Masterpurities} />\n          <PrivateRoute path={route.salediscountlist} component={DiscountList} />\n          <PrivateRoute path={route.voucherdiscountlist} component={VoucherdiscountListing} />\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n          <PrivateRoute path={route.mastercollections} component={Mastercollections} />\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n          <PrivateRoute path={route.masterdiamonds} component={Masterdiamonds} />\n          <PrivateRoute path={route.diamondsettings} component={Masterdiamondsettings} />\n          <PrivateRoute path={route.diamondshapes} component={Masterdiamondshapes} />\n          <PrivateRoute path={route.earringbacking} component={Earringbacking} />\n          <PrivateRoute path={route.gemsettings} component={Mastergemsettings} />\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n          <PrivateRoute path={route.masterpaymentstatus} component={Masterpaymentstatus} />\n          <PrivateRoute path={route.masterorderstatus} component={Masterorderstatus} />\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n          <PrivateRoute path={route.shippingattributes} component={Shippingattributes} />\n          <PrivateRoute path={route.addshippingattributes} component={Addshippingattributes} />\n          <PrivateRoute path={route.addtaxattributes} component={Addtaxattributes} />\n\n          <PrivateRoute path={route.gender} component={Mastergenders} />\n          <PrivateRoute path={route.seo} component={Seopriority} />\n\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n          <PrivateRoute exact path={route.editdiscount} component={Salediscount} />\n\n          <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />\n          <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />\n          <PrivateRoute path={route.shipmentsettings} component={Shipmentsettings} />\n          <PrivateRoute path={route.banners} component={Banners} />\n          <PrivateRoute path={route.styloribanner} component={Styloribanner} />\n          <PrivateRoute path={route.silverbanner} component={Silverbanner} />\n        </Switch>\n      </NetworkProvider>\n      {/* </ProductProvider> */}\n    </ApolloProvider>\n  );\n};\n\nexport default MainApp;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}