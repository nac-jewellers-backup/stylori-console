{"version":3,"sources":["config.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","context/AlertContext.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","screens/AbandonedCart/cart_details.js","screens/AbandonedCart/index.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Page/Page.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","components/ProductFilter/components/downloadcsv.js","components/ProductFilter/components/FullCSVData.js","components/ProductFilter/ProductFilter.js","components/Alert/index.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Configuration/Configuration.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/components/General/General.js","components/Mastercontent/components/EditContent/EditContent.js","components/EnhancedTableHead/EnhancedTableHead.js","components/Mastercontent/Mastercontent.js","screens/Customerdetails/Customerdetails.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","components/Input.js","screens/Dashboard/Dashboard.js","screens/DiscountList/components/Header/Header.js","components/ConformationAlert/ConformationAlert.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/Earringbacking/Earringbacking.js","screens/Goldpriceupdate/Goldpriceupdate.js","graphql/mutation.js","screens/HolidayManager/HolidayModal.js","screens/HolidayManager/index.js","screens/Inventory/InventoryModal.js","screens/Inventory/index.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Manageadminusers/Manageadminusers.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","screens/Masterattribute/Masterattribute.js","screens/Mastercategories/Mastercategories.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/Mastergenders.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/Masterpurities.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstones/Masterstones.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/Masterthemes.js","screens/Masterweights/Masterweights.js","screens/Materialmaster/Materialmaster.js","screens/OrderList/OrderList.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","components/Loader/Fullloader.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/Priceupdate.js","screens/PriceLogs/index.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/Results/Results.js","utils/commonmethod.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/Seopriority.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Shippingzones/Shippingzones.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Taxsetup/Taxsetup.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Userconfiguration/Userconfiguration.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Warehouse/WarehouseModal.js","screens/Warehouse/index.js","utils/imageUpload.js","screens/ImageUpload/index.js","screens/MasterCountries/index.js","components/CircularProgress/index.js","screens/DynamicFilters/filter_attribute_settings.js","screens/DynamicFilters/index.js","screens/cmsHome/index.js","screens/ElasticSearch/index.js","screens/ComboOfferConfig/index.js","screens/GemstoneSetting/table.js","screens/GemstoneSetting/GemstoneSetting.js","screens/ErrorLogs/ErrorLogs.js","screens/Banners/banners.js","screens/Banners/silverbanner/components/silverlandingpage.js","screens/Banners/silverbanner/components/silverlistingpage.js","screens/Banners/silverbanner/components/specificListPages.js","screens/Banners/silverbanner/components/silverbottmpage.js","screens/Banners/silverbanner/components/silverlistingroutingpage.js","screens/Banners/silverbanner/silverbanner.js","screens/Banners/silverbanner/silverListingBanner/silverListingBanner.js","screens/Banners/styloribanner/components/stylorilandingpage.js","screens/Banners/styloribanner/styloribanner.js","screens/CategoryList/components/editpage/editcategory.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","screens/uploadprice/index.js.js","routes/route.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","components/table/styles.js","components/table/tableBodyRow.js","components/table/tableHead.js","components/table/tableComp.js","screens/cmsHome/CMSComponent/style.js","screens/cmsHome/CMSComponent/bannerCMS.js","screens/cmsHome/CMSComponent/collectionCardCMS.js","screens/cmsHome/CMSComponent/homePageIcons.js","screens/cmsHome/CMSComponent/collectionJewelleryCardCMS.js","screens/cmsHome/CMSComponent/storiesCardCMS.js","screens/cmsHome/CMSComponent/testimonialCardCMS.js","screens/cmsHome/CMSComponent/collectionCarouselCMS.js","screens/cmsHome/CMSComponent/richTextEditor.js","screens/cmsHome/CMSComponent/careersCMS.js","screens/cmsHome/CMSComponent/careerBannerCMS.js","screens/cmsHome/CMSComponent/styloriSilverCMS.js","screens/cmsHome/CMSComponent/StyleCardCMS.js","screens/cmsHome/CMSComponent/silverYarnsCMS.js","screens/cmsHome/CMSComponent/styloriSilverTitleCMS.js","screens/cmsHome/CMSComponent/testimonialCMS.js","screens/cmsHome/CMSComponent/stylesCardPrice.js","screens/cmsHome/CMSComponent/instaCardCMS.js","screens/cmsHome/CMSComponent/careerHeaderCMS.js","screens/cmsHome/CMSComponent/faqCMS.js","screens/cmsHome/CMSComponent/faqTitleCMS.js","screens/cmsHome/CMSComponent/homeNotificationCMS.js","screens/cmsHome/CMSComponent/faqSCMS.js","components/datePickerComp/index.js","screens/cmsHome/CMSComponent/blogsPageCMS.js","screens/cmsHome/CMSComponent/index.js","routes/index.js","App.Alert.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","process","GRAPHQL_DEV_CLIENT","concat","BASE_IMAGE_URL","APP_URL","globalCtxInitial","globalCtx","auth","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","React","createContext","GlobalProvider","Consumer","props","_React$useState","useState","_React$useState2","Object","slicedToArray","react_default","a","createElement","Provider","value","children","productuploadCtxInitial","productCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","selectedgender","selected_metal_colour","gender","product_gender","vendorname","productseries","size","sizes","selected_sizes","metal","label","materials","gemstontypes","gemstonshapes","product_code","isactive","gemstonelist","diamondlist","variants","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesettings","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editisOrderable","editorderShippingDays","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","product_images","metalcolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","error_message","prod_desc","productvendorcode","earringbacking","minOrderQty","maxOrderQty","approximateMetalWeight","height","width","isOrderable","orderShippingDays","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mapper","mappertype","keys","length","ProductProvider","console","info","data","useEffect","materialCtxInitial","materialCtx","materialMaster","setMaterialCtx","MaterialContext","log","JSON","stringify","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","orders","setOrderCtx","OrderContext","AlertProps","vertical","top","bottom","horizontal","left","right","center","severity","success","error","warning","AlertContext","open","msg","onclose","setSnack","PRODUCTCATEGORY","gql","_templateObject","taggedTemplateLiteral","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","GEMSTONE_MARKUP_SETTING","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","_templateObject10","GEMPRICELIST","_templateObject11","CATGORYLIST","_templateObject12","MATERIALMASTER","_templateObject13","_templateObject14","SALEDISCOUNTS","_templateObject15","_templateObject16","VOUCHERDISCOUNTS","_templateObject17","METALMASTER","_templateObject18","MAKINGCHARGEPRICELIST","_templateObject19","VOUCHERSTATUSEDIT","_templateObject20","_templateObject21","_templateObject22","DISCOUNTSTATUSEDIT","_templateObject23","DELETEMARKUPPRICE","_templateObject24","DELETEGOLDPRICE","_templateObject25","DELETESALEDISCOUNT","_templateObject26","DELETEVOUCHERDISCOUNT","_templateObject27","DELETEMAKINGCHARGE","_templateObject28","DELETEGEMCHARGE","_templateObject29","DELETEDIAMONDCHARGE","_templateObject30","PRODUCTDIAMONDTYPES","PRODUCTEDIT","ALLMASTERRINGSIZE","DELETESILVERLANDINGBANNER","ALLSPECIFICLISTINGPAGE","CREATESPECIFICLISTINGPAGE","PRODUCTDESCRIPTIONEDIT","HOLIDAYLIST","_templateObject31","WAREHOUSELIST","_templateObject32","INVENTORYLIST","_templateObject33","VALIDATEGENERATEDSKU","_templateObject34","STOCKSTATUS","_templateObject35","ABANDONEDCART","_templateObject36","CARTBYID","_templateObject37","IMAGEDELETE","GETALLERRORLOGS","_templateObject38","GETORDERCOMMUNICATIONLOGS","_templateObject39","PRICE_RUN_LOGS","_templateObject40","dynamicFilterAttributes","_templateObject41","attributesByMasterID","_templateObject42","ALLPAGESCMS","CMSBYPAGES","CMS_UPDATE","UPDATE_COMBO_BY_MAIN_PRODUCT","_templateObject43","CREATE_CMS","LIST_COMBO_PRODUCTS","_templateObject44","FETCH_COMBO_OFFERED_PRODUCTS","_templateObject45","GET_UNIQUE_PRODUCT","_templateObject46","ORDERS","queries_templateObject","queries_templateObject2","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","response","allMasterProductCategories","nodes","map","_","objectSpread2","id","name","allMasterProductTypes","shortCode","title","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","allMasterMetalsColor","productColor","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","allProductLists","productSeries","allMasterGemstonesTypes","allMasterGemstonesShapes","alias","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","apidata","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","initialNetworkCtx","networkCtx","status","called","loading","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","undefined","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","NetworkProvider","Transition","forwardRef","ref","Slide","assign","direction","useStyles","makeStyles","theme","root","margin","padding","spacing","closeButton","position","color","palette","grey","fieldset","borderColor","primary","main","borderRadius","boxSizing","gridArea","legend","font","textfield","marginTop","inline","chip","green","CartDetails","_state$data","_state$data$cart","_state$data$cart$user","_state$data2","_state$data2$cart","_state$data2$cart$use","_state$data3","_state$data3$cart","_state$data3$cart$use","_state$data4","_state$data4$cart","_state$data4$cart$use","_state$data5","_state$data5$cart","_state$data5$cart$use","_state$data$user$isem","_state$data6","_state$data6$user","_state$data$user$ismo","_state$data7","_state$data7$user","_state$data8","_state$data8$cart","_state$data8$cart$add","_state$data9","_state$data9$cart","_state$data9$cart$add","_state$data10","_state$data10$cart","_state$data$cart$gros","_state$data11","_state$data11$cart","_state$data$cart$disc","_state$data12","_state$data12$cart","_state$data$cart$taxA","_state$data13","_state$data13$cart","_state$data14","_state$data14$cart","_state$data14$cart$ca","_state$data15","_state$data15$cart","_state$data15$cart$fo","classes","handleClose","state","setState","client","useApolloClient","snack","useContext","variables","fetchPolicy","then","res","catch","err","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","maxWidth","fullWidth","DialogTitle","disableTypography","className","Typography","variant","Fragment","IconButton","aria-label","onClick","Close_default","DialogContent","Grid","container","justify","alignItems","item","xs","style","textAlign","CircularProgress","TextField","defaultValue","cart","user","firstName","InputProps","readOnly","lastName","username","email","mobile","FormGroup","row","FormControlLabel","control","Switch","checked","isemailverified","disabled","labelPlacement","ismobileverified","address","index","_item$salutation","key","salutation","firstname","lastname","toUpperCase","addressline1","addressline2","city","country","pincode","countryCode","contactNumber","Chip","grossAmount","discountedPrice","taxAmount","List","dense","cart_items","_item$transSkuListByP","_product$productImage","_item$transSkuListByP2","_item$transSkuListByP3","skuDetails","transSkuListByProductSku","product","productListByProductId","image","productImagesByProductId","ListItem","productSku","disableGutters","divider","ListItemAvatar","lib_default","src","imageUrl","replace","productId","ListItemText","productName","secondary","qty","markupPrice","markupPriceTax","follow_ups","senderResponseId","ListItemIcon","type","Mail_default","Sms_default","Call_default","moment","createdAt","format","DialogActions","Button","order_id","opts","fatchvalue","sendEmail","Headers","Cart ID","User Details","asc","desc","Total Products in cart","Contact","Status","Created On","Last Updated On","Actions","filterVariables","default","filter","ordersByCartIdExist","withoutContact","userprofileId","isNull","withContact","emptyCart","shoppingCartItemsByShoppingCartId","every","& > *","button","visuallyHidden","border","clip","overflow","AbandonedCart","_Headers$sort$by$sort","_filterVariables$filt","_filterVariables$filt2","_data$allShoppingCart","_data$allShoppingCart2","_data$allShoppingCart3","_data$allShoppingCart4","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","setFilter","_React$useState7","by","_React$useState8","sort","setSort","_useQuery","useQuery","first","offset","orderBy","condition","refetch","networkStatus","handleClickFilter","_filterVariables$valu","_filterVariables$valu2","_React$useState9","_React$useState10","setOpen","_filterVariables$with","cartDetails","allShoppingCarts","exportFromJSON","_item$user","_item$user2","_item$user3","_item$user4","_item$cart_items","_item$cart_items$node","_item$cart_items$node2","_item$cart_items2","_item$cart_items2$nod","_item$cart_items2$nod2","_item$cart_items3","_item$cart_items3$nod","_item$cart_items3$nod2","cart_id","created_at","gross_amount","discount_amount","discountAmount","first_name","last_name","mobile_no","sku_ids","i","_i$transSkuListByProd","skuId","join","generated_skus","_i$transSkuListByProd2","generatedSku","product_names","_i$transSkuListByProd3","_i$transSkuListByProd4","fileName","exportType","downloadAbandonedCart","CloudDownloadOutlined_default","sm","TableContainer","component","Paper","Table","TableHead","TableRow","_Headers$item","TableCell","align","sortDirection","TableSortLabel","active","column","_Headers$by$direction","_filterVariables$filt3","_filterVariables$filt4","applySort","TableBody","NetworkStatus","colSpan","LinearProgress","_item$user5","_item$user6","_item$user7","_item$cart_items4","_item$cart_items5","_item$user8","_item$user9","_item$user10","_item$user11","_item$user12","userName","Tooltip","arrow","startIcon","Email_default","disableElevation","disableFocusRipple","disableRipple","href","updatedAt","Visibility_default","TableFooter","TablePagination","rowsPerPageOptions","count","totalCount","onChangePage","event","newPage","onChangeRowsPerPage","target","Boolean","&:hover","backgroundColor","typography","columns","flexShrink","text","marginLeft","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","property","paddingLeft","paddingRight","highlight","lighten","light","dark","flex","paper","marginBottom","table","minWidth","useStyles2","contantview","placeItems","justifyContent","tableWrapper","overflowX","withApollo","useHistory","pageCount","setPageCount","offsetValue","setOffsetValue","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","_callee2","_context2","isedit","onCancel","window","location","reload","handleInputChange","e","defineProperty","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","getproductlist","_x4","_x5","_x6","_x7","_x8","_getproductlist","_callee3","searchtext","productcategory","producttype","pagesize","offsetvalue","orderby","bodydata","_context3","products","rows","fullwidth","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","Veiw","Offset","contentEditable","onChange","taxValue","hsnNumber","dist_default","Date","Save_default","CancelOutlined_default","scope","gstNo","vendorDelivaryDays","vendordata","Edit_default","SelectProps","inputProps","native","parseInt","REACT_APP_GA_MEASUREMENT_ID","media","Page","rest","objectWithoutProperties","_excluded","card","buttonPadding","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","red","contrastText","pendingchip","flexGrow","shape","lineHeight","fontSize","whiteSpace","rounded","Label","_clsx","Label_excluded","rootClassName","clsx","finalStyle","defaultProps","colors","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","emphasize","CustomizedBreadcrumbs","history","Breadcrumbs","goBack","icon","ArrowBackIos_default","flexDirection","drawer","header","buttonIcon","marginRight","content","contentSection","contentSectionHeader","cursor","contentSectionContent","formGroup","fieldGroup","field","addButton","tags","minAmount","maxAmount","radioGroup","actions","& > * + *","Filter","masters","onFilter","Filter_excluded","initialValues","company","version","commodity","_useState","_useState2","_useState3","_useState4","_useState5","_useState6","values","setValues","handleoptionchange","Drawer","anchor","onSubmit","preventDefault","Autocomplete","options","product_category","getOptionLabel","option","renderInput","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","Search_excluded","searchcontent","setSearchcontent","elevation","Search_default","Input_Input","disableUnderline","placeholder","DownloadCsv","loader","setLoader","showdownload","setShowDownload","keyCSV","valueCSV","dataCSV","setDataCSV","fetchCSVdata","done","responseCSV","responseData","keyData","_i","_Object$entries","_Object$entries$_i","res_json","statuscode","entries","push","react_csv","filename","textDecoration","FullCSVData","setOptions","productType","setProductType","FullCSVData_templateObject","flexWrap","flexBasis","filterButton","filterIcon","ProductFilter","ProductFilter_excluded","openFilter","setOpenFilter","components_Search_Search","pathname","downloadcsv","components_FullCSVData","FilterList_default","components_Filter_Filter","Alert","Alert_Alert","Alerts","reason","Snackbar","anchorOrigin","autoHideDuration","components_Alert_Alert","& + &","cardcontent","selectedOption","optionRadio","optionDetails","AttributeComponent","AttributesComponent_excluded","_React$useContext","attributes","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","handleoptionChange","elements_arr","forEach","element","indexOf","Card","fixedTag","shiprates","selectedrate","renderTags","getTagProps","multiple","components","onAdded","results","Addshippingattributes","withRouter","rateid","setRateid","setMasters","setSelectedrate","selectedattr","setSelectedattr","isloaded","setIsloaded","_updateattributes","taxcontent","displaytext","reqbody","display_text","_getmastervalues","ratevalue","allShippingCharges","attr","categories","productAttributes","selectedcategory","catobj","prod_id","split","getmastervalues","AttributesComponent","attrs","display_arr","alias_arr","valueobj","updateattributes","aboutvoucher","AttributesComponent_AttributesComponent_excluded","Addtaxattributes","allMasterTaxSettings","AttributesComponent_AttributesComponent","Header","Header_excluded","autoComplete","onAdd","inner","Results","Results_excluded","orange","CardHeader","Divider","CardContent","CardActions","Categorycontent","setOrders","setSearchtext","uuid","customer","payment","total","currency","components_Header_Header","components_Results_Results","progress","CategoryList","MaterialContext_MaterialProvider","Configuration","master_options_url","lg","Link","underline","RouterLink","to","General","General_excluded","components_Label_Label","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","paddingBottom","helperText","author","applyButton","white","EditContent","diamond","onApply","EditContent_excluded","showpreview","setShowpreview","previewurl","_uploadimagetoserver","bodaydata","keyvalue","uploadtype","imagename","responsedata","returnData","signedRequest","filepathname","imageurl","previmagenames","previmages","fileExtension","foldername","product_id","filepath","axios","put","file","gutterBottom","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","alert","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","alt","small","react_filepond","oninit","labelIdle","onaddfile","fileItem","uploadimagetoserver","imagecontainer","link","_props$columns","_props$values","masterlist","setMasterlist","openedit","setOpenedit","editEmail","setEditEmail","aliasName","setaliasName","_React$useState33","_React$useState34","onCreate","Array","prototype","insert","splice","setpreviewurl","_React$useState35","_React$useState36","_React$useState37","_React$useState38","toLowerCase","button_title","sort_id","filterOrder","prefix","_React$createElement","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","editemail","tabs","background","borderRight","master_options","Customerdetails","setCustomer","user_id","_getmaster","userinfo","userprofile","getmaster","components_General_General","match","_match$params","tab","find","t","Input","_props$isNumber","isNumber","pattern","maxLength","minLength","Input_excluded","onKeyPress","which","input-label","textOverflow","input","&::placeholder","Dashboard_","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","Container","components_Input_Input","Component","Dashboard","DiscountList_components_Header_Header_excluded","ConformationAlert","isshow","dividers","DialogContentText","message","onSuccess","autoFocus","positivebtn","components_Results_Results_excluded","isconformation","setIsconformation","deleteid","handledelete","_handledelete","datacontent","elementId","mutate","mutation","hidedeleteconformation","_handledelete2","handleChange","voucherid","_handlestatusChange","handlestatusChange","_callee4","_context4","discountId","isActive","tablecolumns","allSaleDiscounts","negativebtn","slice","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","Earringbacking","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","_search","filteredHomes","x","Mastercontent","Goldpriceupdate","mastervendors","setMastervendors","cost_price","selling_price","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","pricetype","setPricetype","selectedvendors","setSelectedvendors","setMaterials","masterpurities","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","vendorid","sellingpricejson","handlesellingPriceChange","disableClearable","pricejson","goldpurity","sellingprice","parseFloat","priceratio","goldprice_val","goldsellingprice_val","purityname","CREATE_HOLIDAY","mutation_templateObject","UPDATE_HOLIDAY","mutation_templateObject2","DELETE_HOLIDAY","mutation_templateObject3","CREATE_WAREHOUSE","mutation_templateObject4","UPDATE_WAREHOUSE","mutation_templateObject5","DELETE_WAREHOUSE","mutation_templateObject6","CREATE_INVENTORY","mutation_templateObject7","UPDATE_INVENTORY","mutation_templateObject8","DELETE_INVENTORY","mutation_templateObject9","UPDATE_ORDER","mutation_templateObject10","CREATE_ATTRIBUTE","mutation_templateObject11","UPDATE_ATTRIBUTE_BY_ID","mutation_templateObject12","inputField","HolidayModal","holiday","editItem","useUtils_cfb96ac9","utils","DateFnsUtils","DatePicker","inputVariant","date","handleSave","HolidayManager","_data$allHolidayManag","_data$allHolidayManag2","_data$allHolidayManag3","_data$allHolidayManag4","setType","setItem","accept","files","bodyFormData","FormData","set","post","handleUpload","htmlFor","CloudUpload_default","document","setAttribute","click","GetApp_default","AddCircle_default","allHolidayManagers","DeleteForever_default","HolidayManager_HolidayModal","__typename","InventoryModal","_data$allWarehouses","setError","required","onBlur","_res$data","_res$data$allTransSku","_res$data$allTransSku2","allTransSkuLists","numberOfItems","allWarehouses","getOptionSelected","warehouse","endAdornment","iconButton","& .MuiOutlinedInput-root","StockStatus","_item$inventoriesByWa","_item$inventoriesByWa2","_item$inventoriesByWa3","inventoriesByWarehouseId","aggregates","sum","setWarehouse","Store_default","Inventory","_filter","_data$allInventories","_data$allInventories2","_data$allInventories3","_data$allInventories4","setSearch","_useQuery2","includesInsensitive","startAdornment","InputAdornment","Inventory_StockStatus","allInventories","Inventory_InventoryModal","newValue","warehouseId","buildGradient","start","end","gradients","blue","indigo","validate","require","schema","presence","allowEmpty","password","borderTopRightRadius","borderBottomRightRadius","breakpoints","down","backgroundImage","loginForm","person","fields","submitButton","LoginForm_excluded","_React$useContext2","isValid","touched","errors","formState","setFormState","showmessage","setShowmessage","persist","handleSubmit","signinobj","pageaccess","pages","pagepermissions","accessToken","pageurl","is_write","hasError","LoginForm_Alert","Login","components_LoginForm_LoginForm","Manageadminusers","masterroles","setMasterroles","roles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","fitltercontent","seacrchtext","filtercontent","setFiltercontent","components_EnhancedTableHead_EnhancedTableHead","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","bodycontent","setBodycontent","_changepageoffset","_callee5","_context5","_changepagesize","_callee6","_context6","Manageusers_Mastercontent","other","Addmarkup_excluded","MuiDialogContent","MuiDialogActions","Addmarkup","markup","setMarkup","handleinputChange","actionclose","Addmarkup_DialogTitle","Addmarkup_DialogContent","materiallist","puritylist","Addmarkup_DialogActions","actionSave","cardroot","editmarkup","setEditmarkup","setGoldpricelist","setDeleteid","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","material_list","purity_list","sellpricemin","sellpricemax","markuptype","_handleSave","allPricingMarkups","vendorCode","producttypes","heading","sellingPriceMin","sellingPriceMax","markupType","helperinput","markupValue","diamondData","markupid","Delete_default","editdiamond","setEditdiamond","allDiamondPriceSettings","diamondColour","costPrice","sellingPrice","sellingPriceType","descendingComparator","b","allGemstonePriceSettings","array","comparator","stabilizedThis","el","stableSort","getComparator","gemstoneType","weightStart","weightEnd","price","useStyle","allMakingChargeSettings","Markupprice","categorylist","setCategorylist","setProducttypes","setMateriallist","setPuritylist","Product","vendor","Masterattribute","_Masterattribute","allAttributeMasters","Mastercategories","Mastercollections_components_Results_Results_excluded","Mastercollections","Masterdesigns_components_Results_Results_excluded","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Mastergemsettings_components_Results_Results_excluded","Mastergemsettings","Mastergemshapes_components_Results_Results_excluded","Mastergemshapes","Mastergemtypes_components_Results_Results_excluded","Mastergemtypes","Mastergenders_components_Results_Results_excluded","Mastergenders","Mastermetalcolors","allMasterMetalsColors","Masteroccassions","Masterorderstatus","allOrderStatusMasters","Masterpaymentstatus","allPaymentStatusMasters","Masterproducttypes","Masterpurities_components_Results_Results_excluded","Masterpurities","form","formControl","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","isopen","pagecontent","displayname","Checkbox","isview","iswrite","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","masterpages","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","_showpermissions","rowcontent","_updatepermissions","components_Addpermissions_Addpermissions","Masterscreens","Masterstonecolors","Masterstones","Masterstoneshapes","allMasterStonesShapes","Masterstyles_components_Results_Results_excluded","Masterstyles","Masterthemes_components_Results_Results_excluded","Masterthemes","Masterweights","allMasterWeights","Materialmaster","getGiftMessage","giftFrom","giftTo","getPaymentStatus","paymentMode","paymentStatus","paymentResponse","payment_response","parse","APTRANSACTIONID","MESSAGE","TRANSACTIONPAYMENTSTATUS","defaultColumns","Order ID","is_active","is_default","identifier","Order Date","Customer Name","SKUs","Email","Phone Number","Shipping Address","Gift Message","Order Status","Payment Mode","Payment Status","Waybill No","Comments","ActionIcon","filterData","OrderList","_data$allOrders","_data$allOrders2","userProfileId","equalTo","columnName","setColumnName","orderFilter","setOrderFilter","paymentMaster","setMasterData","orderStatus","selectedStatus","setSelectedStatus","fromDate","setFromDate","ToDate","setToDate","anchorEl","setAnchorEl","handleDateChange","greaterThanOrEqualTo","lessThanOrEqualTo","OrderList_templateObject","_ref$data","toConsumableArray","limit","order_filter","order_by","rowData","allOrders","_item$shoppingCartByC","_item$shoppingCartByC2","_item$shoppingCartByC3","_item$shoppingCartByC4","_item$shoppingCartByC5","_item$shoppingCartByC6","_item$shoppingCartByC7","_item$shoppingCartByC8","_item$shoppingCartByC9","_item$shoppingCartByC10","_item$shoppingCartByC11","_item$shoppingCartByC12","_item$shoppingCartByC13","_item$shoppingCartByC14","_item$shoppingCartByC15","_item$shoppingCartByC16","_item$shoppingCartByC17","_item$paymentDetailsB","_item$paymentDetailsB2","_item$paymentDetailsB3","_item$smsDeliveredId","order_date","shoppingCartByCartId","customer_name","cartAddressesByCartId","userProfileByUserprofileId","phone_number","shipping_address","gift_message","payment_mode","order_status","payment_status","paymentDetailsByOrderId","emailMessageId","smsDeliveredId","waybill","awbNumber","comments","or","some","select","MenuItem","autoOk","disableFuture","currentTarget","ViewColumn_default","Menu","PaperProps","_columnName$item","_columnName$column","OrderList_ActionIcon","onPageChange","toolbar","deleteButton","deleteIcon","OrderManagementDetails_components_Header_Header_excluded","OrderInfo","_order$shopping_cart","OrderInfo_excluded","paymentstatus","setPaymentstatus","orderstatus","setOrderstatus","errorMsg","setErrorMsg","waybillNum","updateOrder","setUpdateOrder","setCommunicationLogs","_updateOrder$comments","_order$awb_number","_order$payment_status","_order$order_status","_order$comments","awb_number","getOrderCommunicationLogs","_fatchvalue$data$orde","_fatchvalue$data","_fatchvalue$data$orde2","_fatchvalue$data$orde3","orderById","communicationLogsByOrderId","user_profile","shopping_cart","cart_addresses","contact_number","discounted_price","giftwraps","_updateOrder$comments2","_updateOrder$waybillN","_updateOrder$comments3","OrderItems","productDetails","OrderItems_excluded","react_perfect_scrollbar_lib_default","shopping_cart_items","_productDetails$filte","_productDetails$filte2","_productDetails$filte3","product_sku","generated_sku","product_list","product_name","inner_card","image_container","product_image","objectFit","text_heading","text_content","final_total_text","voucher_code","OrderDetails","_order$shopping_cart$","_order$shopping_cart2","_order$shopping_cart3","_order$shopping_cart4","_order$shopping_cart5","_order$shopping_cart6","_order$shopping_cart7","OrderDetails_excluded","_productDetails$filte4","_productDetails$filte5","md","image_url","trans_sku_list","sku_weight","diamond_type","Math","round","discount_price","markup_price","discount","CHMOD","pg","nb","ppc","cash","onclick","emi","wallet","pos","rtgs","payltr","upi","va","aloan","btqr","currency_code","356","transaction_type","200","211","310","320","330","340","350","360","370","380","390","400","401","402","403","405","503","410","420","430","OrderManagementDetails","setProductDetails","paymentHistory","setPaymentHistory","communicationLogs","paymentHeaders","_fetchorderdetails","product_detail","loadPaymentAndCommunicationLogs","_data$order","payment_details","communication_logs","fetchorderdetails","OrderManagementDetails_components_Header_Header","xl","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","Sync_default","placement","_ref2","getValue","val","messageType","Priceupdate_components_Results_Results_excluded","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","metaloption","selectedOptiondefault","common","optionmaterialDetails","selectedtext","AboutVoucher","_props$vendorlist","_props$categorylist","_props$producttypelis","_props$material","_props$puritylist","AboutVoucher_excluded","productids","formData","setFormData","isdisabled","vendorlist","vendorsarray","producttypelist","FullLoader","PriceupdateContent","setProducts","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","_filterapllied","filterdata","_downloadlog","Fullloader","components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","PriceLogs","_data$allPriceRunning","_data$allPriceRunning2","_data$allPriceRunning3","_data$allPriceRunning4","allPriceRunningHistories","_item$completedProduc","_item$pricingComponen","_item$logs","_item$logs$nodes$","_item$logs2","_item$logs2$nodes$","_item$logs3","_item$logs3$nodes$","_item$logs3$nodes$$re","_item$logs4","_item$logs4$nodes$","_item$logs5","_item$logs5$nodes$","_item$logs6","_item$logs6$nodes$","_item$logs6$nodes$$su","_item$logs7","_item$logs7$nodes$","_item$logs8","_item$logs8$nodes$","_item$logs9","_item$logs9$nodes$","_item$logs9$nodes$$fa","completedProductCount","pricingComponent","wordWrap","logs","requestedProducts","req","successfullyExecutedProducts","failedProducts","productlists","showproductdetails","_showproductdetails","productid","filterparams","categoryname","Products_Product_EnhancedTableHead","vendor_code","Productlist","setFilterparams","components_ProductFilter_ProductFilter","filterobj","Products_Product","dropdownlayout","& .menu","& .MuiFormHelperText-root","fieldHint","dateField","AddressForm","initailRingSize","updateRingSize","AddressForm_excluded","_getMasterRingSize","allMasterRingsSizes","getMasterRingSize","handleTextChange","_objectSpread4","test","material_names","_objectSpread9","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","isreorderable","Radio","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","pointerEvents","zIndex","placeholderzindex","isDisabled","SelectContainer","View","selectzindex","SelectView","react_select_browser_esm","isClearable","PaymentForm","_productCtx$masterDat","_productCtx$masterDat2","_productCtx$masterDat3","_productCtx$masterDat4","_productCtx$masterDat5","_productCtx$masterDat6","_productCtx$masterDat7","_productCtx$masterDat8","_productCtx$masterDat9","_productCtx$masterDat10","_productCtx$masterDat11","_productCtx$masterDat12","PaymentForm_excluded","includes","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","Review_excluded","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","weight","handleClick","metalsarr","stonedetails","isvalid","deletematerial","valueContainer","chipFocused","noOptionsMessage","singleValue","borderBottom","selectEmpty","createData","calories","fat","carbs","protein","Step4_excluded","default_metal_size","Step5_excluded","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","setMetalcolour","imageposition","imagecolor","prodimages","prodid","imagecolourobj","imagecount","imageobj","_imageobj","charAt","unshift","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","allowMultiple","onupdatefiles","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","buttons","nested","Productupload","activeStep","setActiveStep","failure","setSuccess","setLoading","handleNext","error_content","formdata","productuploadresponse","ProductEditPage","setTimeout","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","ProductuploadContext_ProductProvider","Component_Productupload","black","blueGrey","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","MuiCssBaseline","@global","*::-webkit-scrollbar","*::-webkit-scrollbar-track","-webkit-box-shadow","Salediscount_components_Results_Results_excluded","Create_default","makeid","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","floor","random","AboutVoucher_AboutVoucher_excluded","discountobj","setDiscountobj","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","discountname","discounttitle","componenets","ButtonGroup","optionvalue","discounttype","discountvalue","VoucherComponent","VoucherComponent_excluded","Viewsku_excluded","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","onDelete","Viewsku_DialogActions","Products","Products_excluded","selectskus","Salediscountcontent","skus","setSkus","isloading","setIsloading","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","_useState21","_useState22","titlecontent","setTitlecontent","_useState23","_useState24","discount_id","setDiscount_id","_useState25","_useState26","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","snackMessage","_getdiscountvalue","comparr","discountid","discunt","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","product_attributes","allkeys","_creatediscount","ispricerun","skuarray","sku_content","updatediscount","discount_count","product_attributes_text","eror_skus","getdiscountvalue","Salediscountcontent_Alert","components_VoucherComponent_VoucherComponent","componentsstring","filterapllied","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","creatediscount","Salediscount","VoucherContext_VoucherProvider","Seopriority_components_Results_Results_excluded","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Shipmentsettings","zones","allShippingZones","ranges","shipmentcharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","Shippingattributes","displayAttributes","Attributescontent","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Taxsettings","taxName","Attributescontent_Attributescontent","Taxsetup","Invoices","Useraddresses_components_Results_Results_excluded","setInvoices","invoice","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Userconfiguration","menu","Userwishlist_components_Results_Results_excluded","Userwishlist","wishlists","Userwishlist_components_Results_Results","Newvendor","Vendorlist","components_Vendor_Vendor","Addmetalprice_excluded","Addmetalprice","metaldata","setMetaldata","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","Addmetalprice_DialogActions","save","metalmaster","setMetalmaster","puritymaster","setPuritymaster","_handleAdd","metalcontent","costprice","priceid","allGoldPriceSettings","selectedsellingPriceType","handleEdit","Adddiamondprice_excluded","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","diamondmaster","setDiamondmaster","Adddiamondprice_Addmetalprice","Addgemstoneprice_excluded","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","setgemlist","diamondcontent","getgemlist","gemstone","weightstart","weightend","add","cost_price_id","_getgemlist","ratetype","Addmakingchargeprice_excluded","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","makingcontent","getmclist","_getmclist","weight_start","weight_end","Vendorprice","setVendorcode","setVendorlist","components_Product","components_Diamonds","components_Gemstones","components_Makingcharge","Voucherdiscount_components_Results_Results_excluded","components_AboutVoucher_AboutVoucher_excluded","vouchercode","setVouchercode","vouchercount","setVouchercount","voucherprefix","setVoucherprefix","selectedDate","setSelectedDate","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","minimumqty","voucherdiscount","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","startdate","minDate","enddate","strictCompareDates","VoucherComponent_VoucherComponent_excluded","Voucherdiscountcontent","setAttributes","setDiscountid","attributesadded","attributedata","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","min_cart_value","starts_at","expires_at","VoucherdiscountContent_Alert","Voucherdiscount_components_AboutVoucher_AboutVoucher","Voucherdiscount_components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherdiscountListing_components_Header_Header_excluded","VoucherdiscountListing_components_Results_Results_excluded","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","WarehouseModal","shippingInDays","Warehouse","_data$allWarehouses2","_data$allWarehouses3","Warehouse_WarehouseModal","_event$target","UploadImage","Axios","Accept-Language","_boundary","ImageUpload","imgLink","setImgLink","disableButton","setDisableButton","_res$data$web","_res$data2","web","navigator","clipboard","writeText","fetchMasterCountries","MasterCountries_templateObject","addMutationMasterCountry","MasterCountries_templateObject2","updateMutationMasterCountry","MasterCountries_templateObject3","MasterCountry","_data$allMasterCountr","fxSyncAPI","MasterCountries_excluded","currentTimeStamp","masterCountryPatch","fxConversionRate","Number","tableData","CircularProgressWithLabel","Box","maxHeight","searchBox","createButton","formGrid","& .MuiTextField-root","ID","Name","String","Filter Position","Active","Short Code","Alias","Alias Id","","FilterAttributeSettings","_props$masterData2","_props$masterData3","_data$attributes","_data$attributes$node","editMode","setEditMode","handleEditChange","saveChanges","payload","mutationQuery","masterId","_props$masterData","_payload$attribute","last_updated_at","attribute","filter_attribute_settings_excluded","isSearch","isFilter","aliasId","filterPosition","Skeleton","_attributes","_excluded2","handleSwitchChange","grid","chipCell","DynamicFilters","_data$master","setProgress","socket","socketIOClient","on","completed","close","toLocaleDateString","components_CircularProgress","master","_item$attributes","handleClickOpen","Settings_default","filter_attribute_settings_FilterAttributeSettings","refetchMasterData","cardName","labelAlign","gap","edit","dialogPaperMid","CmsHome","setNewPage","setEdit","_data$data","_data$data$allCdns","dataRecieved","allCdns","fetchData","changePage","searchIndexs","product_search","listener","sku_search","seo_search","autoId","toString","substring","ElasticSearch","indexCount","setIndexCount","getEsStatus","raised","subheader","tempProgress","SyncSharp_default","comboCard","alignCardTypo","details","InduvidualProductCard","_props$productListByM","_props$mainProduct","_source$productImages","_source$productImages2","_source$productImages3","_source$productImages4","_source$productImages5","source","productListByMainProduct","mainProduct","CardMedia","ComboCard","offeredProducts","ComboOfferConfig_InduvidualProductCard","ComboOfferConfig","initialState","openForm","setOpenForm","editState","setEditState","offerError","setOfferError","isArray","allProductComboOffers","ComboOfferConfig_ComboCard","ChipInput_default","chipValue","_chip","link_style","StyloriLandingPage","_creategem$error","_creategem$error2","_creategem$error3","_creategem$error4","_creategem$error5","setUpdate","allgemstone","setallgemstone","priceMin","priceMax","creategem","setCreateGem","styloribannerfetch","allMaterialMarkups","onChangeData","handleValidate","handleDelete","onsubmitvalue","_creategem$id","gem_data","materialName","Select","labelId","_val$materialName2","_val$priceMin2","_val$priceMax2","_val$markupValue2","_val$materialName","_val$priceMin","_val$priceMax","_val$markupValue","_val$markupType","OnEditData","GemstoneSetting","ErrorLogs","_data$allUiErrorLogs","_data$allUiErrorLogs2","_data$allUiErrorLogs3","_data$allUiErrorLogs4","allUiErrorLogs","Banners","SilverLandingPage","alllandingbanner","setalllandingbanner","createlandingbanner","setCreatelandingbanner","setDisable","allStyloriSilverBanners","_ref3","create_banner_data","now","toISOString","ClearState","SilverListingPage","_res$data3","SpecificListPages","urlParam","SilverListingBottom","Silverbanner","silverlandingpage","silverlistingpage","specificListPages","silverbottmpage","SilverListingbanner","allStyloriBanners","Styloribanner","stylorilandingpage","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","editcategory_excluded","focusVisibleClassName","Editcategory","checkedA","checkedB","checkedC","spaceing","conatainerRow","overflowY","gridColumnGap","gridTemplateColumns","Columns","listOfValue","setColumns","borderTop","conatiner","head","stateChange","resetButton","columnclose","useStyless","FormPropsTextFields","ArrowDownward_default","Popover","transformOrigin","FontWeight","notchedOutline","noValidate","SortHeader","lassName","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Toolbar","EnhancedTable","selected","setSelected","emptyRows","min","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamondobj","diamondType","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","productSizes","sizeChange","createVariant","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","updatevarient","saveCreateVariant","EditDiamond","EditDiamond_excluded","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","diamondEditObject","setDiamondEditObject","DiamondSave","_DiamondSave","list_data","diamondListData","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","settingData","shapeData","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","_editcontent$gemstone","_editcontent$gemstone2","EditGemstone_excluded","_option$label","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","handleChangeswitch","_props$productcomplet","productcompletedata","_props$productcomplet2","displycolumns","metalColor","skuWeight","skuSize","vendorDeliveryTime","availableStockQty","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","EditPrice_excluded","pricerun","Skupricesync","_Skupricesync","priceobj","costPriceTax","sellingPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","checkboxrow","columnnames","selectcolumnfilter","displytype","saveaction","columns_Columns","getColumnnames","minHeight","Productimages","image_count","useLocation","productimages","imgobj","fileobj","filetype","imagecontent","productimgs","responsecontent","imagePosition","deleteImage","imageData","productimageid","styleFile","wordBreak","endPoint","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","ishover","aria-hidden","handlenewAssetChange","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","helper","borderLeft","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","filters","setFilters","changeVariant","_saveProductEditItem","_productCtx$earringba","_productCtx$earringba2","productEditItem","earingBacking","fetchvalue","_fetchvalue$data$upda","_fetchvalue$data","_fetchvalue$data$upda2","_fetchvalue$data$upda3","updateProductListByProductId","productList","prodDescription","_createnewvarient","varientobj","_showpricesummary","sku","price_summary","skuprice","obj","material_name","_fatchvalue$data$prod","_fatchvalue$data$prod2","_fatchvalue$data$prod3","_fatchvalue$data$prod4","_fatchvalue$data$prod5","_fatchvalue$data$prod6","_fatchvalue$data$prod7","_fatchvalue$data$prod8","_fatchvalue$data$prod9","_fatchvalue$data$prod10","genders","size_obj","sizeVarient","earringBackings","earringBacking","sizes_arr","gender_arr","gender_obj","defaultcolour","earring_backing","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","masterVendorByVendorCode","productVendorCode","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","esbody","endpoint","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","aria-controls","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","roots","PriceUpload","download","appendChild","removeChild","xlsxParser","onFileSelection","Sheet1","sku_details","selling_price_tax","markup_price_tax","discount_price_tax","ri_index_esm","route","login","dashboard","profile","productupload","configuration","productlist","orderlist","orderdetails","userorders","userwishlist","mastermaterial","mastercolors","salediscountlist","voucherdiscountlist","salediscount","priceupdate","diamondDetails","gemstoneDetails","images","materiallistpage","editCategory","vendorPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","addshippingattributes","addtaxattributes","userconfiguration","manageadminusers","goldpriceupdate","manageusers","gemsettings","gemshapes","gemtypes","seo","taxsettings","masterattributes","dynamicFilter","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","countriesFx","imageUpload","banners","styloribanner","silverbanner","silverlistingbanner","holiday_manager","inventory","abandoned_cart","price_upload","error_logs","pricelogs","GemstoneMarkupSettings","BannerCMS","CmsComponent","SearchSettings","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","menus","menuobj","submenu","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","icons","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","removeItem","renderMobileMenu","aria-haspopup","AccountCircle_default","AppBar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrimaryAppBar_excluded","PrivateRoute","PrivateRoute_excluded","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","dialogPaper","dialogHeader","dialogTitle","TableBodyRow","_ref$tableData","_ref$rowData","_ref$rowIndex","rowIndex","_ref$handleViewStores","handleViewStores","_ref$handleDelete","_ref$handleEdit","customWidth","lineBreak","_data$rowData","_data$rowData2","imageTitle","_data$rowData3","_data$rowData4","getComponent","TableHeaderComp","_props$handleAddNew","handleAddNew","_props$noAddNew","noAddNew","TableComp","_ref$noAddNew","_ref$header","_ref$handleAddNew","tableHead","tableBodyRow","consolePagesStyles","& p","_props$data7","_props$data7$props","initialEdit","isEdit","editIndex","editData","setEditData","setIndex","_props$state","_props$data","_props$data$props","_props$data2","editBanner","getData","_props$data3","_props$data4","_props$data4$props","_getData","tableComp","_props$data5","_props$data5$props","_props$data6","CollectionCardCMS","navigateUrl","editContent","collectionGrid","cardContent","HomePageIconsCMS","CollectionJewelleryCardCMS","jewelleryGrid","StoriesCardCMS","cardHeader","storiesData","TestimonialCollectionCardCMS","_state$imageUrl","_state$imageUrl2","customerName","skuUrl","containerImage","primaryImage","primaryNavigateUrl","primaryContantName","primaryButtonName","primaryCarouselDetails","secondaryImage","secondaryNavigateUrl","secondaryContantName","secondaryButtonName","secondaryCarouselDetails","isView","initialPrimary","initialSecondary","CollectionCarouselCMS","_data$props4","_data$props4$Testimon","_data$props4$Testimon2","_state$containerImage","_state$containerImage2","_primary$img2","_primary$img3","_state$primaryCarouse","_state$primaryCarouse2","_secondary$img2","_state$secondaryCarou","_state$secondaryCarou2","openDetails","setOpenDetails","hidden","setHidden","setPrimary","setSecondary","updatePrimary","updateSecondary","updateState","parentKey","_res$data4","_res$data5","_res$data6","_res$data7","_res$data8","prevState","addPrimaryItems","_primary$imageTitle","_primary$img","_primary$navigateUrl","_primary$price","constructedData","_data$props2","_data$props2$Testimon","_data$props2$Testimon2","_data$props3","_data$props3$Testimon","_data$props3$Testimon2","Testimony","carousel","carouselTop","setting","handlePrimaryContentChange","newState","$set","handleSecondaryContentChange","_data$props","_data$props$Testimony","_data$props$Testimony2","addContainer","_val$containerImage","_val$primaryImage","_val$primaryCarouselD","_val$secondaryImage","_val$secondaryCarouse","carouselItems","_e$img","_e$imageTitle","_e$price","_e$navigateUrl","carouselImage","carouselImageName","carouselPrice","carouselUrl","carouselItemsTwo","_e$img2","_e$imageTitle2","_e$price2","_e$navigateUrl2","headerName","Item","addBtn","carouselParentImg","containerDiv","editCarouselImage","_res$data11","_res$data12","delRow","delPrimaryItems","_secondary$imageTitle","_secondary$img","_secondary$navigateUr","_secondary$price","_res$data9","_res$data10","delSecondaryItems","EditorConvertToHTML","_Component","_this","call","onEditorStateChange","editorState","draftToHtml","convertToRaw","getCurrentContent","handleChangeState","EditorState","createEmpty","parentState","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","dist_react_draft_wysiwyg","editorStyle","wrapperClassName","editorClassName","toolbarClassName","fontFamily","dropdownClassName","colorPicker","JobDescription","CareersCMS","openBlog","setOpenBlog","blog","setBlog","storeDataEdit","handleCloseStores","innerDialog","headerBottom","richTextEditor","CareerBannerCMS","StyloriSilverCMS","arrData","setArrData","StylesCard","storeheader","StoretableData","background_Image","subText","SilverYarnsCMS","button_Text","StyloriSilverTitleCMS","title_Text","sub_Text","writer","TestimonialCMS","bottomText","StylesCardPrice","InstaCardCMS","CareerHeaderCMS","FaqCMS","FaqTitleCMS","HomeNotificationCMS","FaqSCMS","hasChild","DatePickerComp","react_datepicker_min_default","customName","initialBlogDetails","header_Bottom","description_1","description_2","description_3","end_Text","third_Image","second_Image","BlogPageCMS","_blogs$second_Image","_blogs$second_Image$b","_blogs$third_Image","_blogs$third_Image2","_blogState$third_Imag5","_blogState$second_Ima7","_blogState$second_Ima8","_blogState$second_Ima9","_blogState$third_Imag6","_blogState$third_Imag7","blogs","setBlogs","addBlogsOpens","setAddBlogs","blogState","setBlogState","handleAddNewStoresClose","onChangeStoreData","_blogState$second_Ima","_blogState$second_Ima2","_blogState$second_Ima3","newBanner","editBanners","imageText","blogInnerImage","contentText","alignText","textFields","datePicker","datePickerComp_DatePickerComp","sx","esm_Delete","_blogState$second_Ima6","handleDeleteBanner","_blogState$second_Ima4","_blogState$second_Ima5","_blogState$third_Imag","_blogState$third_Imag2","_blogState$third_Imag3","_blogState$third_Imag4","_location$state2","cloneDialog","setCloneDialog","cloneState","setCloneState","fetchCall","_location$state","pageName","_data$data$cdnByPage","cdnByPage","handleCloneDialogClose","propsKey","replaceIndex","stringifyState","findIndex","newStateSet","bannerCMS","homeNotificationCMS_HomeNotificationCMS","collectionCardCMS","homePageIcons","collectionJewelleryCardCMS","testimonialCardCMS","blogsPageCMS","storiesCardCMS","collectionCarouselCMS","careerBannerCMS","careerHeaderCMS","careersCMS","styloriSilverCMS","testimonialCMS_TestimonialCMS","StyleCardCMS_StylesCard","stylesCardPrice_StylesCardPrice","styloriSilverTitleCMS_StyloriSilverTitleCMS","silverYarnsCMS_SilverYarnsCMS","instaCardCMS_InstaCardCMS","faqCMS","faqTitleCMS_FaqTitleCMS","faqSCMS","getTheTable","cloneData","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","AppAlert","Alert_Alerts","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","App_Alert","routes","hostname","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e967b0a.chunk.js","sourcesContent":["export const BASE_URL = process.env.REACT_APP_API_URL;\r\nexport const API_URL = process.env.REACT_APP_API_URL;\r\nexport const GRAPHQL_DEV_CLIENT = `${process.env.REACT_APP_API_URL}/graphql`;\r\nexport const URL = process.env.REACT_APP_CONSOLE_APP_URL;\r\nexport const BASE_IMAGE_URL = process.env.REACT_APP_BASE_IMAGE_URL\r\nexport const APP_URL = process.env.REACT_APP_URL\r\n","import React from 'react';\r\nimport { GRAPHQL_DEV_CLIENT } from '../config';\r\n\r\nconst globalCtxInitial = {\r\n    globalCtx: {\r\n        auth:{\r\n            loggedIn: false,\r\n            userData: {}\r\n        },\r\n        sideBarOpen: false,\r\n        isExpand: false,\r\n        selectedIndex: 0,\r\n        gqlClient: GRAPHQL_DEV_CLIENT\r\n    },\r\n    setGlobalCtx: () => null\r\n}\r\n\r\nexport const GlobalContext = React.createContext(globalCtxInitial);\r\n\r\nexport const GlobalConsumer = GlobalContext.Consumer;\r\n\r\nexport const GlobalProvider = props => {\r\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n    return(\r\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\r\n            {props.children}\r\n        </GlobalContext.Provider>      \r\n    )\r\n}","import React from \"react\";\r\n\r\nconst productuploadCtxInitial = {\r\n  productCtx: {\r\n    product_categoy: \"\",\r\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\r\n    product_type: \"\",\r\n    productname: \"\",\r\n    material: \"\",\r\n    product_type_shortcode: \"\",\r\n    category: [],\r\n    metalColour: \"\",\r\n    metalpurities: \"\",\r\n    isExpand: false,\r\n    selectedgender: \"\",\r\n    selected_metal_colour: {},\r\n    gender: {},\r\n    product_gender: [],\r\n    vendorname: \"\",\r\n    productseries: [],\r\n    size: 0,\r\n    sizes: [],\r\n    selected_sizes: [],\r\n    metal: {\r\n      value: 1,\r\n      label: \"Diamond\",\r\n    },\r\n\r\n    materials: [\"Diamond\", \"Gold\", \"Gemstone\", \"Solitaire\", \"Silver\", \"Platinum\"],\r\n    gemstontypes: \"\",\r\n    gemstonshapes: \"\",\r\n    product_code: \"\",\r\n    isactive: false,\r\n    gemstonelist: [],\r\n    diamondlist: [],\r\n    variants: [],\r\n    oldproductMetalColor: [],\r\n    oldproductMetalPurity: [],\r\n    productMetalColor: [],\r\n    productMetalPurity: [],\r\n    productDiamondColor: [],\r\n    productDiamondClarity: [],\r\n    productDiamondTypes: [],\r\n    productImages: [],\r\n    productDiamondTypesArray: [],\r\n    oldproductDiamondTypesArray: [],\r\n    productmaterials: [],\r\n    createVariantList: [],\r\n    editVariants: [],\r\n    editDiamondLists: [],\r\n    editGemstoneLists: [],\r\n    productVariantSize: [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\r\n    variant_size: [],\r\n    gemstonetype: \"\",\r\n    gemstoneshape: \"\",\r\n    gemstonesettings: \"\",\r\n    gemstonesize: \"\",\r\n    gemstonecount: \"\",\r\n    gemstoneweight: \"\",\r\n    stonetype: \"\",\r\n\r\n    editleadtime: \"\",\r\n    editreadytoship: false,\r\n    editisdefault: false,\r\n    editisactive: false,\r\n    editisOrderable: false,\r\n    editorderShippingDays:0,\r\n\r\n    editcostprice: 0,\r\n    editsellingprice: 0,\r\n    editmarkupprice: 0,\r\n    editdiscountprice: 0,\r\n    editcostpricetax: 0,\r\n    editsellingpricetax: 0,\r\n    editmarkuppricetax: 0,\r\n    editdiscountpricetax: 0,\r\n\r\n    diamondclarity: \"\",\r\n    diamondcolor: \"\",\r\n    diamondsettings: \"\",\r\n    diamondshape: \"\",\r\n    diamondcount: \"\",\r\n    diamondweight: \"\",\r\n    metalindex: -1,\r\n    themes: [],\r\n    prod_styles: [],\r\n    occassions: [],\r\n    collections: [],\r\n    stonecount: [],\r\n    stonecolour: [],\r\n    product_images: {},\r\n    metalcolour: [],\r\n    metal_purity: [],\r\n    metalpurity: [],\r\n    metal_color: 0,\r\n    metal_weight: 0,\r\n    diamond_colour: 0,\r\n    diamond_clarity: 0,\r\n    metal_height: 0,\r\n    metal_width: 0,\r\n    metal_length: 0,\r\n    metal_object: 0,\r\n    diamondtype: 0,\r\n    metals: [],\r\n    error_message: {},\r\n    prod_desc: \"\",\r\n    productvendorcode: \"\",\r\n    earringbacking: [],\r\n    minOrderQty: \"\",\r\n    maxOrderQty: \"\",\r\n    approximateMetalWeight: \"\",\r\n    height: \"\",\r\n    width: \"\",\r\n    isOrderable:false,\r\n    orderShippingDays:0\r\n  },\r\n  masterData: {},\r\n  setProductCtx: () => null,\r\n};\r\n\r\nexport const ProductContext = React.createContext(productuploadCtxInitial);\r\n\r\nexport const ProductConsumer = ProductContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n  if (Object.keys(apiData).length === 0) return {};\r\n\r\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\r\n\r\n  return productuploadCtxInitial.productCtx;\r\n};\r\n\r\nexport const ProductProvider = (props) => {\r\n  console.info(\"PROPS\", props, props.value.mappertype);\r\n  const [productCtx, setProductCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\r\n  // on Mount get Data from storage\r\n  // on Unmount store data to storage\r\n\r\n  React.useEffect(() => {\r\n    console.info(\"productCtx s\", productCtx);\r\n  }, [productCtx.material]);\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{\r\n        productCtx,\r\n        setProductCtx,\r\n        masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype),\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst materialCtxInitial = {\r\n    materialCtx: {\r\n        \r\n    },\r\n    materialMaster: {\r\n        materials: []\r\n    },\r\n    setMaterialCtx: () => null\r\n}\r\n\r\nexport const MaterialContext = React.createContext(materialCtxInitial);\r\n\r\nexport const MaterialConsumer = MaterialContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\r\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\r\n\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\r\n\r\n    return materialCtxInitial.materialCtx;\r\n}\r\n\r\nexport const MaterialProvider = props => {\r\n    console.info('PROPS',props,props.value.mappertype)\r\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('materialCtx s',materialCtx);\r\n    },[materialCtx.material])\r\n\r\n    return(\r\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </MaterialContext.Provider>      \r\n    )\r\n}","import React from \"react\";\r\n\r\nconst voucherCtxInitial = {\r\n  voucherCtx: {\r\n    voucher: \"\",\r\n    attrobj: {},\r\n  },\r\n  voucherMaster: {\r\n    materials: [],\r\n  },\r\n  setVoucherCtx: () => null,\r\n};\r\n\r\nexport const VoucherContext = React.createContext(voucherCtxInitial);\r\n\r\nexport const VoucherConsumer = VoucherContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n  if (Object.keys(apiData).length === 0) return {};\r\n  console.log(\"resposeobjvalue1\" + JSON.stringify(apiData));\r\n  voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\r\n\r\n  return voucherCtxInitial.voucherCtx;\r\n};\r\n\r\nexport const VoucherProvider = (props) => {\r\n  const [voucherCtx, setVoucherCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\r\n  // on Mount get Data from storage\r\n  // on Unmount store data to storage\r\n\r\n  React.useEffect(() => {\r\n    console.info(\"materialCtx s\", voucherCtx);\r\n  }, [voucherCtx.voucher]);\r\n\r\n  return (\r\n    <VoucherContext.Provider\r\n      value={{\r\n        voucherCtx,\r\n        setVoucherCtx,\r\n        masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype),\r\n      }}\r\n    >\r\n      {props.children}\r\n    </VoucherContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst orderCtxInitial = {\r\n    orderCtx: {\r\n        \r\n    },\r\n    orderMaster: {\r\n        orders: []\r\n    },\r\n    setOrderCtx: () => null\r\n}\r\n\r\nexport const OrderContext = React.createContext(orderCtxInitial);\r\n\r\nexport const OrderConsumer = OrderContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \r\n    if(Object.keys(apiData).length === 0) return {};\r\n \r\n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\r\n\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\r\n\r\n    return orderCtxInitial.orderCtx;\r\n}\r\n\r\nexport const OrderProvider = props => {\r\n    console.info('PROPS',props,props.value.mappertype)\r\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('orderCtx s',orderCtx);\r\n    },[orderCtx.order])\r\n\r\n    return(\r\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </OrderContext.Provider>      \r\n    )\r\n}","import React from \"react\";\r\nexport let AlertProps = {\r\n  vertical: {\r\n    top: \"top\",\r\n    bottom: \"bottom\",\r\n  },\r\n  horizontal: {\r\n    left: \"left\",\r\n    right: \"right\",\r\n    center: \"center\",\r\n  },\r\n  severity: {\r\n    success: \"success\",\r\n    error: \"error\",\r\n    warning: \"warning\",\r\n    info: \"info\",\r\n  },\r\n};\r\n\r\n/**\r\n * AlertContext store the props which are neccessary to show the Alert component,\r\n * which is provided at the /src/App.js using the /src/App.alert.js.\r\n */\r\nexport let AlertContext = React.createContext({\r\n  open: false,\r\n  severity: AlertProps.severity.success,\r\n  msg: \"\",\r\n  vertical: AlertProps.vertical.top,\r\n  horizontal: AlertProps.horizontal.center,\r\n  onclose: () => null,\r\n  setSnack: () => null,\r\n});\r\n","import gql from \"graphql-tag\";\r\n\r\nconst PRODUCTCATEGORY = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        alias\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterGenders {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterDiamondTypes {\r\n      nodes {\r\n        diamondClarity\r\n        diamondColor\r\n        id\r\n      }\r\n    }\r\n    allMasterMetalsColor: allAttributes(condition: { masterId: 7 }) {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondsSettings {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterDiamondsShapes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n      }\r\n    }\r\n    allMasterThemes: allAttributes(condition: { masterId: 4 }) {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n\r\n    allMasterStyles: allAttributes(condition: { masterId: 3 }) {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterOccasions: allAttributes(condition: { masterId: 9 }) {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterCollections: allAttributes(condition: { masterId: 6 }) {\r\n      nodes {\r\n        id\r\n        alias\r\n        name\r\n      }\r\n    }\r\n    allMasterStonesColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterStones {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondClarities {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterVendors {\r\n      nodes {\r\n        id\r\n        name\r\n        shortCode\r\n        vendorDelivaryDays\r\n      }\r\n    }\r\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\r\n      nodes {\r\n        productSeries\r\n        id\r\n      }\r\n    }\r\n    allMasterGemstonesTypes {\r\n      nodes {\r\n        alias\r\n        colorCode\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterGemstonesShapes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterEarringBackings {\r\n      nodes {\r\n        name\r\n        createdAt\r\n        alias\r\n        id\r\n        nodeId\r\n        updatedAt\r\n      }\r\n    }\r\n    allMasterGemstonesSettings {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTFILTERMASTER = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        updatedAt\r\n        shortCode\r\n        name\r\n        id\r\n        createdAt\r\n        alias\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        updatedAt\r\n        shortCode\r\n        name\r\n        id\r\n        createdAt\r\n        alias\r\n        displayOrder\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLPRODUCTLIST = gql`\r\n  query {\r\n    allProductLists(first: 500) {\r\n      nodes {\r\n        id\r\n        nodeId\r\n        productName\r\n        productCategory\r\n        productType\r\n        productId\r\n        createdAt\r\n        isactive\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            skuUrl\r\n            discount\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTLIST = (category) => gql`\r\n  query ($Veiw: Int!, $Offset: Int!) {\r\n    allProductLists(first: $Veiw, offset: $Offset) {\r\n      nodes {\r\n        id\r\n        nodeId\r\n        productName\r\n        productCategory\r\n        productType\r\n        productId\r\n        createdAt\r\n        isactive\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            skuUrl\r\n            discount\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst VENDORLISTS = gql`\r\n  query {\r\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\r\n      nodes {\r\n        vendorDelivaryDays\r\n        updatedAt\r\n        state\r\n        shortCode\r\n        partnerCategory\r\n        name\r\n        organization\r\n        gstNo\r\n        currency\r\n        createdAt\r\n        city\r\n        address\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst TaxList_1 = gql`\r\n  query {\r\n    allMasterTaxSettings {\r\n      nodes {\r\n        hsnNumber\r\n        taxName\r\n        taxValue\r\n        updatedAt\r\n        id\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`; /*********** configuration query */\r\n\r\nconst TaxList = `\r\nquery  {\r\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      hsnNumber\r\n      taxName\r\n      taxValue\r\n      igst\r\n      cgst\r\n      sgst\r\n      productAttributes\r\n      displayAttributes\r\n      updatedAt\r\n      id\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\nconst TaxSettingList = `\r\nquery  {\r\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      value\r\n      hsnCode\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERMATERIAL = `\r\nquery  {\r\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERMATERIALCOLORS = `\r\nquery  {\r\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      shortCode\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERPRODUCTPURITIES = `\r\nquery  {\r\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DESIGNMASTER = `\r\nquery  {\r\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    alias\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n    id\r\n  }\r\n}\r\n}`;\r\nconst COLLECTIONMASTER = `\r\nquery  {\r\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst OCCASSIONSMASTER = `\r\nquery  {\r\n  allMasterOccasions {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst STYLEMASTER = `\r\nquery  {\r\nallMasterStyles {\r\n  nodes {\r\n    alias\r\n    createdAt\r\n    name\r\n    id\r\n    updatedAt\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}`;\r\nconst THEMEMASTER = `\r\nquery  {\r\n  allMasterThemes {\r\n    nodes {\r\n      createdAt\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst DIAMONDMASTER = `\r\nquery {\r\n  allMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      shortCode\r\n      diamondClarity\r\n      diamondColor\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst PAYMENTSTATUSMASTER = `\r\n{\r\n  allOrderStatusMasters {\r\n    nodes {\r\n      createdAt\r\n      id\r\n      isActive\r\n      name\r\n      updatedAt\r\n    }\r\n  }\r\n  allPaymentStatusMasters(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      createdAt\r\n      id\r\n      isActive\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\nconst DIAMONDSETTINGS = `\r\nquery  {\r\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    id\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}\r\n`;\r\nconst DIAMONDSHAPES = `\r\nquery  {\r\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERPRODUCTTYPES = `\r\nquery  {\r\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    certificate\r\n    name\r\n    id\r\n    alias\r\n    isActive\r\n    isFilter\r\n    shortCode\r\n    displayOrder\r\n  }\r\n}\r\n}`;\r\nconst MASTERCATEGORIES = `\r\nquery{\r\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst GEMSTONE_MARKUP_SETTING = `\r\n\r\nquery{\r\n  allMaterialMarkups(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      createdAt\r\n      id\r\n      markupType\r\n      markupValue\r\n      materialName\r\n      nodeId\r\n      priceMax\r\n      priceMin\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst MASTERPAGES = `\r\nquery  {\r\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      pagename\r\n      displayname\r\n      id\r\n    }\r\n  }\r\n}`;\r\nconst GOLDPRICESETUPMASTER = `\r\nquery  {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\nconst EARRINGBACKING = `\r\nquery  {\r\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      updatedAt\r\n      createdAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERSTONES = `\r\nquery  {\r\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERCOUNTRIES = `\r\nquery  {\r\n  allMasterCountries(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      iso\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGCHARGES = `query{\r\n  allShippingCharges {\r\n    nodes {\r\n      id\r\n      name\r\n      isActive\r\n      isCart\r\n      chargeType\r\n      rangeFrom\r\n      rangeTo\r\n      shipmentCharge\r\n      productAttributes\r\n      displayAttributes\r\n      shippingZoneByZoneId {\r\n        name\r\n        id\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n}`;\r\nconst ACTIVESHIPPINGZONES = `\r\nquery  {\r\n  allShippingZones(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGZONES = `\r\nquery  {\r\n  allShippingZones {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n      shippingZoneCountriesByZoneId {\r\n        nodes {\r\n          countryId\r\n          createdAt\r\n          id\r\n          masterCountryByCountryId {\r\n            name\r\n            nicename\r\n            id\r\n          }\r\n        }\r\n      }\r\n      shippingChargesByZoneId {\r\n        nodes {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\nconst MASTERSTONECOLORS = `\r\nquery  {\r\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERWEIGHTS = `\r\nquery  {\r\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      createdAt\r\n      name\r\n      id\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERSTONESHAPES = `\r\nquery  {\r\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      createdAt\r\n      alias\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERATTRIBUTES = `\r\nquery  {\r\nallAttributeMasters {\r\n  nodes {\r\n    name\r\n    isFilter\r\n    id\r\n    isSearch\r\n    isActive\r\n    filterPosition\r\n    isTopMenu\r\n    createdAt\r\n    shortCode\r\n    updatedAt\r\n  }\r\n}\r\n}`;\r\n\r\nconst MASTERGEMSETTINGS = `\r\nquery  {\r\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERGEMSHAPES = `\r\nquery  {\r\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGEMTYPES = `\r\nquery  {\r\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      colorCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGENDER = `\r\nquery  {\r\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst SEOPRIORITIES = `\r\nquery  {\r\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      priority\r\n      seoText\r\n      seoUrl\r\n      imageUrl\r\n        mobileImageUrl\r\n      id\r\n      attributeName\r\n      attributeValue\r\n    }\r\n  }\r\n}`;\r\n/**************** */\r\n\r\n// const PRODUCTLIST  = (category) =>  gql`\r\n// query  {\r\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\r\n//     nodes {\r\n//       id\r\n//       nodeId\r\n//       productName,\r\n//       productCategory,\r\n//       productType\r\n//       productId,\r\n//       createdAt\r\n//       isactive,\r\n//       transSkuListsByProductId(condition: {isdefault: true}) {\r\n//         nodes {\r\n//           skuUrl\r\n//           discount\r\n//         }\r\n//       }\r\n//     }\r\n//     totalCount\r\n//   }\r\n// }\r\n// `;\r\n\r\nconst GOLDPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        purity\r\n        vendorCode\r\n        updatedAt\r\n        sellingPriceType\r\n        sellingPrice\r\n        material\r\n        id\r\n        createdAt\r\n        costPrice\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst DIAMONDMARKUP = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allPricingMarkups(\r\n      condition: { material: $vendorCode }\r\n      orderBy: UPDATED_AT_DESC\r\n    ) {\r\n      nodes {\r\n        updatedAt\r\n        sellingPriceMin\r\n        sellingPriceMax\r\n        material\r\n        category\r\n        productType\r\n        purities\r\n        markupValue\r\n        markupType\r\n        id\r\n        createdAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst ALLMARKUPPRICE = gql`\r\n  query MyQuery {\r\n    allPricingMarkups(orderBy: UPDATED_AT_DESC) {\r\n      nodes {\r\n        updatedAt\r\n        sellingPriceMin\r\n        sellingPriceMax\r\n        material\r\n        category\r\n        productType\r\n        purities\r\n        markupValue\r\n        markupType\r\n        id\r\n        createdAt\r\n        __typename\r\n      }\r\n      totalCount\r\n      __typename\r\n    }\r\n  }\r\n`;\r\nconst DIAMONDPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        costPrice\r\n        createdAt\r\n        diamondClarity\r\n        diamondColour\r\n        id\r\n        sellingPrice\r\n        sellingPriceType\r\n        updatedAt\r\n        vendorCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst GEMPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\r\n    allGemstonePriceSettings(\r\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\r\n    ) {\r\n      nodes {\r\n        createdAt\r\n        id\r\n        sellingPriceType\r\n        updatedAt\r\n        vendorCode\r\n        gemstoneType\r\n        price\r\n        priceType\r\n        rateType\r\n        weightEnd\r\n        weightStart\r\n        __typename\r\n      }\r\n      totalCount\r\n      __typename\r\n    }\r\n  }\r\n`;\r\n// const CATGORYLIST = gql`\r\n// query {\r\n//   allMasterMaterials {\r\n//     nodes {\r\n//       name\r\n//       shortCode\r\n//     }\r\n// }`;\r\n\r\nconst CATGORYLIST = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        alias\r\n        name\r\n        shortCode\r\n        id\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTTYPEMASTER = gql`\r\n  query {\r\n    allMasterProductTypes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MATERIALMASTER = gql`\r\n  query {\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        name\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MASTERCOLORS = gql`\r\n  query {\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        name\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst SALEDISCOUNTS = gql`\r\n  query {\r\n    allSaleDiscounts {\r\n      nodes {\r\n        id\r\n        discountName\r\n        discountType\r\n        discountValue\r\n        components\r\n        attributes\r\n        isActive\r\n        productAttributes\r\n        productAttributesText\r\n      }\r\n\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst VOUCHERDISCOUNTS = gql`\r\n  query {\r\n    allVouchers {\r\n      nodes {\r\n        id\r\n        name\r\n        code\r\n        uses\r\n        maxUses\r\n        isActive\r\n        voucherCodes\r\n        description\r\n      }\r\n\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MASTERPURITIES = gql`\r\n  query {\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        name\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst VENDORLIST = `\r\nquery {\r\n  allMasterVendors {\r\n    nodes {\r\n      vendorDelivaryDays\r\n      updatedAt\r\n      state\r\n      shortCode\r\n      partnerCategory\r\n      name\r\n      organization\r\n      gstNo\r\n      currency\r\n      createdAt\r\n      city\r\n      address\r\n    }\r\n  }\r\n}`;\r\n\r\nconst METALMASTER = `\r\nquery {\r\n  allMasterMaterials {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERCATEGORY = `\r\nquery {\r\n  \r\n    allMasterProductCategories {\r\n      nodes {\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMaterials {\r\n      nodes {\r\n        name\r\n        id\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n  \r\n  \r\n}`;\r\n\r\nconst GEMSTONEMASTER = `\r\nquery {\r\n  allMasterGemstonesTypes {\r\n    nodes {\r\n      name\r\n      shortCode\r\n      colorCode\r\n    }\r\n  }  \r\n}`;\r\n\r\nconst MAKINGCHARGEPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\r\n    allMakingChargeSettings(\r\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\r\n    ) {\r\n      nodes {\r\n        weightStart\r\n        weightEnd\r\n        vendorCode\r\n        updatedAt\r\n        sellingPriceType\r\n        rateType\r\n        purity\r\n        priceType\r\n        price\r\n        material\r\n        id\r\n        createdAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRODUCTLISTSTATUSEDIT = gql`\r\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\r\n    __typename\r\n    updateProductListByProductId(\r\n      input: {\r\n        productId: $productId\r\n        productListPatch: { isactive: $isActive }\r\n      }\r\n    ) {\r\n      clientMutationId\r\n      productList {\r\n        isactive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATETAXSETUP = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $updatedAt: Date!\r\n    $createdAt: Date!\r\n    $taxValue: Double!\r\n    $taxName: String!\r\n    $hsnNumber: String!\r\n  ) {\r\n    __typename\r\n    createMasterTaxSetting(\r\n      input: {\r\n        masterTaxSetting: {\r\n          id: $id\r\n          updatedAt: $updatedAt\r\n          createdAt: $createdAt\r\n          taxValue: $taxValue\r\n          taxName: $taxName\r\n          hsnNumber: $hsnNumber\r\n        }\r\n      }\r\n    ) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst VOUCHERSTATUSEDIT = gql`\r\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\r\n    __typename\r\n    updateVoucherById(\r\n      input: { id: $voucherId, voucherPatch: { isActive: $isActive } }\r\n    ) {\r\n      clientMutationId\r\n      voucher {\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DISCOUNTSTATUSEDIT = gql`\r\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\r\n    __typename\r\n    updateSaleDiscountById(\r\n      input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }\r\n    ) {\r\n      clientMutationId\r\n      saleDiscount {\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEMARKUPPRICE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deletePricingMarkupById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEGOLDPRICE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\nconst DELETESALEDISCOUNT = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteSaleDiscountById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEVOUCHERDISCOUNT = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteVoucherById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEMAKINGCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEGEMCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\nconst DELETEDIAMONDCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRODUCTDIAMONDTYPES = `\r\nquery{\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      diamondClarity\r\n      diamondColor\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\nconst PRODUCTEDIT = `\r\nquery MyQuery($productId: String!) {\r\n  productListByProductId(productId: $productId) {\r\n    productMetalcoloursByProductId {\r\n      nodes {\r\n        productColor\r\n        id\r\n      }\r\n    }\r\n    height\r\n    width\r\n    productId\r\n    productName\r\n    productType\r\n    prodDescription\r\n    vendorCode\r\n    productVendorCode\r\n    sellingQty\r\n    maxBookingQty\r\n    gender\r\n    earringBacking\r\n    isactive\r\n    productMaterialsByProductSku {\r\n      nodes {\r\n        materialName\r\n      }\r\n    }\r\n    productDiamondsByProductSku {\r\n      nodes {\r\n        diamondClarity\r\n        diamondColour\r\n        diamondSettings\r\n        diamondShape\r\n        diamondType\r\n        id\r\n        stoneCount\r\n        stoneWeight\r\n      }\r\n    }\r\n    productGemstonesByProductSku {\r\n      nodes {\r\n        gemstoneSetting\r\n        gemstoneShape\r\n        gemstoneSize\r\n        gemstoneType\r\n        gemstonsSize\r\n        id\r\n        stoneCount\r\n        stoneWeight\r\n      }\r\n    }\r\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\r\n      nodes {\r\n        id\r\n        imagePosition\r\n        productId\r\n        imageUrl\r\n        ishover\r\n        isdefault\r\n        productColor\r\n      }\r\n    }\r\n    productPuritiesByProductId {\r\n      nodes {\r\n        purity\r\n        id\r\n      }\r\n    }\r\n    productThemesByProductId(condition: { isActive: true }) {\r\n      nodes {\r\n        themeName\r\n        id\r\n      }\r\n    }\r\n    productStonecolorsByProductId {\r\n      nodes {\r\n        id\r\n        stonecolor\r\n      }\r\n    }\r\n    productStylesByProductId(condition: { isActive: true }) {\r\n      nodes {\r\n        styleName\r\n        id\r\n      }\r\n    }\r\n    productCollectionsByProductId {\r\n      nodes {\r\n        collectionName\r\n        id\r\n      }\r\n    }\r\n    productOccassionsByProductId(condition: { isActive: true }) {\r\n      nodes {\r\n        occassionName\r\n        id\r\n      }\r\n    }\r\n    productStonecountsByProductId {\r\n      nodes {\r\n        id\r\n        stonecount\r\n      }\r\n    }\r\n    transSkuListsByProductId {\r\n      nodes {\r\n        skuSize\r\n        diamondType\r\n        metalColor\r\n        purity\r\n        productId\r\n        skuWeight\r\n        generatedSku\r\n        costPrice\r\n        costPriceTax\r\n        discountPrice\r\n        discountPriceTax\r\n        markupPrice\r\n        marginOnSalePercentage\r\n        markupPriceTax\r\n        marginOnSalePercentage\r\n        sellingPrice\r\n        discountDesc\r\n        sellingPriceTax\r\n        isReadyToShip\r\n        discount\r\n        isActive\r\n        availableStockQty\r\n        isdefault\r\n        vendorDeliveryTime\r\n        id\r\n        isActive\r\n        \r\n        transSkuDescriptionsBySkuId {\r\n          nodes {\r\n            skuDescription\r\n            certificate\r\n            ringsizeImage\r\n          }\r\n        }\r\n        minOrderQty\r\n        maxOrderQty\r\n        isOrderable\r\n        orderShippingDays\r\n      }\r\n    }\r\n    productCategory\r\n    sizeVarient\r\n    masterVendorByVendorCode {\r\n      name\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst ALLMASTERRINGSIZE = `\r\n  query {\r\n    allMasterRingsSizes {\r\n      nodes {\r\n        gender\r\n        productType\r\n        name\r\n        size\r\n        sizeValue\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLSTYLORILANDINGBANNERS = `\r\nquery MyQuery {\r\n  allStyloriBanners {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLSTYLORISILVERLANDINGBANNERS = `\r\nquery MyQuery {\r\n  allStyloriSilverBanners(condition: {urlParam: \"landing\"}) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst CREATESTYLORILANDINGBANNER = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createStyloriBanner(\r\n    input: {\r\n      styloriBanner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    styloriBanner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DELETESTYLORILANDINGBANNER = `\r\nmutation MyMutation($id : Int!) {\r\n  deleteStyloriBannerById(input: {id: $id}) {\r\n    styloriBanner {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      \r\n    }\r\n  }\r\n}`;\r\n\r\nconst ALLSTYLORISILVERLISTINGBOTTOMBANNERS = `\r\nquery MyQuery {\r\n  allStyloriSilverBanners(condition: {urlParam: \"bottom\"}) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n`;\r\nconst CREATESILVERLISTINGBOTTOMBANNER = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n   $position: String\r\n) {\r\n  createStyloriSilverBanner(\r\n    input: {\r\n      styloriSilverBanner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        url: $url\r\n        web: $web\r\n        urlParam: \"bottom\"\r\n        position: $position\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    styloriSilverBanner {\r\n      id\r\n      mobile\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\nconst DELETESILVERLISTINGBOTTOMBANNER = `\r\nmutation MyMutation($id: Int!) {\r\n  deleteStyloriSilverBannerById(input: { id: $id }) {\r\n    styloriSilverBanner {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n    }\r\n  }\r\n}`;\r\n\r\nconst CREATESILVERLANDINGBANNER = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: String\r\n) {\r\n  createStyloriSilverBanner(\r\n    input: {\r\n      styloriSilverBanner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam :\"landing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    styloriSilverBanner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}`;\r\nconst DELETESILVERLANDINGBANNER = `\r\nmutation MyMutation($id : Int!) {\r\n  deleteStyloriSilverBannerById(input: {id: $id}) {\r\n    styloriSilverBanner {\r\n      id\r\n      nodeId\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLSTYLORISILVERLISTINGPAGE = `\r\nquery MyQuery {\r\n  allStyloriSilverBanners\r\n  (condition: {urlParam: \"listingPage\"}) \r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSPECIFICLISTINGPAGE = `\r\nquery MyQuery {\r\n  allStyloriSilverBanners\r\n  (condition: {url: \"specificListingPage\"}) \r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATESPECIFICLISTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $web: String\r\n  $mobile: String\r\n  $urlParam :String\r\n) {\r\n  createStyloriSilverBanner(\r\n    input: {\r\n      styloriSilverBanner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n       \r\n        url: \"specificListingPage\"\r\n        web: $web\r\n        urlParam : $urlParam\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    styloriSilverBanner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATESILVERLISTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: String\r\n) {\r\n  createStyloriSilverBanner(\r\n    input: {\r\n      styloriSilverBanner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam : \"listingPage\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    styloriSilverBanner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\nconst PRODUCTDESCRIPTIONEDIT = `\r\nmutation MyMutation($productId: String!, $prod_desc: String!) {\r\n  updateProductListByProductId(\r\n    input: {\r\n      productListPatch: { prodDescription: $prod_desc }\r\n      productId: $productId\r\n    }\r\n  ) {\r\n    productList {\r\n      prodDescription\r\n      id\r\n      productId\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERROUTINGPAGE = `\r\nquery MyQuery {\r\n  allStyloriSilverBanners(condition: {url: \"#\"}) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}`;\r\nconst CREATESTYLORISILVERROUTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $web: String\r\n  $mobile: String\r\n  $position: String\r\n  $urlParam: String\r\n) {\r\n  createStyloriSilverBanner(\r\n    input: {\r\n      styloriSilverBanner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: \"S\"\r\n        web: $web\r\n        urlParam: $urlParam\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    styloriSilverBanner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst HOLIDAYLIST = gql`\r\n  query ($first: Int, $offset: Int, $filter: HolidayManagerFilter) {\r\n    allHolidayManagers(\r\n      first: $first\r\n      offset: $offset\r\n      filter: $filter\r\n      orderBy: DATE_ASC\r\n    ) {\r\n      nodes {\r\n        id\r\n        holiday\r\n        date\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst WAREHOUSELIST = gql`\r\n  query {\r\n    allWarehouses(orderBy: ID_ASC) {\r\n      nodes {\r\n        id\r\n        name\r\n        shippingInDays\r\n        isActive\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst INVENTORYLIST = gql`\r\n  query ($first: Int, $offset: Int, $filter: InventoryFilter) {\r\n    allInventories(first: $first, offset: $offset, filter: $filter) {\r\n      nodes {\r\n        id\r\n        generatedSku\r\n        numberOfItems\r\n        createdAt\r\n        updatedAt\r\n        warehouse: warehouseByWarehouseId {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst VALIDATEGENERATEDSKU = gql`\r\n  query ($generatedSku: String!) {\r\n    allTransSkuLists(condition: { generatedSku: $generatedSku }) {\r\n      nodes {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst STOCKSTATUS = gql`\r\n  query {\r\n    allWarehouses {\r\n      nodes {\r\n        name\r\n        isActive\r\n        inventoriesByWarehouseId {\r\n          aggregates {\r\n            sum {\r\n              numberOfItems\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ABANDONEDCART = gql`\r\n  query (\r\n    $first: Int\r\n    $offset: Int\r\n    $orderBy: [ShoppingCartsOrderBy!]\r\n    $condition: ShoppingCartCondition\r\n    $filter: ShoppingCartFilter\r\n  ) {\r\n    allShoppingCarts(\r\n      first: $first\r\n      offset: $offset\r\n      orderBy: $orderBy\r\n      condition: $condition\r\n      filter: $filter\r\n    ) {\r\n      nodes {\r\n        id\r\n        isActive\r\n        netAmount\r\n        status\r\n        taxAmount\r\n        userprofileId\r\n        user: userProfileByUserprofileId {\r\n          id\r\n          firstName\r\n          lastName\r\n          username\r\n          email\r\n          mobile\r\n        }\r\n        cart_items: shoppingCartItemsByShoppingCartId {\r\n          nodes {\r\n            productSku\r\n            qty\r\n            transSkuListByProductSku {\r\n              generatedSku\r\n              skuId\r\n              productListByProductId {\r\n                productName\r\n              }\r\n            }\r\n          }\r\n        }\r\n        grossAmount\r\n        discountedPrice\r\n        discount\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst CARTBYID = gql`\r\n  query ($id: UUID!) {\r\n    cart: shoppingCartById(id: $id) {\r\n      id\r\n      isActive\r\n      netAmount\r\n      status\r\n      taxAmount\r\n      userprofileId\r\n      grossAmount\r\n      discountedPrice\r\n      discount\r\n      createdAt\r\n      updatedAt\r\n      address: cartAddressesByCartId {\r\n        nodes {\r\n          id\r\n          addressline1\r\n          addressline2\r\n          city\r\n          contactNumber\r\n          country\r\n          countryCode\r\n          createdAt\r\n          firstname\r\n          lastname\r\n          pincode\r\n          salutation\r\n          state\r\n          updatedAt\r\n          addressType\r\n        }\r\n      }\r\n      user: userProfileByUserprofileId {\r\n        id\r\n        firstName\r\n        lastName\r\n        username\r\n        email\r\n        mobile\r\n        isemailverified\r\n        ismobileverified\r\n      }\r\n      cart_items: shoppingCartItemsByShoppingCartId {\r\n        nodes {\r\n          productSku\r\n          qty\r\n          transSkuListByProductSku {\r\n            markupPrice\r\n            markupPriceTax\r\n            discountPrice\r\n            discountPriceTax\r\n            generatedSku\r\n            skuId\r\n            productListByProductId {\r\n              productName\r\n              productImagesByProductId(\r\n                condition: { isdefault: true, imagePosition: 1 }\r\n              ) {\r\n                nodes {\r\n                  productId\r\n                  imageUrl\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      follow_ups: communicationLogsByCartId {\r\n        nodes {\r\n          type\r\n          messageType\r\n          senderResponseId\r\n          createdAt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst IMAGEDELETE = `\r\nmutation MyMutation($productimageid: UUID!) {\r\n  deleteProductImageById(input: { id: $productimageid }) {\r\n    productListByProductId {\r\n      productId\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst GETALLERRORLOGS = gql`\r\n  query MyQuery {\r\n    allUiErrorLogs {\r\n      nodes {\r\n        id\r\n        page\r\n        error\r\n        message\r\n        createdAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst GETORDERCOMMUNICATIONLOGS = gql`\r\n  query paymentResponseAndCommunicationLogs($id: UUID!) {\r\n    order: orderById(id: $id) {\r\n      payment_details: paymentDetailsByOrderId(orderBy: CREATED_AT_DESC) {\r\n        nodes {\r\n          id\r\n          paymentResponse\r\n        }\r\n      }\r\n      communication_logs: communicationLogsByOrderId(orderBy: UPDATED_AT_DESC) {\r\n        nodes {\r\n          createdAt\r\n          id\r\n          messageType\r\n          orderId\r\n          senderResponseId\r\n          type\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRICE_RUN_LOGS = gql`\r\n  query ($first: Int, $offset: Int) {\r\n    allPriceRunningHistories(\r\n      first: $first\r\n      offset: $offset\r\n      orderBy: UPDATED_AT_DESC\r\n    ) {\r\n      nodes {\r\n        id\r\n        completedProductCount\r\n        pricingComponent\r\n        logs: pricingLogsByPriceRunningHistoryId {\r\n          nodes {\r\n            requestedProducts\r\n            successfullyExecutedProducts\r\n            failedProducts\r\n          }\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_GEMSTONE_MARKUP = `\r\n\r\nmutation MyMutation($markupType: Int, $markupValue: Float, $materialName: String, $priceMax: Float, $priceMin: Float, $updatedAt: Datetime!, $createdAt: Datetime!, $id: UUID!) {\r\n  createMaterialMarkup(\r\n    input: {materialMarkup: {createdAt: $createdAt, updatedAt: $updatedAt, markupType: $markupType, markupValue: $markupValue, materialName: $materialName, priceMax: $priceMax, priceMin: $priceMin, id: $id}}\r\n  ) {\r\n    materialMarkup {\r\n      markupType\r\n      id\r\n      markupValue\r\n      materialName\r\n      priceMax\r\n      priceMin\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\nconst DELETE_MATERIAL_MARKUP = `\r\nmutation MyMutation($id: UUID!) {\r\n  deleteMaterialMarkupById(input: {id: $id}) {\r\n    materialMarkup {\r\n      markupType\r\n      markupValue\r\n      materialName\r\n      nodeId\r\n      priceMax\r\n    }\r\n  }\r\n}`;\r\n\r\nconst UPDATE_MATERIAL_MARKUP = `\r\nmutation MyMutation(\r\n  $id: UUID!\r\n  $createdAt: Datetime\r\n  $markupType: Int\r\n  $markupValue: Float\r\n  $materialName: String\r\n  $priceMax: Float\r\n  $priceMin: Float\r\n  $updatedAt: Datetime\r\n\r\n) {\r\n  updateMaterialMarkupById(\r\n    input: {\r\n      materialMarkupPatch: {\r\n        createdAt: $createdAt\r\n        markupType: $markupType\r\n        markupValue: $markupValue\r\n        materialName: $materialName\r\n        priceMax: $priceMax\r\n        priceMin: $priceMin\r\n        updatedAt: $updatedAt\r\n      }\r\n      id: $id\r\n    }\r\n  ) {\r\n    materialMarkup {\r\n      createdAt\r\n      id\r\n      markupType\r\n      markupValue\r\n      materialName\r\n      nodeId\r\n      priceMax\r\n      priceMin\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport const dynamicFilterAttributes = gql`\r\n  query {\r\n    master: allAttributeMasters(\r\n      orderBy: NAME_ASC\r\n      filter: { name: { notIn: [\"Weights\", \"Category\", \"Product Type\"] } }\r\n    ) {\r\n      nodes {\r\n        id\r\n        name\r\n        attributes: attributesByMasterId(condition: { isActive: true }) {\r\n          nodes {\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const attributesByMasterID = gql`\r\n  query ($masterId: Int!, $search: String) {\r\n    attributes: allAttributes(\r\n      condition: { masterId: $masterId }\r\n      filter: { name: { includesInsensitive: $search } }\r\n    ) {\r\n      nodes {\r\n        id\r\n        name\r\n        filterPosition\r\n        isActive\r\n        isSearch\r\n        isFilter\r\n        shortCode\r\n        alias\r\n        aliasId\r\n        last_updated_at: updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLPAGESCMS = `query MyQuery {\r\n  allCdns {\r\n    nodes {\r\n      id\r\n      isActive\r\n      data\r\n      page\r\n    }\r\n  }\r\n}`;\r\nconst CMSBYPAGES = `\r\n    query ($page: String!){\r\n        cdnByPage(page: $page) {\r\n          data\r\n          id\r\n          page\r\n        }\r\n      }\r\n    `;\r\n\r\nconst CMS_UPDATE = `\r\n  mutation updateStore( $stringifyState: JSON!,$page: String!) {\r\n    updateCdnByPage(input: { cdnPatch: { data: $stringifyState }, page: $page }) {\r\n      cdn {\r\n        createdAt\r\n        data\r\n        id\r\n        isActive\r\n        nodeId\r\n        page\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_STATUS_CMS = `\r\nmutation updateStatus($isActive: Boolean!, $page: String!){\r\n  updateCdnByPage(input: {cdnPatch: {isActive: $isActive}, page: $page}){\r\n    cdn {\r\n      createdAt\r\n      data\r\n      id\r\n      isActive\r\n      nodeId\r\n      page\r\n      updatedAt\r\n    }\r\n  }\r\n}`;\r\n\r\nconst UPDATE_COMBO_BY_MAIN_PRODUCT = gql`\r\n  mutation updateCombo(\r\n    $offeredProducts: [String]\r\n    $discountType: String!\r\n    $discountValue: Int!\r\n    $mainProduct: String!\r\n    $isActive: Boolean!\r\n  ) {\r\n    updateProductComboOfferByMainProduct(\r\n      input: {\r\n        mainProduct: $mainProduct\r\n        productComboOfferPatch: {\r\n          offeredProducts: $offeredProducts\r\n          discountValue: $discountValue\r\n          discountType: $discountType\r\n          isActive: $isActive\r\n        }\r\n      }\r\n    ) {\r\n      productComboOffer {\r\n        mainProduct\r\n        discountValue\r\n        discountType\r\n        offeredProducts\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_CMS = `\r\nmutation createNew($cloneData: JSON!, $page: String!){\r\n  createCdn(input: {cdn: {data: $cloneData, page: $page}}) {\r\n    cdn {\r\n      data\r\n      page\r\n    }\r\n  }\r\n}`;\r\n\r\nconst UPDATE_URL = `\r\nmutation updateStatus($changePage: String!, $page: String!){\r\n  updateCdnByPage(input: {cdnPatch: {page: $changePage}, page: $page}){\r\n    cdn {\r\n      data\r\n      isActive\r\n      page\r\n    }\r\n  }\r\n}`;\r\n\r\nconst LIST_COMBO_PRODUCTS = gql`\r\n  query ($after: Cursor, $first: Int) {\r\n    allProductComboOffers(after: $after, first: $first) {\r\n      nodes {\r\n        id\r\n        mainProduct\r\n        offeredProducts\r\n        discountType\r\n        discountValue\r\n        productListByMainProduct {\r\n          id\r\n          productName\r\n          productImagesByProductId(condition: { imagePosition: 1 }) {\r\n            nodes {\r\n              imageUrl\r\n            }\r\n          }\r\n          transSkuListsByProductId(condition: { isdefault: true }) {\r\n            nodes {\r\n              markupPrice\r\n            }\r\n          }\r\n        }\r\n        isActive\r\n      }\r\n      totalCount\r\n      pageInfo {\r\n        startCursor\r\n        endCursor\r\n        hasNextPage\r\n        hasPreviousPage\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_COMBO_OFFERED_PRODUCTS = gql`\r\n  query ($offeredProducts: [String!]) {\r\n    allProductLists(filter: { productId: { in: $offeredProducts } }) {\r\n      nodes {\r\n        productId\r\n        productName\r\n        productImagesByProductId(condition: { imagePosition: 1 }) {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            sellingPrice\r\n            markupPrice\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_UNIQUE_PRODUCT = gql`\r\n  query ($productId: String!) {\r\n    product: productListByProductId(productId: $productId) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  PRODUCTCATEGORY,\r\n  PRODUCTLIST,\r\n  PRODUCTEDIT,\r\n  PRODUCTLISTSTATUSEDIT,\r\n  PRODUCTDIAMONDTYPES,\r\n  GOLDPRICELIST,\r\n  DIAMONDPRICELIST,\r\n  GEMPRICELIST,\r\n  MAKINGCHARGEPRICELIST,\r\n  VENDORLIST,\r\n  ALLPRODUCTLIST,\r\n  DIAMONDMARKUP,\r\n  PRODUCTFILTERMASTER,\r\n  METALMASTER,\r\n  GEMSTONEMASTER,\r\n  MASTERCATEGORY,\r\n  DELETEMARKUPPRICE,\r\n  DELETEMAKINGCHARGE,\r\n  DELETEGEMCHARGE,\r\n  DELETEGOLDPRICE,\r\n  DELETESALEDISCOUNT,\r\n  CATGORYLIST,\r\n  DELETEDIAMONDCHARGE,\r\n  VENDORLISTS,\r\n  TaxList,\r\n  PRODUCTTYPEMASTER,\r\n  MATERIALMASTER,\r\n  MASTERCOLORS,\r\n  MASTERPURITIES,\r\n  SALEDISCOUNTS,\r\n  VOUCHERDISCOUNTS,\r\n  DELETEVOUCHERDISCOUNT,\r\n  VOUCHERSTATUSEDIT,\r\n  DISCOUNTSTATUSEDIT,\r\n  MASTERMATERIAL,\r\n  MASTERMATERIALCOLORS,\r\n  MASTERPRODUCTPURITIES,\r\n  COLLECTIONMASTER,\r\n  DESIGNMASTER,\r\n  DIAMONDMASTER,\r\n  DIAMONDSETTINGS,\r\n  DIAMONDSHAPES,\r\n  MASTERPRODUCTTYPES,\r\n  MASTERGEMSETTINGS,\r\n  MASTERGEMSHAPES,\r\n  MASTERGEMTYPES,\r\n  MASTERGENDER,\r\n  SEOPRIORITIES,\r\n  CREATETAXSETUP,\r\n  TaxSettingList,\r\n  MASTERCATEGORIES,\r\n  EARRINGBACKING,\r\n  MASTERATTRIBUTES,\r\n  MASTERSTONESHAPES,\r\n  MASTERSTONECOLORS,\r\n  MASTERSTONES,\r\n  MASTERWEIGHTS,\r\n  THEMEMASTER,\r\n  STYLEMASTER,\r\n  OCCASSIONSMASTER,\r\n  PAYMENTSTATUSMASTER,\r\n  SHIPPINGZONES,\r\n  MASTERCOUNTRIES,\r\n  SHIPPINGCHARGES,\r\n  ACTIVESHIPPINGZONES,\r\n  MASTERPAGES,\r\n  GOLDPRICESETUPMASTER,\r\n  ALLMASTERRINGSIZE,\r\n  ALLSTYLORILANDINGBANNERS,\r\n  CREATESTYLORILANDINGBANNER,\r\n  DELETESTYLORILANDINGBANNER,\r\n  ALLSTYLORISILVERLANDINGBANNERS,\r\n  CREATESILVERLANDINGBANNER,\r\n  DELETESILVERLANDINGBANNER,\r\n  PRODUCTDESCRIPTIONEDIT,\r\n  ALLMARKUPPRICE,\r\n  ALLSTYLORISILVERLISTINGPAGE,\r\n  CREATESILVERLISTINGPAGE,\r\n  ALLSTYLORISILVERROUTINGPAGE,\r\n  CREATESTYLORISILVERROUTINGPAGE,\r\n  HOLIDAYLIST,\r\n  WAREHOUSELIST,\r\n  INVENTORYLIST,\r\n  VALIDATEGENERATEDSKU,\r\n  STOCKSTATUS,\r\n  ABANDONEDCART,\r\n  CARTBYID,\r\n  ALLSPECIFICLISTINGPAGE,\r\n  CREATESPECIFICLISTINGPAGE,\r\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n  CREATESILVERLISTINGBOTTOMBANNER,\r\n  DELETESILVERLISTINGBOTTOMBANNER,\r\n  IMAGEDELETE,\r\n  GETALLERRORLOGS,\r\n  GETORDERCOMMUNICATIONLOGS,\r\n  PRICE_RUN_LOGS,\r\n  GEMSTONE_MARKUP_SETTING,\r\n  CREATE_GEMSTONE_MARKUP,\r\n  DELETE_MATERIAL_MARKUP,\r\n  UPDATE_MATERIAL_MARKUP,\r\n  ALLPAGESCMS,\r\n  CMSBYPAGES,\r\n  CMS_UPDATE,\r\n  UPDATE_STATUS_CMS,\r\n  CREATE_CMS,\r\n  UPDATE_URL,\r\n  LIST_COMBO_PRODUCTS,\r\n  FETCH_COMBO_OFFERED_PRODUCTS,\r\n  UPDATE_COMBO_BY_MAIN_PRODUCT,\r\n};\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const PRODUCTCATEGORY = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        alias\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterStonesColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterStones {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERORDERS = gql`\r\n  query ($userid: UUID!) {\r\n    allOrders(\r\n      filter: { userProfileByUserProfileId: { id: { equalTo: $userid } } }\r\n    ) {\r\n      nodes {\r\n        paymentMode\r\n        paymentStatus\r\n        updatedAt\r\n        createdAt\r\n        awbNumber\r\n        cartId\r\n        orderStatus\r\n        comments\r\n        id\r\n        shoppingCartByCartId {\r\n          shoppingCartItemsByShoppingCartId {\r\n            nodes {\r\n              transSkuListByProductSku {\r\n                generatedSku\r\n                productListByProductId {\r\n                  productCategory\r\n                  productType\r\n                  productCollectionsByProductId {\r\n                    nodes {\r\n                      collectionName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          giftwrapsByCartId {\r\n            nodes {\r\n              message\r\n              giftFrom\r\n              giftTo\r\n            }\r\n          }\r\n\r\n          cartAddressesByCartId {\r\n            nodes {\r\n              firstname\r\n              contactNumber\r\n              addressline1\r\n              addressline2\r\n              city\r\n              pincode\r\n              state\r\n            }\r\n          }\r\n          userProfileByUserprofileId {\r\n            firstName\r\n            mobile\r\n            email\r\n          }\r\n        }\r\n        paymentDetailsByOrderId {\r\n          nodes {\r\n            paymentResponse\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const ORDERS = gql`\r\n  query (\r\n    $order_filter: OrderFilter!\r\n    $limit: Int\r\n    $offset: Int\r\n    $order_by: [OrdersOrderBy!]\r\n  ) {\r\n    allOrders(\r\n      filter: $order_filter\r\n      first: $limit\r\n      offset: $offset\r\n      orderBy: $order_by\r\n    ) {\r\n      nodes {\r\n        paymentMode\r\n        paymentStatus\r\n        updatedAt\r\n        createdAt\r\n        awbNumber\r\n        cartId\r\n        orderStatus\r\n        comments\r\n        id\r\n        \r\n        shoppingCartByCartId {\r\n          shoppingCartItemsByShoppingCartId {\r\n            nodes {\r\n              transSkuListByProductSku {\r\n                generatedSku\r\n                productListByProductId {\r\n                  productCategory\r\n                  productType\r\n                  productCollectionsByProductId {\r\n                    nodes {\r\n                      collectionName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          giftwrapsByCartId {\r\n            nodes {\r\n              message\r\n              giftFrom\r\n              giftTo\r\n            }\r\n          }\r\n\r\n          cartAddressesByCartId {\r\n            nodes {\r\n              firstname\r\n              contactNumber\r\n              addressline1\r\n              addressline2\r\n              city\r\n              pincode\r\n              state\r\n            }\r\n          }\r\n          userProfileByUserprofileId {\r\n            firstName\r\n            mobile\r\n            email\r\n            userAddressesByUserProfileId {\r\n              nodes {\r\n                contactNumber\r\n              }\r\n            }\r\n          }\r\n        }\r\n        paymentDetailsByOrderId(orderBy: CREATED_AT_DESC) {\r\n          nodes {\r\n            paymentResponse\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MATERIALMASTER = gql`\r\n  query {\r\n    allMasterVendors {\r\n      nodes {\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterPricingComponents(condition: { isActive: true }) {\r\n      nodes {\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterProductCategories {\r\n      nodes {\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VOUCHERMASTER = gql`\r\n  query {\r\n    allMasterVendors {\r\n      nodes {\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterPricingComponents(condition: { isActive: true }) {\r\n      nodes {\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterProductCategories {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n      }\r\n    }\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n      }\r\n    }\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterCollections {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n      }\r\n    }\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        name\r\n        id\r\n      }\r\n    }\r\n\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        name\r\n        id\r\n      }\r\n    }\r\n\r\n    allMasterStyles {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n      }\r\n    }\r\n\r\n    allMasterThemes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n      }\r\n    }\r\n    allMasterDiamondTypes {\r\n      nodes {\r\n        shortCode\r\n        diamondColor\r\n        diamondClarity\r\n        id\r\n      }\r\n    }\r\n    allMasterOccasions {\r\n      nodes {\r\n        name\r\n        alias\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SHIPPINGMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allShippingCharges(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`;\r\n\r\nexport const TAXMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterTaxSettings {\r\n    nodes {\r\n      hsnNumber\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`;\r\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\r\nimport apidata from '../screens/Productupload/data.json';\r\nimport { ORDERS, USERORDERS, VOUCHERMASTER } from \"../services/queries\";\r\n\r\nexport const productCategory = {\r\n    query: PRODUCTCATEGORY,\r\n    mapper: (response) => {\r\n\r\n        const gemstonecount = \"i\";\r\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.shortCode,\r\n            label: _.name,\r\n            title: _.name\r\n        }))\r\n        const material = response.allMasterMaterials.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const gender = response.allMasterGenders.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const vendorcode = response.allMasterVendors.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            display: _.name + ' (' + _.shortCode + ' )'\r\n        }))\r\n\r\n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const themes = response.allMasterThemes.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            themeName: _.name\r\n        }))\r\n        const styles = response.allMasterStyles.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            styleName: _.name\r\n        }))\r\n\r\n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            occassionName: _.name\r\n        }))\r\n        const collections = response.allMasterCollections.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            collectionName: _.name\r\n        }))\r\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            stonecolor: _.name\r\n        }))\r\n        const stones = response.allMasterStones.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            stonecount: _.name\r\n        }))\r\n        const metalcolour = response.allMasterMetalsColor.nodes.map(_ => ({\r\n            ..._,\r\n            productColor: _.name,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name,\r\n            purity: _.name\r\n        }))\r\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n\r\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.id,\r\n            label: _.name\r\n        }))\r\n        const productseries = response.allProductLists.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.productSeries,\r\n        }))\r\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.shortCode,\r\n            label: _.name\r\n        }))\r\n\r\n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\r\n\r\n            ..._,\r\n            value: _.alias,\r\n            label: _.name\r\n        }))\r\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.alias,\r\n            label: _.name\r\n        }))\r\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.alias,\r\n            label: _.name\r\n        }))\r\n\r\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\r\n            ..._,\r\n            value: _.diamondColor + _.diamondClarity,\r\n            label: _.diamondColor + _.diamondClarity\r\n        }))\r\n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\r\n        //     ..._,\r\n        //     name: _.name,\r\n        //     size:_.size,\r\n        //     productType : _.productType ,\r\n        // }))\r\n\r\n\r\n        const metals = apidata.metals\r\n\r\n        return {\r\n\r\n            category,\r\n            product_type,\r\n            material,\r\n            gender,\r\n            vendorcode,\r\n            metalcolour,\r\n            metals,\r\n            diamondsettings,\r\n            diamondshapes,\r\n            themes,\r\n            styles,\r\n            occasions,\r\n            collections,\r\n            gemstonecolor,\r\n            stones,\r\n            metalpurity,\r\n            diamondcolors,\r\n            diamondtypes,\r\n            diamondclarities,\r\n            productseries,\r\n            gemstontypes,\r\n            gemstonshapes,\r\n            gemstonesettings,\r\n            earringbacking,\r\n            // metalSizeMinToMax\r\n        }\r\n    }\r\n}\r\n\r\nexport const orderList = {\r\n    query: ORDERS,\r\n    mapper: (response) => {\r\n        const orders = response.allOrders.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n\r\n        return {\r\n            orders\r\n        }\r\n    }\r\n}\r\nexport const userOders = {\r\n    query: USERORDERS,\r\n    mapper: (response) => {\r\n        const orders = response.allOrders.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n\r\n        return {\r\n            orders\r\n        }\r\n    }\r\n}\r\nexport const materialMaster = {\r\n    query: VOUCHERMASTER,\r\n    mapper: (response) => {\r\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n\r\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const collections = response.allMasterCollections.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\r\n            ..._,\r\n\r\n        }))\r\n        const styles = response.allMasterStyles.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n\r\n        const themes = response.allMasterThemes.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\r\n            ..._\r\n        }))\r\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\r\n            ..._,\r\n            \"alias\": _.shortCode,\r\n            \"diamondtype\": _.diamondColor + _.diamondClarity\r\n        }))\r\n\r\n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\r\n        //     ..._\r\n        // }))\r\n\r\n\r\n        // alert(JSON.stringify(product_types))\r\n        return {\r\n            vendors,\r\n            product_categories,\r\n            product_types,\r\n            materials,\r\n            pricing_components,\r\n            collections,\r\n            purities,\r\n            styles,\r\n            themes,\r\n            occations,\r\n            diamondtypes,\r\n            // metalSizeMinToMax\r\n        }\r\n    }\r\n\r\n\r\n}","import React from \"react\";\r\nimport { productCategory } from \"../services/mapper\";\r\nimport { API_URL } from \"../config\";\r\nimport { isString } from \"util\";\r\n\r\nconst TOKEN = \"accesstoken\";\r\n\r\nconst initialNetworkCtx = {\r\n  networkCtx: {\r\n    mapper: productCategory,\r\n    status: { called: false, data: [], loading: true, error: false, parsedData: [] },\r\n    notRequested: true,\r\n  },\r\n  setNetworkCtx: () => null,\r\n  sendNetworkRequest: () => null,\r\n};\r\n\r\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\r\n  url = API_URL + url;\r\n  console.info(\"URL\", url, data);\r\n  const method = data ? \"POST\" : \"GET\",\r\n    headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    };\r\n  let resdata = null;\r\n  if (auth) {\r\n    const token = localStorage.getItem(TOKEN);\r\n    if (token) headers[\"x-access-token\"] = token;\r\n    // else window.location = '/'\r\n  }\r\n  const response = await fetch(\r\n    url,\r\n    method === \"GET\"\r\n      ? { method }\r\n      : {\r\n          method,\r\n          body: isString(data) ? data : JSON.stringify(data),\r\n          headers,\r\n        }\r\n  );\r\n\r\n  if (response.status < 400) {\r\n    resdata = await response.json();\r\n  } else {\r\n    resdata = await response.json();\r\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\r\n    // {\r\n    //    if(!resdata.auth)\r\n    //    {\r\n    //     //alert(resdata.message)\r\n    //    }\r\n    // }else{\r\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\r\n    // }\r\n  }\r\n  resdata[\"statuscode\"] = response.status;\r\n\r\n  return resdata;\r\n};\r\n\r\nexport const NetworkContext = React.createContext(initialNetworkCtx);\r\n\r\nexport const NetworkConsumer = NetworkContext.Consumer;\r\n\r\nexport const NetworkProvider = (props) => {\r\n  const [networkCtx, setNetworkCtx] = React.useState(initialNetworkCtx.networkCtx);\r\n\r\n  return (\r\n    <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}>{props.children}</NetworkContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Slide,\r\n  Typography,\r\n  TextField,\r\n  makeStyles,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Switch,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { CARTBYID } from \"../../graphql/query\";\r\nimport Image from \"material-ui-image\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport SmsIcon from \"@material-ui/icons/Sms\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport moment from \"moment\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext } from \"../../context\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  fieldset: {\r\n    borderColor: theme.palette.primary.main,\r\n    borderRadius: \"5px\",\r\n    boxSizing: \"border-box\",\r\n    gridArea: \"1 / 1\",\r\n    width: \"inherit\",\r\n  },\r\n  legend: {\r\n    font: \"15pt/0\",\r\n    //margin: \"auto\" /* to center */,\r\n    padding: \"0 4px\",\r\n  },\r\n  textfield: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  inline: {\r\n    margin: theme.spacing(0.5),\r\n    display: \"inline\",\r\n  },\r\n  chip: {\r\n    color: green[700],\r\n  },\r\n}));\r\n\r\nexport default function CartDetails(props) {\r\n  const classes = useStyles();\r\n  let { open, handleClose } = props;\r\n  const [state, setState] = React.useState({});\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const sendEmail = (order_id, type) => {\r\n    const url = API_URL + \"/trigger_mail\";\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ order_id: order_id, type: type }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Mail Sent Successfully!\",\r\n        });\r\n        console.log(fatchvalue);\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.id) {\r\n      client\r\n        .query({\r\n          query: CARTBYID,\r\n          variables: {\r\n            id: props.id,\r\n          },\r\n          fetchPolicy: \"network-only\",\r\n        })\r\n        .then((res) => {\r\n          setState(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    return () => {\r\n      setState({});\r\n    };\r\n  }, [props.id]);\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n      maxWidth={\"lg\"}\r\n      fullWidth\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h4\">Cart Details</Typography>\r\n        {handleClose && (\r\n          <>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              className={classes.closeButton}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {(state?.loading == undefined || state?.loading) && (\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n              <CircularProgress />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {state?.data && (\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={6}>\r\n              {/* <Typography variant=\"h6\">User Details</Typography> */}\r\n              <fieldset className={classes.fieldset}>\r\n                <legend className={classes.legend}>User Details</legend>\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  defaultValue={state?.data?.cart?.user?.firstName}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  defaultValue={state?.data?.cart?.user?.lastName}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"User Name\"\r\n                  defaultValue={state?.data?.cart?.user?.username}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Email\"\r\n                  defaultValue={state?.data?.cart?.user?.email}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Mobile No.\"\r\n                  defaultValue={state?.data?.cart?.user?.mobile}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <FormGroup row>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={state?.data?.user?.isemailverified ?? false}\r\n                        disabled\r\n                      />\r\n                    }\r\n                    labelPlacement=\"start\"\r\n                    label=\"Email Verified\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={state?.data?.user?.ismobileverified ?? false}\r\n                        disabled\r\n                      />\r\n                    }\r\n                    labelPlacement=\"start\"\r\n                    label=\" Mobile Verified\"\r\n                  />\r\n                </FormGroup>\r\n                {state?.data?.cart?.address?.nodes.length > 0 ? (\r\n                  <div style={{ padding: 5 }}>\r\n                    {state?.data?.cart?.address?.nodes.map((item, index) => {\r\n                      return (\r\n                        <React.Fragment key={item?.id}>\r\n                          <Typography variant=\"h6\">\r\n                            Cart Address #{index + 1} :{\" \"}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {`${item?.salutation ?? ``}${item?.firstname} ${\r\n                              item?.lastname\r\n                            }`.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.addressline1.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.addressline2.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.city.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.state.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.country.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.pincode.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Contact No.{\" \"}\r\n                            {`${item?.countryCode} - ${item?.contactNumber}`}\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                ) : (\r\n                  ``\r\n                )}\r\n              </fieldset>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              container\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\"\r\n              spacing={1}\r\n            >\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Status</legend>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Status :{\" \"}\r\n                        <Chip\r\n                          className={classes.chip}\r\n                          label={state?.data?.cart?.status.toUpperCase()}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Gross Price : &#8377;\r\n                        {`${state?.data?.cart?.grossAmount ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Discounted Price : &#8377;\r\n                        {`${state?.data?.cart?.discountedPrice ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Tax Amount : &#8377;\r\n                        {`${state?.data?.cart?.taxAmount ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </fieldset>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Items</legend>\r\n                  <List className={classes.root} dense={true}>\r\n                    {state?.data?.cart?.cart_items?.nodes.map((item) => {\r\n                      var skuDetails = item?.transSkuListByProductSku;\r\n                      var product =\r\n                        item?.transSkuListByProductSku?.productListByProductId;\r\n                      var image = product?.productImagesByProductId?.nodes[0];\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            alignItems=\"flex-start\"\r\n                            key={item.productSku}\r\n                            disableGutters\r\n                            divider\r\n                          >\r\n                            <ListItemAvatar\r\n                              style={{\r\n                                width: \"30%\",\r\n                                height: \"30%\",\r\n                              }}\r\n                            >\r\n                              <Image\r\n                                src={`https://styloriimages-staging.s3.ap-south-1.amazonaws.com/${image?.imageUrl}`.replace(\r\n                                  image?.productId,\r\n                                  `${image?.productId}/500X500`\r\n                                )}\r\n                              />\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                              primary={\r\n                                <Typography variant=\"h5\">\r\n                                  {\r\n                                    item?.transSkuListByProductSku\r\n                                      ?.productListByProductId?.productName\r\n                                  }\r\n                                </Typography>\r\n                              }\r\n                              secondary={\r\n                                <Grid container>\r\n                                  <Grid item xs={12}>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      SKU : {item?.productSku}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      Quantity : {item?.qty}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                  <Grid item xs={12}>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      Price : &#8377;\r\n                                      {skuDetails?.markupPrice}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                      style={{}}\r\n                                    >\r\n                                      Tax : &#8377;\r\n                                      {skuDetails?.markupPriceTax}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              }\r\n                            />\r\n                          </ListItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </fieldset>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Follow ups</legend>\r\n                  <List className={classes.root} dense={true}>\r\n                    {state?.data?.cart?.follow_ups?.nodes.map((item) => {\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            alignItems=\"flex-start\"\r\n                            key={item.senderResponseId}\r\n                            disableGutters\r\n                            divider\r\n                          >\r\n                            <ListItemIcon>\r\n                              {item.type == \"email\" && <MailIcon />}\r\n                              {item.type == \"sms\" && <SmsIcon />}\r\n                              {item.type == \"phone\" && <CallIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={item?.senderResponseId}\r\n                              secondary={moment(item?.createdAt).format(\r\n                                \"DD/MMM/YYYY HH:mm A\"\r\n                              )}\r\n                            />\r\n                          </ListItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </fieldset>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            sendEmail(props?.id, \"abandoned_cart\");\r\n          }}\r\n        >\r\n          Send Follow up Email\r\n        </Button>\r\n        <Button variant=\"contained\" onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  TableContainer,\r\n  Typography,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  LinearProgress,\r\n  TableFooter,\r\n  TablePagination,\r\n  Chip,\r\n  makeStyles,\r\n  Tooltip,\r\n  IconButton,\r\n  Button,\r\n  TableSortLabel,\r\n} from \"@material-ui/core\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { ABANDONEDCART } from \"../../graphql/query\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport moment from \"moment\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudDownloadOutlinedIcon from \"@material-ui/icons/CloudDownloadOutlined\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CartDetails from \"./cart_details\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport exportFromJSON from \"export-from-json\";\r\n\r\nlet Headers = {\r\n  \"Cart ID\": {},\r\n  \"User Details\": {\r\n    asc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__FIRST_NAME_ASC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__USERNAME_ASC\",\r\n    ],\r\n    desc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__FIRST_NAME_DESC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__USERNAME_DESC\",\r\n    ],\r\n  },\r\n  \"Total Products in cart\": {\r\n    asc: [\"SHOPPING_CART_ITEMS_BY_SHOPPING_CART_ID_COUNT_ASC\"],\r\n    desc: [\"SHOPPING_CART_ITEMS_BY_SHOPPING_CART_ID_COUNT_DESC\"],\r\n  },\r\n  Contact: {\r\n    asc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__EMAIL_ASC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__MOBILE_ASC\",\r\n    ],\r\n    desc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__EMAIL_DESC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__MOBILE_DESC\",\r\n    ],\r\n  },\r\n  Status: {},\r\n  \"Created On\": {\r\n    asc: [\"CREATED_AT_ASC\"],\r\n    desc: [\"CREATED_AT_DESC\"],\r\n  },\r\n  \"Last Updated On\": {\r\n    asc: [\"UPDATED_AT_ASC\"],\r\n    desc: [\"UPDATED_AT_DESC\"],\r\n  },\r\n  Actions: {},\r\n};\r\n\r\nlet filterVariables = {\r\n  default: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n    },\r\n  },\r\n  withoutContact: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      userprofileId: {\r\n        isNull: true,\r\n      },\r\n    },\r\n  },\r\n  withContact: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      userprofileId: {\r\n        isNull: false,\r\n      },\r\n    },\r\n  },\r\n  emptyCart: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      shoppingCartItemsByShoppingCartId: {\r\n        every: {\r\n          productSku: {\r\n            isNull: true,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  chip: {\r\n    color: green[700],\r\n  },\r\n}));\r\n\r\nexport const AbandonedCart = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [filter, setFilter] = React.useState(\"default\");\r\n  const [sort, setSort] = React.useState({\r\n    by: \"Created On\",\r\n    direction: \"desc\",\r\n  });\r\n  const client = useApolloClient();\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    ABANDONEDCART,\r\n    {\r\n      variables: {\r\n        first: rowsPerPage,\r\n        offset: page * rowsPerPage,\r\n        orderBy: Headers[sort.by][sort.direction] ?? Headers[\"Created On\"].desc,\r\n        condition: { status: \"pending\" },\r\n        filter: filterVariables[filter]?.filter ?? null,\r\n      },\r\n    }\r\n  );\r\n  const handleClickFilter = (value) => {\r\n    setFilter(value);\r\n    refetch({\r\n      first: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      orderBy: [\"CREATED_AT_ASC\"],\r\n      condition: { status: \"pending\" },\r\n      filter: filterVariables[value]?.filter ?? null,\r\n    });\r\n  };\r\n\r\n  const applySort = (column) => {\r\n    var { by, direction } = sort;\r\n    if (by == column) {\r\n      if (direction && direction == \"asc\") {\r\n        direction = \"desc\";\r\n      } else {\r\n        direction = \"asc\";\r\n      }\r\n    } else {\r\n      direction = \"asc\";\r\n    }\r\n    setSort({ by: column, direction });\r\n    refetch({\r\n      first: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      orderBy: Headers[by][direction] ?? Headers[\"Created On\"].desc,\r\n      condition: { status: \"pending\" },\r\n      filter: filterVariables[filter]?.filter ?? null,\r\n    });\r\n  };\r\n\r\n  const [open, setOpen] = React.useState();\r\n\r\n  const handleClickOpen = (id) => {\r\n    setOpen(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen();\r\n  };\r\n\r\n  const downloadAbandonedCart = () => {\r\n    client\r\n      .query({\r\n        query: ABANDONEDCART,\r\n        variables: {\r\n          orderBy: [\"CREATED_AT_ASC\"],\r\n          condition: { status: \"pending\" },\r\n          filter: { ...filterVariables[\"withContact\"]?.filter },\r\n        },\r\n        fetchPolicy: \"network-only\",\r\n      })\r\n      .then(\r\n        ({\r\n          data: {\r\n            allShoppingCarts: { nodes: cartDetails },\r\n          },\r\n        }) => {\r\n          exportFromJSON({\r\n            data: cartDetails.map((item) => {\r\n              return {\r\n                cart_id: item.id,\r\n                created_at: moment(item.createdAt).format(\"DD/MM/YYYY hh:mm a\"),\r\n                gross_amount: item.grossAmount,\r\n                discount_amount: item.discountAmount,\r\n                first_name: item.user?.firstName,\r\n                last_name: item.user?.lastName,\r\n                email: item.user?.email,\r\n                mobile_no: item.user?.mobile,\r\n                sku_ids: item?.cart_items?.nodes\r\n                  ?.map((i) => i?.transSkuListByProductSku?.skuId)\r\n                  ?.join(\",\"),\r\n                generated_skus: item?.cart_items?.nodes\r\n                  ?.map((i) => i?.transSkuListByProductSku?.generatedSku)\r\n                  ?.join(\",\"),\r\n                product_names: item?.cart_items?.nodes\r\n                  ?.map(\r\n                    (i) =>\r\n                      i?.transSkuListByProductSku?.productListByProductId\r\n                        ?.productName\r\n                  )\r\n                  ?.join(\",\"),\r\n              };\r\n            }),\r\n            fileName: `abandoned_cart_${moment().format(\"YYYY-MM-DD\")}`,\r\n            exportType: \"xls\",\r\n          });\r\n        }\r\n      )\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h4\">Abandoned Cart</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"withoutContact\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"withoutContact\")}\r\n          >\r\n            Without Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"withContact\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"withContact\")}\r\n          >\r\n            With Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"emptyCart\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"emptyCart\")}\r\n          >\r\n            Empty Cart\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"default\")}\r\n          >\r\n            ALL\r\n          </Button>\r\n          <IconButton\r\n            aria-label=\"download abandoned cart\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            disabled={filter != \"withContact\"}\r\n            onClick={() => downloadAbandonedCart()}\r\n          >\r\n            <CloudDownloadOutlinedIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {Object.keys(Headers).map((item) => {\r\n                  return (\r\n                    <TableCell\r\n                      align=\"center\"\r\n                      key={item}\r\n                      sortDirection={\r\n                        sort?.by === item ? sort?.direction : false\r\n                      }\r\n                    >\r\n                      {Headers[item]?.asc ? (\r\n                        <TableSortLabel\r\n                          active={sort?.by === item}\r\n                          direction={\r\n                            sort?.by === item ? sort?.direction : \"asc\"\r\n                          }\r\n                          onClick={() => applySort(item)}\r\n                        >\r\n                          {item}\r\n                          {sort?.by === item ? (\r\n                            <span className={classes.visuallyHidden}>\r\n                              {sort?.direction === \"desc\"\r\n                                ? \"sorted descending\"\r\n                                : \"sorted ascending\"}\r\n                            </span>\r\n                          ) : null}\r\n                        </TableSortLabel>\r\n                      ) : (\r\n                        item\r\n                      )}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || networkStatus === NetworkStatus.refetch) && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                    padding=\"none\"\r\n                  >\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                  >\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allShoppingCarts?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                  >\r\n                    <Typography>No Cart Data Found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allShoppingCarts?.nodes.length > 0 &&\r\n                data?.allShoppingCarts?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align=\"center\">{item.id}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {item?.user?.firstName\r\n                        ? `${item.user.firstName}${\r\n                            item.user?.lastName ? ` ${item.user.lastName}` : ``\r\n                          }`\r\n                        : item?.user?.userName}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" className={classes.root}>\r\n                      <Tooltip\r\n                        arrow\r\n                        title={item?.cart_items?.nodes\r\n                          .map((i) => i.productSku)\r\n                          .join(\",\")}\r\n                      >\r\n                        <Chip\r\n                          label={item?.cart_items?.nodes.length}\r\n                          color={\"primary\"}\r\n                          size=\"small\"\r\n                        />\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" padding=\"none\">\r\n                      {item?.user?.email && (\r\n                        <Button\r\n                          startIcon={<EmailIcon />}\r\n                          variant=\"outlined\"\r\n                          disableElevation\r\n                          disableFocusRipple\r\n                          disableRipple\r\n                          component=\"a\"\r\n                          href={`mailto:${item?.user?.email}`}\r\n                          className={classes.button}\r\n                        >\r\n                          {item?.user?.email}\r\n                        </Button>\r\n                      )}\r\n                      {item?.user?.mobile && (\r\n                        <Button\r\n                          startIcon={<CallIcon />}\r\n                          variant=\"outlined\"\r\n                          disableElevation\r\n                          disableFocusRipple\r\n                          disableRipple\r\n                          component=\"a\"\r\n                          className={classes.button}\r\n                        >\r\n                          {item?.user?.mobile}\r\n                        </Button>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Chip\r\n                        className={classes.chip}\r\n                        label={item.status.toUpperCase()}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {/* <IconButton size=\"small\">\r\n                        <DeleteForeverIcon />\r\n                      </IconButton> */}\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleClickOpen(item.id)}\r\n                      >\r\n                        <VisibilityIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={Object.keys(Headers).length}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allShoppingCarts?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <CartDetails open={Boolean(open)} handleClose={handleClose} id={open} />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Grid, Select } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip } from \"@material-ui/core\";\r\n\r\nconst useStyless = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\",\r\n];\r\n\r\nexport default function FormPropsTextFields(props) {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [producttype, setProducttype] = React.useState(\"\");\r\n\r\n  // const handleinputChange =type => e => {\r\n  // props.searchproduct(e.target.value)\r\n  // }\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setSearchtext(e.target.value);\r\n  };\r\n  const handlecategoryChange = (type) => (event, value) => {\r\n    setCategory(value.name);\r\n    props.applyfilter(searchtext, value.name, producttype);\r\n  };\r\n  const handletypeChange = (type) => (event, value) => {\r\n    setProducttype(value.name);\r\n    props.applyfilter(searchtext, category, value.name);\r\n  };\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  function applyfilter() {\r\n    props.applyfilter(searchtext, category, producttype);\r\n  }\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div\r\n      className=\"search\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        background: \"white\",\r\n        borderTop: \"1px solid #e4e4e4\",\r\n        borderBottom: \"1px solid #e4e4e4\",\r\n      }}\r\n    >\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.mastercategory}\r\n          onChange={handlecategoryChange(\"product_category\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Category\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.masterproducttype}\r\n          onChange={handletypeChange(\"product_type\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <TextField\r\n          fullWidth\r\n          margin=\"dense\"\r\n          onChange={handleinputChange(\"productname\")}\r\n          placeholder={\"Search by product name or product id\"}\r\n          onChange={handleinputChange(\"productname\")}\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Button\r\n          onClick={(e) => applyfilter()}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nconst columns = [\r\n  { id: 'vendorcode', label: 'Vendor Code' },\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'Address', label: 'Address' },\r\n  { id: 'City', label: 'City' },\r\n  { id: 'gstNo', label: 'gstNo' },\r\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n  { id: 'updatedAt', label: 'updated on' },\r\n  { id: 'actions', label: 'actions' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  contantview: {\r\n   placeItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [add,setAdd] = React.useState(false)\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  async function addnewvendor()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \r\n    setIsadd(true)\r\n    setNewvendorcode(response.newvendorcode)\r\n  }\r\n  function Cancelcreate(refetch) {\r\n    window.location.reload();\r\n    // props.onCancel();\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      shortCode : vendordata.shortCode,\r\n      name : vendordata.name,\r\n      address : vendordata.address,\r\n      city : vendordata.city,\r\n      pincode : vendordata.pincode,\r\n      gstNo : vendordata.gstNo,\r\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n    if(!editcontent.isedit)\r\n    {\r\n      \r\n      editcontent['isedit'] = false\r\n      editcontent['shortCode'] = newvendorcode\r\n    }\r\n   \r\n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\r\n     props.onCancel()\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  // refetch()\r\n  if(!editcontent.isedit)\r\n    {\r\n      \r\n  window.location.reload();\r\n    }else{\r\n      refetch()\r\n    }\r\n\r\n  }\r\n  function CancelEdit(diamondData) {\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('product_id');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\r\n\r\n  }\r\n  useEffect( () => {\r\n\r\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\r\n  const query = props.client.query\r\n    query({\r\n      query: PRODUCTFILTERMASTER,\r\n      fetchPolicy: \"network-only\"\r\n    }).then((data) => {\r\n      if (data) {\r\n      // setProductlists(data.data.allProductLists.nodes)\r\n       setMastercategories(data.data.allMasterProductCategories.nodes)\r\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\r\n      }else{\r\n      }\r\n    })\r\n  .catch((error) => {console.log(\"smbcj\")})\r\n  }, [])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\r\n\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\r\n\r\n\r\n\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype)\r\n  {\r\n    let products = allproductlists.filter(l => {\r\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\r\n    });\r\n    setProductlists(products)\r\n  }\r\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\r\n{\r\n  let bodydata = {\r\n    size : pagesize ? pagesize : rowsPerPage,\r\n    offset : offsetValue,\r\n    searchtext: searchtext,\r\n    productcategory: productcategory,\r\n    producttype: producttype,\r\n    order: sort ? sort : order,\r\n    orderby : orderby ? orderby : orderBy\r\n  }\r\n\r\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\r\n  setProductlists(response.products.rows)\r\n  setPageCount(response.products.count)\r\n}\r\nfunction applyfilter(searchtext, categoryname, typename)\r\n{\r\n  getproductlist(searchtext,categoryname,typename)\r\n}\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\r\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\r\n          <Typography  component=\"h4\" variant=\"h4\" >\r\n            Vendors\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\r\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\r\n              Add New Vendor\r\n            </Button>\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          { <Query\r\n              query={VENDORLISTS}\r\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> \r\n                              {data.allMasterVendors.nodes.map((row, index) => (\r\n                           <>\r\n                           {index == 0 && isadd ? \r\n                           <TableRow key={row.name}>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              contentEditable={false}\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={newvendorcode}\r\n                              onChange={handleInputChange('shortCode')}\r\n\r\n                              label=\"Vendor Code\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('name')}\r\n\r\n                              label=\"Vendor Name\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('address')}\r\n\r\n                              label=\"Address\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"City\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"vendordeliverydays\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {new Date()}\r\n                                  </Moment>\r\n                           </TableCell>\r\n                           \r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                           </TableRow> : null }\r\n                              \r\n                                \r\n                                <TableRow key={row.name}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.shortCode}\r\n                                  </TableCell>\r\n                {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendorname\"\r\n                        name=\"vendorname\"\r\n                        value={editcontent.name}\r\n                        onChange={handleInputChange('name')}\r\n                        label=\"Vendor Name\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                           </TableCell> }\r\n                           {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendoraddress\"\r\n                        name=\"vendoraddress\"\r\n                        value={editcontent.address}\r\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \r\n                           </TableCell> }\r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendorcity\"\r\n                              name=\"vendorcity\"\r\n                              value={editcontent.city}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"Vendor City\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \r\n                           </TableCell> }\r\n                                  \r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"gst_no\"\r\n                              name=\"gst_no\"\r\n                              value={editcontent.gstNo}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \r\n                           </TableCell> }  \r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.vendorDelivaryDays}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"Vendor Delivery Days\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \r\n                           </TableCell> }\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.createdAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell> :\r\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                      <Button ><EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                }\r\n                                  \r\n                                </TableRow>\r\n                                </>\r\n\r\n                              ))}\r\n                              \r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{ useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\n\r\nconst NODE_ENV = process.env.NODE_ENV;\r\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\r\n\r\nconst useStyles = makeStyles({\r\n  \r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function Page(props) {\r\n  const classes = useStyles();\r\n  const { title, children, ...rest } = props;\r\n\r\n  // useEffect(() => {\r\n  //   if (NODE_ENV !== 'production') {\r\n  //     return;\r\n  //   }\r\n  \r\n  //   if (window.gtag) {\r\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\r\n  //       page_path: router.location.pathname,\r\n  //       page_name: title\r\n  //     });\r\n  //   }\r\n  // }, [title, router]);\r\n  return (\r\n    <div {...rest}>\r\n      {/* <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet> */}\r\n      {children}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport {Grid, Chip } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n      width: '100%',\r\n      padding: theme.spacing(1),\r\n      marginTop : theme.spacing(2)\r\n    },\r\n    buttonPadding: {    \r\n        marginLeft: theme.spacing(2),   \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    chip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n    pendingchip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.secondary,\r\n    }\r\n  }));\r\n\r\nexport default function Categoryrow(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n  return (\r\n    \r\n    <Card className={classes.card}>\r\n\r\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\r\n            <Grid item xs={6} sm={9}>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                       mano\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" gutterBottom>\r\n                    mani\r\n                    </Typography>\r\n            </Grid>\r\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n                >\r\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\r\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\r\n            size=\"small\" /></Grid>\r\n             <Grid item xs={3}>\r\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\r\n            <CreateIcon />\r\n            </IconButton> */}\r\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\r\n            <DeleteIcon />\r\n            </IconButton>\r\n            </Grid>\r\n            </Grid>\r\n\r\n      </Grid>\r\n      \r\n      \r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexGrow: 0,\r\n    flexShrink: 0,\r\n    borderRadius: theme.shape.borderRadius,\r\n    lineHeight: '10px',\r\n    fontSize: '10px',\r\n    height: 20,\r\n    minWidth: 20,\r\n    whiteSpace: 'nowrap',\r\n    padding: theme.spacing(0.5, 1)\r\n  },\r\n  rounded: {\r\n    borderRadius: 10,\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst Label = props => {\r\n  const { className, variant, color, shape, children, style, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const rootClassName = clsx(\r\n    {\r\n      [classes.root]: true,\r\n      [classes.rounded]: shape === 'rounded'\r\n    },\r\n    className\r\n  );\r\n\r\n  const finalStyle = { ...style };\r\n\r\n  if (variant === 'contained') {\r\n    finalStyle.backgroundColor = color;\r\n    finalStyle.color = '#FFF';\r\n  } else {\r\n    finalStyle.border = `1px solid ${color}`;\r\n    finalStyle.color = color;\r\n  }\r\n\r\n  return (\r\n    <Typography\r\n      {...rest}\r\n      className={rootClassName}\r\n      style={finalStyle}\r\n      variant=\"overline\"\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.string,\r\n  shape: PropTypes.oneOf(['square', 'rounded']),\r\n  style: PropTypes.object,\r\n  variant: PropTypes.oneOf(['contained', 'outlined'])\r\n};\r\n\r\nLabel.defaultProps = {\r\n  style: {},\r\n  color: colors.grey[600],\r\n  variant: 'contained',\r\n  shape: 'square'\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { URL } from \"../../config\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: theme.spacing(3),\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n  //event.preventDefault();\r\n  console.info(\"You clicked a breadcrumb.\");\r\n}\r\n\r\nexport default function CustomizedBreadcrumbs(props) {\r\n  let history = useHistory();\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\">\r\n      <StyledBreadcrumb\r\n        component=\"a\"\r\n        onClick={() => history.goBack()}\r\n        // href={props.url ? `${URL + props.url}` : URL + \"/configuration\"}\r\n        label={props.name ? props.name : \"Configuration\"}\r\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\r\n      />\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Collapse,\r\n  Divider,\r\n  Drawer,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Slider,\r\n  TextField,\r\n  Typography,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  drawer: {\r\n    width: 420,\r\n    maxWidth: '100%'\r\n  },\r\n  header: {\r\n    padding: theme.spacing(2, 1),\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 3),\r\n    flexGrow: 1\r\n  },\r\n  contentSection: {\r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  contentSectionHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    cursor: 'pointer'\r\n  },\r\n  contentSectionContent: {},\r\n  formGroup: {\r\n   \r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  fieldGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  field: {\r\n    marginTop: 0,\r\n    marginBottom: 0\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  addButton: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  minAmount: {\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  maxAmount: {\r\n    marginLeft: theme.spacing(3)\r\n  },\r\n  radioGroup: {},\r\n  actions: {\r\n    padding: theme.spacing(3),\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n\r\nconst Filter = props => {\r\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const initialValues = {\r\n      name: '',\r\n      company: '',\r\n      mobile: '',\r\n      city: '',\r\n      version: null,\r\n      commodity: []\r\n  };\r\n\r\n  const [expandProject, setExpandProject] = useState(true);\r\n  const [expandCustomer, setExpandCustomer] = useState(false);\r\n  const [values, setValues] = useState({ ...initialValues });\r\n\r\n  const handleClear = () => {\r\n    setValues({ \r\n      ...initialValues });\r\n  };\r\n\r\n  const handleFieldChange = (event, field, value) => {\r\n    event.persist && event.persist();\r\n    setValues(values => ({\r\n      ...values,\r\n      [field]: value\r\n    }));\r\n  };\r\n  const handleoptionchange = type => (event, value) => {\r\n    setValues(values => ({\r\n      ...values,\r\n      [type]: value\r\n    }));\r\n  }\r\n  const handleinputchange = type => (e) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleTagAdd = () => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\r\n        newValues.tags = [...newValues.tags];\r\n        newValues.tags.push(newValues.tag);\r\n      }\r\n\r\n      newValues.tag = '';\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  const handleTagDelete = tag => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      newValues.tags = newValues.tags.filter(t => t !== tag);\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n  const handleDateChange = type => (date) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: date\r\n    })\r\n  };\r\n  const handleToggleProject = () => {\r\n    setExpandProject(expandProject => !expandProject);\r\n  };\r\n\r\n  const handleToggleCustomer = () => {\r\n    setExpandCustomer(expandCustomer => !expandCustomer);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    \r\n    onFilter && onFilter(values);\r\n    onClose && onClose()\r\n  };\r\n\r\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\r\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      classes={{ paper: classes.drawer }}\r\n      onClose={onClose}\r\n      open={open}\r\n      variant=\"temporary\"\r\n    >\r\n      <form\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className={classes.header}>\r\n          <Button\r\n            onClick={onClose}\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon className={classes.buttonIcon} />\r\n            Close\r\n          </Button>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <Grid container xs={12} spacing={1}>\r\n            {/* <Grid item xs={12}>\r\n                      <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={values.name}\r\n                            onChange={handleinputchange('name')}\r\n                           label=\"Name\"\r\n                          />\r\n            </Grid> */}\r\n             <Grid xs={12}>\r\n            <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_categories}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_category}\r\n                  getOptionLabel={(option) => option.name}\r\n                  onChange={handleoptionchange('product_category')}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n                      \r\n           \r\n            <Grid item xs={12}>\r\n            <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_types}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_type}\r\n                  onChange={handleoptionchange('product_type')}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n           </Grid>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            fullWidth\r\n            onClick={handleClear}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.buttonIcon} />\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Apply filters\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  onFilter: PropTypes.func,\r\n  masters : PropTypes.object,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Button, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    height: 42,\r\n    padding: theme.spacing(0, 2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  searchIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.icon\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1\r\n  },\r\n  searchButton: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Search = props => {\r\n  const { onSearch, className, ...rest } = props;\r\n  const [searchcontent, setSearchcontent] = React.useState('');\r\n\r\n  const classes = useStyles();\r\n  const handleinputchange = type => e => {\r\n    setSearchcontent(e.target.value)\r\n  }\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Paper\r\n        className={classes.search}\r\n        elevation={1}\r\n      >\r\n        <SearchIcon className={classes.searchIcon} />\r\n        <Input\r\n          className={classes.searchInput}\r\n          disableUnderline\r\n          placeholder=\"Search by order id, Name and Mobile\"\r\n          onChange={handleinputchange('searchcontent')}\r\n        />\r\n      </Paper>\r\n      <Button\r\n        className={classes.searchButton}\r\n        onClick={() => onSearch(searchcontent)}\r\n        size=\"large\"\r\n        variant=\"contained\"\r\n      >\r\n        Search\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  className: PropTypes.string,\r\n  onSearch: PropTypes.func\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { CSVLink } from \"react-csv\";\r\nconst DownloadCsv = () => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [showdownload, setShowDownload] = useState(false);\r\n  const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const fetchCSVdata = async (event, done) => {\r\n    setLoader(true);\r\n    let responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\r\n    let responseData = responseCSV.res_json;\r\n\r\n    if (responseCSV.statuscode === 200) {\r\n      let keyData = [];\r\n\r\n      for (const [key] of Object.entries(responseData[0])) {\r\n        keyData.push({ label: key, key: key });\r\n      }\r\n\r\n      setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\r\n      setLoader(false);\r\n      setShowDownload(true);\r\n    }\r\n  };\r\n\r\n  const clearCsv = () => {\r\n    setDataCSV({ keyCSV: [], valueCSV: [] });\r\n    setShowDownload(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loader ? (\r\n        <Button variant=\"outlined\" disabled color=\"primary\" style={{ marginRight: \"8px\" }}>\r\n          <CircularProgress size={20} />\r\n        </Button>\r\n      ) : showdownload ? (\r\n        <CSVLink\r\n          header={dataCSV.keyCSV}\r\n          data={dataCSV.valueCSV}\r\n          filename={\"product-details.csv\"}\r\n          onClick={() => {\r\n            clearCsv();\r\n          }}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }}>\r\n            Download CSV\r\n          </Button>\r\n        </CSVLink>\r\n      ) : (\r\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }} onClick={() => fetchCSVdata()}>\r\n          Load CSV\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DownloadCsv;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  CircularProgress,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { AlertContext, NetworkContext } from \"../../../context\";\r\nimport exportFromJSON from \"export-from-json\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst FullCSVData = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const [loader, setLoader] = React.useState(false);\r\n  const [productType, setProductType] = React.useState(null);\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          query {\r\n            type: allMasterProductTypes(orderBy: NAME_ASC) {\r\n              nodes {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        `,\r\n      })\r\n      .then((res) => {\r\n        setOptions(res.data.type.nodes.map((i) => i.name));\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  const onDownload = () => {\r\n    if (productType == null) {\r\n      return snack.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Please choose a product type!\",\r\n      });\r\n    }\r\n    setLoader(true);\r\n    sendNetworkRequest(\"/getcsvdata\", {}, { type: productType })\r\n      .then((data) => {\r\n        exportFromJSON({\r\n          data,\r\n          fileName: `${productType}`,\r\n          exportType: \"xls\",\r\n        });\r\n        setOpen(false);\r\n        setLoader(false);\r\n        setProductType(null);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setOpen(false);\r\n        setLoader(false);\r\n        return snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occurred while downloading, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        style={{ marginRight: \"8px\" }}\r\n      >\r\n        Full Data Download\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Choose Product Type to download data?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Autocomplete\r\n            id=\"type\"\r\n            options={options}\r\n            value={productType}\r\n            getOptionLabel={(option) => option}\r\n            style={{ width: 300 }}\r\n            onChange={(e, value) => {\r\n              setProductType(value);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Product Type\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {loader && <CircularProgress size={28} />}\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onDownload} color=\"primary\">\r\n            Download\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FullCSVData;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { Search, Filter } from \"./components\";\r\nimport DownloadCsv from \"./components/downloadcsv\";\r\nimport FullCSVData from \"./components/FullCSVData\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    maxWidth: 480,\r\n    flexBasis: 480,\r\n  },\r\n  filterButton: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  filterIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ProductFilter = (props) => {\r\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  const handleFilterOpen = () => {\r\n    setOpenFilter(true);\r\n  };\r\n\r\n  const handleFilterClose = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  return (\r\n    <Grid {...rest} className={clsx(classes.root, className)} container spacing={3}>\r\n      <Grid item>\r\n        <Search className={classes.search} onSearch={onSearch} />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Grid container>\r\n          <Grid>{window.location.pathname === \"/productlist\" && <DownloadCsv />}</Grid>\r\n          <Grid>{window.location.pathname === \"/productlist\" && <FullCSVData />}</Grid>\r\n          <Grid>\r\n            <Button className={classes.filterButton} color=\"primary\" onClick={handleFilterOpen} size=\"small\" variant=\"outlined\">\r\n              <FilterListIcon className={classes.filterIcon} /> Filter\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Filter onClose={handleFilterClose} onFilter={onFilter} open={openFilter} masters={masters} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nProductFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n  masters: PropTypes.object,\r\n};\r\n\r\nexport default ProductFilter;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\n//MuiAlert component which is shown inside the Snackbar component\r\nlet Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nexport const Alerts = (props) => {\r\n  const [open, setOpen] = React.useState(props.open);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.onclose();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      id=\"main_alert_snackbar\"\r\n      anchorOrigin={{\r\n        vertical: props.vertical,\r\n        horizontal: props.horizontal,\r\n      }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert id=\"main_alert\" severity={props.severity} onClose={handleClose}>\r\n        {props.msg}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Shipping Rate\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addshippingattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n  let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\r\n    //  getmaster()\r\n     //   alert(JSON.stringify(response))\r\n     history.push('/shippingattributes')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n            var selectedcategory = []\r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addshippingattributes;","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.hsnNumber}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Tax Settings\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addtaxattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n    let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\r\n    //  getmaster()\r\n     history.push('/taxsettings')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TAXMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n\r\n            var selectedcategory = []\r\n            \r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n                if(categories.indexOf(catobj.alias) > -1)\r\n                {\r\n                  selectedcategory.push(catobj)\r\n                }\r\n              }\r\n              \r\n\r\n            })\r\n\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addtaxattributes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New Category\r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { CATGORYLIST } from \"../../../../graphql/query\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PropTypes from \"prop-types\";\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Label, ReviewStars } from \"../../../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1150,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Results = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  const [editcontent, setEditcontent] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias: vendordata.alias,\r\n      name: vendordata.name,\r\n      isedit: true,\r\n    });\r\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\r\n  }\r\n  async function Savevendor(refetch) {}\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    props.onCancel();\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600],\r\n  };\r\n\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      <Card>\r\n        <CardHeader title=\"Category\" />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n\r\n                  <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                  <TableCell align=\"left\">Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {\r\n                  <Query\r\n                    query={CATGORYLIST}\r\n                    onCompleted={(data) =>\r\n                      setPageCount(data.allMasterProductCategories.totalCount)\r\n                    }\r\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\r\n                  >\r\n                    {({ data, loading, error, refetch }) => {\r\n                      if (loading) {\r\n                        // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>;\r\n                        // return false\r\n                      }\r\n                      if (data) {\r\n                        return (\r\n                          <>\r\n                            {data.allMasterProductCategories.nodes.map(\r\n                              (row, index) => (\r\n                                <>\r\n                                  {index == 0 && props.isadd ? (\r\n                                    <TableRow key={row.name}>\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          contentEditable={false}\r\n                                          id=\"vendordeliverydays\"\r\n                                          name=\"vendordeliverydays\"\r\n                                          value={props.newvendorcode}\r\n                                          onChange={handleInputChange(\r\n                                            \"shortCode\"\r\n                                          )}\r\n                                          label=\"Vendor Code\"\r\n                                        />\r\n                                      </TableCell>\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          contentEditable={false}\r\n                                          id=\"vendordeliverydays\"\r\n                                          name=\"vendordeliverydays\"\r\n                                          value={props.newvendorcode}\r\n                                          onChange={handleInputChange(\r\n                                            \"shortCode\"\r\n                                          )}\r\n                                          label=\"Vendor Code\"\r\n                                        />\r\n                                      </TableCell>\r\n\r\n                                      <TableCell\r\n                                        style={{ width: 20 }}\r\n                                        align=\"center\"\r\n                                      >\r\n                                        <Button\r\n                                          onClick={(e) => Savevendor(refetch)}\r\n                                        >\r\n                                          <SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => Cancelcreate()}>\r\n                                          <CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  ) : null}\r\n                                  <TableRow key={row.name}>\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          fullWidth\r\n                                          id=\"categoryname\"\r\n                                          name=\"categoryname\"\r\n                                          value={editcontent.name}\r\n                                          onChange={handleInputChange(\"name\")}\r\n                                          label=\"Name\"\r\n                                        />{\" \"}\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"left\">\r\n                                        {row.name}\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          fullWidth\r\n                                          id=\"alias\"\r\n                                          name=\"alias\"\r\n                                          value={editcontent.alias}\r\n                                          onChange={handleInputChange(\"alias\")}\r\n                                          label=\"alias\"\r\n                                        />{\" \"}\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"left\">\r\n                                        {row.shortCode}\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell\r\n                                        style={{ width: 20 }}\r\n                                        align=\"center\"\r\n                                      >\r\n                                        <Button\r\n                                          onClick={(e) => Savevendor(refetch)}\r\n                                        >\r\n                                          <SaveIcon />\r\n                                        </Button>\r\n                                        <Button\r\n                                          onClick={(e) => CancelEdit(row)}\r\n                                        >\r\n                                          <CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell\r\n                                        align=\"center\"\r\n                                        onClick={(e) => Editvendor(row)}\r\n                                        style={{ width: 20 }}\r\n                                      >\r\n                                        <Button>\r\n                                          <EditIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    )}\r\n                                  </TableRow>\r\n                                </>\r\n                              )\r\n                            )}\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return <div>{\"Fetch Products\"}</div>;\r\n                      }\r\n                    }}\r\n                  </Query>\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { MaterialContext } from '../../context';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { v4 as uuid } from 'uuid';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n  \r\nexport default function Categorycontent() {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const [isadd, setIsadd] = useState(false);\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      setOrders( [\r\n        {\r\n          id: uuid(),\r\n          created_at: \"test\",\r\n          customer: {\r\n            name: 'Ekaterina Tankova'\r\n          },\r\n          payment: {\r\n            ref: 'FAD103',\r\n            method: 'CreditCard',\r\n            total: '500.00',\r\n            currency: '$',\r\n            status: 'pending'\r\n          },\r\n          status: 'inactive'\r\n        }])\r\n    };\r\n\r\n    fetchOrders();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Header onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n      className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n      orders={materialCtx.materialMaster.materials}\r\n    />\r\n    \r\n  </Page>\r\n  );\r\n}","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MaterialProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './Categorycontent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const CategoryList = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </MaterialProvider>\r\n\r\n)});\r\nexport default CategoryList;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Configuration.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nexport const Configuration = withRouter((props) => {\r\n  const master_options = [\r\n    \"Attribute Master\",\r\n    \"Filter\",\r\n    \"Countries & Fx Rates\",\r\n    // \"Categories\",\r\n    // \"ProductTypes\",\r\n    // \"Materials\",\r\n    // \"Metal Colours\",\r\n    // \"Metal Purities\",\r\n    // \"Collections\",\r\n    // \"Occassions\",\r\n    // \"Styles\",\r\n    // \"Themes\",\r\n    // \"Designs\",\r\n    // \"Weights\",\r\n    \"Diamond Types\",\r\n    \"Diamond Settings\",\r\n    \"Diamond Shapes\",\r\n    \"Earring Backings\",\r\n    \"Gemstone Settings\",\r\n    \"Gemstone Shapes\",\r\n    \"Gemstone Types\",\r\n    \"Stones\",\r\n    // \"Stone Colours\",\r\n    // \"Stone Shapes\",\r\n    // \"Gender\",\r\n    \"SEO Priorities\",\r\n    \"Tax Settings 1\",\r\n    \"Tax Settings 2\",\r\n    \"Payment Status\",\r\n    \"Order Status\",\r\n    \"Shipping Zones\",\r\n    \"Shipment Setting I\",\r\n    \"Shipment Setting II\",\r\n    \"Search\"\r\n  ];\r\n  const master_options_url = [\r\n    \"masterattributes\",\r\n    \"filters\",\r\n    \"countriesFx\",\r\n    // \"categories\",\r\n    // \"producttypes\",\r\n    // \"materialmaster\",\r\n    // \"mastercolors\",\r\n    // \"masterpurities\",\r\n    // \"collections\",\r\n    // \"masteroccassions\",\r\n    // \"masterstyles\",\r\n    // \"masterthemes\",\r\n    // \"designs\",\r\n    // \"weights\",\r\n    \"diamonds\",\r\n    \"diamondsettings\",\r\n    \"diamondshapes\",\r\n    \"earringbacking\",\r\n    \"gemstonesettings\",\r\n    \"gemstoneshapes\",\r\n    \"gemstonetypes\",\r\n    \"masterstones\",\r\n    // \"masterstonecolors\",\r\n    // \"masterstoneshapes\",\r\n    // \"genders\",\r\n    \"seopriority\",\r\n    \"Taxsetup\",\r\n    \"taxsettings\",\r\n    \"paymentstatus\",\r\n    \"orderstatus\",\r\n    \"zones\",\r\n    \"shipmensettings\",\r\n    \"shippingattributes\",\r\n    \"search_settings\"\r\n  ];\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => {\r\n    setRaised(true);\r\n  };\r\n  const onMouseOut = () => {\r\n    setRaised(false);\r\n    // setCardindex(-1)\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          Configure\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {master_options.map((text, index) => {\r\n        debugger\r\n        return (\r\n          <Grid item xs={6} sm={4} lg={3}>\r\n            <Link\r\n              underline=\"none\"\r\n              component={RouterLink}\r\n              to={master_options_url[index]}\r\n            >\r\n              <Card fullwidth className=\"card2\">\r\n                <CardContent>\r\n                  <Typography\r\n                    style={{ textAlign: \"center\", marginTop: 8 }}\r\n                    component=\"h6\"\r\n                    variant=\"h5\"\r\n                  >\r\n                    {text}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n        )\r\n      })}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Configuration;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  colors\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport PersonIcon from '@material-ui/icons/PersonOutline';\r\n\r\nimport { Label } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  actions: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    '& > * + *': {\r\n      marginLeft: 0\r\n    }\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst General = props => {\r\n  const { customer, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Customer info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>\r\n                {customer ? customer.email : \"\"}\r\n                {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.isemailverified\r\n                      ? 'Email verified'\r\n                      : 'Email not verified'} \r\n                  </Label>\r\n                </div>}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Phone</TableCell>\r\n               <TableCell>{customer.mobile}\r\n               {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.ismobileverified\r\n                      ? 'Mobile verified'\r\n                      : 'Mobile not verified'} \r\n                  </Label>\r\n                </div>}\r\n                </TableCell>\r\n            </TableRow>\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      {/* <CardActions className={classes.actions}>\r\n        <Button onClick={handleEditOpen}>\r\n          <EditIcon className={classes.buttonIcon} />\r\n          Edit\r\n        </Button>\r\n        <Button>\r\n          <LockOpenIcon className={classes.buttonIcon} />\r\n          Reset &amp; Send Password\r\n        </Button>\r\n        <Button>\r\n          <PersonIcon className={classes.buttonIcon} />\r\n          Login as Customer\r\n        </Button>\r\n      </CardActions> */}\r\n      {/* <CustomerEdit\r\n        customer={customer}\r\n        onClose={handleEditClose}\r\n        open={openEdit}\r\n      /> */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nGeneral.propTypes = {\r\n  className: PropTypes.string,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nexport default General;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\n\r\nimport \"../../tmp.css\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Chip,\r\n  Switch,\r\n  FormControlLabel,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    paddingBottom: theme.spacing(2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    marginRight: theme.spacing(2),\r\n    // backgroundColor: colors.green[600],\r\n    // '&:hover': {\r\n    //   backgroundColor: colors.green[900]\r\n    // }\r\n  },\r\n}));\r\n\r\nconst EditContent = (props) => {\r\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    ...diamond,\r\n  };\r\n  const [showpreview, setShowpreview] = useState(false);\r\n  const [previewurl, setpreviewurl] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  function previewimage(url) {\r\n    // setpreviewurl(url)\r\n    // setShowpreview(true)\r\n  }\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const toggleChecked = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\r\n  };\r\n  function handleInit() {\r\n    console.log(\"FilePond instance has initialised\");\r\n  }\r\n\r\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\r\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        foldername: \"banner_images\",\r\n        product_id: null,\r\n      },\r\n      false\r\n    );\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData.filepath;\r\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\r\n\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = [];\r\n    if (previmagenames) {\r\n      previmages = previmagenames.split(\",\");\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\r\n  }\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {}, [editcontent]);\r\n  \r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            {props.title}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          {attributes.map((columnname, index) => (\r\n            <>\r\n              {showpreview && (\r\n                <Lightbox\r\n                  class=\"fade\"\r\n                  mainSrc={previewurl}\r\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\r\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n                  onCloseRequest={() => setShowpreview(false)}\r\n                  onMovePrevRequest={() => alert(\"prev\")}\r\n                  onMoveNextRequest={() => alert(\"next\")}\r\n                />\r\n              )}\r\n              <Grid container xs={12} spacing={2}>\r\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n                      label={columnname.label}\r\n                      disabled={columnname.type === 10}\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n                {columnname.key == \"email\" && !diamond.isedit ? (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n                      label={columnname.label}\r\n                      disabled={columnname.type === 10}\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n                {columnname.type === 2 && (\r\n                  <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                      label={columnname.key}\r\n                      labelPlacement=\"start\"\r\n                      control={\r\n                        <Switch\r\n                          checked={editcontent[columnname.key]}\r\n                          name=\"checkedB\"\r\n                          color=\"primary\"\r\n                          onChange={toggleChecked(columnname.key)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                {columnname.type === 3 && (\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      multiple\r\n                      id=\"combo-box-demo\"\r\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={editcontent[columnname.defaultkey]}\r\n                      onChange={handleoptionChange(columnname.defaultkey)}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type == 4 && (\r\n                  <Grid item xs={12}>\r\n                    <Typography> {diamond[columnname.key]}</Typography>\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type == 5 && (\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      id=\"combo-box-demo\"\r\n                      // options={props.masters[columnname.mastervaluekey]}\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                      onChange={handleoptionChange(columnname.defaultkey)}\r\n                      value={editcontent[columnname.defaultkey]}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\r\n                      )}\r\n                    />{\" \"}\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type === 6 && (\r\n                  <Grid item xs={12}>\r\n                    <Button variant=\"outlined\" color=\"primary\">\r\n                      {columnname.controllabel}\r\n                    </Button>{\" \"}\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type === 9 && (\r\n                  <Grid container item xs={12}>\r\n                    <Grid item xs={12}>\r\n                      <AvatarGroup max={2}>\r\n                        {diamond[columnname.key]\r\n                          ? diamond[columnname.key]\r\n                              .split(\",\")\r\n                              .map((diamond, index) => (\r\n                                <Avatar\r\n                                  alt=\"Remy Sharp\"\r\n                                  src={diamond}\r\n                                  onClick={() => previewimage(diamond)}\r\n                                  className={classes.small}\r\n                                />\r\n                              ))\r\n                          : null}\r\n                      </AvatarGroup>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <FilePond\r\n                        style={{ height: \"100\", width: \"100\" }}\r\n                        oninit={() => handleInit()}\r\n                        labelIdle=\"Add Banner Image\"\r\n                        onaddfile={(error, fileItem) => {\r\n                          if (!error) {\r\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\r\n                          } else {\r\n                            // alert(row[columnname.key])\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </>\r\n          ))}\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={() => onClose()} variant=\"contained\">\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditContent.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  attributes: PropTypes.array,\r\n\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditContent;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  console.log(props.columns, \"column objs\");\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all desserts' }}\r\n            />\r\n          </TableCell> */}\r\n\r\n        {/* {props.columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            width={headCell.type == 9 ? 300 : null}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"desc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              \r\n              {headCell.name}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"\" : \"\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))} */}\r\n        {props.columns.map((item, index) => (\r\n          <TableCell\r\n            key={index}\r\n            width={item.type == 9 ? 300 : null}\r\n            align={item.numeric ? \"right\" : \"left\"}\r\n            padding={item.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === item.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === item.id}\r\n              direction={orderBy === item.id ? order : \"desc\"}\r\n              onClick={createSortHandler(item.id)}\r\n            >\r\n              {item.name}\r\n              {orderBy === item.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"\" : \"\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default EnhancedTableHead;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\n\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\n\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Paper, TextField } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport {\r\n  TaxList,\r\n  VENDORLISTS,\r\n  PRODUCTFILTERMASTER,\r\n  PRODUCTLISTSTATUSEDIT,\r\n} from \"../../graphql/query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport EditContent from \"./components/EditContent\";\r\nimport { Button, Switch, Grid, FormControlLabel } from \"@material-ui/core\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Moment from \"react-moment\";\r\nimport { BASE_URL } from \"../../config\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\r\nimport GrainIcon from \"@material-ui/icons/Grain\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport \"./tmp.css\";\r\n\r\n// Import the Image EXIF Orientation and Image Preview plugins\r\n// Note: These need to be installed separately\r\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport moment from \"moment\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\"></IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst Vendor = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [masterlist, setMasterlist] = React.useState(props.values);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const [productlists, setProductlists] = React.useState([]);\r\n  const [allproductlists, setAllProductlists] = React.useState([]);\r\n  const [mastercategories, setMastercategories] = React.useState([]);\r\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editEmail, setEditEmail] = React.useState(false);\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [isedit, setIsedit] = React.useState(false);\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const [aliasName, setaliasName] = React.useState(\"\");\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  function addnewvendor() {\r\n    let sort_id = masterlist?.length > 0 ? masterlist[0].filterOrder + 1 : 1;\r\n    setaliasName(props.prefix + sort_id);\r\n\r\n    setEditcontent({\r\n      alias: aliasName,\r\n      ...editcontent,\r\n      isedit: false,\r\n    });\r\n    // debugger;\r\n    console.log(editcontent);\r\n    // let masters = masterlist;\r\n    // masters.insert(0, []);\r\n\r\n    //setMasterlist(masters)\r\n    setIsadd(true);\r\n    setOpenedit(true);\r\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\r\n  }\r\n  Array.prototype.insert = function (index, item) {\r\n    this.splice(index, 0, item);\r\n  };\r\n  function Editvendor(vendordata) {\r\n    setEditEmail(true);\r\n    delete vendordata[\"action\"];\r\n\r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit: true,\r\n    });\r\n    setOpenedit(true);\r\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n  }\r\n  async function Savevendor(content) {\r\n    props.onCreate(content);\r\n    setIsadd(false);\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\r\n    // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function searrchcontent() {\r\n    props.onSearch(\r\n      editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\"\r\n    );\r\n  }\r\n  function handleInit() {\r\n    console.log(\"FilePond instance has initialised\");\r\n  }\r\n  function removeimage(imagename, keyvalue) {\r\n    let previmagenames = editcontent[keyvalue];\r\n    let newimages = [];\r\n    let previmages = previmagenames.split(\",\");\r\n    previmages.forEach((element) => {\r\n      if (element == imagename) {\r\n      } else {\r\n        newimages.push(element);\r\n      }\r\n    });\r\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    if (isadd) {\r\n      let masters = masterlist;\r\n\r\n      masters.splice(0, 1);\r\n      setMasterlist(masterlist);\r\n    }\r\n    setIsadd(false);\r\n    setEditcontent({});\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleSearchChange = (type) => (e) => {\r\n    props.onSearch(e.target.value);\r\n  };\r\n  const handleChange = (type) => (event) => {\r\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\r\n  };\r\n  const [showpreview, setShowpreview] = useState(false);\r\n  const [previewurl, setpreviewurl] = useState(\"\");\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n\r\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\r\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        foldername: \"banner_images\",\r\n        product_id: null,\r\n      },\r\n      false\r\n    );\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData.filepath;\r\n    let imageurl =\r\n      \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\r\n\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = [];\r\n    if (previmagenames) {\r\n      previmages = previmagenames.split(\",\");\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\r\n  }\r\n  useEffect(() => {\r\n    setMasterlist(props.values);\r\n  }, [props.values]);\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info(\"You clicked a breadcrumb.\");\r\n  }\r\n  function previewimage(url) {\r\n    setpreviewurl(url);\r\n    setShowpreview(true);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showpreview && (\r\n        <Lightbox\r\n          class=\"fade\"\r\n          mainSrc={previewurl}\r\n          // nextSrc={images[(photoIndex + 1) % images.length]}\r\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n          onCloseRequest={() => setShowpreview(false)}\r\n          onMovePrevRequest={() => alert(\"prev\")}\r\n          onMoveNextRequest={() => alert(\"next\")}\r\n        />\r\n      )}\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={3} sm={3}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\r\n            <Grid fullwidth item xs={9} sm={9}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                id=\"vendordeliverydays\"\r\n                name=\"vendordeliverydays\"\r\n                //  /  value={editcontent.searchcontent}\r\n                onChange={handleInputChange(\"searchcontent\")}\r\n                label=\"Search text\"\r\n              />\r\n            </Grid>\r\n            <Grid fullwidth item xs={3} sm={3}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => searrchcontent()}\r\n                color=\"primary\"\r\n              >\r\n                Search\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            {props.button_title ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => addnewvendor()}\r\n                color=\"primary\"\r\n              >\r\n                {props.button_title}\r\n              </Button>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                {props?.columns?.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            {/* <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            /> */}\r\n            <TableBody>\r\n              {masterlist?.map((row, index) => (\r\n                <>\r\n                  <TableRow>\r\n                    {props.columns.map((columnname, index) => (\r\n                      <>\r\n                        {columnname.key === \"action\" ? (\r\n                          <TableCell align=\"center\" style={{ width: 20 }}>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <>\r\n                                <Button onClick={(e) => Savevendor()}>\r\n                                  <SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}>\r\n                                  <CancelIcon />\r\n                                </Button>\r\n                              </>\r\n                            ) : (\r\n                              <Button onClick={(e) => Editvendor(row)}>\r\n                                <EditIcon />\r\n                              </Button>\r\n                            )}\r\n                          </TableCell>\r\n                        ) : (\r\n                          <>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <TableCell align=\"left\">\r\n                                {columnname.type === 2 ? (\r\n                                  <Switch\r\n                                    onChange={handleChange(columnname.key)}\r\n                                    checked={editcontent[columnname.key]}\r\n                                    color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    inputProps={{\r\n                                      \"aria-label\": \"primary checkbox\",\r\n                                    }}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type === 6 ? (\r\n                                  <Button variant=\"outlined\" color=\"primary\">\r\n                                    {columnname.controllabel}\r\n                                  </Button>\r\n                                ) : null}\r\n                                {columnname.type == 3 ? (\r\n                                  <Autocomplete\r\n                                    multiple\r\n                                    id=\"combo-box-demo\"\r\n                                    options={\r\n                                      columnname.mastervaluekey\r\n                                        ? props.masters[\r\n                                            columnname.mastervaluekey\r\n                                          ]\r\n                                        : props.masters\r\n                                    }\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    value={editcontent[columnname.defaultkey]}\r\n                                    onChange={handleoptionChange(\r\n                                      columnname.defaultkey\r\n                                    )}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label={columnname.label}\r\n                                        variant=\"outlined\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type == 9 ? (\r\n                                  <>\r\n                                    <FilePond\r\n                                      oninit={() => handleInit()}\r\n                                      labelIdle=\"Add Banner Image\"\r\n                                      onaddfile={(error, fileItem) => {\r\n                                        if (!error) {\r\n                                          uploadimagetoserver(\r\n                                            fileItem,\r\n                                            columnname.key,\r\n                                            \"add\"\r\n                                          );\r\n                                        } else {\r\n                                          // alert(row[columnname.key])\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <div className={classes.imagecontainer}>\r\n                                      {editcontent[columnname.key]\r\n                                        ? editcontent[columnname.key]\r\n                                            .split(\",\")\r\n                                            .map((row, index) => (\r\n                                              <Badge\r\n                                                overlap=\"circle\"\r\n                                                anchorOrigin={{\r\n                                                  vertical: \"top\",\r\n                                                  horizontal: \"right\",\r\n                                                }}\r\n                                                badgeContent={\r\n                                                  <HighlightOffIcon\r\n                                                    fontSize=\"small\"\r\n                                                    onClick={() =>\r\n                                                      removeimage(\r\n                                                        row,\r\n                                                        columnname.key\r\n                                                      )\r\n                                                    }\r\n                                                  />\r\n                                                }\r\n                                              >\r\n                                                <Avatar\r\n                                                  alt=\"Remy Sharp\"\r\n                                                  src={row}\r\n                                                  className={classes.small}\r\n                                                />\r\n                                              </Badge>\r\n                                            ))\r\n                                        : null}\r\n                                    </div>\r\n                                  </>\r\n                                ) : null}\r\n                                {columnname.type == 5 ? (\r\n                                  <Autocomplete\r\n                                    id=\"combo-box-demo\"\r\n                                    options={\r\n                                      props.masters[columnname.mastervaluekey]\r\n                                    }\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    options={\r\n                                      columnname.mastervaluekey\r\n                                        ? props.masters[\r\n                                            columnname.mastervaluekey\r\n                                          ]\r\n                                        : props.masters\r\n                                    }\r\n                                    onChange={handleoptionChange(\r\n                                      columnname.defaultkey\r\n                                    )}\r\n                                    value={editcontent[columnname.defaultkey]}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label={columnname.label}\r\n                                        variant=\"outlined\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type == 4 ? (\r\n                                  <Typography>\r\n                                    {\" \"}\r\n                                    {row[columnname.key]}\r\n                                  </Typography>\r\n                                ) : null}\r\n                                {columnname.type == 8 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    View\r\n                                  </Button>\r\n                                ) : null}\r\n                                {!columnname.type || columnname.type == 1 ? (\r\n                                  <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    id={columnname.key}\r\n                                    name={columnname.key}\r\n                                    value={editcontent[columnname.key]}\r\n                                    onChange={handleInputChange(columnname.key)}\r\n                                    label={columnname.label}\r\n                                  />\r\n                                ) : null}{\" \"}\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell>\r\n                                {columnname.type == 8 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    View\r\n                                  </Button>\r\n                                ) : null}\r\n                                {columnname.type === 6 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    {columnname.controllabel}\r\n                                  </Button>\r\n                                ) : null}\r\n\r\n                                {columnname.type === 9 ? (\r\n                                  <AvatarGroup max={2}>\r\n                                    {row[columnname.key]\r\n                                      ? row[columnname.key]\r\n                                          .split(\",\")\r\n                                          .map((row, index) => (\r\n                                            <Avatar\r\n                                              alt=\"Remy Sharp\"\r\n                                              src={row}\r\n                                              onClick={() => previewimage(row)}\r\n                                              className={classes.small}\r\n                                            />\r\n                                          ))\r\n                                      : null}{\" \"}\r\n                                    {/* className={classes.small} />)) : null } */}\r\n                                  </AvatarGroup>\r\n                                ) : null}\r\n                                {columnname.type === 2 ? (\r\n                                  <Switch\r\n                                    color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    onChange={handleInputChange(columnname.key)}\r\n                                    checked={row[columnname.key]}\r\n                                    inputProps={{\r\n                                      \"aria-label\": \"primary checkbox\",\r\n                                    }}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type != 2 &&\r\n                                columnname.type != 6 &&\r\n                                columnname.type != 8 &&\r\n                                columnname.type != 9 ? (\r\n                                  <Typography>\r\n                                    {\" \"}\r\n                                    {row[columnname.key]}\r\n                                  </Typography>\r\n                                ) : null}\r\n                              </TableCell>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    ))}\r\n                  </TableRow>\r\n                </>\r\n              ))}\r\n\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 200, 500]}\r\n                  count={[props?.values?.length]}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  SelectProps={{\r\n                    inputProps: { \"aria-label\": \"rows per page\" },\r\n                    native: true,\r\n                  }}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  // ActionsComponent={TablePaginationActions}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n          {editcontent && (\r\n            <EditContent\r\n              diamond={editcontent}\r\n              attributes={props.columns}\r\n              title={props.title}\r\n              masters={props.masters}\r\n              onApply={Savevendor}\r\n              onClose={handleApplicationClose}\r\n              open={openedit}\r\n              prefix={aliasName}\r\n              editemail={editEmail}\r\n            />\r\n          )}\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport {General, Results} from './components'\r\nimport Mastercontent from '../../components/Mastercontent'\r\nimport data from './data.json'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Grid,\r\n  Divider,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  colors\r\n} from '@material-ui/core';\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    height: '80vh'\r\n  },\r\n  tabs: {\r\n    minWidth: '250px',\r\n    maxWidth: '250px',\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginRight : theme.spacing(2),\r\n    borderRight: `2px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\nconst master_options = ['Address Book','Wish List','Orders']\r\n  const master_options_url = ['/address','/userwishlist','/orderlist']\r\n\r\nexport const Customerdetails = withRouter(props => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({});\r\n  const [customer, setCustomer] = React.useState({});\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    // history.push(`orderlist/${id}`)\r\n    window.location.href = `orderlist/${id}`\r\n  }\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\nasync function getmaster()\r\n  {\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n\r\n    setCustomer(response.userprofile)\r\n  }\r\n  React.useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid> */}\r\n    <Grid container item xs={12} sm={12} lg={12} >\r\n    <Grid  item xs={12} sm={6} lg={6} >\r\n    <General customer ={customer} /> \r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={2} lg={2} >\r\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\r\n     <Card fullwidth\r\n    //  onClick={(e) => ProductEdit(customer.id)}\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <div className={classes.root}>\r\n      \r\n    //   <Tabs\r\n    //     orientation=\"vertical\"\r\n    //     variant=\"standard\"\r\n    //     value={value}\r\n    //     onChange={handleChange}\r\n    //     aria-label=\"Vertical tabs example\"\r\n    //     className={classes.tabs}\r\n    //   >\r\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\r\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\r\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\r\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\r\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\r\n \r\n    //   </Tabs>\r\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\r\n    //   <General customer ={customer} /> </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \r\n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\r\n\r\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\r\n      \r\n    //   </TabPanel>\r\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\r\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\r\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\r\n    //   </TabPanel>\r\n      \r\n     \r\n    // </div>\r\n  );\r\n});\r\n\r\nexport default Customerdetails;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Page from '../../components/Page/Page'\r\nimport { Header } from './components';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  tabs: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\r\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\r\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\r\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\r\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\r\n\r\nexport const CustomerManagementDetails = withRouter(props => {\r\n\r\n  const { match, history } = props;\r\n  const classes = useStyles();\r\n  const { id, tab } = match.params;\r\n\r\n  const handleTabsChange = (event, value) => {\r\n    history.push(value);\r\n  };\r\n\r\n  const tabs = [\r\n    { value: 'summary', label: 'Summary' },\r\n    { value: 'invoices', label: 'Invoices' },\r\n    { value: 'logs', label: 'Logs' }\r\n  ];\r\n\r\n  if (!tab) {\r\n    //return <Redirect to={`/customerdetails`} />;\r\n  }\r\n\r\n  if (!tabs.find(t => t.value === tab)) {\r\n   // return <Redirect to=\"/errors/error-404\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid>\r\n    \r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={4} lg={3} >\r\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\r\n     <Card fullwidth\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <Page\r\n    //   className={classes.root}\r\n    //   title=\"Customer Management Details\"\r\n    // >\r\n    //   <Header />\r\n    //    <Tabs\r\n    //     className={classes.tabs}\r\n    //     onChange={handleTabsChange}\r\n    //     scrollButtons=\"auto\"\r\n    //     value={tab}\r\n    //     variant=\"scrollable\"\r\n    //   >\r\n    //     {tabs.map(tab => (\r\n    //       <Tab\r\n    //         key={tab.value}\r\n    //         label={tab.label}\r\n    //         value={tab.value}\r\n    //       />\r\n    //     ))}\r\n    //   </Tabs>\r\n    //   <Divider className={classes.divider} />\r\n    //  {/* <div className={classes.content}>\r\n    //     {tab === 'summary' && <Summary />}\r\n    //     {tab === 'invoices' && <Invoices />}\r\n    //     {tab === 'logs' && <Logs />}\r\n    //   </div> */}\r\n    // </Page>\r\n  );\r\n});\r\n\r\nCustomerManagementDetails.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CustomerManagementDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const customer = {\r\n    name: 'Ekaterina Tankova'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        component=\"h2\"\r\n        gutterBottom\r\n        variant=\"overline\"\r\n      >\r\n        Customers\r\n      </Typography>\r\n      <Typography\r\n        component=\"h1\"\r\n        variant=\"h3\"\r\n      >\r\n        {customer.name}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  }\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n      //     setInvoices(response.data.invoices);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title=\"Customer invoices\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Payment Method</TableCell>\r\n                    <TableCell>Total</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {invoices.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React from \"react\";\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\nimport propTypes from \"prop-types\";\r\n\r\n// NOTABLE POINTS\r\n//  Min and Max\r\n// Email ID\r\n// Confirm Email ID\r\n// Mobile Number\r\n// Number\r\n// Password\r\n// Repeat Password\r\n// On Button Submit\r\n// On Moving Out\r\n// Live\r\n\r\nexport const Input = props => {\r\n  let {\r\n    isNumber = false,\r\n    pattern,\r\n    maxLength,\r\n    minLength,\r\n    helperText,\r\n    ...rest\r\n  } = props;\r\n  const defaultStyle = {\r\n    margin: \"dense\",\r\n    variant: \"outlined\",\r\n    'input-label': {\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap',\r\n      overflow: 'hidden',\r\n      width: '100%',\r\n      color: 'red'\r\n    },\r\n  \r\n    'input': {\r\n      '&::placeholder': {\r\n        textOverflow: 'ellipsis !important',\r\n        color: 'red'\r\n      }\r\n    }\r\n  };\r\n\r\n  // INTEGRATE THEME HERE\r\n\r\n  const handleKeyPress = e => {\r\n    if (isNumber) {\r\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <TextField\r\n                inputProps={{ pattern, maxLength, minLength  }}\r\n\r\n        style={{ width: \"100%\" }}\r\n        helperText={helperText}\r\n        onKeyPress={handleKeyPress}\r\n        {...defaultStyle}\r\n        {...rest}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  isNumber: propTypes.bool\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport {Input} from '../../components/Input.js'\r\n\r\nimport \"./Dashboard.css\"\r\n\r\nclass Dashboard_ extends React.Component {\r\n  \r\n   \r\n  render() {\r\n  return (\r\n    <Container className=\"root\" component=\"main\">\r\n    <Input />\r\n  </Container>\r\n         \r\n  );\r\n}\r\n}\r\n\r\nexport const Dashboard = withRouter(Dashboard_);\r\n  export default Dashboard;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Divider} from '@material-ui/core'\r\nexport default function ConformationAlert(props) {\r\n  \r\n  const handleOk = () => {\r\n    props.onSuccess(props.data, props.refetch)\r\n  };\r\n  const handleClose = () => {\r\n    props.onCancel()\r\n  };\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={props.isshow}\r\n        onClose={handleClose}\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.message}\r\n            Verify details before deleting\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\r\n          {props.positivebtn}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibileIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  FormControlLabel,\r\n  Switch,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n   // minWidth: 1150\r\n   overflowX: 'auto',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  let history = useHistory();\r\n\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function DiscountEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n   // history.push(`product_attributes/${id}`)\r\n   history.push(`salediscount/${id}`)\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      discountId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n          action={\r\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={SALEDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                  \r\n                                 <>\r\n\r\n                                  <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">{row.discountName} \r\n                                              </TableCell>\r\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\r\n                                              } \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell> */}\r\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\r\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"Components\",\r\n  \"discount_value\",\r\n  \"product attributes\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const DiscountList = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    \r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Sale Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      onAdd={addcategory}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default DiscountList;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Earringbacking = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: EARRINGBACKING  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    \r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {Card,TextField,Checkbox} from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Goldpriceupdate = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervendors, setMastervendors] = React.useState([])\r\n  const [goldprice, setGoldprice] = React.useState({\r\n    cost_price : '',\r\n    selling_price : ''\r\n  })\r\n  const [defaultpurity, setDefaultpurity] = React.useState({})\r\n  const [purityprices, setPurityprices] = React.useState({})\r\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\r\n  const [defaultmetal, setDefaultmetal] = React.useState({})\r\n  const [pricetype, setPricetype] = React.useState({})\r\n\r\n  const [selectedvendors, setSelectedvendors] = React.useState([])\r\n  const [materials, setMaterials] = React.useState([])\r\n  \r\n  const [masterpurities, setMasterpurities] = React.useState([])\r\n\r\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function updateprice()\r\n  {\r\n    let bodycondent = {\r\n      costprices : purityprices,\r\n      sellingprices : puritysellingprices,\r\n      vendors : selectedvendors,\r\n      metal : defaultmetal,\r\n      pricetype : pricetype\r\n    }\r\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\r\n     alert(\"price updated successfully\")\r\n  }\r\n  const handleChange = type => (event) => {\r\n    let vendorids =[]\r\n    selectedvendors.forEach(element => {\r\n      vendorids.push(element)\r\n    })\r\n    if(event.target.checked)\r\n    {\r\n\r\n      if(type == 'All')\r\n      {\r\n        mastervendors.forEach(element => {\r\n          vendorids.push(element.shortCode)\r\n        })\r\n        setSelectedvendors(vendorids)\r\n      }else\r\n      {\r\n        vendorids.push(type)\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }else{\r\n      if(type == 'All')\r\n      {\r\n        setSelectedvendors([])\r\n\r\n      }else{\r\n\r\n        let indexval = selectedvendors.indexOf(type)\r\n        vendorids.splice(indexval,1)\r\n        let allindexval = selectedvendors.indexOf('All')\r\n        if(allindexval >  -1)\r\n        {\r\n          vendorids.splice(allindexval,1)\r\n\r\n        }\r\n\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }\r\n   // setChecked(event.target.checked);\r\n  };\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let allobj =  {\r\n          \"name\": \"All Vendors\",\r\n          \"id\": \"All\",\r\n          \"shortCode\": \"All\"\r\n        }\r\n        let vendors = [];\r\n        vendors.push(allobj)\r\n\r\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\r\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\r\n          vendors.push(vendorobj)\r\n          selectedvendors.push(vendorobj.shortCode)\r\n        })\r\n         setMastervendors(vendors)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  const handleoptionChange = type => (event, value) => {\r\n   // setEditcontent({ ...editcontent, [type]: value  })\r\n   let vendorid = []\r\n   value.forEach(element => {\r\n    if(element.shortCode == 'All')\r\n    {\r\n      mastervendors.forEach(element => {\r\n        vendorid.push(element.shortCode)\r\n      })\r\n      setSelectedvendors(vendorid)\r\n    }else{\r\n      vendorid.push(element.shortCode)\r\n      setSelectedvendors(vendorid)\r\n\r\n    }\r\n   })\r\n  }\r\n  const handlepricetypeChange = (event, value) => {\r\n    setPricetype(value)\r\n  }\r\n  const handlemetalChange = type => (event, value) => {\r\n    // setEditcontent({ ...editcontent, [type]: value  })\r\n    //alert(JSON.stringify(value))\r\n    if(value)\r\n    { \r\n    if(value.shortCode === 'G')\r\n    {\r\n      setIspricecalculated(false)\r\n    }else\r\n    {\r\n      setIspricecalculated(true)\r\n    }\r\n    if(data[value.name])\r\n    {\r\n      setDefaultpurity(data[value.name])\r\n\r\n    }\r\n  }else\r\n  {\r\n    setIspricecalculated(false)\r\n\r\n  }\r\n    setDefaultmetal(value)\r\n   //setDefaultpurity(value)\r\n   }\r\n  const handleInputChange = type => event => {\r\n   // setGoldprice(event.target.value);\r\n   //alert(JSON.stringify(goldprice))\r\n   if(defaultmetal.name === 'Gold')\r\n    {\r\n    }else\r\n    {\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\r\n      if(type === 'cost_price')\r\n      {\r\n        setPurityprices(sellingpricejson)\r\n\r\n      }\r\n      if(type === 'selling_price')\r\n      {\r\n        setPuritysellingprices(sellingpricejson)\r\n\r\n      }\r\n    }\r\n    setGoldprice({...goldprice,[type]: event.target.value })\r\n  }\r\n  const handlePriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    setPurityprices({...purityprices,[type]:event.target.value});\r\n\r\n    \r\n  }\r\n  const handlesellingPriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    \r\n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\r\n  }\r\n  function getgoldvalue()\r\n  {\r\n    if(defaultmetal.name === 'Gold')\r\n    {\r\n       let default_purity = parseInt()\r\n     let pricejson = {}\r\n     let sellingpricejson = {}\r\n    data.goldpurity.forEach(element => {\r\n      var sellingprice = goldprice.selling_price\r\n      if(pricetype.value == 2) \r\n      {\r\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\r\n       \r\n      }\r\n      let priceratio = element.shortCode / defaultpurity.shortCode;\r\n\r\n      let goldprice_val = priceratio*goldprice.cost_price\r\n      let goldsellingprice_val = priceratio*sellingprice\r\n      sellingpricejson[element.shortCode] = goldsellingprice_val\r\n\r\n      pricejson[element.shortCode] = goldprice_val\r\n    })\r\n    setPuritysellingprices(sellingpricejson)\r\n    setPurityprices(pricejson)\r\n    }else{\r\n      let pricejson = {}\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\r\n\r\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\r\n      setPuritysellingprices(sellingpricejson)\r\n      setPurityprices(pricejson)\r\n    }\r\n\r\n    \r\n     setIspricecalculated(true)\r\n   \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n     <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          <Grid container item row alignItems=\"center\" >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={materials}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disableClearable={true}\r\n                 value={defaultmetal}\r\n                   onChange={handlemetalChange(\"material\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\r\n                /> \r\n\r\n                \r\n\r\n\r\n\r\n          <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.cost_price}\r\n                             onChange={handleInputChange(\"cost_price\")}\r\n                            label=\"Cost Price\"\r\n                          />\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={data.pricetype}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  style={{marginLeft: 16}}\r\n                 value={pricetype}\r\n                  onChange={handlepricetypeChange}\r\n                  getOptionLabel={(option) => option.label}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\r\n                /> \r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.selling_price}\r\n                             onChange={handleInputChange(\"selling_price\")}\r\n                            label=\"Selling Price\"\r\n                          />\r\n              \r\n             {defaultpurity.name ?  <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masterpurities}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disabled\r\n                  style={{marginLeft: 16, width:200}}\r\n                  value={defaultpurity}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\r\n                  variant=\"outlined\" />}\r\n                />  : null }\r\n                {defaultmetal.name == 'Gold' ? \r\n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\r\n                  Get Price\r\n               </Button> : null}\r\n          </Grid>\r\n          {ispricecalculated ?\r\n          <>\r\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\r\n          {data.goldpurity.map((purityname, index) =>(\r\n           \r\n           <Grid container item row alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n               Price for {purityname.name}\r\n             </Typography>\r\n                 \r\n                 <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={purityprices[purityname.shortCode]}\r\n                      onChange={handlePriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n                    <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     style={{marginLeft: 16}}\r\n\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={puritysellingprices[purityname.shortCode]}\r\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n   </Grid>\r\n          ))} </>:null }\r\n          <Grid item xs={12} sm={6} lg={3} >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={mastervendors}\r\n                    multiple\r\n                  // value={editcontent[columnname.defaultkey]}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\r\n                /> \r\n        </Grid>\r\n          </> : null}\r\n          \r\n         </Grid>\r\n         <Grid item  >\r\n\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n            </Grid>\r\n      </CardContent>\r\n      </Card>\r\n\r\n{/* \r\n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          \r\n           {mastervendors.map((vendors, index) =>(\r\n            <Grid container item row alignItems=\"center\" >\r\n              <Grid item xs={3} alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n              {vendors.name}\r\n             </Typography>\r\n             </Grid>\r\n             <Grid item xs={3} alignItems=\"center\" >\r\n\r\n             <Checkbox\r\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\r\n                onChange={handleChange(vendors.shortCode)}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n                   </Grid>\r\n   </Grid>\r\n          ))}\r\n         </Grid>\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n\r\n      </CardContent>\r\n      </Card> : null}\r\n    */}\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Goldpriceupdate;","import gql from \"graphql-tag\";\r\n\r\nlet CREATE_HOLIDAY = gql`\r\n  mutation ($item: HolidayManagerInput!) {\r\n    createHolidayManager(input: { holidayManager: $item }) {\r\n      holidayManager {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_HOLIDAY = gql`\r\n  mutation ($id: Int!, $item: HolidayManagerPatch!) {\r\n    updateHolidayManagerById(input: { id: $id, holidayManagerPatch: $item }) {\r\n      holidayManager {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_HOLIDAY = gql`\r\n  mutation ($id: Int!) {\r\n    deleteHolidayManagerById(input: { id: $id }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_WAREHOUSE = gql`\r\n  mutation ($item: WarehouseInput!) {\r\n    createWarehouse(input: { warehouse: $item }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_WAREHOUSE = gql`\r\n  mutation ($id: Int!, $item: WarehousePatch!) {\r\n    updateWarehouseById(input: { id: $id, warehousePatch: $item }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_WAREHOUSE = gql`\r\n  mutation ($id: Int!) {\r\n    deleteWarehouseById(input: { id: $id }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_INVENTORY = gql`\r\n  mutation ($item: InventoryInput!) {\r\n    createInventory(input: { inventory: $item }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_INVENTORY = gql`\r\n  mutation ($id: UUID!, $item: InventoryPatch!) {\r\n    updateInventoryById(input: { id: $id, inventoryPatch: $item }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_INVENTORY = gql`\r\n  mutation ($id: UUID!) {\r\n    deleteInventoryById(input: { id: $id }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_ORDER = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $awbNumber: String\r\n    $comments: String\r\n    $orderStatus: String\r\n    $paymentStatus: String\r\n  ) {\r\n    updateOrderById(\r\n      input: {\r\n        orderPatch: {\r\n          awbNumber: $awbNumber\r\n          comments: $comments\r\n          orderStatus: $orderStatus\r\n          paymentStatus: $paymentStatus\r\n        }\r\n        id: $id\r\n      }\r\n    ) {\r\n      order {\r\n        id\r\n        paymentStatus\r\n        awbNumber\r\n        paymentMode\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ATTRIBUTE = gql`\r\n  mutation ($attribute: AttributeInput!) {\r\n    createAttribute(input: { attribute: $attribute }) {\r\n      attribute {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_ATTRIBUTE_BY_ID = gql`\r\n  mutation ($id: Int!, $attribute: AttributePatch!) {\r\n    updateAttributeById(input: { id: $id, attributePatch: $attribute }) {\r\n      attribute {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  CREATE_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  CREATE_WAREHOUSE,\r\n  UPDATE_WAREHOUSE,\r\n  DELETE_WAREHOUSE,\r\n  CREATE_INVENTORY,\r\n  UPDATE_INVENTORY,\r\n  DELETE_INVENTORY,\r\n  UPDATE_ORDER,\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst HolidayModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Holiday-Modal\"}\r\n    >\r\n      <DialogTitle disableTypography className={classes.root}>\r\n        <Typography variant=\"h6\">{`${props.type} Holiday`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Holiday\"}\r\n              name=\"holiday\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.holiday}\r\n              onChange={props.editItem}\r\n            />\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                className={classes.inputField}\r\n                label={\"Date\"}\r\n                name=\"date\"\r\n                fullWidth\r\n                inputVariant=\"outlined\"\r\n                value={props.item.date}\r\n                onChange={(_, value) => props.editItem(value, \"date\")}\r\n                format={\"yyyy-MM-dd\"}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default HolidayModal;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n} from \"../../graphql/mutation\";\r\nimport { HOLIDAYLIST } from \"../../graphql/query\";\r\nimport HolidayModal from \"./HolidayModal\";\r\nimport { AlertContext } from \"../../context\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport const HolidayManager = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    HOLIDAYLIST,\r\n    {\r\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\r\n    }\r\n  );\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({ holiday: \"\", date: null });\r\n\r\n  const editItem = (event, type) => {\r\n    var name, value;\r\n    if (type == \"date\") {\r\n      name = type;\r\n      value = event;\r\n    } else {\r\n      name = event.target.name;\r\n      value = event.target.value;\r\n    }\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n    setItem({ holiday: \"\", date: null });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (type == \"Edit\") {\r\n      var id = item.id;\r\n      delete item.id;\r\n      delete item.createdAt;\r\n      delete item.updatedAt;\r\n      delete item.__typename;\r\n      item[\"updatedAt\"] = new Date();\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_HOLIDAY,\r\n          variables: {\r\n            id,\r\n            item,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type == \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_HOLIDAY,\r\n          variables: {\r\n            item,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type == \"Delete\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_HOLIDAY,\r\n          variables: {\r\n            id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    // console.log(file);\r\n    axios\r\n      .post(API_URL + \"/addholidays\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully added holidays!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Holiday Manager</Typography>\r\n\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Holidays\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = `${process.env.PUBLIC_URL}/sample/holidays.csv`;\r\n            a.setAttribute(\"download\", \"holidays.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Holiday\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Holiday</TableCell>\r\n                <TableCell align={\"center\"}>Date</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allHolidayManagers?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>No Holidays found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allHolidayManagers?.nodes.length > 0 &&\r\n                data?.allHolidayManagers?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.holiday}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.date, \"YYYY-MM-DD\").format(\"MMM DD,YYYY\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={5}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allHolidayManagers?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <HolidayModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { VALIDATEGENERATEDSKU, WAREHOUSELIST } from \"../../graphql/query\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst InventoryModal = (props) => {\r\n  const classes = useStyles();\r\n  const { loading, data } = useQuery(WAREHOUSELIST);\r\n\r\n  const client = useApolloClient();\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const validateGeneratedSku = (generatedSku) => {\r\n    client\r\n      .mutate({\r\n        mutation: VALIDATEGENERATEDSKU,\r\n        variables: { generatedSku },\r\n      })\r\n      .then((res) => {\r\n        if (res?.data?.allTransSkuLists?.nodes?.length === 0) {\r\n          setError(\"Tag No doesn't exists!\");\r\n        } else {\r\n          setError(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Holiday-Modal\"}\r\n    >\r\n      <DialogTitle disableTypography className={classes.root}>\r\n        <Typography variant=\"h6\">{`${props.type} Inventory`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              required\r\n              label={\"Tag No\"}\r\n              disabled={props.type === \"Edit\"}\r\n              name=\"generatedSku\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.generatedSku}\r\n              onChange={props.editItem}\r\n              error={Boolean(error)}\r\n              helperText={error}\r\n              onBlur={() => validateGeneratedSku(props.item.generatedSku)}\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              required\r\n              type={\"Number\"}\r\n              label={\"Quantity\"}\r\n              name=\"numberOfItems\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.numberOfItems}\r\n              onChange={props.editItem}\r\n            />\r\n            <Autocomplete\r\n              loading={loading}\r\n              options={data?.allWarehouses?.nodes}\r\n              disabled={props.type === \"Edit\"}\r\n              getOptionSelected={(option, value) => option.name === value.name}\r\n              getOptionLabel={(option) => option.name}\r\n              value={props.item.warehouse}\r\n              onChange={props.editItem}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Warehouse\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    endAdornment: (\r\n                      <React.Fragment>\r\n                        {loading ? (\r\n                          <CircularProgress color=\"inherit\" size={20} />\r\n                        ) : null}\r\n                        {params.InputProps.endAdornment}\r\n                      </React.Fragment>\r\n                    ),\r\n                  }}\r\n                />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default InventoryModal;\r\n","import React from \"react\";\r\nimport {\r\n  Badge,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_INVENTORY,\r\n  DELETE_INVENTORY,\r\n  UPDATE_INVENTORY,\r\n} from \"../../graphql/mutation\";\r\nimport { INVENTORYLIST, STOCKSTATUS } from \"../../graphql/query\";\r\nimport InventoryModal from \"./InventoryModal\";\r\nimport { AlertContext } from \"../../context\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport moment from \"moment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  iconButton: {\r\n    margin: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  icon: {\r\n    padding: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"inherit\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: 8,\r\n    },\r\n  },\r\n}));\r\n\r\nconst StockStatus = (props) => {\r\n  const classes = useStyles();\r\n  const { data } = useQuery(STOCKSTATUS);\r\n  return (\r\n    <>\r\n      {data &&\r\n        data.allWarehouses.nodes.length > 0 &&\r\n        data.allWarehouses.nodes.map((item, index) => (\r\n          <Badge\r\n            badgeContent={\r\n              item?.inventoriesByWarehouseId?.aggregates?.sum?.numberOfItems\r\n            }\r\n            max={99999999}\r\n            color={\"error\"}\r\n            key={index}\r\n            component=\"div\"\r\n            className={classes.iconButton}\r\n            overlap=\"circle\"\r\n          >\r\n            <IconButton\r\n              disableRipple\r\n              className={classes.icon}\r\n              onClick={() => {\r\n                props.setWarehouse(item?.name);\r\n              }}\r\n            >\r\n              <StoreIcon\r\n                style={{ fontSize: 35 }}\r\n                color={item?.name === props.warehouse ? \"secondary\" : \"default\"}\r\n              />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle2\">{item?.name}</Typography>\r\n          </Badge>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Inventory = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [search, setSearch] = React.useState(null);\r\n  const [warehouse, setWarehouse] = React.useState(null);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    INVENTORYLIST,\r\n    {\r\n      variables: {\r\n        first: rowsPerPage,\r\n        offset: page * rowsPerPage,\r\n        filter: {\r\n          [\"generatedSku\"]: search ? { includesInsensitive: search } : null,\r\n          warehouseByWarehouseId: {\r\n            name: {\r\n              includesInsensitive: warehouse,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }\r\n  );\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({\r\n    generatedSku: \"\",\r\n    numberOfItems: \"\",\r\n    warehouse: { id: \"\", name: \"\" },\r\n  });\r\n\r\n  const editItem = (event, newValue) => {\r\n    var name, value;\r\n    if (newValue) {\r\n      console.log(newValue);\r\n      name = \"warehouse\";\r\n      value = newValue;\r\n    } else {\r\n      name = event.target.name;\r\n      value = event.target.value;\r\n    }\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (type === \"Edit\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_INVENTORY,\r\n          variables: {\r\n            id,\r\n            item: {\r\n              generatedSku: item.generatedSku,\r\n              numberOfItems: parseInt(item.numberOfItems),\r\n              warehouseId: item.warehouse.id,\r\n              updatedAt: new Date(),\r\n            },\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_INVENTORY,\r\n          variables: {\r\n            item: {\r\n              id: uuid(),\r\n              generatedSku: item.generatedSku,\r\n              numberOfItems: parseInt(item.numberOfItems),\r\n              warehouseId: item.warehouse.id,\r\n            },\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Delete\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_INVENTORY,\r\n          variables: {\r\n            id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    console.log(file);\r\n    axios\r\n      .post(API_URL + \"/addinventories\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res.data.message || \"Successfully uploaded!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Inventory</Typography>\r\n\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Inventory\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = `${process.env.PUBLIC_URL}/sample/inventory.csv`;\r\n            a.setAttribute(\"download\", \"inventory.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n            setItem({\r\n              generatedSku: \"\",\r\n              numberOfItems: \"\",\r\n              warehouse: { id: \"\", name: \"\" },\r\n            });\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Inventory\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n        <TextField\r\n          className={classes.searchInput}\r\n          name=\"tagno\"\r\n          placeholder=\"Search Tag No.\"\r\n          size=\"medium\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        <StockStatus warehouse={warehouse} setWarehouse={setWarehouse} />\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Tag No</TableCell>\r\n                <TableCell align={\"center\"}>Quantity</TableCell>\r\n                <TableCell align={\"center\"}>Warehouse</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || networkStatus === NetworkStatus.refetch) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allInventories?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>No items in inventory!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allInventories?.nodes.length > 0 &&\r\n                data?.allInventories?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.generatedSku}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.numberOfItems}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.warehouse.name}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={6}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allInventories?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <InventoryModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst buildGradient = (start, end) =>\r\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\r\n\r\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\r\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\r\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\r\nconst green = buildGradient(colors.green[400], colors.green[600]);\r\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\r\nconst red = buildGradient(colors.red[500], colors.red[700]);\r\n\r\nexport default {\r\n  grey,\r\n  blue,\r\n  indigo,\r\n  green,\r\n  orange,\r\n  red\r\n};\r\n","/* eslint-disable no-unused-vars */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport gradients from \"../../../../utils/gradients\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { GlobalContext } from \"../../../../context\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Divider,\r\n  Link,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nvar validate = require(\"validate.js\");\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: \"is required\" },\r\n    email: true,\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: \"is required\" },\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  card: {\r\n    maxWidth: \"100%\",\r\n    overflow: \"unset\",\r\n    display: \"flex\",\r\n    position: \"relative\",\r\n    \"& > *\": {\r\n      flexGrow: 1,\r\n      flexBasis: \"50%\",\r\n      width: \"50%\",\r\n    },\r\n  },\r\n  content: {\r\n    padding: theme.spacing(8, 4, 8, 4),\r\n  },\r\n  media: {\r\n    borderTopRightRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    color: theme.palette.white,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-end\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  icon: {\r\n    backgroundImage: gradients.green,\r\n    color: theme.palette.white,\r\n    borderRadius: theme.shape.borderRadius,\r\n    padding: theme.spacing(1),\r\n    position: \"absolute\",\r\n    top: -32,\r\n    left: theme.spacing(3),\r\n    height: 64,\r\n    width: 64,\r\n    fontSize: 32,\r\n  },\r\n  loginForm: {},\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  person: {\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  fields: {\r\n    margin: theme.spacing(-1),\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst LoginForm = (props) => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n  const [showmessage, setShowmessage] = React.useState(\"\");\r\n  const [iserror, setIserror] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === \"checkbox\"\r\n            ? event.target.checked\r\n            : event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (formState.isValid) {\r\n      //alert(JSON.stringify(formState.values))\r\n      let signinobj = await sendNetworkRequest(\r\n        \"/api/auth/signin\",\r\n        {},\r\n        formState.values\r\n      );\r\n\r\n      if (signinobj.statuscode === 200) {\r\n        localStorage.setItem(\"accesstoken\", signinobj.accessToken);\r\n\r\n        let pageaccess = await sendNetworkRequest(\r\n          \"/getpageaccess\",\r\n          {},\r\n          {},\r\n          true\r\n        );\r\n        let pages = [];\r\n        let pagepermissions = [];\r\n        let bannerpage = {\r\n          pagename: \"Banners\",\r\n          pageurl: \"/banners\",\r\n          is_view: true,\r\n          is_write: true,\r\n        };\r\n\r\n      \r\n        console.log(pageaccess);\r\n        // pageaccess.pages.push(bannerpage);\r\n        pageaccess.pages.forEach((element) => {\r\n          pages.push(element.pageurl);\r\n          // pagepermissions[element.pageurl] = {\r\n          //   isread : element.is_view,\r\n          //   iswrite : element.is_write\r\n          // }\r\n          if (element.is_write) {\r\n            pagepermissions.push(element.pageurl);\r\n          }\r\n        });\r\n        // setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n        //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\r\n\r\n        localStorage.setItem(\"accesspages\", pages);\r\n        localStorage.setItem(\"pagepermissions\", pagepermissions);\r\n\r\n        props.history.push(\"/productlist\");\r\n      } else {\r\n        setShowmessage(signinobj.message);\r\n        setOpen(true);\r\n      }\r\n    } else {\r\n      alert(\"has some error\");\r\n    }\r\n\r\n    //alert(JSON.stringify(formState))\r\n    // dispatch(login());\r\n    //alert(\"i am here\")\r\n  };\r\n\r\n  const hasError = (field) =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.content}>\r\n        <Typography gutterBottom variant=\"h3\">\r\n          Log in Page\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n          {/* Sign in on the internal platform */}\r\n        </Typography>\r\n\r\n        <form\r\n          {...rest}\r\n          className={clsx(classes.root, className)}\r\n          autoComplete={\"off\"}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className={classes.fields}>\r\n            <TextField\r\n              error={hasError(\"email\")}\r\n              fullWidth\r\n              helperText={hasError(\"email\") ? formState.errors.email[0] : null}\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              value={formState.values.email || \"\"}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              error={hasError(\"password\")}\r\n              fullWidth\r\n              helperText={\r\n                hasError(\"password\") ? formState.errors.password[0] : null\r\n              }\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              type=\"password\"\r\n              value={formState.values.password || \"\"}\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <Button\r\n            className={classes.submitButton}\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Log in\r\n          </Button>\r\n          <Snackbar\r\n            open={open}\r\n            autoHideDuration={6000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n              {showmessage}\r\n            </Alert>\r\n          </Snackbar>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Input } from \"../../components/Input.js\";\r\nimport Page from \"../../components/Page\";\r\n\r\nimport \"./Login.css\";\r\nimport { LoginForm } from \"./components\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Divider,\r\n  Link,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\n\r\nexport class Login extends React.Component {\r\n  render() {\r\n    return (\r\n      <Page className=\"root\" title=\"Login\">\r\n        <LoginForm />\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Manageadminusers = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masterroles, setMasterroles] = React.useState([])\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let roles = []\r\n    taxcontent.roles.forEach(element => {\r\n      roles.push(element.name)\r\n    })\r\n    let bodydata = { \r\n      username : taxcontent.username,\r\n      password : '123456789',\r\n      email: taxcontent.email,\r\n      roles : roles\r\n\r\n    }\r\n\r\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\r\n     getmaster()\r\n  }\r\n  async function getmasterroles()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\r\n  \r\n    \r\n    setMasterroles(response.roles) \r\n\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    let response =  await sendNetworkRequest('/getadminusers', {}, {})\r\n    let adminusers = response.users;\r\n    let users = []\r\n    adminusers.forEach(element => {\r\n        let userobj = {}\r\n        userobj['id'] = element.id;\r\n        userobj['username'] = element.username;\r\n        userobj['password'] = element.password;\r\n        userobj['email'] = element.email;\r\n        userobj['mobile'] = element.mobile;\r\n        userobj['status'] = element.status === 'Active' ? true : false;\r\n        let roles = []\r\n        let rolesnames = []\r\n\r\n        let userroles = element.user_roles;\r\n        userroles.forEach(userroleobj => {\r\n\r\n          let roleobj = {}\r\n          roleobj['id'] = userroleobj.master_role.id\r\n          roleobj['name'] = userroleobj.master_role.name\r\n          roles.push(roleobj)\r\n          rolesnames.push(userroleobj.master_role.name)\r\n        })\r\n        userobj['roles'] = roles\r\n        userobj['rolenames'] = rolesnames.join(' , ')\r\n        users.push(userobj)\r\n    });\r\n\r\n    setFiltervalue(users)\r\n    setMastervalue(users)\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs url=\"/userconfiguration\" name=\"userconfiguration\"></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Admin Users\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Manageadminusers;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\r\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n  const [filtercontent,setFiltercontent] = React.useState({\r\n    \"seacrchtext\" : props.fitltercontent.searchtext,\r\n    \"size\": props.fitltercontent.size,\r\n    \"offset\":props.fitltercontent.offset\r\n  })\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n   // alert(editcontent.searchcontent)\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\r\n\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n    props.onPagechange((newPage*rowsPerPage))\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n   \r\n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    props.onPagesizechange(parseInt(event.target.value, 10))\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> : null }\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                         {row[columnname.key]} \r\n                                       </Moment>:null } \r\n                                       {columnname.type == 8 ?  <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/customerdetails/'+row['id']}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>:null }                 \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.totalcount]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from './Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Manageusers = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masterroles, setMasterroles] = React.useState([])\r\n  const [totalcount, setTotalcount] = React.useState(0)\r\n\r\n  const [bodycontent, setBodycontent] = React.useState({\r\n    \"seacrchtext\" : '',\r\n    \"size\": 50,\r\n    \"offset\":0\r\n  })\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let roles = []\r\n    taxcontent.roles.forEach(element => {\r\n      roles.push(element.name)\r\n    })\r\n    let bodydata = { \r\n      username : taxcontent.username,\r\n      password : '123456789',\r\n      email: taxcontent.email,\r\n      roles : roles\r\n\r\n    }\r\n\r\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\r\n     getmaster()\r\n  }\r\n  async function getmasterroles()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\r\n  \r\n    \r\n    setMasterroles(response.roles) \r\n\r\n     getmaster(50,0)\r\n  }\r\n  function changeresult(filtercontent)\r\n  {\r\n    setBodycontent(filtercontent)\r\n  }\r\n  async function getmaster(size,offset,searchtext)\r\n  {\r\n   \r\n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\r\n    let adminusers = response.users.rows;\r\n    let users = []\r\n    setTotalcount(response.users.count)\r\n    adminusers.forEach(element => {\r\n      //   let userobj = {}\r\n      //   userobj['id'] = element.id;\r\n      //  // userobj['username'] = element.username;\r\n      //  // userobj['password'] = element.password;\r\n      //   userobj['email'] = element.email;\r\n      //   userobj['mobile'] = element.mobile;\r\n      //   userobj['status'] = element.status === 'Active' ? true : false;\r\n      //   let roles = []\r\n      //   let rolesnames = []\r\n\r\n      //   let userroles = element.user_roles;\r\n      //   userroles.forEach(userroleobj => {\r\n\r\n      //     let roleobj = {}\r\n      //     roleobj['id'] = userroleobj.master_role.id\r\n      //     roleobj['name'] = userroleobj.master_role.name\r\n      //     roles.push(roleobj)\r\n      //     rolesnames.push(userroleobj.master_role.name)\r\n      //   })\r\n      //   userobj['roles'] = roles\r\n      //   userobj['rolenames'] = rolesnames.join(' , ')\r\n        if(element.orders)\r\n        {\r\n          element['orders'] = element.orders.length\r\n        }else{\r\n          element['orders'] = 0\r\n        }\r\n        users.push(element)\r\n    });\r\n\r\n    setFiltervalue(users)\r\n    setMastervalue(users)\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    //setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\r\n  }\r\n  async function changepageoffset(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,offset: taxcontent})\r\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\r\n  }\r\n  async function changepagesize(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,size: taxcontent})\r\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Manageusers;","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { TextField, Grid, Chip } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmarkup(props) {\r\n  console.log(props);\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup, props.refetch);\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value });\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setMarkup({\r\n      ...markup,\r\n      [type]: e.target.value,\r\n    });\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Add Markup Price For {props.material}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"category\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.category}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose category\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"producttype\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.producttype}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose product type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"materiallist\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.materiallist}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose Material type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"puritylist\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.puritylist}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose Purity type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Selling Price Min\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"sellpricemin\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Selling Price Min\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Selling Price Max\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"sellpricemax\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                getOptionLabel={(option) => option.name}\r\n                onChange={handleoptionChange(\"markuptype\")}\r\n                options={[\r\n                  { label: 1, name: \"Flat\" },\r\n                  { label: 2, name: \"Percentage\" },\r\n                ]}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Markup Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Markup Value \"\r\n                onChange={handleinputChange(\"markup\")}\r\n                fullWidth\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport ConformationAlert from \"../../../components/ConformationAlert\";\r\n\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Input, Grid, Card } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { DIAMONDMARKUP, PRODUCTLISTSTATUSEDIT, DELETEMARKUPPRICE, ALLMARKUPPRICE } from \"../../../graphql/query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from \"@material-ui/core\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Moment from \"react-moment\";\r\nimport Addmarkup from \"./Addmarkup\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip, TextField } from \"@material-ui/core\";\r\nimport { BASE_URL } from \"../../../config\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\r\nconst columns = [\r\n  { id: \"Component\", label: \"Components\" },\r\n  { id: \"Product Category\", label: \"product Category\" },\r\n  { id: \"Product Type\", label: \"Product Type\" },\r\n  { id: \"Selling Price Min\", label: \"Selling Price Min\" },\r\n  { id: \"Selling Price Max\", label: \"Selling Price Max\" },\r\n  { id: \"Markup Type\", label: \"Markup Type\" },\r\n  { id: \"Markup value\", label: \"Markup value\" },\r\n\r\n  { id: \"updatedAt\", label: \"updatedAt\" },\r\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\"></IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [editmarkup, setEditmarkup] = React.useState({});\r\n  const [goldpricelist, setGoldpricelist] = React.useState({});\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid, setDeleteid] = React.useState(\"\");\r\n  const [refetch, setRefetch] = React.useState(null);\r\n  const [isdelete, setIsdelete] = React.useState(false);\r\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n    setIsdelete(true);\r\n    let variables = {\r\n      elementId: deleteid,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: DELETEMARKUPPRICE, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n          // refetchval()\r\n        }\r\n      })\r\n      .catch((err) => {});\r\n    setIsconformation(false);\r\n  }\r\n  function handleDelete(diamondData, refetch) {\r\n    setDeleteid(diamondData.id);\r\n\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function updatemarkup(markupcontent, refetch) {\r\n    let product_type = markupcontent.producttype ? markupcontent.producttype :  [];\r\n    let material_list = markupcontent.materiallist ? markupcontent.materiallist : [];\r\n    let purity_list = markupcontent.puritylist ? markupcontent.puritylist : [];\r\n\r\n    var bodydata = {};\r\n    bodydata[\"category\"] = markupcontent.category.name;\r\n    bodydata[\"producttype\"] = product_type;\r\n    bodydata[\"sellingPriceMin\"] = markupcontent.sellpricemin;\r\n    bodydata[\"sellingPriceMax\"] = markupcontent.sellpricemax;\r\n    bodydata[\"markuptype\"] = markupcontent.markuptype.label;\r\n    bodydata[\"material_list\"] = material_list;\r\n    bodydata[\"purity_list\"] = purity_list;\r\n    bodydata[\"markupValue\"] = markupcontent.markup;\r\n    bodydata[\"material\"] = pricecomponent;\r\n    console.log(\"XXXXXXXX\");\r\n     await sendNetworkRequest(\"/addmarkup\", {}, bodydata);\r\n    setOpen(false);\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditmarkup({\r\n      ...editmarkup,\r\n      markupid: diamondData.id,\r\n      sellingPriceMin: diamondData.sellingPriceMin,\r\n      sellingPriceMax: diamondData.sellingPriceMax,\r\n      markupValue: diamondData.markupValue,\r\n      updatedAt: new Date(),\r\n    });\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {};\r\n\r\n    await sendNetworkRequest(\"/updatemarkup\", {}, editmarkup);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditmarkup({ ...editmarkup, [type]: value });\r\n  };\r\n  const handlecomponentChange = (type) => (event, value) => {\r\n    setPriceomponent(value);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setEditmarkup({\r\n      ...editmarkup,\r\n      [type]: e.target.value,\r\n    });\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n  };\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <Card className={classes.cardcontent}>\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"h6\">{\"Selling Price Markup Setup\"}</Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              className={classes.fixedTag}\r\n              defaultValue={pricecomponent}\r\n              disableClearable\r\n              options={[\"Diamond\", \"Gem Stone\", \"Gold\", \"Making Charge\", \"All\"]}\r\n              onChange={handlecomponentChange(\"earringbacking\")}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />)\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Pricing Components\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  // error = {productCtx.error_message.earringbacking}\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              style={{ paddingRight: 16, paddingLeft: 16 }}\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={DIAMONDMARKUP}\r\n                onCompleted={(data) => setPageCount(data.allPricingMarkups.totalCount)}\r\n                variables={{ vendorCode: pricecomponent }}\r\n              >\r\n                {({ data, loading, error, refetch }) => {\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>;\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    setGoldpricelist(data);\r\n                    return (\r\n                      <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          refetch={refetch}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation}\r\n                        />\r\n                        {open ? (\r\n                          <Addmarkup\r\n                            isadd={open}\r\n                            material={pricecomponent}\r\n                            refetch={refetch}\r\n                            actionSave={updatemarkup}\r\n                            category={props.categories}\r\n                            producttype={props.producttypes}\r\n                            materiallist={props.materiallist}\r\n                            puritylist={props.puritylist}\r\n                            title={props.title}\r\n                            actionclose={handleClose}\r\n                          />\r\n                        ) : null}\r\n\r\n                        {data.allPricingMarkups.nodes.map((row, index) => (\r\n                          <>\r\n                            <TableRow key={row.category}>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.material}\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.category}\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.productType ? row.productType.join(' , ') : \"All\"}\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.purities ? row.purities.join(' , ') : \"All\"}\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMin}\r\n                                    onChange={handleinputChange('sellingPriceMin')}\r\n\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                <Typography className={classes.heading}>{row.sellingPriceMin} </Typography>\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMax}\r\n                                    onChange={handleinputChange('sellingPriceMax')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                <Typography className={classes.heading}>{row.sellingPriceMax} </Typography>\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"center\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? (\r\n                                  <Autocomplete\r\n                                    id=\"free-solo-2-demo\"\r\n                                    fullWidth\r\n                                    disableClearable\r\n                                    className={classes.fixedTag}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    onChange={handleoptionChange(\"sellingPriceType\")}\r\n                                    options={[\r\n                                      { label: 1, name: \"Flat\" },\r\n                                      { label: 2, name: \"Percentage\" },\r\n                                    ]}\r\n                                    renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                        <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                    }\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label=\"Price Type\"\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : (\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.markupType === 1 ? \"Flat\" : \"Percentage\"}{\" \"}\r\n                                  </Typography>\r\n                                )}\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"left\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? (\r\n                                  <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value={editmarkup.markupValue}\r\n                                    onChange={handleinputChange(\"markupValue\")}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                  />\r\n                                ) : (\r\n                                  <Typography className={classes.heading}>{row.markupValue} </Typography>\r\n                                )}\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"left\">\r\n                                <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\r\n                                </Moment>\r\n                              </TableCell>\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <TableCell style={{ width: 170 }} align=\"center\">\r\n                                  <Button onClick={(e) => handleSave(row.id, refetch)}>\r\n                                    <SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}>\r\n                                    <CancelIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                              ) : (\r\n                                <TableCell align=\"center\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row, refetch)}>\r\n                                    <DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                              )}\r\n                            </TableRow>\r\n                          </>\r\n                        ))}\r\n                      </>\r\n                    );\r\n                  } else {\r\n                    return <div>{\"Loading...\"}</div>;\r\n                  }\r\n                }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Input} from '@material-ui/core';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [editdiamond,setEditdiamond] = React.useState({})\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n      setEditdiamond({\r\n        ...editdiamond,\r\n        costPrice : diamondData.costPrice,\r\n        sellingPriceType : diamondData.sellingPriceType,\r\n        sellingPrice : diamondData.sellingPrice,\r\n        updatedAt : new Date()\r\n\r\n\r\n      })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n\r\n  }\r\n  function handleSave(id){\r\n    var bodydata = {}\r\n   \r\n\r\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          <Query\r\n              query={DIAMONDPRICELIST}\r\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                 \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <>\r\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                                  <TableRow key={row.diamondClarity}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.diamondClarity}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.diamondColour}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editdiamond.costPrice}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costPrice} </Typography>  }\r\n                                    </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editdiamond.sellingPrice}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.sellingPrice} </Typography>  }\r\n                                    </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?\r\n                                      <TableCell  style = {{width: 20}} align=\"center\">\r\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"center\" style = {{width: 20}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                              ))}\r\n                          </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      }\r\n                  }}\r\n          </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n        </Table> \r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond,setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n      setEditdiamond({\r\n        ...editdiamond,\r\n        costPrice : diamondData.costPrice,\r\n        sellingPriceType : diamondData.sellingPriceType,\r\n        sellingPrice : diamondData.sellingPrice,\r\n        updatedAt : new Date()\r\n\r\n\r\n      })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id){\r\n    var bodydata = {}\r\n   \r\n\r\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <>\r\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                  <TableRow key={row.gemstoneType}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.gemstoneType}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.weightStart}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                                  <TableCell align=\"left\">{row.price}</TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell>\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?\r\n                                      <TableCell  style = {{width: 20}} align=\"center\">\r\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"center\" style = {{width: 20}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                              ))}\r\n                          </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      }\r\n                  }}\r\n          </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n        <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,20,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table> \r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond,setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n      setEditdiamond({\r\n        ...editdiamond,\r\n        costPrice : diamondData.costPrice,\r\n        sellingPriceType : diamondData.sellingPriceType,\r\n        sellingPrice : diamondData.sellingPrice,\r\n        updatedAt : new Date()\r\n\r\n\r\n      })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id){\r\n    var bodydata = {}\r\n   \r\n\r\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          <Query\r\n              query={MAKINGCHARGEPRICELIST}\r\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n               \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <>\r\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                  <TableRow key={row.material}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.material}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.weightStart}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\r\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?\r\n                                      <TableCell  style = {{width: 20}} align=\"center\">\r\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"center\" style = {{width: 20}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                              ))}\r\n                          </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      }\r\n                  }}\r\n          </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n         <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,100,200,500]}\r\n                \r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table> \r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"./components/Product\";\r\nimport Diamonds from \"./components/Diamonds\";\r\nimport Gemstones from \"./components/Gemstones\";\r\nimport Makingcharge from \"./components/Makingcharge\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { VENDORLIST, MASTERCATEGORY, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({}));\r\nexport const Markupprice = withRouter((props) => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n  const [categorylist, setCategorylist] = React.useState([]);\r\n  const [producttypes, setProducttypes] = React.useState([]);\r\n  const [materiallist, setMateriallist] = React.useState([]);\r\n  const [puritylist, setPuritylist] = React.useState([]);\r\n  const [isadd, setIsadd] = React.useState(false);\r\n\r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = (type) => (event, value) => {\r\n    setVendorcode(value.shortCode);\r\n  };\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: {} }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes);\r\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes);\r\n        setMateriallist(fatchvalue.data.allMasterMaterials.nodes);\r\n        setPuritylist(fatchvalue.data.allMasterMetalsPurities.nodes);\r\n        // setVendorlist({\r\n        //   ...vendorlist,\r\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\r\n        // })\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            Vendor Based Price List\r\n          </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      fullWidth\r\n                      disableClearable\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.name}\r\n                      options={vendorlist.vendors}\r\n                      onChange={handlevendorchange('vendor')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Product Materials\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n    </Grid> */}\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <Product\r\n          categories={categorylist}\r\n          producttypes={producttypes}\r\n          materiallist={materiallist}\r\n          puritylist={puritylist}\r\n          vendor={\"Gold\"}\r\n        />\r\n      </Grid>\r\n      {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gem Stone Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gem Stone\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gold Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gold\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Making Charge Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Making Charge\"} />\r\n          </Grid> */}\r\n      {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Diamonds />\r\n    </Grid> */}\r\n\r\n      {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones /> \r\n    </Grid> */}\r\n\r\n      {/* \r\n    <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge />\r\n    </Grid> */}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default withApollo(withRouter(Markupprice));\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterattribute = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  \r\n  async function Masterattribute(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\r\n\r\n    //getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    \r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs></Breadcrumbs>\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterattribute;","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Mastercategories = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    alert(JSON.stringify(taxcontent));\r\n    let response = await sendNetworkRequest(\r\n      \"/managecategories\",\r\n      {},\r\n      taxcontent\r\n    );\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\r\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          prefix={data.prefix}\r\n          title={\"Master Category\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Mastercategories;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastercollections = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastercollections;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdesigns = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DESIGNMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamonds = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\r\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemsettings;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  useEffect(() => {\r\n   \r\n  }, [])\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemtypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemtypes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergenders = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGENDER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergenders;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastermetalcolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n      alert(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastermetalcolors;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masteroccassions = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterorderstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs ></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpaymentstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterproducttypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterproducttypes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpurities = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpurities;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Paper,Button,Grid,Typography, \r\n  FormControlLabel,\r\n  Checkbox,\r\n  Divider} from '@material-ui/core';\r\n\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst   Addpermissions=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n  const [permissions, setPermissions] = React.useState(props.permissions);\r\n\r\n  const handleClose = () => {\r\n    props.onClose()\r\n\r\n  };\r\n  const handleSave = () => {\r\n    //setOpen(false);\r\n    props.onSave(permissions, props.role_id)\r\n\r\n  };\r\n  const updateread = (permission_id,key) => (event) => {\r\n    var permissonobj = {}\r\n\r\n      if(permissions[permission_id])\r\n      {\r\n        permissonobj = permissions[permission_id];\r\n       \r\n      }\r\n      permissonobj[key] = event.target.checked\r\n    setPermissions({...permissions,[permission_id] :permissonobj})\r\n    //setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={props.isopen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          {props.pages.map((pagecontent, index) => (\r\n            <Grid container xs= {12} spacing={3}>\r\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n               <Typography variant=\"h6\" component=\"h5\">\r\n               {pagecontent.displayname}\r\n              </Typography>\r\n              </Grid>\r\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\r\n                     onChange={updateread(pagecontent.id,'isview')}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"View\"\r\n              />\r\n               <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\r\n\r\n                  onChange={updateread(pagecontent.id,'iswrite')}\r\n\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Edit\"\r\n              />\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n          </DialogContentText>\r\n          </DialogContent>\r\n          <Divider />\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\r\n            Update \r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n       \r\n      </>\r\n  );\r\n}\r\nexport default withApollo(Addpermissions);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport Addpermissions from '../../components/Addpermissions/Addpermissions';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterroles = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false)\r\n  const [masterpages, setMasterpages] = React.useState([])\r\n  const [editroleid, setEditroleid] = React.useState('')\r\n  const [editpermissons, setEditpermissions] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n\r\n    let response =  await sendNetworkRequest('/manageroles', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMasterpages(fatchvalue.data.allUniquepages.nodes)\r\n      })\r\n      .catch(console.error)\r\n\r\n\r\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\r\n    setMastervalue(response.roles)\r\n    setFiltervalue(response.roles)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  async function showpermissions(rowcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/getrolepermissions', {}, {role_id: rowcontent.id})\r\n    setEditpermissions(response.permissions)\r\n    setEditroleid(rowcontent.id)\r\n    setIsshowpermissions(true)\r\n   // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function updatepermissions(rowcontent)\r\n  {\r\n    let bodydata = {\r\n      permissions: rowcontent,\r\n      role_id : editroleid\r\n    }\r\n    console.log(JSON.stringify(bodydata))\r\n    setIsshowpermissions(false)\r\n    let response =  await sendNetworkRequest('/managepermissions', {}, bodydata)\r\n     getmaster()\r\n\r\n    \r\n  }\r\n  function cancelpermissions(rowcontent)\r\n  {\r\n    setIsshowpermissions(false)\r\n   // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n       <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {isshowpermissions ? <Addpermissions role_id={editroleid} isopen={isshowpermissions} permissions={editpermissons} pages={masterpages} onClose={cancelpermissions} onSave={updatepermissions} /> : null}\r\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onPermissionadd={showpermissions} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterroles;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterscreens = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  \r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managepages', {}, taxcontent)\r\n    getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allUniquepages.nodes)\r\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Master Screens\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns}  values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterscreens;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstonecolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstoneshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\r\n    };\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstoneshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstyles = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: STYLEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstyles;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterthemes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: THEMEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterweights = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterweights;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Materialmaster = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIAL  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Materialmaster;","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  InputAdornment,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ORDERS } from \"./../../services/queries\";\r\nimport { PAYMENTSTATUSMASTER } from \"./../../graphql/query\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport moment from \"moment\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport { gql } from \"apollo-boost\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport ViewColumnIcon from \"@material-ui/icons/ViewColumn\";\r\n\r\nlet getAddress = (data) => {\r\n  if (!data) return \"\";\r\n  return (\r\n    data?.addressline1 +\r\n    \",\" +\r\n    data?.addressline2 +\r\n    \",\" +\r\n    data?.city +\r\n    \",\" +\r\n    data?.state +\r\n    \",\" +\r\n    data?.pincode\r\n  );\r\n};\r\n\r\nlet getGiftMessage = (data) => {\r\n  if (!data) return \"\";\r\n  return data?.message + \"  from:\" + data?.giftFrom + \"  to:\" + data?.giftTo;\r\n};\r\n\r\nlet getPaymentStatus = (data) => {\r\n  if (data?.paymentMode === \"COD\") {\r\n    return data.paymentStatus;\r\n  }\r\n  if (!data?.paymentResponse) return data.paymentStatus;\r\n  let payment_response = JSON.parse(data?.paymentResponse);\r\n  return (\r\n    <div>\r\n      <p style={{ margin: 0, padding: 0 }}>\r\n        {payment_response?.APTRANSACTIONID}\r\n      </p>\r\n      <p style={{ margin: 0, padding: 0 }}>\r\n        {payment_response?.MESSAGE ||\r\n          payment_response?.TRANSACTIONPAYMENTSTATUS}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet defaultColumns = {\r\n  \"Order ID\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"id\",\r\n  },\r\n  \"Order Date\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"order_date\",\r\n  },\r\n  \"Customer Name\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"customer_name\",\r\n  },\r\n  SKUs: { is_active: false, identifier: \"SKUs\" },\r\n  Email: { is_active: true, identifier: \"email\" },\r\n  \"Phone Number\": { is_active: true, identifier: \"phone_number\" },\r\n  \"Shipping Address\": { is_active: true, identifier: \"shipping_address\" },\r\n  \"Gift Message\": { is_active: false, identifier: \"gift_message\" },\r\n  \"Order Status\": { is_active: false, identifier: \"order_status\" },\r\n  \"Payment Mode\": { is_active: true, identifier: \"payment_mode\" },\r\n  \"Payment Status\": { is_active: true, identifier: \"payment_status\" },\r\n  \"Waybill No\": { is_active: false, identifier: \"waybill\" },\r\n  Comments: { is_active: false, identifier: \"comments\" },\r\n \r\n  Actions: {\r\n    is_active: true,\r\n    is_default: true,\r\n  },\r\n};\r\n\r\nconst ActionIcon = (props) => {\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => {\r\n          window.open(`orderdetails/${props.id}`);\r\n        }}\r\n      >\r\n        <VisibilityIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nlet filterData = {};\r\n\r\nexport const OrderList = withRouter((props) => {\r\n  let user_id = props.location.pathname.split(\"/\")[2];\r\n  if (user_id) {\r\n    filterData = {\r\n      userProfileId: {\r\n        equalTo: user_id,\r\n      },\r\n    };\r\n  }\r\n  const [columnName, setColumnName] = React.useState(defaultColumns);\r\n  const [orderFilter, setOrderFilter] = React.useState({\r\n    ...filterData,\r\n    id: { isNull: false },\r\n  });\r\n  const [orderBy, setOrderBy] = React.useState([\"CREATED_AT_DESC\"]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [masterData, setMasterData] = React.useState({\r\n    orderMaster: [],\r\n    paymentMaster: [\r\n      { name: \"SUCCESS\" },\r\n      { name: \"FAIL\" },\r\n      { name: \"TRANSACTION CANCELLED\" },\r\n    ],\r\n  });\r\n  const [selectedStatus, setSelectedStatus] = React.useState({\r\n    orderStatus: \"\",\r\n    paymentStatus: \"\",\r\n  });\r\n  const [fromDate, setFromDate] = React.useState(null);\r\n  const [ToDate, setToDate] = React.useState(null);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDateChange = (date, value) => {\r\n    let createdAt = orderFilter?.createdAt;\r\n    if (value === \"from\") {\r\n      setFromDate(date);\r\n      setOrderFilter({\r\n        ...orderFilter,\r\n        createdAt: {\r\n          ...createdAt,\r\n          greaterThanOrEqualTo: moment(date).format(\"yyyy-MM-DD\"),\r\n        },\r\n      });\r\n    }\r\n    if (value === \"to\") {\r\n      if (date > fromDate) {\r\n        setToDate(date);\r\n        setOrderFilter({\r\n          ...orderFilter,\r\n          createdAt: {\r\n            ...createdAt,\r\n            lessThanOrEqualTo: moment(date).format(\"yyyy-MM-DD\"),\r\n          },\r\n        });\r\n      } else alert(\"the To date must be higher thean from\");\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  React.useEffect(() => {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          ${PAYMENTSTATUSMASTER}\r\n        `,\r\n      })\r\n      .then(({ data: { allOrderStatusMasters, allPaymentStatusMasters } }) => {\r\n        setMasterData({\r\n          orderMaster: allOrderStatusMasters?.nodes || [],\r\n          paymentMaster: [\r\n            ...masterData.paymentMaster,\r\n            ...allPaymentStatusMasters?.nodes,\r\n          ],\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const { loading, data, error, networkStatus } = useQuery(ORDERS, {\r\n    variables: {\r\n      limit: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      order_filter: { ...orderFilter },\r\n      order_by: orderBy,\r\n    },\r\n  });\r\n\r\n  let rowData = data?.allOrders?.nodes;\r\n  if (rowData) {\r\n    rowData = rowData.map((item) => {\r\n      return {\r\n        id: item.id,\r\n        order_date: moment(item?.createdAt).format(\"DD MMM YYYY HH:mm:ss\"),\r\n        SKUs: item?.shoppingCartByCartId?.shoppingCartItemsByShoppingCartId?.nodes\r\n          .map((i) => i?.transSkuListByProductSku?.generatedSku)\r\n          .join(\", \"),\r\n        customer_name:\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n            ?.firstname,\r\n        email: item?.shoppingCartByCartId?.userProfileByUserprofileId?.email,\r\n        phone_number:\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n            ?.contactNumber,\r\n        shipping_address: getAddress(\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n        ),\r\n        gift_message: getGiftMessage(item?.shoppingCartByCartId?.nodes?.[0]),\r\n        payment_mode: item?.paymentMode,\r\n        order_status: item?.orderStatus,\r\n        payment_status: getPaymentStatus({\r\n          paymentMode: item?.paymentMode,\r\n          paymentResponse:\r\n            item?.paymentDetailsByOrderId?.nodes?.[0]?.paymentResponse,\r\n        }),\r\n        emailMessageId: item?.emailMessageId,\r\n        smsDeliveredId: item?.smsDeliveredId?.replace(\"otp-nacjotp-\", \"\"),\r\n        waybill: item?.awbNumber,\r\n        comments: item?.comments,\r\n      };\r\n    });\r\n  }\r\n  let colSpan = Object.keys(columnName).filter(\r\n    (item) => columnName[item].is_active\r\n  ).length;\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Orders</Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Grid container item xs={3}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            placeholder=\"Search by name, email, phone\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(event) => {\r\n              setOrderFilter({\r\n                shoppingCartByCartId: {\r\n                  or: [\r\n                    {\r\n                      userProfileByUserprofileId: {\r\n                        email: { includesInsensitive: event.target.value },\r\n                      },\r\n                    },\r\n                    {\r\n                      cartAddressesByCartId: {\r\n                        some: {\r\n                          or: [\r\n                            {\r\n                              firstname: {\r\n                                includesInsensitive: event.target.value,\r\n                              },\r\n                            },\r\n                            {\r\n                              contactNumber: {\r\n                                includesInsensitive: event.target.value,\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              });\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={selectedStatus?.orderStatus}\r\n            onChange={(event) => {\r\n              setSelectedStatus({\r\n                ...selectedStatus,\r\n                orderStatus: event.target.value,\r\n              });\r\n              setOrderFilter({\r\n                ...orderFilter,\r\n                orderStatus: { includesInsensitive: event.target.value },\r\n              });\r\n            }}\r\n            select\r\n            label=\"Order Status\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n                  {selectedStatus?.orderStatus !== \"\" && (\r\n                    <CancelOutlinedIcon\r\n                      onClick={(event) => {\r\n                        setSelectedStatus({\r\n                          ...selectedStatus,\r\n                          orderStatus: \"\",\r\n                        });\r\n                        delete orderFilter.orderStatus;\r\n                        setOrderFilter({ ...orderFilter });\r\n                      }}\r\n                    />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          >\r\n            {masterData.orderMaster.map((option, index) => (\r\n              <MenuItem key={index} value={option.name}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={selectedStatus?.paymentStatus}\r\n            onChange={(event) => {\r\n              setSelectedStatus({\r\n                ...selectedStatus,\r\n                paymentStatus: event.target.value,\r\n              });\r\n              setOrderFilter({\r\n                ...orderFilter,\r\n                paymentDetailsByOrderId: {\r\n                  some: {\r\n                    paymentResponse: {\r\n                      includesInsensitive: event.target.value,\r\n                    },\r\n                  },\r\n                },\r\n              });\r\n            }}\r\n            select\r\n            label=\"Payment Status\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n                  {selectedStatus?.paymentStatus !== \"\" && (\r\n                    <CancelOutlinedIcon\r\n                      onClick={(event) => {\r\n                        setSelectedStatus({\r\n                          ...selectedStatus,\r\n                          paymentStatus: \"\",\r\n                        });\r\n                        delete orderFilter.paymentDetailsByOrderId;\r\n                        setOrderFilter({ ...orderFilter });\r\n                      }}\r\n                    />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          >\r\n            {masterData.paymentMaster.map((option, index) => (\r\n              <MenuItem key={index} value={option.name}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"normal\"\r\n              label=\"From\"\r\n              value={fromDate}\r\n              style={{ marginTop: 0 }}\r\n              onChange={(date) => handleDateChange(date, \"from\")}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"normal\"\r\n              label=\"To\"\r\n              value={ToDate}\r\n              disableFuture={true}\r\n              style={{ marginTop: 0 }}\r\n              onChange={(date) => handleDateChange(date, \"to\")}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={1}>\r\n          <IconButton onClick={handleClick}>\r\n            <ViewColumnIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"long-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={open}\r\n            onClose={handleClose}\r\n            PaperProps={{\r\n              style: {\r\n                height:\r\n                  Object.keys(columnName).filter((item) => !item?.is_default)\r\n                    .length * 20,\r\n                width: \"50ch\",\r\n              },\r\n            }}\r\n          >\r\n            <Grid container style={{ padding: 10 }}>\r\n              {Object.keys(columnName).map(\r\n                (item) =>\r\n                  !columnName[item]?.is_default && (\r\n                    <Grid item xs={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            name={item}\r\n                            color=\"primary\"\r\n                            checked={columnName[item].is_active}\r\n                            onClick={(_) => {\r\n                              columnName[item].is_active =\r\n                                !columnName[item].is_active;\r\n                              setColumnName({ ...columnName });\r\n                            }}\r\n                          />\r\n                        }\r\n                        label={item}\r\n                      />\r\n                    </Grid>\r\n                  )\r\n              )}\r\n            </Grid>\r\n          </Menu>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {Object.keys(columnName).map(\r\n                  (item) =>\r\n                    columnName[item].is_active && (\r\n                      <TableCell key={item} align={\"center\"}>\r\n                        {item}\r\n                      </TableCell>\r\n                    )\r\n                )}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {rowData &&\r\n                rowData.length > 0 &&\r\n                rowData.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    {Object.keys(columnName).map(\r\n                      (column) =>\r\n                        columnName[column].is_active && (\r\n                          <TableCell key={column} align={\"center\"}>\r\n                            {column !== \"Actions\" &&\r\n                              item[columnName[column]?.identifier]}\r\n                            {column === \"Actions\" && (\r\n                              <ActionIcon id={item.id} />\r\n                            )}\r\n                          </TableCell>\r\n                        )\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n              {rowData && rowData.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"}>\r\n                    <Typography>No Orders found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={colSpan}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allOrders?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  onPageChange={() => {}}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\nexport default OrderList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  toolbar: {\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  deleteButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.red[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.red[900]\r\n    }\r\n  },\r\n  deleteIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Header = props => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Orders\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Order #{order.id}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          {/* <Button\r\n            className={classes.deleteButton}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.deleteIcon} />\r\n            Delete\r\n          </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nimport {\r\n  PAYMENTSTATUSMASTER,\r\n  GETORDERCOMMUNICATIONLOGS,\r\n} from \"../../../../graphql/query\";\r\nimport { UPDATE_ORDER } from \"../../../../graphql/mutation\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst OrderInfo = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const [paymentstatus, setPaymentstatus] = useState([]);\r\n  const [orderstatus, setOrderstatus] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [updateOrder, setUpdateOrder] = useState({\r\n    waybillNum: null,\r\n    paymentStatus: null,\r\n    orderStatus: null,\r\n    comments: null,\r\n  });\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n  const handleChange = (event) => {\r\n    setUpdateOrder({ ...updateOrder, [event.target.name]: event.target.value });\r\n    if (updateOrder?.comments?.length > 0) {\r\n      setErrorMsg(\"\");\r\n    }\r\n  };\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\r\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\r\n\r\n        setUpdateOrder({\r\n          waybillNum: order?.awb_number ?? null,\r\n          paymentStatus: order?.payment_status ?? null,\r\n          orderStatus: order?.order_status ?? null,\r\n          comments: order?.comments ?? null,\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  const getOrderCommunicationLogs = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETORDERCOMMUNICATIONLOGS,\r\n\r\n        variables: {\r\n          id: order?.id,\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.orderById?.communicationLogsByOrderId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  React.useEffect(() => {\r\n    getmaster();\r\n    getOrderCommunicationLogs();\r\n  }, []);\r\n\r\n  const sendEmail = (order_id, type) => {\r\n    const url = API_URL + \"/trigger_mail\";\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ order_id: order_id, type: type }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Mail Send Successfully!\",\r\n        });\r\n        console.log(fatchvalue);\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n  const handleSubmit = () => {\r\n    if (updateOrder?.comments?.length > 0) {\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_ORDER,\r\n          variables: {\r\n            id: order?.id,\r\n            awbNumber: updateOrder?.waybillNum ?? \"\",\r\n            comments: updateOrder?.comments ?? \"\",\r\n            orderStatus: updateOrder?.orderStatus,\r\n            paymentStatus: updateOrder?.paymentStatus,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    } else {\r\n      setErrorMsg(\"Enter Comments\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"Order info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Customer</TableCell>\r\n              <TableCell>\r\n                <Link\r\n                  target=\"_blank\"\r\n                  component={RouterLink}\r\n                  to={`/customerdetails/${order.user_profile.id}`}\r\n                >\r\n                  {order.user_profile.first_name} {order.user_profile.last_name}\r\n                </Link>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline1\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline2\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].city\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].state\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].country\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email ID</TableCell>\r\n              <TableCell>{order.user_profile.email}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Mobile Number</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.cart_addresses\r\n                    ? order.shopping_cart.cart_addresses.length > 0\r\n                      ? order.shopping_cart.cart_addresses[0].contact_number\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>\r\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Amount</TableCell>\r\n              <TableCell>\r\n                {order.currency}\r\n                {order?.shopping_cart?.discounted_price}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Waybil Number</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"waybillNum\"\r\n                  placeholder=\"Waybill Number\"\r\n                  onChange={handleChange}\r\n                  value={updateOrder.waybillNum}\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Gift Message</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.giftwraps\r\n                    ? order.shopping_cart.giftwraps.length > 0\r\n                      ? order.shopping_cart.giftwraps[0].message\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Mode</TableCell>\r\n              <TableCell>{order.payment_mode}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"paymentStatus\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  SelectProps={{ native: true }}\r\n                  value={updateOrder.paymentStatus}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {paymentstatus.map((option) => (\r\n                    <option key={option.name} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Order Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"orderStatus\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  SelectProps={{ native: true }}\r\n                  value={updateOrder.orderStatus}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {orderstatus.map((option) => (\r\n                    <option key={option.id} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Comments</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"comments\"\r\n                  placeholder=\"Comments\"\r\n                  onChange={handleChange}\r\n                  value={updateOrder.comments}\r\n                  variant=\"outlined\"\r\n                />\r\n                <span style={{ color: \"red\" }}>{errorMsg}</span>\r\n              </TableCell>\r\n            </TableRow>\r\n            {/* <TableRow>\r\n              <TableCell>Communication Logs :</TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow> */}\r\n            {/* {communicationLogs.map((val) => (\r\n              <TableRow>\r\n                <TableCell>{val?.type ?? \"\"}</TableCell>\r\n                <TableCell>{val?.senderResponseId ?? \"\"}</TableCell>\r\n              </TableRow>\r\n            ))} */}\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Grid>\r\n          {updateOrder.paymentStatus === \"Paid\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"order\")}\r\n              >\r\n                Order Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"payment\")}\r\n              >\r\n                Payment Confirmation Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" &&\r\n          updateOrder.orderStatus === \"Shipped\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"shipping\")}\r\n              >\r\n                Shipping Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" &&\r\n          updateOrder.orderStatus === \"Delivered\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"shipping\")}\r\n              >\r\n                Shipping Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"rate\")}\r\n              >\r\n                Rate Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"4px 0px\" }}\r\n            onClick={handleSubmit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderInfo.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderInfo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nconst OrderItems = (props) => {\r\n  const { order, className, productDetails, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"Order items\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Sku</TableCell>\r\n                  <TableCell>Product Name</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell>Amount</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {order?.shopping_cart?.shopping_cart_items.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>{item.product_sku}</TableCell>\r\n                    <TableCell>\r\n                      {/* <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" /> */}\r\n                      {\r\n                        productDetails.filter(\r\n                          (i) => i.generated_sku === item.product_sku\r\n                        )?.[0]?.product_list?.product_name\r\n                      }\r\n                    </TableCell>\r\n                    <TableCell>{item.qty}</TableCell>\r\n                    <TableCell>{item.price}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderItems.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderItems;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\nimport { BASE_IMAGE_URL } from \"../../../../config\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inner_card: {\r\n    padding: \"10px\",\r\n    marginBottom: \"16px\",\r\n  },\r\n  image_container: {\r\n    padding: \"16px\",\r\n  },\r\n  product_image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n  },\r\n  text_heading: {\r\n    // fontWeight: \"400\",\r\n    margin: \"8px 0px\",\r\n  },\r\n  text_content: {\r\n    margin: \"8px 0px\",\r\n  },\r\n  final_total_text: {\r\n    textAlign: \"right\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  voucher_code: {\r\n    textAlign: \"right\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"normal\",\r\n  },\r\n}));\r\nconst OrderDetails = (props) => {\r\n  const { order, className, productDetails, ...rest } = props;\r\n\r\n  console.log(order, \"samir\");\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ marginTop: 30 }}>\r\n      <Card>\r\n        <CardHeader title=\"Order Details\" />\r\n        <Divider />\r\n\r\n        <CardContent>\r\n          {order?.shopping_cart?.shopping_cart_items?.map((item) => (\r\n            <Card key={item.id} className={classes.inner_card}>\r\n              <Grid container xs={12}>\r\n                {/*-------------------------------- Image part-------------------------------- */}\r\n                <Grid\r\n                  container\r\n                  xs={12}\r\n                  md={3}\r\n                  className={classes.image_container}\r\n                >\r\n                  <img\r\n                    src={`${BASE_IMAGE_URL}${\r\n                      productDetails.filter(\r\n                        (i) => i.generated_sku === item.product_sku\r\n                      )?.[0]?.product_list?.product_images?.[0]?.image_url\r\n                    }`.replace(\r\n                      `product/${item.trans_sku_list.product_id}`,\r\n                      `product/${item.trans_sku_list.product_id}/500X500`\r\n                    )}\r\n                    alt=\"Product Image\"\r\n                    className={classes.product_image}\r\n                  />\r\n                </Grid>\r\n                <Grid container xs={12} md={9}>\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Product Code</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.product_sku}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Metal</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p\r\n                        className={classes.text_content}\r\n                      >{`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}</p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.sku_weight}\r\n                      </p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Diamond Quality</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.diamond_type}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>\r\n                        Diamond Weight (Ct)\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> ? </p>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {/* ----------------------------------------------------------------- */}\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Quantity</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> {item.qty} </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Saved</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(\r\n                          item.trans_sku_list.discount_price -\r\n                            item.trans_sku_list.markup_price\r\n                        )} (${\r\n                          item.trans_sku_list.discount === null\r\n                            ? \"0\"\r\n                            : item.trans_sku_list.discount\r\n                        }%off)`}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Shipping</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> Free </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Grand Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>{`₹${Math.round(\r\n                        item.trans_sku_list.markup_price\r\n                      )}`}</p>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          ))}\r\n          <Grid>\r\n            <Grid container justifyContent=\"flex-end\" alignItems=\"center\">\r\n              <Grid item>\r\n                <p className={classes.final_total_text}>Gross Total - &nbsp;</p>\r\n                {order?.shopping_cart?.discount > 0 && (\r\n                  <p className={classes.final_total_text}>\r\n                    Voucher Discount &nbsp;\r\n                    <span className={classes.voucher_code}>\r\n                      ({order?.shopping_cart?.voucher_code})\r\n                    </span>{\" \"}\r\n                    - &nbsp;\r\n                  </p>\r\n                )}\r\n\r\n                <p className={classes.final_total_text}>Final Total - &nbsp;</p>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <p className={classes.final_total_text}>\r\n                  {Math.round(order?.shopping_cart?.gross_amount)}&#8377; &nbsp;\r\n                </p>\r\n                {order?.shopping_cart?.discount > 0 && (\r\n                  <p className={classes.final_total_text}>\r\n                    {Math.round(order?.shopping_cart?.discount)}&#8377; &nbsp;\r\n                  </p>\r\n                )}\r\n\r\n                <p className={classes.final_total_text}>\r\n                  {Math.round(order?.shopping_cart?.discounted_price)}&#8377;\r\n                  &nbsp;\r\n                </p>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default OrderDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  TableHead,\r\n  Typography,\r\n  Tooltip,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport moment from \"moment\";\r\nimport Page from \"../../components/Page\";\r\nimport { Header, OrderInfo, OrderItems } from \"./components\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { GETORDERCOMMUNICATIONLOGS } from \"../../graphql/query\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport SyncIcon from \"@material-ui/icons/Sync\";\r\nimport { AlertContext } from \"../../context\";\r\n\r\nlet CHMOD = {\r\n  pg: \"Payment Gateway\",\r\n  nb: \"Netbanking \",\r\n  ppc: \"Prepaid Cards / Wallets\",\r\n  cash: \"Cash \",\r\n  onclick: \"Onclick\",\r\n  emi: \"Emi\",\r\n  wallet: \"Merchant Wallet\",\r\n  pos: \"Pos\",\r\n  rtgs: \"RTGS\",\r\n  payltr: \"Paylater\",\r\n  upi: \"UPI\",\r\n  va: \"Virtual Account\",\r\n  aloan: \"Airloan \",\r\n  btqr: \"Bharat QR \",\r\n};\r\n\r\nlet currency_code = {\r\n  356: \"₹\",\r\n};\r\n\r\nlet transaction_type = {\r\n  200: \"Success\",\r\n  211: \"Transaction in Process\",\r\n  310: \"Auth\",\r\n  320: \"Sale\",\r\n  330: \"Capture\",\r\n  340: \"Refund\",\r\n  350: \"Chargeback\",\r\n  360: \"Reversal\",\r\n  370: \"SaleComplete\",\r\n  380: \"SaleAdjust\",\r\n  390: \"TipAdjust\",\r\n  400: \"Failed\",\r\n  401: \"Dropped\",\r\n  402: \"Cancel\",\r\n  403: \"Incomplete\",\r\n  405: \"Bounced\",\r\n  503: \"No Records\",\r\n  410: \"Cashback\",\r\n  420: \"Void\",\r\n  430: \"Release\",\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const OrderManagementDetails = withRouter((props) => {\r\n  const classes = useStyles();\r\n\r\n  var order_id = props.location.pathname.split(\"/\")[2];\r\n\r\n  const [order, setOrder] = useState(null);\r\n  const [productDetails, setProductDetails] = useState([]);\r\n  const [paymentHistory, setPaymentHistory] = useState([]);\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n\r\n  const paymentHeaders = [\r\n    \"TRANSACTIONPAYMENTSTATUS\",\r\n    \"mercid\",\r\n    \"TRANSACTIONID\",\r\n    \"APTRANSACTIONID\",\r\n    \"CHMOD\",\r\n    \"CURRENCYCODE\",\r\n    \"AMOUNT\",\r\n    \"TRANSACTIONSTATUS\",\r\n    \"MESSAGE\",\r\n    \"TRANSACTIONTIME\",\r\n  ];\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  async function fetchorderdetails(order_id) {\r\n    let response = await sendNetworkRequest(\r\n      \"/getorderdetails\",\r\n      {},\r\n      { order_id }\r\n    );\r\n    setOrder(response.orders);\r\n    setProductDetails(response.product_detail);\r\n  }\r\n\r\n  const client = useApolloClient();\r\n\r\n  const loadPaymentAndCommunicationLogs = (order_id) => {\r\n    client\r\n      .query({\r\n        query: GETORDERCOMMUNICATIONLOGS,\r\n        variables: { id: order_id },\r\n      })\r\n      .then(({ data }) => {\r\n        let { payment_details, communication_logs } = data.order;\r\n        setPaymentHistory(\r\n          payment_details.nodes.map((item) => {\r\n            return {\r\n              id: item.id,\r\n              paymentResponse: JSON.parse(item.paymentResponse),\r\n            };\r\n          })\r\n        );\r\n        setCommunicationLogs(communication_logs.nodes);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    fetchorderdetails(order_id);\r\n    loadPaymentAndCommunicationLogs(order_id);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  const getValue = ({ type, paymentResponse }) => {\r\n    switch (type) {\r\n      case \"CHMOD\":\r\n        return CHMOD[paymentResponse[type]];\r\n      case \"CURRENCYCODE\":\r\n        return currency_code[paymentResponse[type]];\r\n      case \"TRANSACTIONSTATUS\":\r\n        return transaction_type[paymentResponse[type]];\r\n      default:\r\n        return paymentResponse[type];\r\n    }\r\n  };\r\n\r\n  const syncPaymentDetails = () => {\r\n    sendNetworkRequest(\"/verify_payment\", {}, { order_id })\r\n      .then((res) => {\r\n        if (res?.message) {\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"warning\",\r\n            msg: res?.message,\r\n          });\r\n        } else {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Updated Successfully!\",\r\n          });\r\n          loadPaymentAndCommunicationLogs();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: err?.message || \"Something went wrong, Please try later!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Order Management Details\">\r\n      <Header order={order} />\r\n      <Grid className={classes.container} container spacing={3}>\r\n        <Grid item md={4} xl={3} xs={12}>\r\n          <OrderInfo order={order} />\r\n        </Grid>\r\n        <Grid item md={8} xl={9} xs={12}>\r\n          <OrderItems order={order} productDetails={productDetails} />\r\n          <OrderDetails\r\n            order={order}\r\n            productDetails={productDetails}\r\n            style={{ marginTop: 30 }}\r\n          />\r\n          <Grid container xs={12} style={{ marginTop: \"10px\" }}>\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardHeader\r\n                  title={\"Payment History\"}\r\n                  action={\r\n                    <IconButton\r\n                      aria-label=\"sync-payment-history\"\r\n                      onClick={() => {\r\n                        syncPaymentDetails();\r\n                      }}\r\n                    >\r\n                      <Tooltip title=\"Sync's latest payment details\">\r\n                        <SyncIcon />\r\n                      </Tooltip>\r\n                    </IconButton>\r\n                  }\r\n                />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  {paymentHistory.length > 0 && (\r\n                    <Table>\r\n                      <TableHead>\r\n                        {paymentHeaders.map((item, index) => (\r\n                          <TableCell key={index} align=\"center\">\r\n                            {item.toUpperCase()}\r\n                          </TableCell>\r\n                        ))}\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {paymentHistory.map((item) => (\r\n                          <Tooltip\r\n                            title={\r\n                              <pre>\r\n                                {JSON.stringify(item.paymentResponse, null, 2)}\r\n                              </pre>\r\n                            }\r\n                            arrow\r\n                            placement=\"left\"\r\n                          >\r\n                            <TableRow key={item.id}>\r\n                              {paymentHeaders.map((i, index) => (\r\n                                <TableCell key={index} align=\"center\">\r\n                                  {getValue({ type: i, ...item })}\r\n                                </TableCell>\r\n                              ))}\r\n                            </TableRow>\r\n                          </Tooltip>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  )}\r\n                  {paymentHistory.length == 0 && (\r\n                    <Typography variant=\"caption\">\r\n                      No Payment Details found\r\n                    </Typography>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container xs={12} style={{ marginTop: \"10px\" }}>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Email Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.type === \"email\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId}</TableCell>\r\n                              <TableCell>{val.type}</TableCell>\r\n                              <TableCell>{val.messageType}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Message Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.type === \"sms\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId}</TableCell>\r\n                              <TableCell>{val.type}</TableCell>\r\n                              <TableCell>{val.messageType}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Page>\r\n  );\r\n});\r\n\r\nexport default OrderManagementDetails;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { NetworkContext } from '../../../../context/NetworkContext';\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    overflowX: \"auto\"\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [status, setStatus] = useState({});\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  function handleAdd(e) {\r\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\r\n\r\n    props.update(e)\r\n  }\r\n  function handleupdate(e) {\r\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\r\n\r\n    props.resumeupdate(e)\r\n  }\r\n  \r\n\r\n  function handledownload(e) {\r\n    props.downloadlog()\r\n  }\r\n async function handlestatus(e) {\r\n   let bodydata = {\r\n    \"component\":e.label\r\n   }\r\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\r\n\r\n    setStatus({...status, [e.id]: response.message})\r\n  }\r\n  async function getpricestatus(component)\r\n  {\r\n\r\n  }\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card style={{marginTop : 16}}>\r\n        \r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Components</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Action</TableCell>\r\n\r\n                    <TableCell align=\"center\">Status</TableCell>\r\n                    <TableCell align=\"center\">Restart</TableCell>\r\n\r\n                    <TableCell align=\"center\">Log</TableCell>\r\n\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.pricingrows.map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.id}</TableCell>\r\n                      <TableCell align=\"center\">  \r\n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\r\n                          ₹ Run\r\n                        </Button>\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                        {status[order.id] ? status[order.id] : \"\"}\r\n                        \r\n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\r\n                          <RefreshIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\r\n                        Re Run\r\n\r\n                      </Button>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\r\n                        Download\r\n                      </Button>\r\n                      </TableCell>\r\n                     \r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          \r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  TextField,\r\n  Chip,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n\r\n    cursor: \"pointer\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n    cursor: \"pointer\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  cardcontent: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  optionRadio: {\r\n    margin: -10,\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst AboutVoucher = (props) => {\r\n  const { className, ...rest } = props;\r\n\r\n  const [productids] = useState(props.productids);\r\n\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleproducttypechange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.name);\r\n    });\r\n    setFormData({ ...formData, producttypes: vendorsarray });\r\n    props.apply(\r\n      formData.vendorid,\r\n      formData.categories,\r\n      vendorsarray,\r\n      formData.material,\r\n      formData.purity\r\n    );\r\n  };\r\n  const handlecategorychange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.name);\r\n    });\r\n    setFormData({ ...formData, categories: vendorsarray });\r\n\r\n    props.apply(\r\n      formData.vendorid,\r\n      vendorsarray,\r\n      formData.producttypes,\r\n      formData.material,\r\n      formData.purity\r\n    );\r\n  };\r\n  const hangeoptionchange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.shortCode);\r\n    });\r\n    setFormData({ ...formData, vendorid: vendorsarray });\r\n\r\n    props.apply(\r\n      vendorsarray,\r\n      formData.categories,\r\n      formData.producttypes,\r\n      formData.material,\r\n      formData.purity\r\n    );\r\n  };\r\n\r\n  const handlematerialtypechange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.name);\r\n    });\r\n    setFormData({ ...formData, material: vendorsarray });\r\n\r\n    props.apply(\r\n      formData.vendorid,\r\n      formData.categories,\r\n      formData.producttypes,\r\n      vendorsarray,\r\n      formData.purity\r\n    );\r\n  };\r\n  const handlepuritytypechange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element);\r\n    });\r\n    setFormData({ ...formData, purity: vendorsarray });\r\n\r\n    props.apply(\r\n      formData.vendorid,\r\n      formData.categories,\r\n      formData.producttypes,\r\n      formData.material,\r\n      vendorsarray\r\n    );\r\n  };\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6} sm={6}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.vendorlist ?? []}\r\n              getOptionLabel={(option) => option.display}\r\n              fullWidth\r\n              onChange={hangeoptionchange(\"vendorcode\")}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Vendor\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={6}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.categorylist ?? []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handlecategorychange(\"category\")}\r\n              fullWidth\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Product Category\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={6}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.producttypelist ?? []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handleproducttypechange(\"product_type\")}\r\n              fullWidth\r\n              margin=\"dense\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Product Type\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={6}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.material ?? []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handlematerialtypechange(\"material\")}\r\n              fullWidth\r\n              margin=\"dense\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Material Type\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={6}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.puritylist ?? []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handlepuritytypechange(\"puritylist\")}\r\n              fullWidth\r\n              margin=\"dense\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Purity Type\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              fullWidth\r\n              disabled={props.isdisabled}\r\n              className={classes.fixedTag}\r\n              value={props.productids}\r\n              options={productids ?? []}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label={\r\n                    props.productids.length > 0\r\n                      ? \"Products (\" + props.productids.length + \") \"\r\n                      : \"Products\"\r\n                  }\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    width: 100,\r\n    paddingLeft: 25,\r\n  },\r\n}));\r\nfunction FullLoader(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <Dialog open={props.isopen} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <div className={classes.loader}>\r\n          <CircularProgress />\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\nexport default FullLoader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Button, Link } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Page from \"../../components/Page\";\r\nimport { Results, AboutVoucher } from \"./components\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport FullLoader from \"../../components/Loader\";\r\nconst rows = [\r\n  { id: \"Diamond\", label: \"Diamond\" },\r\n  { id: \"Gemstone\", label: \"Gemstone\" },\r\n  { id: \"Metal & Making Charge\", label: \"Gold\" },\r\n  { id: \"Markup & Discount price update\", label: \"updateskuprice\" },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PriceupdateContent(props) {\r\n  const classes = useStyles();\r\n\r\n  const [masters, setMasters] = useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [, setSizes] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [, setCategories] = useState([]);\r\n  const [, setVendors] = useState([]);\r\n  const [startrun, setStartrun] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  async function updateprices(component) {\r\n    setOpen(true);\r\n    var bodydata = {};\r\n    bodydata = {\r\n      pricingcomponent: component.label,\r\n      req_product_id: products,\r\n    };\r\n    setStartrun(true);\r\n    let response = await sendNetworkRequest(\r\n      \"/productpriceupdate\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    setOpen(false);\r\n  }\r\n  async function rerun(component) {\r\n    var bodydata = {};\r\n    bodydata = {\r\n      component: component.label,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getincompletepricerun\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    let history_id = response.id;\r\n    let update_products = response.products;\r\n    if (response.products && response.products.length > 0) {\r\n      setOpen(true);\r\n\r\n      var bodydata = {};\r\n      bodydata = {\r\n        pricingcomponent: component.label,\r\n        req_product_id: update_products,\r\n        history_id: history_id,\r\n      };\r\n      setStartrun(true);\r\n      let response1 = await sendNetworkRequest(\r\n        \"/productpriceupdate\",\r\n        {},\r\n        bodydata,\r\n        false\r\n      );\r\n      setOpen(false);\r\n    } else {\r\n      alert(\" Doesn't have any incomplete products\");\r\n    }\r\n  }\r\n\r\n  async function filterapllied(\r\n    filterdata,\r\n    categories,\r\n    producttypes,\r\n    material,\r\n    purity\r\n  ) {\r\n    var bodydata = {};\r\n\r\n    bodydata = {\r\n      vendorid: filterdata && filterdata.length > 0 ? filterdata : \"\",\r\n      product_category: categories && categories.length > 0 ? categories : \"\",\r\n      product_type: producttypes && producttypes.length > 0 ? producttypes : \"\",\r\n      material_list: material && material.length > 0 ? material : \"\",\r\n      purity_list: purity && purity.length > 0 ? purity : \"\",\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\r\n      \"/getdistinctproduct\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    setProducts(response.products);\r\n    setCategories(response.category);\r\n    setVendors(response.vendorlist);\r\n  }\r\n  async function downloadlog() {\r\n    window.location.href = \"https://api-staging.stylori.com/getlogfile\";\r\n  }\r\n  async function getsizes() {\r\n    let response = await sendNetworkRequest(\"/getsizes\", {}, {}, false);\r\n    if (response.status < 400) {\r\n      setSizes(response.sizes);\r\n    } else {\r\n      alert(\"succes21s\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    setMasters(productCategory.mapper(props.data));\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <FullLoader title={\"Run Diamond Price\"} isopen={open}></FullLoader>\r\n        <AboutVoucher\r\n          isdisabled={startrun}\r\n          className={classes.aboutvoucher}\r\n          apply={filterapllied}\r\n          productids={products.length > 0 ? products : []}\r\n          categorylist={masters.category}\r\n          producttypelist={masters.product_type}\r\n          vendorlist={masters.vendorcode}\r\n          material={masters.material}\r\n          masterData={masters}\r\n          puritylist={masters.metalpurity}\r\n          categories={[\"Fixed Amount\", \"percentage\", \"Free Shipping\"]}\r\n        />\r\n        <Results\r\n          products={products}\r\n          pricingrows={rows}\r\n          downloadlog={downloadlog}\r\n          update={updateprices}\r\n          resumeupdate={rerun}\r\n        />\r\n        <div\r\n          style={{\r\n            padding: \"12px 0px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Link href=\"/price-logs\">\r\n            <Button color=\"primary\" variant=\"contained\">\r\n              Price History Logs\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </Page>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { useQuery } from \"react-apollo\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport Component from \"./PriceupdateContent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\nexport const Priceupdate = withRouter((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n  return <Component {...props} data={data} />;\r\n});\r\nexport default Priceupdate;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useQuery } from \"react-apollo\";\r\n\r\nimport { PRICE_RUN_LOGS } from \"../../graphql/query\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { NetworkStatus } from \"apollo-client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport const PriceLogs = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    PRICE_RUN_LOGS,\r\n    {\r\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Price Run History Logs </Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Completed Product</TableCell>\r\n                <TableCell align={\"center\"}>Pricing Component</TableCell>\r\n                <TableCell align={\"center\"}>Requested </TableCell>\r\n                <TableCell align={\"center\"}>Succeed</TableCell>\r\n                <TableCell align={\"center\"}>Failed</TableCell>\r\n                <TableCell align={\"center\"}>Updated</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allPriceRunningHistories?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>No Price Run Logs found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allPriceRunningHistories?.nodes.length > 0 &&\r\n                data?.allPriceRunningHistories?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {item?.completedProductCount ?? \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {\" \"}\r\n                      {item?.pricingComponent ?? \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.requestedProducts &&\r\n                      item?.logs?.nodes[0]?.requestedProducts.length\r\n                        ? item?.logs?.nodes[0]?.requestedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.successfullyExecutedProducts &&\r\n                      item?.logs?.nodes[0]?.successfullyExecutedProducts.length\r\n                        ? item?.logs?.nodes[0]?.successfullyExecutedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.failedProducts &&\r\n                      item?.logs?.nodes[0]?.failedProducts.length\r\n                        ? item?.logs?.nodes[0]?.failedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={5}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allPriceRunningHistories?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\n\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport VisibityIcon from \"@material-ui/icons/Visibility\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { PRODUCTLIST, PRODUCTCATEGORY, PRODUCTFILTERMASTER, PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch, FormControlLabel } from \"@material-ui/core\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Moment from \"react-moment\";\r\nimport { BASE_URL } from \"../../config\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\nconst columns = [\r\n  { id: \"product_id\", label: \"product id\" },\r\n  { id: \"product_name\", label: \"product name\" },\r\n  { id: \"product_type\", label: \"product type\" },\r\n  { id: \"vendor_code\", label: \"vendor code\" },\r\n  { id: \"product_category\", label: \"product category\" },\r\n  { id: \"isactive\", label: \"active\" },\r\n  { id: \"createdAt\", label: \"Created on\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? <span className={classes.visuallyHidden}>{order === \"desc\" ? \"\" : \"\"}</span> : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\"></IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"updatedAt\");\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [productlists, setProductlists] = React.useState([]);\r\n  const [allproductlists, setAllProductlists] = React.useState([]);\r\n  const [mastercategories, setMastercategories] = React.useState([]);\r\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n    getproductlist(\"\", \"\", \"\", \"\", newPage);\r\n  }\r\n  useEffect(() => {\r\n    getproductlist(\"\", \"\", \"\", \"\", \"\", order, orderBy);\r\n  }, []);\r\n  useEffect(() => {\r\n    getproductlist(\r\n      props.filterparams.searchtext,\r\n      props.filterparams.categoryname,\r\n      props.filterparams.product_type,\r\n      \"\",\r\n      \"\",\r\n      order,\r\n      orderBy\r\n    );\r\n  }, [props.filterparams]);\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\", \"\", \"\", event.target.value, \"\");\r\n  }\r\n  async function showproductdetails(prod_id) {\r\n  \r\n    let bodycontent = {\r\n      productid: prod_id,\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\"/getproducturl\", {}, bodycontent);\r\n    console.log(response);\r\n    //setProductlists(response.products.rows)\r\n\r\n    window.open(response.url, \"_blank\");\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n    getproductlist(\"\", \"\", \"\", \"\", \"\", isAsc ? \"desc\" : \"asc\", property);\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype) {\r\n    let products = allproductlists.filter((l) => {\r\n      return (\r\n        l.productId.toLowerCase().match(searchtext.toLowerCase()) || l.productName.toLowerCase().match(searchtext.toLowerCase())\r\n      );\r\n    });\r\n    setProductlists(products);\r\n  }\r\n  async function getproductlist(searchtext, productcategory, producttype, pagesize, offsetvalue, sort, orderby) {\r\n    let bodydata = {\r\n      size: pagesize ? pagesize : rowsPerPage,\r\n      offset: offsetValue,\r\n      searchtext: searchtext,\r\n      productcategory: productcategory,\r\n      producttype: producttype,\r\n      order: sort ? sort : order,\r\n      orderby: orderby ? orderby : orderBy,\r\n    };\r\n    let response = await sendNetworkRequest(\"/getproductlist\", {}, bodydata);\r\n    setProductlists(response.products.rows);\r\n    setPageCount(response.products.count);\r\n  }\r\n  function applyfilter(searchtext, categoryname, typename) {\r\n    getproductlist(searchtext, categoryname, typename);\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n          <EnhancedTableHead classes={classes} order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\r\n          <TableBody>\r\n            {/* <Query\r\n              query={PRODUCTLIST(true,\"Bangles\")}\r\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    debugger\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> */}\r\n            {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\r\n              <TableRow key={row.product_id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.product_id}\r\n                  <Button onClick={(e) => ProductEdit(row.product_id)}>\r\n                    <EditIcon />\r\n                  </Button>\r\n                  <Button onClick={(e) => showproductdetails(row.product_id)}>\r\n                    <VisibityIcon />\r\n                  </Button>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\" onClick={() => showproductdetails(row)}>\r\n                  {/* <Link variant=\"body2\">  */}\r\n                  {row.product_name}\r\n\r\n                  {/* </Link>   */}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.product_type}</TableCell>\r\n                <TableCell align=\"left\">{row.vendor_code}</TableCell>\r\n                <TableCell align=\"left\">{row.product_category}</TableCell>\r\n\r\n                <TableCell align=\"left\">\r\n                  {\" \"}\r\n                  <FormControlLabel label={row.isactive ? \"\" : \"\"} control={<Switch checked={row.isactive} value=\"checkedA\" />} />\r\n                </TableCell>\r\n\r\n                <TableCell align=\"left\">\r\n                  <Moment format=\"DD MMM YYYY hh:mm a\">{row.createdAt}</Moment>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {/* </> */}\r\n            {/* }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  */}\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 50, 100, 200, 500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { PRODUCTLIST, PRODUCTCATEGORY, PRODUCTFILTERMASTER, PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\r\n\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"../../components/Products\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { ProductFilter } from \"../../components\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\nexport const Productlist = withRouter(\r\n  withApollo((props) => {\r\n    const [masters, setMasters] = useState({});\r\n    const [filterparams, setFilterparams] = useState({});\r\n\r\n    function onFilter(filterobj) {\r\n      let filtercontent = {};\r\n\r\n      if (filterobj.product_category) {\r\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      if (filterobj.product_type) {\r\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      setFilterparams({\r\n        ...filterparams,\r\n        ...filtercontent,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n    function onSearch(searchtext) {\r\n      //  alert(searchtext)\r\n      setFilterparams({\r\n        ...filterparams,\r\n        searchtext,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n\r\n    useEffect(() => {\r\n      const query = props.client.query;\r\n      query({\r\n        query: PRODUCTFILTERMASTER,\r\n        fetchPolicy: \"network-only\",\r\n      })\r\n        .then((data) => {\r\n          if (data) {\r\n            let product_categories = data.data.allMasterProductCategories.nodes;\r\n            let product_types = data.data.allMasterProductTypes.nodes;\r\n            setMasters({\r\n              product_categories,\r\n              product_types,\r\n            });\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"smbcj\");\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\r\n          <Grid fullwidth item xs={6} sm={6}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              Products\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\r\n            <Link underline=\"none\" component={RouterLink} to={\"/productupload\"}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Add New Product\r\n              </Button>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n        <ProductFilter masters={masters} onSearch={onSearch} onFilter={onFilter} />\r\n        <Product filterparams={filterparams} />\r\n      </Grid>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Productlist;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport clsx from \"clsx\";\r\n\r\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { Input } from \"../../components/Input.js\";\r\nimport { ProductContext } from \"../../context\";\r\nimport FullLoader from \"../../components/Loader\";\r\nimport \"./Productupload.css\";\r\nimport Select from \"react-select\";\r\nimport \"./floating_dropdown.css\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  dropdownlayout: {\r\n    \"& .menu\": {\r\n      position: \"Relative !important\",\r\n    },\r\n  },\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  alert: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  formGroup: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  fieldGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  fieldHint: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1),\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1,\r\n  },\r\n  dateField: {\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddressForm(props) {\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [initailRingSize, updateRingSize] = useState([]);\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  async function getMasterRingSize() {\r\n    fetch(GRAPHQL_DEV_CLIENT, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\r\n  }\r\n  React.useEffect(() => {\r\n    getMasterRingSize();\r\n  }, []);\r\n  React.useEffect(() => {}, [productCtx]);\r\n\r\n  // const handleChange = selectedOption => {\r\n\r\n  // };\r\n  const handlesizeChange = (selectedOption) => {\r\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\r\n  };\r\n  const handlevendorChange = (selectedOption) => {\r\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\r\n  };\r\n\r\n  const changeproducttype = (type) => (event, newvalue) => {\r\n    setProductCtx({ ...productCtx, product_type: newvalue });\r\n  };\r\n  const handlechange = (type) => (selectedOption) => {\r\n    if (type === \"product_type\") {\r\n      if (selectedOption) {\r\n        var size = \"\";\r\n        var minvalue = 0;\r\n        var maxvalue = 0;\r\n        var selected_sizes = [];\r\n        var default_size = 0;\r\n        if (selectedOption.shortCode === \"K\") {\r\n          selected_sizes.push({\r\n            value: \"KID\",\r\n            label: \"KID\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"XS\",\r\n            label: \"XS\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"S\",\r\n            label: \"S\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"M\",\r\n            label: \"M\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"L\",\r\n            label: \"L\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"XL\",\r\n            label: \"XL\",\r\n          });\r\n        } else {\r\n          if (selectedOption.shortCode === \"R\" && productCtx.selectedgender.name === \"Male\") {\r\n            minvalue = 13;\r\n            maxvalue = 25;\r\n            default_size = 15;\r\n          }\r\n          if (selectedOption.shortCode === \"R\" && productCtx.selectedgender.name === \"Female\") {\r\n            minvalue = 8;\r\n            maxvalue = 23;\r\n            default_size = 12;\r\n          }\r\n\r\n          for (var i = minvalue; i < maxvalue; i++) {\r\n            selected_sizes.push({\r\n              value: i,\r\n              label: \"\" + i,\r\n            });\r\n          }\r\n        }\r\n\r\n        setProductCtx({\r\n          ...productCtx,\r\n          product_type_shortcode: selectedOption.shortCode,\r\n          product_type: selectedOption,\r\n          size,\r\n          default_size,\r\n          selected_sizes,\r\n        });\r\n      } else {\r\n        setProductCtx({ ...productCtx, product_type_shortcode: \"\", product_type: \"\", size, selected_sizes: \"\" });\r\n      }\r\n    } else {\r\n      setProductCtx({ ...productCtx, [type]: selectedOption });\r\n    }\r\n  };\r\n  const handleTextChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    if (type === \"vendorcode\") {\r\n      setProductCtx({ ...productCtx, [type]: value, vendorleadtime: value.vendorDelivaryDays });\r\n    } else {\r\n      setProductCtx({ ...productCtx, [type]: value });\r\n    }\r\n  };\r\n\r\n  const switchisorderable = (event) => {\r\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\r\n  };\r\n\r\n  const purityChange = (type) => (selectedOption) => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption });\r\n  };\r\n\r\n  const handleGenderChange = (type) => (event, value) => {\r\n    var minvalue = 0;\r\n    var maxvalue = 0;\r\n    var selected_sizes = [];\r\n    var sizes = [];\r\n    var default_size = 0;\r\n    // if (productCtx.product_type.shortCode === \"K\") {\r\n    //   default_size = \"XS\";\r\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\r\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\r\n    // } else {\r\n    //   if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\r\n    //     minvalue = 13;\r\n    //     maxvalue = 26;\r\n    //     default_size = \"\" + 15;\r\n    //   }\r\n    //   if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\r\n    //     minvalue = 8;\r\n    //     maxvalue = 24;\r\n    //     default_size = \"\" + 12;\r\n    //   }\r\n\r\n    //   for (var i = minvalue; i < maxvalue; i++) {\r\n    //     selected_sizes.push(\"\" + i);\r\n    //     sizes.push(\"\" + i);\r\n    //   }\r\n    // }\r\n\r\n    initailRingSize.forEach((e) => {\r\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\r\n        selected_sizes.push(\"\" + e.sizeValue);\r\n        sizes.push(\"\" + e.sizeValue);\r\n      }\r\n    });\r\n    setProductCtx({ ...productCtx, [type]: value, sizes, selected_sizes, default_size });\r\n  };\r\n\r\n  const handleMaterialChange = (type) => (event, value) => {\r\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\r\n    if (value) {\r\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\r\n        if (steps.indexOf(\"Step3\") === -1) {\r\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\r\n        }\r\n      }\r\n    }\r\n    setProductCtx({ ...productCtx, [type]: value, steps });\r\n  };\r\n\r\n  const handleInputChange = (type) => (e) => {\r\n    var size = productCtx.size;\r\n    var materials = productCtx.materials;\r\n    var selected_sizes = productCtx.selected_sizes;\r\n\r\n    if (type === \"selectedgender\") {\r\n      var minvalue = 0;\r\n      var maxvalue = 0;\r\n      selected_sizes = [];\r\n      if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\r\n        size = \"13-25\";\r\n        minvalue = 13;\r\n        maxvalue = 26;\r\n      }\r\n      if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\r\n        size = \"8-18\";\r\n        minvalue = 8;\r\n        maxvalue = 19;\r\n      }\r\n\r\n      for (var i = minvalue; i < maxvalue; i++) {\r\n        selected_sizes.push({\r\n          value: i,\r\n          label: \"\" + i,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (type === \"product_categoy\") {\r\n      if (e.target.value === \"Platinum Jewellery\") {\r\n        materials.push(\"Platinum Jewellery\");\r\n        var index = materials.indexOf(\"Silver Jewellery\");\r\n\r\n        if (index >= 0) {\r\n          materials.splice(index, 1);\r\n        }\r\n      } else if (e.target.value === \"Silver Jewellery\") {\r\n        materials.push(\"Silver Jewellery\");\r\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\r\n        if (index1 >= 0) {\r\n          materials.splice(index1, 1);\r\n        }\r\n      } else {\r\n        var indexval = materials.indexOf(\"Silver Jewellery\");\r\n\r\n        if (indexval >= 0) {\r\n          materials.splice(indexval, 1);\r\n        }\r\n        indexval = materials.indexOf(\"Platinum Jewellery\");\r\n        if (indexval >= 0) {\r\n          materials.splice(indexval, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    setProductCtx({ ...productCtx, size, [type]: e, materials, selected_sizes });\r\n  };\r\n\r\n  const materialChange = (type) => (selectedOption) => {\r\n    //   let material = { ...productCtx.material, [type]: selectedOption }\r\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\r\n    //   if(material.material)\r\n    //   {\r\n    //   material.material.forEach(element => {\r\n    let material_names = [];\r\n    if (selectedOption) {\r\n      selectedOption.forEach((element) => {\r\n        material_names.push(element.name);\r\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\r\n          if (steps.indexOf(\"Step3\") === -1) {\r\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\r\n          }\r\n        }\r\n      });\r\n    }\r\n    //   });\r\n    // }\r\n\r\n    setProductCtx({ ...productCtx, [type]: selectedOption, steps, material_names });\r\n  };\r\n  const keyPress = (type) => (e) => {\r\n    const re = /^[a-zA-Z \\b]+$/;\r\n    if (e.target.value === \"\" || re.test(e.target.value)) {\r\n      setProductCtx({ ...productCtx, [type]: e.target.value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* <FullLoader /> */}\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6} spacing={1}>\r\n            <Card {...rest} className={clsx(classes.root, className)}>\r\n              <CardHeader title=\"Product Information 1\" />\r\n              <Divider />\r\n              <CardContent className={classes.cardcontent}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} sm={12} spacing={1}>\r\n                    <Input\r\n                      className={classes.helperinput}\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={productCtx.productname}\r\n                      id=\"productname\"\r\n                      error={productCtx.error_message.productname}\r\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\r\n                      name=\"productname\"\r\n                      label=\"Product Name\"\r\n                      onChange={keyPress(\"productname\")}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\r\n                    <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.product_categoy}\r\n                      onChange={handleoptionChange(\"product_categoy\")}\r\n                      options={productCtx.masterData.category.map((option) => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />)\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Select Product Category\"\r\n                          margin=\"dense\"\r\n                          error={productCtx.error_message.product_categoy}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} spacing={1}>\r\n                    <Autocomplete\r\n                      id=\"product_type\"\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={(option) => option.label}\r\n                      defaultValue={productCtx.product_type}\r\n                      options={productCtx.masterData.product_type}\r\n                      onChange={handleoptionChange(\"product_type\")}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />)\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Select Product Type\"\r\n                          margin=\"dense\"\r\n                          variant=\"outlined\"\r\n                          error={productCtx.error_message.product_type}\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {productCtx.product_type ? (\r\n              <>\r\n                <Card {...rest} className={clsx(classes.root, className)}>\r\n                  <CardHeader title=\"Product Information 2\" />\r\n                  <Divider />\r\n                  <CardContent className={classes.cardcontent}>\r\n                    <Grid container spacing={1}>\r\n                      {productCtx.product_type ? (\r\n                        <>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <Autocomplete\r\n                              id=\"free-solo-2-demo\"\r\n                              multiple\r\n                              className={classes.fixedTag}\r\n                              defaultValue={productCtx.material_names}\r\n                              options={productCtx.masterData.material.map((option) => option.label)}\r\n                              onChange={handleMaterialChange(\"material_names\")}\r\n                              renderTags={(value, getTagProps) =>\r\n                                value.map((option, index) => (\r\n                                  <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                                ))\r\n                              }\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label=\"Select Product Materials\"\r\n                                  margin=\"dense\"\r\n                                  variant=\"outlined\"\r\n                                  error={productCtx.error_message.material_names}\r\n                                  fullWidth\r\n                                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Grid>\r\n                        </>\r\n                      ) : null}\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Autocomplete\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          defaultValue={productCtx.selectedgender}\r\n                          options={productCtx.masterData.gender.map((option) => option.label)}\r\n                          onChange={handleGenderChange(\"selectedgender\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Select Gender\"\r\n                              margin=\"dense\"\r\n                              error={productCtx.error_message.selectedgender}\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          getOptionLabel={(option) => option.label}\r\n                          defaultValue={productCtx.metalpurity}\r\n                          options={productCtx.masterData.metalpurity}\r\n                          onChange={handleoptionChange(\"metalpurity\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Metal Purity\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              error={productCtx.error_message.metalpurity}\r\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          getOptionLabel={(option) => option.label}\r\n                          defaultValue={productCtx.metalcolour}\r\n                          options={productCtx.masterData.metalcolour}\r\n                          onChange={handleoptionChange(\"metalcolour\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Metal Colour\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              error={productCtx.error_message.metalcolour}\r\n                              fullWidth\r\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6}>\r\n            {productCtx.product_type ? (\r\n              <>\r\n                <Card {...rest} className={clsx(classes.root, className)}>\r\n                  <CardHeader title=\"Vendor Information\" />\r\n                  <Divider />\r\n                  <CardContent className={classes.cardcontent}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Autocomplete\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          defaultValue={productCtx.vendorcode}\r\n                          getOptionLabel={(option) => option.label}\r\n                          options={productCtx.masterData.vendorcode}\r\n                          onChange={handleoptionChange(\"vendorcode\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Select Vendor Code\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              error={productCtx.error_message.vendorcode}\r\n                              fullWidth\r\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <Input\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          label=\"Vendor Product Code\"\r\n                          fullWidth\r\n                          className={classes.helperinput}\r\n                          value={productCtx.productvendorcode}\r\n                          error={productCtx.error_message.productvendorcode}\r\n                          id=\"productvendorcode\"\r\n                          name=\"productvendorcode\"\r\n                          onChange={handleTextChange(\"productvendorcode\")}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <Input\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          label=\"Vendor Lead Time\"\r\n                          fullWidth\r\n                          className={classes.helperinput}\r\n                          error={productCtx.error_message.vendorleadtime}\r\n                          value={productCtx.vendorleadtime}\r\n                          InputLabelProps={{ shrink: productCtx.vendorleadtime }}\r\n                          id=\"vendorleadtime\"\r\n                          name=\"vendorleadtime\"\r\n                          onChange={handleTextChange(\"vendorleadtime\")}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <FormControl component=\"fieldset\">\r\n                          <FormLabel component=\"legend\">IsReorderable</FormLabel>\r\n                          <RadioGroup\r\n                            aria-label=\"position\"\r\n                            name=\"position\"\r\n                            value={productCtx.isreorderable}\r\n                            onChange={switchisorderable}\r\n                            row\r\n                          >\r\n                            <FormControlLabel\r\n                              value=\"Yes\"\r\n                              control={<Radio color=\"primary\" />}\r\n                              label=\"Yes\"\r\n                              labelPlacement=\"right\"\r\n                            />\r\n                            <FormControlLabel value=\"No\" control={<Radio color=\"primary\" />} label=\"No\" labelPlacement=\"right\" />\r\n                          </RadioGroup>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>{\" \"}\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={12}>\r\n                {productCtx.product_type ? (\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader\r\n                      title=\"Default SKU For Display\r\n  \"\r\n                    />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_category\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.default_metal_colour}\r\n                            onChange={handleoptionChange(\"default_metal_colour\")}\r\n                            options={productCtx.metalcolour.map((option) => option.label)}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Metal Colour\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.default_metal_colour}\r\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_category\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.default_metal_purity}\r\n                            onChange={handleoptionChange(\"default_metal_purity\")}\r\n                            options={productCtx.metalpurity.map((option) => option.label)}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Metal Purity\"\r\n                                margin=\"dense\"\r\n                                error={productCtx.error_message.default_metal_purity}\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>\r\n                ) : null}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {productCtx.product_type &&\r\n              (productCtx.product_type.shortCode === \"BA\" ||\r\n                productCtx.product_type.shortCode === \"R\" ||\r\n                productCtx.product_type.shortCode === \"SK\" ||\r\n                productCtx.product_type.shortCode === \"K\") &&\r\n              productCtx.sizes.length > 0 ? (\r\n                <>\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader title=\"Size Information\" />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"free-solo-2-demo\"\r\n                            multiple\r\n                            freeSolo\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.selected_sizes}\r\n                            options={productCtx.sizes}\r\n                            onChange={handleoptionChange(\"selected_sizes\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Ring Sizes\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.selected_sizes}\r\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_type\"\r\n                            className={classes.fixedTag}\r\n                            freeSolo\r\n                            defaultValue={productCtx.default_size}\r\n                            options={productCtx.selected_sizes}\r\n                            onChange={handleoptionChange(\"default_size\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Select Default Size\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.default_size}\r\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>{\" \"}\r\n                </>\r\n              ) : null}\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {productCtx.product_type && productCtx.product_type.alias === \"Earrings\" ? (\r\n                <>\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader title=\"Type of Fit\" />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                          <Autocomplete\r\n                            id=\"free-solo-2-demo\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.earringbacking}\r\n                            options={productCtx.masterData.earringbacking.map((option) => option.label)}\r\n                            onChange={handleoptionChange(\"earringbacking\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Earring Backing\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.earringbacking}\r\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>{\" \"}\r\n                </>\r\n              ) : null}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}></Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Select from 'react-select';\r\nimport { View, Text} from \"react-primitives\";\r\nimport \"../screens/Productupload/Productupload.css\"\r\n\r\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\r\n  position: 'absolute',\r\n  transition: 'all .25s',\r\n  pointerEvents: 'none',\r\n  top: placeholderUp ? -8 : 10,\r\n  left: 8,\r\n  zIndex: placeholderzindex,\r\n  paddingLeft: 8,\r\n  paddingRight: 8,\r\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\r\n  fontSize: placeholderUp ? 12 : 15,\r\n  color: placeholderUp ? '#3F51B5' : '#263238',\r\n}));\r\n\r\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\r\n  position: 'relative',\r\n  display: 'flex',\r\n  zIndex: selectzindex\r\n}));\r\n\r\nconst SelectView = props => {\r\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\r\n  return (\r\n    <SelectContainer selectzindex={selectzindex}>\r\n      <Select \r\n        fullWidth\r\n        isClearable\r\n      {...props} placeholder=\"\" />\r\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\r\n    </SelectContainer>\r\n  );\r\n};\r\n\r\nclass SelectPlaceholder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      placeholderUp: false,\r\n      placeholderzindex : 1\r\n    };\r\n  }\r\n\r\n  onFocus = () => {\r\n    const { onFocus } = this.props;\r\n    this.setState({ placeholderUp: true });\r\n    onFocus && onFocus();\r\n  };\r\n\r\n  onBlur = () => {\r\n    const { value, onBlur } = this.props;\r\n    onBlur && onBlur();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SelectView\r\n      className={'dropdownlayout'}\r\n        fullWidth\r\n        {...this.props}\r\n        onBlur={this.onBlur}\r\n        onFocus={this.onFocus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectPlaceholder;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport {\r\n  Checkbox,\r\n  Card,\r\n  CardHeader,\r\n  TextField,\r\n  Divider,\r\n  Chip,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Select from \"react-select\";\r\nimport { Input } from \"../../components/Input.js\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport { ProductContext } from \"../../context\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SelectPlaceholder from \"../../components/SelectPlaceholder.js\";\r\n\r\nimport \"./Productupload.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function PaymentForm(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const handleInputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  const materialChange = (type) => (e) => {\r\n    let selected_metal_colour = {\r\n      ...productCtx.selected_metal_colour,\r\n      [type]: e.target.checked,\r\n    };\r\n    setProductCtx({ ...productCtx, selected_metal_colour });\r\n  };\r\n  const purityChange = (type) => (selectedOption) => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption });\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n\r\n  console.log(productCtx);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Card {...rest} className={clsx(classes.root, className)}>\r\n            <CardHeader title=\"Type of Fit\" />\r\n            <Divider />\r\n            <CardContent className={classes.cardcontent}>\r\n              <Grid container spacing={1}>\r\n                <Grid item container xs={12} sm={12}>\r\n                  <Grid item xs={6} sm={3}>\r\n                    {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\r\n                    <Input\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      disabled\r\n                      id=\"size\"\r\n                      onChange={handleInputChange(\"product_code\")}\r\n                      name=\"size\"\r\n                      value={\r\n                        \"S\" +\r\n                        productCtx.product_type.shortCode +\r\n                        (productCtx.masterData?.productseries[0].value + 1)\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                {[\"R\", \"B\"].includes(\r\n                  productCtx.product_type.shortCode\r\n                ) ? null : (\r\n                  <>\r\n                    <Grid item xs={4}>\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        label=\"Height\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"metal_height\")}\r\n                        value={\r\n                          productCtx.metal_height === 0\r\n                            ? \"\"\r\n                            : productCtx.metal_height\r\n                        }\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        label=\"Width\"\r\n                        name=\"size\"\r\n                        onChange={handleInputChange(\"metal_width\")}\r\n                        value={\r\n                          productCtx.metal_width === 0\r\n                            ? \"\"\r\n                            : productCtx.metal_width\r\n                        }\r\n                        autoComplete=\"size\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {productCtx.product_type === \"Bracelets\" ? (\r\n                  <Grid item xs={6}>\r\n                    <Input\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id=\"size\"\r\n                      label=\"Length\"\r\n                      name=\"size\"\r\n                      autoComplete=\"size\"\r\n                      onChange={handleInputChange(\"metal_length\")}\r\n                      value={\r\n                        productCtx.metal_length === 0\r\n                          ? \"\"\r\n                          : productCtx.metal_length\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n          <Card {...rest} className={clsx(classes.root, className)}>\r\n            <CardHeader\r\n              title=\"Enter weights for different Purity\r\n\"\r\n            />\r\n            <Divider />\r\n            <CardContent className={classes.cardcontent}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12}></Grid>\r\n                {productCtx.metalpurity.map((row) => (\r\n                  <Grid item container xs={12} spacing={2}>\r\n                    <Grid item xs={6}>\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        label=\"Purity\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        value={row.name}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        label=\"Weight\"\r\n                        name=\"size\"\r\n                        error={\r\n                          productCtx.error_message[`${row.name}_metal_weight`]\r\n                        }\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(`${row.name}_metal_weight`)}\r\n                        value={\r\n                          productCtx[`${row.name}_metal_weight`] === 0\r\n                            ? \"\"\r\n                            : productCtx[`${row.name}_metal_weight`]\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Card {...rest} className={clsx(classes.root, className)}>\r\n            <CardHeader title=\"Type of Fit\" />\r\n            <Divider />\r\n            <CardContent className={classes.cardcontent}>\r\n              <Grid container xs={12} sm={12} spacing={2}>\r\n                <Grid item xs={6} sm={6}>\r\n                  <Autocomplete\r\n                    id=\"product_category\"\r\n                    multiple\r\n                    className={classes.fixedTag}\r\n                    defaultValue={productCtx.themes}\r\n                    onChange={handleoptionChange(\"themes\")}\r\n                    options={productCtx?.masterData?.themes.map(\r\n                      (option) => option.name\r\n                    )}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          label={option}\r\n                          {...getTagProps({ index })}\r\n                        />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error={productCtx.error_message.themes}\r\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <Autocomplete\r\n                    id=\"product_category\"\r\n                    multiple\r\n                    className={classes.fixedTag}\r\n                    defaultValue={productCtx.prod_styles}\r\n                    onChange={handleoptionChange(\"prod_styles\")}\r\n                    options={\r\n                      productCtx.masterData?.styles.map(\r\n                        (option) => option.name\r\n                      ) ?? []\r\n                    }\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          label={option}\r\n                          {...getTagProps({ index })}\r\n                        />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error={productCtx.error_message.prod_styles}\r\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Autocomplete\r\n                    id=\"product_category\"\r\n                    multiple\r\n                    className={classes.fixedTag}\r\n                    defaultValue={productCtx.occassions}\r\n                    onChange={handleoptionChange(\"occassions\")}\r\n                    options={\r\n                      productCtx.masterData?.occasions.map(\r\n                        (option) => option.name\r\n                      ) ?? []\r\n                    }\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          label={option}\r\n                          {...getTagProps({ index })}\r\n                        />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error={productCtx.error_message.occassions}\r\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Autocomplete\r\n                    id=\"product_category\"\r\n                    multiple\r\n                    className={classes.fixedTag}\r\n                    defaultValue={productCtx.collections}\r\n                    onChange={handleoptionChange(\"collections\")}\r\n                    options={\r\n                      productCtx.masterData?.collections.map(\r\n                        (option) => option.name\r\n                      ) ?? []\r\n                    }\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          label={option}\r\n                          {...getTagProps({ index })}\r\n                        />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error={productCtx.error_message.collections}\r\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n                {productCtx.material_names.indexOf(\"Gemstone\") > -1 ? (\r\n                  <>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Autocomplete\r\n                        id=\"product_category\"\r\n                        multiple\r\n                        className={classes.fixedTag}\r\n                        defaultValue={productCtx.stonecount}\r\n                        onChange={handleoptionChange(\"stonecount\")}\r\n                        options={\r\n                          productCtx.masterData?.stones.map(\r\n                            (option) => option.name\r\n                          ) ?? []\r\n                        }\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              label={option}\r\n                              {...getTagProps({ index })}\r\n                            />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"No of Stones\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: \"search\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Autocomplete\r\n                        id=\"product_category\"\r\n                        multiple\r\n                        className={classes.fixedTag}\r\n                        defaultValue={productCtx.stonecolour}\r\n                        onChange={handleoptionChange(\"stonecolour\")}\r\n                        options={\r\n                          productCtx.masterData?.gemstonecolor.map(\r\n                            (option) => option.name\r\n                          ) ?? []\r\n                        }\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              label={option}\r\n                              {...getTagProps({ index })}\r\n                            />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Stone Colour\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: \"search\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                ) : null}\r\n              </Grid>\r\n\r\n              <Grid item xs={6}></Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React,{useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  TextField,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport \"./Productupload.css\"\r\nimport { func } from 'prop-types';\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    root:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    table:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: theme.spacing(0),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    gempapper: {\r\n      padding: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  \r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n  const { className, ...rest } = props;\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption })\r\n  };\r\n  function editmaterial(name) {\r\n    clearmetalvalue();\r\n    assignvalue(productCtx.metals[name], name);\r\n  }\r\n  function deletematerial(name) {\r\n    clearmetalvalue();\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.splice(name,1)\r\n    setProductCtx({ ...productCtx, metals: metalsarr }) \r\n\r\n  }\r\n\r\n  const handleoptionChange = type => (event, value) => {\r\n    \r\n      setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  }\r\n  function clearmetalvalue()\r\n  {\r\n    // for(let value in initialState){\r\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\r\n    //     setProductCtx({  \r\n    //       [value]:initialState[value]\r\n    //     })\r\n    //   }\r\n    // }\r\n    setProductCtx({...productCtx,\r\n      diamondsettings: \"\",\r\n      diamondcolor:\"\",\r\n      diamondclarity:\"\",\r\n      diamondshape:\"\",\r\n      diamondcount:\"\",\r\n      diamondweight:\"\",\r\n      gemstonetype:\"\",\r\n      gemstoneshape:\"\",\r\n      gemstonesettings:\"\",\r\n      gemstonesize:\"\",\r\n      gemstonecount:\"\",\r\n      gemstoneweight:\"\"\r\n    })\r\n    // alert(productCtx)\r\n    // console.log(productCtx)\r\n    \r\n\r\n  }\r\n  function assignvalue(metalobj, indexval)\r\n  {\r\n    if(metalobj.metalname === 'Diamond')\r\n    {\r\n    setProductCtx({ ...productCtx, \r\n      diamondsettings: metalobj.settings,\r\n      diamondcolor:metalobj.color,\r\n      diamondclarity:metalobj.clarity,\r\n      diamondshape:metalobj.shape,\r\n      diamondcount:metalobj.count,\r\n      diamondweight:metalobj.weight,\r\n    metalindex: indexval})\r\n    }else\r\n    {\r\n      setProductCtx({ ...productCtx, \r\n        gemstonesettings: metalobj.settings,\r\n        gemstoneshape:metalobj.color,\r\n        gemstonetype:metalobj.clarity,\r\n        gemstonesize:metalobj.shape,\r\n        gemstonecount:metalobj.count,\r\n        gemstoneweight:metalobj.weight,\r\n      metalindex: indexval})\r\n    }\r\n\r\n  }\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    var stonedetails = {};\r\n    stonedetails['metalname'] = productCtx.metal.label;\r\n    var isvalid = true\r\n    if(productCtx.diamondclarity)\r\n    {\r\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\r\n      productCtx.diamondweight)\r\n      {      stonedetails['metalname'] = \"Diamond\"\r\n    stonedetails['settings'] = productCtx.diamondsettings;\r\n    stonedetails['color'] = productCtx.diamondcolor;\r\n    stonedetails['clarity'] = productCtx.diamondclarity;\r\n    stonedetails['shape'] = productCtx.diamondshape;\r\n    stonedetails['count'] = productCtx.diamondcount;\r\n    stonedetails['weight'] = productCtx.diamondweight;\r\n      }else\r\n      {\r\n        isvalid = false\r\n        alert(\"Fill all fields\")\r\n      }\r\n\r\n    }else{\r\n      if(productCtx.gemstonetype && \r\n        productCtx.gemstoneshape && \r\n        productCtx.gemstonesettings && \r\n        productCtx.gemstonesize && productCtx.gemstonecount &&\r\n        productCtx.gemstoneweight)\r\n        { \r\n      stonedetails['metalname'] = \"Gemstone\"\r\n      stonedetails['clarity'] = productCtx.gemstonetype;\r\n      stonedetails['color'] = productCtx.gemstoneshape;\r\n      stonedetails['settings'] = productCtx.gemstonesettings;\r\n      stonedetails['shape'] = productCtx.gemstonesize;\r\n      stonedetails['count'] = productCtx.gemstonecount;\r\n      stonedetails['weight'] = productCtx.gemstoneweight;\r\n    }else\r\n    {\r\n      isvalid = false\r\n      alert(\"Fill all fields\")\r\n    }\r\n    }\r\n\r\n    if(isvalid)\r\n    {\r\n    if(productCtx.metalindex === -1)\r\n    {\r\n      stonedetails['id'] = metalsarr.length;\r\n\r\n      metalsarr.push(stonedetails) \r\n\r\n    }else\r\n    {\r\n      stonedetails['id'] = productCtx.metalindex\r\n\r\n      metalsarr[productCtx.metalindex] = stonedetails;\r\n    }\r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n    clearmetalvalue()\r\n  }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \r\n\r\n      <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      fullWidth\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid item xs={4} >\r\n                   \r\n\r\n                <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondclarity}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                    onChange={handleoptionChange('diamondclarity')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Type/Clarity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n        </Grid>\r\n\r\n        <Grid item xs={4} >\r\n        \r\n                      \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondcolor}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                    onChange={handleoptionChange('diamondcolor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Colour\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondsettings}\r\n                    options={productCtx.masterData.diamondsettings}\r\n                    onChange={handleoptionChange('diamondsettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n       \r\n                      <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondshape}\r\n                    options={productCtx.masterData.diamondshapes}\r\n                    onChange={handleoptionChange('diamondshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondcount')}\r\n              value={productCtx.diamondcount}\r\n              />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Weight\"\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondweight')}\r\n              value={productCtx.diamondweight}\r\n              />\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"flex-end\">\r\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\r\n            Add Diamond\r\n          </Button>\r\n\r\n        </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n        </CardContent>\r\n        </Card>\r\n   }\r\n\r\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \r\n\r\n  \r\n       <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n\r\n          <Grid  container xs={12} spacing={1}>\r\n\r\n      <Grid item xs={4} >\r\n      \r\n                 \r\n                       <Autocomplete\r\n                    \r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonetype}\r\n                    options={productCtx.masterData.gemstontypes}\r\n                    onChange={handleoptionChange('gemstonetype')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n      </Grid>\r\n    \r\n      <Grid item xs={4} >\r\n    \r\n          \r\n\r\n<Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstoneshape}\r\n                    options={productCtx.masterData.gemstonshapes}\r\n                    onChange={handleoptionChange('gemstoneshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n          \r\n                    <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonesettings}\r\n                    options={productCtx.masterData.gemstonesettings}\r\n                    onChange={handleoptionChange('gemstonesettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n    \r\n      <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Gemstone Size\"\r\n            name=\"size\"\r\n            onChange={handleInputChange('gemstonesize')}\r\n            autoComplete=\"size\"\r\n            value={productCtx.gemstonesize}\r\n            />\r\n      \r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstonecount')}\r\n            value={productCtx.gemstonecount}\r\n            />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n        \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Weight\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstoneweight')}\r\n            value={productCtx.gemstoneweight}\r\n            />\r\n      </Grid>\r\n      <Grid container item xs={12} justify=\"flex-end\">\r\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\r\n          Add Gemstone\r\n        </Button>\r\n\r\n      </Grid>\r\n      </Grid>\r\n            </CardContent>\r\n            </Card>}\r\n\r\n            <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n    <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Stone</TableCell>\r\n            <TableCell align=\"right\">Type/Clarity</TableCell>\r\n            <TableCell align=\"right\">Colour</TableCell>\r\n            <TableCell align=\"right\">Setting</TableCell>\r\n            <TableCell align=\"right\">Shape</TableCell>\r\n            <TableCell align=\"right\">#of stone</TableCell>\r\n            <TableCell align=\"right\">Weight</TableCell>\r\n            <TableCell align=\"center\">Edit</TableCell>\r\n            <TableCell align=\"center\">Delete</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {productCtx.metals.map(row => (\r\n            <TableRow key={row.metalname}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.metalname}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\r\n              <TableCell align=\"right\">{row.color.label}</TableCell>\r\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\r\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\r\n              <TableCell align=\"right\">{row.count}</TableCell>\r\n              <TableCell align=\"right\">{row.weight}</TableCell>\r\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\r\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\r\n\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      </CardContent>\r\n      </Card>\r\n         \r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from 'react-select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Multiselect from '../../components/Select';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\nCardContent} from '@material-ui/core';\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  function createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n  }\r\n  \r\n  const rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n\r\n\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\r\n  };\r\n  const handlemetalcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\r\n  };\r\n  const handlediamndcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\r\n  };\r\n  const handlediamndclarityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\r\n  };\r\n\r\n  const handlemetalpurityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\r\n  };\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.push(\"test\") \r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Default SKU For Display\r\n\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n    \r\n    \r\n    \r\n    \r\n    <Grid item xs={4} >\r\n\r\n                  \r\n                \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_colour}\r\n                      onChange={handleChange('default_metal_colour')}\r\n                      options={productCtx.metalcolour}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Colour\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={4} >\r\n           \r\n\r\n                <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_purity}\r\n                      onChange={handleChange('default_metal_purity')}\r\n                      options={productCtx.metalpurity}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Purity\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid>\r\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \r\n    <Grid item xs={4} >\r\n           \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      isDisabled \r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_size}\r\n                      onChange={handleChange('default_metal_size')}\r\n                      options={productCtx.selected_sizes}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Default Size\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid> : null}\r\n    {/* <Grid item xs={3} >\r\n                <Select\r\n                    value={productCtx.diamond_colour}\r\n                    placeholder=\"Diamond Colour\"\r\n                    onChange={handlediamndcolorChange}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                  />\r\n   \r\n    </Grid>\r\n    <Grid item xs={3} >\r\n    <Select\r\n                    value={productCtx.diamond_clarity}\r\n                    placeholder=\"Diamond Clarity\"\r\n                    onChange={handlediamndclarityChange}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                  />\r\n\r\n    </Grid>                 */}\r\n    \r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Chip,\r\n  TextField,\r\nCardContent} from '@material-ui/core';\r\nimport { ProductContext } from '../../context';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root':{\r\n      padding: 0,\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { className, ...rest } = props;\r\n  const handleChange = type => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value  })\r\n\r\n  };\r\n \r\n  \r\n  return (\r\n    <React.Fragment>\r\n         <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} sm={12} spacing={2}>\r\n    <Grid item xs={6} sm={4} >\r\n                   \r\n                      \r\n           <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.themes}\r\n                      onChange={handleChange('themes')}\r\n                      options={productCtx.masterData.themes.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n           \r\n           \r\n            </Grid>\r\n   \r\n    <Grid item xs={12} sm={4}>\r\n                     \r\n    \r\n\r\n              <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      onChange={handleChange('prod_styles')}\r\n                      options={productCtx.masterData.styles.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n      \r\n    \r\n          <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.occassions}\r\n                      onChange={handleChange('occassions')}\r\n                      options={productCtx.masterData.occasions.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n  \r\n   \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.collections}\r\n                      onChange={handleChange('collections')}\r\n                      options={productCtx.masterData.collections.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4} >\r\n    \r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecount}\r\n                      onChange={handleChange('stonecount')}\r\n                      options={productCtx.masterData.stones.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n    \r\n  \r\n\r\n<Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      onChange={handleChange('stonecolour')}\r\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\n// Import React FilePond\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n// Import FilePond styles\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\r\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\r\n\r\n// Register the plugins\r\n\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { file } from \"@babel/types\";\r\n\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginImageValidateSize,\r\n  FilePondPluginFileRename\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n  },\r\n  img: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    objectFit: \"contain\",\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport default function Review() {\r\n  let count = 0;\r\n  const classes = useStyles();\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalcolour, setMetalcolour] = React.useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n  const [images, setImages] = React.useState({});\r\n  React.useEffect(() => {\r\n    let metalcolour = [];\r\n    let product_images = [];\r\n\r\n    productCtx.metalcolour.forEach((element) => {\r\n      if (element.name === productCtx.default_metal_colour) {\r\n        product_images[element.name] = [];\r\n        if (metalcolour.length > 0) {\r\n          metalcolour.unshift(element);\r\n        } else {\r\n          metalcolour.push(element);\r\n        }\r\n      } else {\r\n        metalcolour.push(element);\r\n        product_images[element.name] = [];\r\n      }\r\n    });\r\n    setMetalcolour(metalcolour);\r\n  }, []);\r\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\r\n    //alert(JSON.stringify(bodaydata))\r\n\r\n    let prodimages = productCtx.product_images;\r\n    if (prodimages) {\r\n      var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1);\r\n      let imagecolourobj = productCtx.product_images[imagecolor];\r\n      var imagecount = 1;\r\n      if (imagecolourobj) {\r\n        imagecount = imagecolourobj.length + 1;\r\n      }\r\n\r\n      let imagename = prodid + \"-\" + imagecount + imagecolor.charAt(0);\r\n      let responsedata = await sendNetworkRequest(\r\n        \"/uploadimage\",\r\n        {},\r\n        { image: bodaydata.fileExtension, filename: imagename, product_id: prodid },\r\n        false\r\n      );\r\n      var returnData = responsedata.data.returnData;\r\n      var signedRequest = returnData.signedRequest;\r\n      var url = returnData.url;\r\n      console.log(\"responseurl\" + url);\r\n      var filepathname = returnData.filepath;\r\n      filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\r\n      var options = {\r\n        headers: {\r\n          \"Content-Type\": bodaydata.fileExtension,\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n      };\r\n\r\n      if (imagecolourobj) {\r\n        const imageobj = {\r\n          name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\r\n          position: imagecolourobj.length + 1,\r\n          color: imagecolor,\r\n          image_url: filepathname,\r\n          url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\r\n        };\r\n        if (uploadtype === \"edit\") {\r\n          imagecolourobj[imageposition] = imageobj;\r\n        } else {\r\n          imagecolourobj.push(imageobj);\r\n        }\r\n        prodimages[imagecolor] = imagecolourobj;\r\n      } else {\r\n        const imageobj = {\r\n          name: prodid + \"_1\" + imagecolor.charAt(0),\r\n          position: imageposition,\r\n          color: imagecolor,\r\n          image_url: filepathname,\r\n          url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\r\n        };\r\n        imagecolourobj = [];\r\n        imagecolourobj.push(imageobj);\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n\r\n      setProductCtx({ ...productCtx, product_images: prodimages });\r\n      // setFiles([])\r\n    }\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n  }\r\n\r\n  function removefiles(imageposition, imagecolor) {\r\n    let prodimages = productCtx.product_images;\r\n\r\n    if (prodimages) {\r\n      let imagecolourobj = prodimages[imagecolor];\r\n\r\n      if (imagecolourobj) {\r\n        if (imagecolourobj.length > imageposition) {\r\n          let removedfile = imagecolourobj[imageposition];\r\n\r\n          imagecolourobj[imageposition] = { ...removedfile, url: \"\" };\r\n        }\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n      setProductCtx({ ...productCtx, product_images: prodimages });\r\n      //alert(JSON.stringify(productCtx.product_images))\r\n    }\r\n  }\r\n\r\n  const handleInit = () => {\r\n    // alert(\"initialized\")\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container className={classes.root} spacing={2}>\r\n        <Grid item direction=\"row\" xs={12}>\r\n          <Grid container justify=\"left\" spacing={2}>\r\n            {metalcolour === undefined\r\n              ? null\r\n              : metalcolour.map((value, index) => (\r\n                  <Grid xs={12} container spacing={1} item>\r\n                    <Grid xs={12} item>\r\n                      <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                        {value.name}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\r\n\r\n            <Grid  xs={3} alignItems=\"center\" item>\r\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            {row.url}\r\n             </Typography> \r\n           {row.url.length === 0 ? <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          allowMultiple={true}\r\n                          maxFiles={3}  \r\n                          files = {files}\r\n                          onupdatefiles={fileItem => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItem)=> {\r\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n\r\n                          }}>\r\n                </FilePond> :  <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          files={[{\r\n                            source: row.url,\r\n                            options: {\r\n                                type: 'local'\r\n                            }\r\n                        }]}\r\n                          server={{\r\n                            load: (source, load) => {\r\n                                // simulates loading a file from the server\r\n                                fetch(source).then(res => \r\n                                  \r\n                                  res.blob()).then(load);\r\n                            }\r\n                        }} \r\n                          onupdatefiles={fileItems => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItems)=> {\r\n                            \r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n                            removefiles(imageindex, value.name)\r\n                          }}>\r\n                </FilePond>\r\n               \r\n                \r\n                         } </Grid>\r\n             ))} */}\r\n                    <Grid xs={12} sm={12} md={12} item>\r\n                      <FilePond\r\n                        allowImageValidateSize\r\n                        imageValidateSizeMinWidth=\"2400\"\r\n                        imageValidateSizeMinHeight=\"2400\"\r\n                        imageValidateSizeMeasure={(file) =>\r\n                          new Promise((resolve, reject) => {\r\n                            console.log(file);\r\n                            console.log(\"filepond property\");\r\n                          })\r\n                        }\r\n                        labelIdle=\"Upload Image\"\r\n                        allowMultiple={true}\r\n                        //files = {files}\r\n                        onupdatefiles={(fileItem) => {\r\n                          // Set currently active file objectsfiles to this.state\r\n                        }}\r\n                        onaddfile={(error, fileItem) => {\r\n                          uploadimagetoserver(fileItem, index, value.name, \"add\");\r\n                        }}\r\n                        onremovefile={(error, fileItem) => {}}\r\n                        fileRenameFunction={(file) =>\r\n                          new Promise((resolve) => {\r\n                            var prodid =\r\n                              \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1);\r\n                            let imagecolourobj = productCtx.product_images[value.name];\r\n                            var imagecount = 1;\r\n                            if (imagecolourobj) {\r\n                              imagecount = imagecolourobj.length + 1;\r\n                            }\r\n                            let imagename = prodid + \"_\" + imagecount + value.name.charAt(0) + file.extension;\r\n                            resolve(imagename);\r\n                          })\r\n                        }\r\n                      ></FilePond>\r\n                      {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\r\n                <Grid  xs={8} item>\r\n\r\n                <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\r\n                      id=\"imagename\"\r\n                      name=\"imagename\"\r\n                      label=\"imagename\"\r\n                      />  \r\n                                        </Grid>          \r\n\r\n                <Grid  xs={4}  item>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                  >Upload</Button> \r\n                                    </Grid>          \r\n  \r\n                  </Grid>           */}\r\n                    </Grid>\r\n                  </Grid>\r\n                ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\nexport default function Review() {\r\n \r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            Page Not Found\r\n          </Typography> \r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ReactDOM from 'react-dom';\r\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\r\nimport 'react-pivottable/pivottable.css'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ProductContext } from '../../context';\r\nimport TableRenderers from 'react-pivottable/TableRenderers';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\r\n\r\n// create Plotly React component via dependency injection\r\nconst Plot = createPlotlyComponent(window.Plotly);\r\n\r\n// create Plotly renderers via dependency injection\r\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\r\n\r\n// see documentation for supported input formats\r\nconst data = [{\r\n'id':'1',\r\n'productid':'SE30002',\r\n'productname':'Gold Ring', \r\n'purity':'18K',\r\n'material':'Gold',\r\n'diamondcolor':'EF',\r\n'diamondclarity':'VVS',\r\n'gemstone':'Navrathna',\r\n'size':'18',\r\n'costprice':30000,\r\n'sellingprice':38000,\r\n'margin':8000\r\n}, \r\n{\r\n  'id':'2',\r\n  'productid':'SE30002',\r\n  'productname':'Diamond Ring', \r\n  'purity':'18K',\r\n  'material':'Diamond',\r\n  'diamondcolor':'EF',\r\n  'diamondclarity':'VVS',\r\n  'gemstone':'Navrathna',\r\n  'size':'12',\r\n  'costprice':70000,\r\n  'sellingprice':98000,\r\n  'margin':28000\r\n  }\r\n];\r\n\r\n  \r\n  const dimensions = [\r\n    {value: 'firstName', title: 'First Name'}\r\n  ]\r\n\r\n  const reduce = function(row, memo) {\r\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\r\n    return memo\r\n  }\r\n\r\n  const calculations = [\r\n    {\r\n      title: 'Amount', value: 'amountTotal',\r\n      template: function(val, row) {\r\n        return '$' + val.toFixed(2)\r\n      },\r\n      sortBy: function(row) {\r\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\r\n      }\r\n    }\r\n  ]\r\n  \r\n  \r\n  \r\nexport default function Pivot(props) {\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  function setcurrentstate(s)\r\n  {\r\n    setProductCtx({ ...productCtx, s })\r\n\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <PivotTableUI\r\n                data={data}\r\n                onChange={s => setcurrentstate(s)}\r\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\r\n                {...productCtx.s}\r\n\r\n          />\r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Step4 from \"./Step4\";\r\nimport Step5 from \"./Step5\";\r\nimport Step6 from \"./Step6\";\r\nimport Step7 from \"./Step7\";\r\nimport Step8 from \"./Step8\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { element } from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n    background: \"#fff\",\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(1, 0, 1),\r\n    background: \"#fff\",\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case \"Step1\":\r\n      return <AddressForm />;\r\n    case \"Step2\":\r\n      return <PaymentForm />;\r\n    case \"Step3\":\r\n      return <Review />;\r\n    case \"Step4\":\r\n      return <Step5 />;\r\n    case \"Step5\":\r\n      return <Step4 />;\r\n    case \"Step6\":\r\n      return <Step6 />;\r\n\r\n    case \"Step7\":\r\n      return <Step7 />;\r\n    default:\r\n      throw new Error(\"Unknown step\");\r\n  }\r\n}\r\n\r\nexport default function Productupload() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [failure, setfailure] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setSuccess(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSuccess(false);\r\n  };\r\n  const handleNext = async () => {\r\n    var isvalid = true;\r\n    var error_content = {};\r\n    // if(productCtx.error_message)\r\n    // {\r\n    //   error_content = productCtx.error_message\r\n\r\n    // }\r\n\r\n    if (activeStep === 0) {\r\n      if (!productCtx.product_type) {\r\n        isvalid = false;\r\n        error_content[\"product_type\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.productname) {\r\n        isvalid = false;\r\n        error_content[\"productname\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.product_categoy) {\r\n        isvalid = false;\r\n        error_content[\"product_categoy\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.metalcolour) {\r\n        isvalid = false;\r\n        error_content[\"metalcolour\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.material_names) {\r\n        isvalid = false;\r\n        error_content[\"material_names\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\r\n        isvalid = false;\r\n\r\n        error_content[\"metalpurity\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\r\n        isvalid = false;\r\n\r\n        error_content[\"metalcolour\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.vendorcode) {\r\n        isvalid = false;\r\n        error_content[\"vendorcode\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.vendorleadtime) {\r\n        isvalid = false;\r\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.default_metal_colour) {\r\n        isvalid = false;\r\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.default_metal_purity) {\r\n        isvalid = false;\r\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.productvendorcode) {\r\n        isvalid = false;\r\n        error_content[\"productvendorcode\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.earringbacking && productCtx.product_type.alias === \"Earrings\") {\r\n        isvalid = false;\r\n        error_content[\"earringbacking\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.selectedgender) {\r\n        isvalid = false;\r\n        error_content[\"selectedgender\"] = \"Error messsage\";\r\n      }\r\n      if ((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0) && productCtx.product_type === \"Rings\") {\r\n        isvalid = false;\r\n        error_content[\"selected_sizes\"] = \"Error messsage\";\r\n      }\r\n\r\n      if ((!productCtx.default_size || productCtx.default_size.length === 0) && productCtx.product_type === \"Rings\") {\r\n        isvalid = false;\r\n        error_content[\"default_size\"] = \"Error messsage\";\r\n      }\r\n      // isvalid = true;\r\n    }\r\n\r\n    if (activeStep === 1) {\r\n      productCtx.metalpurity.forEach((element) => {\r\n        const keyvalue = element.name + \"_metal_weight\";\r\n\r\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\r\n          isvalid = false;\r\n\r\n          error_content[keyvalue] = \"Error messsage\";\r\n        }\r\n      });\r\n      if (!productCtx.themes || productCtx.themes.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"themes\"] = \"Error messsage\";\r\n      }\r\n      if (productCtx.product_type_shortcode === \"R\") {\r\n        if (!productCtx.metal_height) {\r\n          isvalid = false;\r\n          error_content[\"metal_height\"] = \"Error messsage\";\r\n        }\r\n        if (!productCtx.metal_width) {\r\n          isvalid = false;\r\n          error_content[\"metal_width\"] = \"Error messsage\";\r\n        }\r\n      }\r\n\r\n      if (!productCtx.themes || productCtx.themes.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"themes\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"prod_styles\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"occassions\"] = \"Error messsage\";\r\n      }\r\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\r\n      // {\r\n      //   isvalid = false\r\n      //   error_content['collections'] = \"Error messsage\"\r\n      // }\r\n\r\n      //  isvalid = true;\r\n    }\r\n\r\n    setProductCtx({ ...productCtx, error_message: error_content });\r\n    if (activeStep === productCtx.steps.length - 1) {\r\n      console.info(\"HANDLE\", sendNetworkRequest);\r\n      const productseries = productCtx.masterData.productseries[0].productSeries;\r\n\r\n      delete productCtx[\"masterData\"];\r\n\r\n      var formdata = productCtx;\r\n      formdata[\"productseries\"] = productseries;\r\n      console.log(JSON.stringify(formdata));\r\n      setLoading(true);\r\n      const productuploadresponse = await sendNetworkRequest(\"/productupload\", {}, formdata);\r\n\r\n      setLoading(false);\r\n      setSuccess(true);\r\n      console.log(productuploadresponse);\r\n\r\n      await ProductEditPage(productuploadresponse);\r\n      // window.location.replace(\"/productlist\");\r\n    } else {\r\n      if (isvalid) {\r\n        setActiveStep(activeStep + 1);\r\n      }\r\n    }\r\n\r\n    //else\r\n    //  {\r\n    //  }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n  function ProductEditPage(productuploadresponse) {\r\n    setTimeout(function () {\r\n      history.push(`product_attributes/${productuploadresponse[0].product_id}`);\r\n    }, 4500);\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12} sm={12}>\r\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose}>Product Created Successfully.. Redirecting to Product Edit Page</Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"info\">\r\n          Please Wait ...\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          Please try again\r\n        </Alert>\r\n      </Snackbar>\r\n      <Paper className={classes.paper}>\r\n        <Stepper activeStep={activeStep} className={classes.stepper}>\r\n          {productCtx.steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel></StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </Paper>\r\n\r\n      <React.Fragment>\r\n        {activeStep === productCtx.steps.length ? (\r\n          <React.Fragment>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Product Added Successfully\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"></Typography>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            {getStepContent(productCtx.steps[activeStep])}\r\n            <div className={classes.buttons}>\r\n              {activeStep !== 0 && (\r\n                <Button onClick={handleBack} className={classes.button}>\r\n                  Back\r\n                </Button>\r\n              )}\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\r\n                {activeStep === productCtx.steps.length - 1 ? \"Product Upload\" : \"Next\"}\r\n              </Button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Component from \"./Component\";\r\nimport { ProductProvider } from \"../../context\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./Productupload.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport const Productupload = withRouter((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"loaderdiv\">\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n  return (\r\n    <ProductProvider\r\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\r\n    >\r\n      <Component {...props} />\r\n    </ProductProvider>\r\n  );\r\n});\r\nexport default Productupload;\r\n","import { colors } from \"@material-ui/core\";\r\n\r\nconst white = \"#FFFFFF\";\r\nconst black = \"#000000\";\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.indigo[500],\r\n    light: colors.indigo[100],\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[\"A400\"],\r\n    light: colors.blue[\"A400\"],\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400],\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400],\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400],\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400],\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600],\r\n  },\r\n  background: {\r\n    default: \"#F4F6F8\",\r\n    paper: white,\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200],\r\n};\r\n","import palette from \"./palette\";\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: \"35px\",\r\n    letterSpacing: \"-0.24px\",\r\n    lineHeight: \"40px\",\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: \"29px\",\r\n    letterSpacing: \"-0.24px\",\r\n    lineHeight: \"32px\",\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: \"24px\",\r\n    letterSpacing: \"-0.06px\",\r\n    lineHeight: \"28px\",\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: \"20px\",\r\n    letterSpacing: \"-0.06px\",\r\n    lineHeight: \"24px\",\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: \"16px\",\r\n    letterSpacing: \"-0.05px\",\r\n    lineHeight: \"20px\",\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: \"14px\",\r\n    letterSpacing: \"-0.05px\",\r\n    lineHeight: \"20px\",\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: \"16px\",\r\n    letterSpacing: \"-0.05px\",\r\n    lineHeight: \"25px\",\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: \"14px\",\r\n    letterSpacing: \"-0.05px\",\r\n    lineHeight: \"21px\",\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: \"12px\",\r\n    letterSpacing: \"-0.05px\",\r\n    lineHeight: \"21px\",\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: \"12px\",\r\n    letterSpacing: \"-0.04px\",\r\n    lineHeight: \"18px\",\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: \"12px\",\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: \"11px\",\r\n    letterSpacing: \"0.33px\",\r\n    lineHeight: \"13px\",\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: \"11px\",\r\n    fontWeight: 500,\r\n    letterSpacing: \"0.33px\",\r\n    lineHeight: \"13px\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nimport palette from \"./palette\";\r\nimport typography from \"./typography\";\r\nimport overrides from \"./overrides\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        \"*::-webkit-scrollbar\": {\r\n          width: \"0.4em\",\r\n        },\r\n        \"*::-webkit-scrollbar-track\": {\r\n          \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n        },\r\n      },\r\n    },\r\n    ...overrides,\r\n  },\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100,\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","export const makeid = (length, prefix, couponcount) => {\r\n  var count = 1;\r\n  var codes = [];\r\n  if (couponcount) {\r\n    count = couponcount;\r\n  }\r\n  let codelength = length - prefix.length;\r\n  var result = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  generatecode(0);\r\n  function generatecode(generatedcount) {\r\n    for (var i = 0; i < codelength; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    result = prefix.toUpperCase() + result.toUpperCase();\r\n    codes.push(result);\r\n    result = \"\";\r\n    generatedcount = generatedcount + 1;\r\n    if (count > generatedcount) {\r\n      generatecode(generatedcount);\r\n    }\r\n  }\r\n  return codes;\r\n};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport data from './data.json'\r\nimport { Fullloader } from '../../../../components/Loader';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  \r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [discountobj, setDiscountobj] = useState({});\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(1);\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\nReact.useEffect(() => {\r\n  // setDiscountobj({\r\n  //   ...discountobj,\r\n  //   \"discountname\": props.discountcontent.discountname,\r\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\r\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\r\n  //   \"componenets\":props.discountcontent.componenets\r\n  // })\r\n},[])\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  \r\n \r\n  const handleClick = (event, option) => {\r\n    setDiscounttype(option);\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n\r\n  };\r\n\r\n  const handleInputChange = type => e => {\r\n    props.onAdded(type,e.target.value)\r\n\r\n  }\r\n  function changediscountype(optionvalue)\r\n  {\r\n    setDiscountobj({\r\n      ...discountobj,\r\n      \"discounttype\": optionvalue\r\n    })\r\n    props.onAdded(\"discounttype\",optionvalue)\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n      setDiscountobj({\r\n        ...discountobj,\r\n        [type]: value\r\n      })\r\n\r\n      props.onAdded(type,value)\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n    setIsonce(!isonce);\r\n  };\r\n \r\n  \r\n  return (\r\n\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <CardHeader title=\"General Information\" />\r\n      <Divider /> */}\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}> \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n\r\n\r\n<Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountname}\r\n    onChange={handleInputChange(\"discountname\")}\r\n    id=\"discountname\"\r\n    name=\"discountname\"\r\n    label=\"Name\"\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"dense\"\r\n      fullWidth\r\n      value={discountobj.discounttitle}\r\n      onChange={handleInputChange(\"discounttitle\")}\r\n      id=\"discounttitle\"\r\n      name=\"discounttitle\"\r\n      label=\"Title\"\r\n      />\r\n    </Grid>\r\n<Grid   item xs={12} sm={12} >\r\n        \r\n                 \r\n\r\n  <Autocomplete\r\n                 id=\"free-solo-2-demo\"\r\n                 multiple\r\n                 defaultValue={discountobj.componenets}\r\n                 value={discountobj.componenets}\r\n                 className={classes.fixedTag}\r\n                 fullWidth\r\n                 getOptionLabel={option => option.name}\r\n                 options={voucherCtx.voucherMaster.pricing_components}\r\n                 onChange={handleoptionChange('componenets')}\r\n                 renderTags={(value, getTagProps) =>\r\n                 value.map((option, index) => (\r\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                 ))\r\n                 }\r\n                 renderInput={params => (\r\n                 <TextField\r\n                 {...params}\r\n                 label=\"Pricing Components\"\r\n                 margin=\"dense\"\r\n                 variant=\"outlined\"\r\n                 fullWidth\r\n                //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                 />\r\n                 )}\r\n                 />\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n  </Grid>\r\n  \r\n \r\n \r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  <Grid  item xs={12} sm={6} spacing={1}>\r\n\r\n<Typography\r\n  gutterBottom\r\n  variant=\"h5\"\r\n>\r\nDiscount Type\r\n</Typography>\r\n</Grid>\r\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n  {props.categories.map(option => (\r\n    \r\n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n    \r\n  ))}\r\n  </ButtonGroup>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountvalue}\r\n    onChange={handleInputChange(\"discountvalue\")}\r\n    id=\"discountvalue\"\r\n    name=\"discountvalue\"\r\n    label=\"Discount Value\"\r\n    />\r\n  </Grid>\r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  \r\n    </Grid>\r\n         </Grid> \r\n  \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n      </Grid>\r\n     </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { CategoryComponents } from \"./../../components\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { Card, Grid, Chip, Button, TextField, CardHeader, CardContent, Tabs, Tab, Divider, colors } from \"@material-ui/core\";\r\nimport { VoucherContext } from \"../../../../context\";\r\nconst tabs = [\r\n  { value: \"Category\", label: \"Category\" },\r\n  { value: \"Producttype\", label: \"Product type\" },\r\n  { value: \"Material\", label: \"Material\" },\r\n  { value: \"Collections\", label: \"Collections\" },\r\n  { value: \"Occations\", label: \"Occations\" },\r\n  { value: \"Styles\", label: \"Styles\" },\r\n  { value: \"Themes\", label: \"Themes\" },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n    maxWidth: \"100%\",\r\n    minWidth: \"100%\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300],\r\n  },\r\n  cardcontent: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200],\r\n  },\r\n  optionRadio: {\r\n    margin: -10,\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst VoucherComponent = (props) => {\r\n  const { className, ...rest } = props;\r\n\r\n  console.log(props);\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx, voucherMaster } = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n    \"Purity\",\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const myFunction = () => {\r\n    props.onAdded(attrobj);\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    if (type === \"materials\") {\r\n      let elements_arr = [];\r\n      value.forEach((element) => {\r\n        elements_arr.push(element.name);\r\n      });\r\n      if (elements_arr.indexOf(\"Gold\") > -1) {\r\n        setIsgold(true);\r\n      } else {\r\n        setIsgold(false);\r\n      }\r\n\r\n      if (elements_arr.indexOf(\"Diamond\") > -1) {\r\n        setIsdiamond(true);\r\n      } else {\r\n        setIsdiamond(false);\r\n      }\r\n    }\r\n    setAttrobj({\r\n      ...attrobj,\r\n      [type]: value,\r\n    });\r\n\r\n    // props.onAdded(type,value)\r\n  };\r\n  const handleTabsChange = (event, value) => {\r\n    if (value == \"Material\") {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if (tabnames.indexOf(\"Purity\") === -1) {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n      }\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <div className={classes.content}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              value={attrobj.category}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              getOptionLabel={(option) => option.name}\r\n              options={voucherCtx.voucherMaster.product_categories}\r\n              onChange={handleoptionChange(\"category\")}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Product Category\" margin=\"dense\" variant=\"outlined\" fullWidth />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              value={attrobj.product_types}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.product_types}\r\n              onChange={handleoptionChange(\"product_types\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.product_types}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Types\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.materials}\r\n              onChange={handleoptionChange(\"materials\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.materials}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Materials\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n            <Grid item xs={4} sm={4}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                //  value={attrobj.componenets}\r\n                className={classes.fixedTag}\r\n                fullWidth\r\n                options={voucherCtx.voucherMaster.purities}\r\n                onChange={handleoptionChange(\"purities\")}\r\n                getOptionLabel={(option) => option.name}\r\n                value={attrobj.purities}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Purity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n         \r\n          {isdiamond ? (\r\n            <Grid item xs={4} sm={4}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                //  value={attrobj.componenets}\r\n                className={classes.fixedTag}\r\n                fullWidth\r\n                getOptionLabel={(option) => option.diamondtype}\r\n                options={voucherCtx.voucherMaster.diamondtypes}\r\n                onChange={handleoptionChange(\"diamondtype\")}\r\n                value={attrobj.diamondtype}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          ) : null}\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.collections}\r\n              onChange={handleoptionChange(\"collections\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.collections}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Collections\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.occations}\r\n              onChange={handleoptionChange(\"occations\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.occations}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Occassions\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.styles}\r\n              onChange={handleoptionChange(\"styles\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.styles}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Styles\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.themes}\r\n              onChange={handleoptionChange(\"themes\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.themes}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Themes\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\r\n            <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">\r\n              Check Applicable Products\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired,\r\n};\r\nexport default VoucherComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n  const [attributenames, setAttributenames] = useState(\"\");\r\n  const [attributealias, setAttributealias] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    alert(JSON.stringify(option))\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option.name}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  productcontent: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor : theme.palette.white\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n   \r\n  }\r\n\r\n}));\r\nexport default function Viewsku(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup,props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMarkup({\r\n    ...markup,\r\n    [type]: e.target.value\r\n  })\r\n}\r\nconst handleDelete = chipToDelete => () => {\r\n\r\n }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         SKUs\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n        {props.products.map(data => (\r\n        <Chip\r\n        key={data.generated_sku}\r\n        label={data.generated_sku}\r\n        variant=\"outlined\"\r\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n         onDelete={handleDelete(data.generated_sku)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))}\r\n       \r\n       </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          \r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Viewsku from '../Viewsku'\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Products = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectskus, setSelectskus] = useState([]);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function handlecancel(){\r\n    setOpen(false)\r\n  }\r\n  function handleOpen(prodskus)\r\n  {\r\n    setOpen(true)\r\n    setSelectskus(prodskus)\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \r\n\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title =  {props.title} \r\n\r\n         \r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Product ID</TableCell>\r\n                    \r\n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell> */}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order}</TableCell>\r\n                      {/* <TableCell align=\"center\"> \r\n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\r\n                          <VisibilityIcon />\r\n                      </IconButton>\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      \r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={props.products.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nProducts.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nProducts.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Products;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { VoucherContext } from \"../../context\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Chip, IconButton } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { palette } from \"../../theme\";\r\nimport Page from \"../../components/Page\";\r\nimport { Header, Results, Products, AboutVoucher, VoucherComponent } from \"./components\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport FullLoader from \"../../components/Loader\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  productcontent: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor: theme.palette.white,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function Salediscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [products, setProducts] = useState([]);\r\n  const [deletedids, setDeletedids] = useState([]);\r\n\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [productattr, setProductattr] = useState({});\r\n  const [productattrtext, setProductattrtext] = useState(\"\");\r\n  const [errorskus, setErrorskus] = useState([]);\r\n  const [isloaded, setIsloaded] = useState(false);\r\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\r\n  const [statusmessage, setStatusmessage] = useState(\"\");\r\n  const [titlecontent, setTitlecontent] = useState(\"\");\r\n  const [discount_id, setDiscount_id] = useState(\"\");\r\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\r\n\r\n  const [attributeobj, setAttributeobj] = useState({});\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"Created Successfully\",\r\n    severity: \"Success\",\r\n  });\r\n\r\n  const { voucherCtx, setVoucherCtx, materialMaster } = React.useContext(VoucherContext);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  async function getdiscountvalue(discount_id) {\r\n    let bodydata = {\r\n      discountid: discount_id,\r\n    };\r\n    let response = await sendNetworkRequest(\"/getdiscount\", {}, bodydata, false);\r\n    let comparr = [];\r\n    let displyarr = [];\r\n    response.discunt.components.forEach((comp) => {\r\n      comparr.push({\r\n        name: comp,\r\n      });\r\n    });\r\n    // alert(JSON.stringify(response.discunt))\r\n\r\n    // alert(Object.keys(response.discunt.product_attributes))\r\n\r\n    setProducts(response.discunt.product_ids);\r\n    setAttributeobj({\r\n      ...setAttributeobj,\r\n      discountname: response.discunt.discount_name,\r\n      discountvalue: response.discunt.discount_value,\r\n      discounttype: response.discunt.discount_type,\r\n      discounttitle: response.discunt.discount_title,\r\n      componenets: comparr,\r\n      skucount: response.discunt.product_ids.length,\r\n      displaycomp: response.discunt.components,\r\n      attributes: response.discunt.product_attributes,\r\n      allkeys: Object.keys(response.discunt.product_attributes),\r\n    });\r\n    setIsloaded(true);\r\n  }\r\n  async function creatediscount(ispricerun) {\r\n    let skuarray = [];\r\n    while (skus.length > 0) {\r\n      let sku_content = skus.splice(0, 25000);\r\n      skuarray.push(sku_content);\r\n    }\r\n    if (errorskus.length > 0) {\r\n      alert(\"Some skus are overlapping\");\r\n    } else {\r\n      let discount_count = 0;\r\n      setIsloading(true);\r\n      updatediscount(discount_count);\r\n      async function updatediscount() {\r\n        let bodydata = {\r\n          discountvalue: parseFloat(attributeobj.discountvalue),\r\n          discounttype: attributeobj.discounttype,\r\n          componenets: attributeobj.componenets,\r\n          discountname: attributeobj.discountname,\r\n          discounttitle: attributeobj.discounttitle,\r\n          product_attributes: productattr,\r\n          product_attributes_text: productattrtext,\r\n          skus: skuarray[discount_count],\r\n        };\r\n        console.log(JSON.stringify(productattr));\r\n        let response = await sendNetworkRequest(\"/creatediscount\", {}, bodydata, false);\r\n\r\n        discount_count = discount_count + 1;\r\n        if (skuarray.length > discount_count) {\r\n          setLoadingtitle(skus.length + \" Left\");\r\n          updatediscount(discount_count);\r\n        } else {\r\n          setIsloading(false);\r\n          setOpen(true);\r\n          setIsshowpriceupdate(false);\r\n\r\n          window.location = \"/salediscountlist\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const handleDelete = (chipToDelete) => () => {\r\n    //setProducts([])\r\n    let errorindex = errorskus.indexOf(chipToDelete);\r\n    if (errorindex > -1) {\r\n      errorskus.splice(errorindex, 1);\r\n      var erroritems = [];\r\n      errorskus.forEach((itemname) => {\r\n        erroritems.push(itemname);\r\n      });\r\n      setErrorskus(erroritems);\r\n    }\r\n    let index = products.indexOf(chipToDelete);\r\n    products.splice(index, 1);\r\n    var items = [];\r\n    products.forEach((itemname) => {\r\n      items.push(itemname);\r\n    });\r\n    setProducts(items);\r\n\r\n    //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\r\n  };\r\n\r\n  async function filterapllied(value) {\r\n    var bodydata = {};\r\n\r\n    let product_ids = [];\r\n    let response = await sendNetworkRequest(\"/getaliasproduct\", {}, value, false);\r\n    setProducts(response.products);\r\n    setSkus(response.skus);\r\n    setErrorskus(response.eror_skus);\r\n    setIsloading(false);\r\n    setTitlecontent(response.title);\r\n  }\r\n  async function updateprices() {\r\n    alert(\"i am here\");\r\n    var bodydata = {};\r\n    bodydata = {\r\n      pricingcomponent: \"updateskuprice\",\r\n      req_product_id: products,\r\n    };\r\n    setIsshowpriceupdate(true);\r\n\r\n    let response = await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata, false);\r\n  }\r\n  async function handlestatus(e) {\r\n    let bodydata = {\r\n      component: \"updateskuprice\",\r\n    };\r\n    let response = await sendNetworkRequest(\"/getcomponentpricestatus\", {}, bodydata, false);\r\n\r\n    setStatusmessage(response.message);\r\n  }\r\n  function attributeadded(value) {\r\n    \r\n    \r\n    let componentsstring = {};\r\n    let attrs = [];\r\n    let display_arr = [];\r\n    let keys = Object.keys(value);\r\n    keys.forEach((key) => {\r\n      let values = [];\r\n      let alias_arr = [];\r\n      value[key].forEach((valueobj) => {\r\n        values.push(valueobj.name);\r\n        alias_arr.push(valueobj.alias);\r\n        attrs.push(valueobj.name);\r\n      });\r\n      componentsstring[key] = {\r\n        values: values,\r\n        alias: alias_arr,\r\n      };\r\n      let displaytext = key + \" : \" + attrs.join(\" , \");\r\n      display_arr.push(displaytext);\r\n    });\r\n    setProductattr(componentsstring);\r\n    setProductattrtext(display_arr.join(\" | \"));\r\n    //alert(JSON.stringify(componentsstring))\r\n    setIsloading(true);\r\n    //setAttributeobj(value)\r\n    filterapllied(value);\r\n  }\r\n  function valuechange(type, value) {\r\n    setAttributeobj({\r\n      ...attributeobj,\r\n      [type]: value,\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {};\r\n    fetchOrders();\r\n    if (props.location.pathname && props.location.pathname.split(\"/\").length > 2) {\r\n      let discount_id = props.location.pathname.split(\"/\")[2];\r\n      setDiscount_id(discount_id);\r\n      getdiscountvalue(discount_id);\r\n    } else {\r\n      setIsloaded(true);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <FullLoader title={loadingtitle} isopen={isloading} />\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Page className={classes.root} title=\"Orders Management List\">\r\n          {!discount_id ? (\r\n            <>\r\n              <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\r\n              {products.length > 0 ? <Products title={titlecontent} products={errorskus} /> : null}\r\n              {/* <Paper className={classes.productcontent}>\r\n     <Typography variant=\"h5\" component=\"h2\">\r\n        {products.length} Products and {skus.length} skus\r\n      </Typography>\r\n\r\n     \r\n    </Paper> \r\n    {products.map(data => (\r\n        <Chip\r\n        key={data}\r\n        label={data}\r\n        variant=\"outlined\"\r\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n        onDelete={handleDelete(data)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))} */}\r\n              {isloaded || !discount_id ? (\r\n                <AboutVoucher\r\n                  discountcontent={attributeobj}\r\n                  className={classes.aboutvoucher}\r\n                  onAdded={valuechange}\r\n                  categories={[\"Fixed Amount\", \"percentage\"]}\r\n                />\r\n              ) : null}\r\n\r\n              {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\r\n\r\n              <Grid container xs={12} spacing={2} style={{ textAlign: \"center\" }}>\r\n                <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }} spacing={2}>\r\n                  {!isshowpriceupdate ? (\r\n                    <>\r\n                      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{ margin: 16 }} variant=\"contained\">\r\n                        Submit\r\n                      </Button>\r\n\r\n                      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\r\n                    </>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <Grid container xs={12} spacing={2}>\r\n              <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Name\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discountname}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Title\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discounttitle}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Value\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discounttype == 2 ? attributeobj.discountvalue + \"%\" : attributeobj.discountvalue}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Pricing Compponent\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.displaycomp}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {attributeobj.allkeys ? (\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  {attributeobj.allkeys.map((row, index) => (\r\n                    <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                      <Typography variant=\"body2\" component=\"body2\">\r\n                        {row}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" component=\"h5\">\r\n                        {attributeobj.attributes[row].values}\r\n                      </Typography>\r\n                    </Grid>\r\n                  ))}\r\n                  <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                    <Typography variant=\"body2\" component=\"body2\">\r\n                      Total Sku\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      {attributeobj.skucount}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              ) : null}\r\n              <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\r\n                {!isshowpriceupdate ? (\r\n                  <>{/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}</>\r\n                ) : (\r\n                  <>\r\n                    {\" \"}\r\n                    {statusmessage}\r\n                    <IconButton aria-label=\"delete\" onClick={(e) => handlestatus()} color=\"primary\">\r\n                      <RefreshIcon />\r\n                    </IconButton>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Page>\r\n      </MuiPickersUtilsProvider>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './Salediscountcontent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Salediscount = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </VoucherProvider>\r\n\r\n)});\r\nexport default Salediscount;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Seopriority = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SEOPRIORITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.priority && x.priority == taxcontent ||\r\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\r\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\r\n\r\n\r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  // element.email &&  element.email.match(searchtext+'.*')  || \r\n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\r\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \r\n  //     element.username && element.username.match(searchtext+'.*')\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Seopriority;","import { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Breadcrumbs } from '../../components';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport Page from '../../components/Page';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport { ACTIVESHIPPINGZONES, SHIPPINGCHARGES } from '../../graphql/query';\r\nimport data from \"./data.json\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shipmentsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n\r\n  async function createtax(taxcontent) {\r\n    let response = await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n\r\n    getmaster()\r\n  }\r\n  async function getmastervalues() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMasters({\r\n          \"zones\": fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\": [{\r\n            \"id\": 1,\r\n            \"name\": \"By Weight\"\r\n          }, {\r\n            \"id\": 2,\r\n            \"name\": \"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if (fatchvalue.data.allShippingCharges.nodes) {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n            shipobj['isCart'] = element.isCart;\r\n\r\n            if (element.shippingZoneByZoneId) {\r\n              let zines_arr = []\r\n              zines_arr.push(element.shippingZoneByZoneId)\r\n              shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n              shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n            }\r\n\r\n            if (element.chargeType == 1) {\r\n              shipobj['rangetype'] = {\r\n                \"id\": 1,\r\n                \"name\": \"By Weight\"\r\n              }\r\n              shipobj['range'] = \"By Weight\"\r\n            } else {\r\n              shipobj['rangetype'] = {\r\n                \"id\": 2,\r\n                \"name\": \"By Value\"\r\n              }\r\n              shipobj['range'] = \"By Value\"\r\n            }\r\n            shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter(x =>\r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent + \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n      <Page\r\n        className={classes.root}\r\n        title=\"Orders Management List\"\r\n      >\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title={\"Shipment Settings\"}\r\n          masters={masters}\r\n          button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue} />\r\n\r\n      </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addshippingattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingattributes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n    console.log(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmastervalues()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n      \r\n        setMasters({\r\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\":[{\r\n            \"id\":1,\r\n            \"name\":\"By Weight\"\r\n          },{\r\n            \"id\":1,\r\n            \"name\":\"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['displayAttributes'] = element.displayAttributes;\r\n\r\n            shipobj['isActive'] = element.isActive;\r\n            \r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={masters}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingattributes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingzones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [mastercountries, setMastercountries] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\r\n    getmaster()\r\n  }\r\n  async function getmastercountries()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let zones = []\r\n        if(fatchvalue.data.allShippingZones.nodes)\r\n        {\r\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\r\n            let countries = []\r\n            let countrydefault = []\r\n            let shippingcharges = []\r\n\r\n            if(element.shippingZoneCountriesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingZoneCountriesByZoneId.nodes)\r\n              {\r\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\r\n                  countries.push(countryobj.masterCountryByCountryId.name)\r\n                  countrydefault.push(countryobj.masterCountryByCountryId)\r\n                })\r\n              }\r\n            }\r\n            if(element.shippingChargesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingChargesByZoneId.nodes)\r\n              {\r\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\r\n                  shippingcharges.push(countryobj.name)\r\n                })\r\n              }\r\n            }\r\n            let zoneobj = {\r\n              id : element.id,\r\n              isActive : element.isActive,\r\n              name : element.name,\r\n              country  : countries.join(\" , \"),\r\n              charges : shippingcharges.join(\" , \"),\r\n              zonecountry : countrydefault\r\n            }\r\n            zones.push(zoneobj)\r\n          });\r\n        }\r\n\r\n        setMastervalue(zones)\r\n        setFiltervalue(zones)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastercountries()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\r\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \r\n        masters={mastercountries}\r\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingzones;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addtaxattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsettings = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n     <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={[]}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsettings);","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsetup = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsetup);","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Useraddresses = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Useraddresses;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport data from \"./data.json\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Configuration.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nexport const Userconfiguration = withRouter((props) => {\r\n  const master_options = [\r\n    \"Attribute Master\",\r\n    \"Categories\",\r\n    \"ProductTypes\",\r\n    \"Materials\",\r\n    \"Metal Colours\",\r\n    \"Metal Purities\",\r\n    \"Collections\",\r\n    \"Occassions\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n    \"Designs\",\r\n    \"Weights\",\r\n    \"Diamond Types\",\r\n    \"Diamond Settings\",\r\n    \"Diamond Shapes\",\r\n    \"Earring Backings\",\r\n    \"Gemstone Settings\",\r\n    \"Gemstone Shapes\",\r\n    \"Gemstone Types\",\r\n    \"Stones\",\r\n    \"Stone Colours\",\r\n    \"Stone Shapes\",\r\n    \"Gender\",\r\n    \"SEO Priorities\",\r\n    \"Tax Settings 1\",\r\n    \"Tax Settings 2\",\r\n    \"Payment Status\",\r\n    \"Order Status\",\r\n    \"Shipping Zones\",\r\n    \"Shipment Setting I\",\r\n    \"Shipment Setting II\",\r\n  ];\r\n  const master_options_url = [\r\n    \"masterattributes\",\r\n    \"categories\",\r\n    \"producttypes\",\r\n    \"materialmaster\",\r\n    \"mastercolors\",\r\n    \"masterpurities\",\r\n    \"collections\",\r\n    \"masteroccassions\",\r\n    \"masterstyles\",\r\n    \"masterthemes\",\r\n    \"designs\",\r\n    \"weights\",\r\n    \"diamonds\",\r\n    \"diamondsettings\",\r\n    \"diamondshapes\",\r\n    \"earringbacking\",\r\n    \"gemstonesettings\",\r\n    \"gemstoneshapes\",\r\n    \"gemstonetypes\",\r\n    \"masterstones\",\r\n    \"masterstonecolors\",\r\n    \"masterstoneshapes\",\r\n    \"genders\",\r\n    \"seopriority\",\r\n    \"Taxsetup\",\r\n    \"taxsettings\",\r\n    \"paymentstatus\",\r\n    \"orderstatus\",\r\n    \"zones\",\r\n    \"shipmensettings\",\r\n    \"shippingattributes\",\r\n  ];\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => {\r\n    setRaised(true);\r\n  };\r\n  const onMouseOut = () => {\r\n    setRaised(false);\r\n    // setCardindex(-1)\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          User and Roles Management\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {data.options.map((menu, index) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\r\n                  {menu.title}\r\n                </Typography>\r\n\r\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Userconfiguration;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs } from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Userwishlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Userwishlist;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    loader: {\r\n      display: 'flex',\r\n      width: 100,\r\n      paddingLeft: 25\r\n    }\r\n  }));\r\nfunction Newvendor(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n      <Dialog\r\n      open={props.isopen}\r\n      fullWidth={true}\r\n      maxWidth={'md'}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n      <Grid container  spacing={2}> \r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorname\"\r\n            name=\"vendorname\"\r\n            value={\"test\"}\r\n            label=\"Vendor Name\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorcode\"\r\n            name=\"vendorcode\"\r\n            value={\"test\"}\r\n            label=\"Vendor Code\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"organization\"\r\n            name=\"organization\"\r\n            value={\"test\"}\r\n            label=\"Organization\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"partnercategory\"\r\n            name=\"partnercategory\"\r\n            value={\"test\"}\r\n            label=\"Partner Category\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"gstno\"\r\n            name=\"gstno\"\r\n            value={\"test\"}\r\n            label=\"GST Number\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={12} sm={12} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            rows={3}\r\n            multiline\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n      </Grid>\r\n\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button  color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button  color=\"primary\">\r\n            Update\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n \r\n    )\r\n}\r\nexport default Newvendor;","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Newvendor from '../../components/Newvendor'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n\r\n\r\nexport const Vendorlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  \r\n \r\n  function cancelvendorcreation()\r\n  {\r\n    setIsadd(false)\r\n\r\n\r\n  }\r\n  return (\r\n    <>\r\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\r\n    <Grid container  spacing={2}>  \r\n    \r\n    \r\n    <Vendor  onCancel={cancelvendorcreation}  />\r\n   \r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Vendorlist;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [metaldata, setMetaldata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.save(metaldata,props.refetch)\r\n  };\r\n\r\nconst handleoptionChange = type => (event, value) => {\r\n    setMetaldata({ ...metaldata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMetaldata({\r\n    ...metaldata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Gold Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              onChange={handleoptionChange('pricetype')}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingPrice')}\r\n              id=\"sellingprice\"\r\n              name=\"Selling Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React,{ useEffect, useContext, useState }  from 'react';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ConformationAlert from '../../../components/ConformationAlert'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Input, Grid, Card} from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport Moment from 'react-moment';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Addmetalprice from './Addmetalprice'\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\r\n\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\r\nimport { MATERIALMASTER } from '../../../services/queries';\r\nconst columns = [\r\n  { id: 'Metal', label: 'Metal' },\r\n  { id: 'Purity', label: 'Purity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n       \r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   AddContact=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [editdiamond,setEditdiamond] = React.useState({})\r\n  const [goldpricelist,setGoldpricelist] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalmaster,setMetalmaster] = React.useState([])\r\n  const [puritymaster,setPuritymaster] = React.useState([])\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  async function handleAdd(metalcontent,refetch)\r\n\r\n  {\r\nvar bodydata = {}\r\nbodydata = {\r\nmaterial : metalcontent.metal.name,\r\n purity: metalcontent.purity.shortCode,\r\n costprice : metalcontent.costPrice,\r\n sellingprice : metalcontent.sellingPrice,\r\n pricetype: metalcontent.pricetype.label,\r\n vendor : props.vendor,\r\n isadd: true\r\n}\r\nconsole.log(\"--------\")\r\n\r\nconsole.log(JSON.stringify(bodydata))\r\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n setOpen(false)\r\n refetch()\r\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n\r\n  }\r\n  \r\n  function handleEdit(diamondData) {\r\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\r\n      let selectedsellingPriceType = {}\r\n      pricetypes.forEach(element => {\r\n    \r\n        if(element.label == diamondData.sellingPriceType)\r\n        {\r\n          selectedsellingPriceType = element\r\n        }\r\n      })\r\n        setEditdiamond({  \r\n          ...editdiamond,\r\n          priceid: diamondData.id,\r\n          costPrice : diamondData.costPrice,\r\n          sellingPriceType : diamondData.sellingPriceType,\r\n          selectedsellingPriceType : selectedsellingPriceType,\r\n          sellingPrice : diamondData.sellingPrice,\r\n          updatedAt : new Date()\r\n\r\n\r\n        })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id, refetch){\r\n    var bodydata = {}\r\n   bodydata = {\r\n    priceid: editdiamond.priceid,\r\n    costprice : editdiamond.costPrice,\r\n    sellingprice : editdiamond.sellingPrice,\r\n    pricetype: editdiamond.sellingPriceType.label\r\n   }\r\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n    refetch()\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value})\r\n}\r\n  const handleinputChange =type => e => {\r\n   setEditdiamond({\r\n     ...editdiamond,\r\n     [type]: e.target.value\r\n   })\r\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n   \r\n  }\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  // useEffect(() => {\r\n  //   const query = props.client.query\r\n  //     query({\r\n  //       query: ALLPRODUCTLIST,\r\n  //       fetchPolicy: \"network-only\"\r\n  //     }).then((data) => {\r\n  //       // if (data) {\r\n  //       // setProductlists(data.data.allProductLists.nodes)\r\n  //       // setAllProductlists(data.data.allProductLists.nodes)\r\n  //       // setPageCount( data.data.allProductLists.totalCount )\r\n  //       // }else{\r\n  //       //   alert(\"success\")\r\n  //       // }\r\n  //     })\r\n  //   .catch((error) => {console.log(\"smbcj\")})\r\n  //   }, [])\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n      <>\r\n     \r\n    <Card className={classes.cardcontent} > \r\n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n      <Grid item xs={6}> \r\n      <Typography variant=\"h6\"> \r\n        {\"Gold Price Setup\"}\r\n      </Typography> \r\n      </Grid>\r\n      {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\r\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n      </Grid>\r\n\r\n      </Grid>\r\n    </Card>\r\n    <Paper className={classes.root}>\r\n      \r\n      <div className={classes.tableWrapper}>\r\n      \r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          <Query\r\n              query={GOLDPRICELIST}\r\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": props.vendor}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                   \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                        setGoldpricelist(data)\r\n                          return <>\r\n                           <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \r\n\r\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\r\n                                  <TableRow key={row.material}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                     {row.material}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                  {row.purity}\r\n                                    \r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editdiamond.costPrice}\r\n                                    onChange={handleinputChange('costPrice')}\r\n                                    id=\"productvendorcode\"\r\n\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costPrice} </Typography>  }\r\n                                    </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editdiamond.sellingPrice}\r\n                                    onChange={handleinputChange('sellingPrice')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.sellingPrice} </Typography>  }\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                    {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      value={editdiamond.selectedsellingPriceType}\r\n                                      onChange={handleoptionChange('sellingPriceType')}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell>\r\n\r\n\r\n\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?\r\n                                      <TableCell  style = {{width: 170}} align=\"center\">\r\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell> :\r\n                                      <TableCell align=\"center\" style = {{width: 170}}>\r\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                  }\r\n                                </TableRow>\r\n                              ))}\r\n                          </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      }\r\n                  }}\r\n          </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n        </Table> \r\n\r\n      </div>\r\n    </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [diamonddata, setDiamonddata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(diamonddata, props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setDiamonddata({ ...diamonddata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setDiamonddata({\r\n    ...diamonddata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Diamond Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\r\n              options={props.diamonds}\r\n              onChange={handleoptionChange('diamondtype')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Diamond Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport { Grid, Card } from \"@material-ui/core\";\r\nimport ConformationAlert from \"../../../components/ConformationAlert\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\n\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { DIAMONDPRICELIST, PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE, PRODUCTDIAMONDTYPES } from \"../../../graphql/query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from \"@material-ui/core\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Moment from \"react-moment\";\r\nimport { BASE_URL } from \"../../../config\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport Adddiamondprice from \"./Adddiamondprice\";\r\n\r\nimport { Chip, TextField } from \"@material-ui/core\";\r\nconst columns = [\r\n  { id: \"Diamond Colour\", label: \"Diamond Colour\" },\r\n  { id: \"Diamond Clarity\", label: \"Diamond Clarity\" },\r\n  { id: \"Cost Price\", label: \"Cost Price\" },\r\n  { id: \"Selling Price\", label: \"Selling Price\" },\r\n  { id: \"Selling Price Type\", label: \"Selling Price Type\" },\r\n  { id: \"updatedAt\", label: \"updatedAt\" },\r\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\"></IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [editdiamond, setEditdiamond] = React.useState({});\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid, setDeleteid] = React.useState(\"\");\r\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n    let variables = {\r\n      elementId: deleteid,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: DELETEDIAMONDCHARGE, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n          // refetchval()\r\n        }\r\n      })\r\n      .catch((err) => {});\r\n    setIsconformation(false);\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id);\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(metalcontent, refetch) {\r\n    alert(\"i am here\");\r\n    let bodydata = {};\r\n    bodydata[\"diamondcolor\"] = metalcontent.diamondtype.diamondColor;\r\n    bodydata[\"diamondclarity\"] = metalcontent.diamondtype.diamondClarity;\r\n    bodydata[\"costprice\"] = metalcontent.costPrice;\r\n    bodydata[\"pricetype\"] = metalcontent.pricetype.label;\r\n    bodydata[\"sellingprice\"] = metalcontent.sellingprice;\r\n    bodydata[\"vendor_code\"] = props.vendor;\r\n    bodydata[\"isadd\"] = true;\r\n\r\n    await sendNetworkRequest(\"/updatediamondprice\", {}, bodydata);\r\n    setOpen(false);\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      priceid: diamondData.id,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date(),\r\n    });\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {};\r\n    bodydata = {\r\n      priceid: editdiamond.priceid,\r\n      costprice: editdiamond.costPrice,\r\n      sellingprice: editdiamond.sellingPrice,\r\n      pricetype: editdiamond.sellingPriceType.label,\r\n    };\r\n    await sendNetworkRequest(\"/updatediamondprice\", {}, bodydata);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value });\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      [type]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: {} }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        // alert(JSON.stringify(fatchvalue))\r\n        setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes);\r\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <Card className={classes.cardcontent}>\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">{\"Diamond Price Setup\"}</Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              style={{ paddingRight: 16, paddingLeft: 16 }}\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={DIAMONDPRICELIST}\r\n                onCompleted={(data) => setPageCount(data.allDiamondPriceSettings.totalCount)}\r\n                variables={{ vendorCode: props.vendor }}\r\n              >\r\n                {({ data, loading, error, refetch }) => {\r\n                 \r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>;\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return (\r\n                      <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          refetch={refetch}\r\n                          data={deleteid}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation}\r\n                        />\r\n                        {open ? (\r\n                          <Adddiamondprice\r\n                            diamonds={diamondmaster}\r\n                            isadd={open}\r\n                            refetch={refetch}\r\n                            actionSave={handleAdd}\r\n                            actionclose={handleClose}\r\n                          />\r\n                        ) : null}\r\n\r\n                        {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.diamondClarity}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.diamondClarity}\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.diamondColour}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.costPrice}\r\n                                  onChange={handleinputChange(\"costPrice\")}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                />\r\n                              ) : (\r\n                                <Typography className={classes.heading}>{row.costPrice} </Typography>\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.sellingPrice}\r\n                                  onChange={handleinputChange(\"sellingPrice\")}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                />\r\n                              ) : (\r\n                                <Typography className={classes.heading}>{row.sellingPrice} </Typography>\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <Autocomplete\r\n                                  id=\"free-solo-2-demo\"\r\n                                  fullWidth\r\n                                  disableClearable\r\n                                  className={classes.fixedTag}\r\n                                  getOptionLabel={(option) => option.name}\r\n                                  options={[\r\n                                    { label: 1, name: \"Flat\" },\r\n                                    { label: 2, name: \"Percentage\" },\r\n                                  ]}\r\n                                  onChange={handleoptionChange(\"sellingPriceType\")}\r\n                                  renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                    ))\r\n                                  }\r\n                                  renderInput={(params) => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\r\n                                    />\r\n                                  )}\r\n                                />\r\n                              ) : (\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPriceType === 1 ? \"Flat\" : \"Percentage\"}{\" \"}\r\n                                </Typography>\r\n                              )}\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">{row.updatedAt}</Moment>\r\n                            </TableCell>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <TableCell style={{ width: 170 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku, refetch)}>\r\n                                  <SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}>\r\n                                  <CancelIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell align=\"center\" style={{ width: 170 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}>\r\n                                  <EditIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => handleDelete(row)}>\r\n                                  <DeleteIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                            )}\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    );\r\n                  } else {\r\n                    return <div>{\"Fetch Products\"}</div>;\r\n                  }\r\n                }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { TextField, Grid, Chip } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addgemstoneprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [gemstonedata, setGemstonedata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose();\r\n  };\r\n\r\n  const handleSave = () => {\r\n  \r\n    props.actionSave(gemstonedata);\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n \r\n    setGemstonedata({ ...gemstonedata, [type]: value });\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n  \r\n    setGemstonedata({\r\n      ...gemstonedata,\r\n      [type]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"gemstone\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.gems}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose Gemstone\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            {props.viewtype == 1 ? \r\n             <>          \r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Weight Start\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"weightstart\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Weight End\"\r\n                onChange={handleinputChange(\"weightend\")}\r\n                fullWidth\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n              </> : null }\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Cost Price\"\r\n                fullWidth\r\n                id=\"productvendorcode\"\r\n                onChange={handleinputChange(\"costprice\")}\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"pricetype\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={[\r\n                  { label: 1, name: \"Flat\" },\r\n                  { label: 2, name: \"Percentage\" },\r\n                ]}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Selling Price Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Selling Price\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"sellingPrice\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport ConformationAlert from \"../../../components/ConformationAlert\";\r\n\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { GEMPRICELIST, GEMSTONEMASTER, DELETEGEMCHARGE, PRODUCTLISTSTATUSEDIT } from \"../../../graphql/query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from \"@material-ui/core\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Moment from \"react-moment\";\r\nimport { BASE_URL } from \"../../../config\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport Addgemstoneprice from \"./Addgemstoneprice\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\n\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip, TextField } from \"@material-ui/core\";\r\nconst columns = [\r\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\r\n  { id: \"From weight\", label: \"From weight\" },\r\n  { id: \"To Weight\", label: \"To Weight\" },\r\n  { id: \"Cost Price\", label: \"Cost Price\" },\r\n\r\n  // { id: \"Selling Price Type\", label: \"Selling Price Type\" },\r\n  { id: \"updatedAt\", label: \"updatedAt\" },\r\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\r\n];\r\nconst stonecountcolumns = [\r\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\r\n  { id: \"From weight\", label: \"From weight\" },\r\n  { id: \"To Weight\", label: \"To Weight\" },\r\n\r\n  { id: \"Selling Price\", label: \"Selling Price\" },\r\n  // { id: \"Selling Price Type\", label: \"Selling Price Type\" },\r\n  { id: \"updatedAt\", label: \"updatedAt\" },\r\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\"></IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid, setVendorid] = React.useState(props.vendor);\r\n  const [deleteid, setDeleteid] = React.useState([]);\r\n  const [gemmaster, setGemmaster] = React.useState([]);\r\n\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\r\n  const [editgem, setEditgem] = React.useState({});\r\n  const [gemlist, setgemlist] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(diamondcontent) {\r\n    // if (deleteid.length > 0) {\r\n    //   let variables = {\r\n    //     elementId: deleteid[0],\r\n    //   };\r\n    //   await props.client.mutate({ mutation: DELETEGEMCHARGE, variables });\r\n    // }\r\n    // if (deleteid.length > 1) {\r\n    //   let variables = {\r\n    //     elementId: deleteid[1],\r\n    //   };\r\n    //   await props.client.mutate({ mutation: DELETEGEMCHARGE, variables });\r\n    // }\r\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\r\n\r\n    //   if(res!==null){\r\n    //    // refetch();\r\n    //     // refetchval()\r\n    //     getgemlist()\r\n    //   }\r\n    // }).catch(err => {\r\n\r\n    // })\r\n    // setgemlist([]);\r\n\r\n    // setDeleteid([]);\r\n    // getgemlist();\r\n    // setIsconformation(false);\r\n\r\n    let variables = {\r\n      elementId: deleteid,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: DELETEGEMCHARGE, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          //refetch();\r\n          // refetchval()\r\n        }\r\n      })\r\n      .catch((err) => {});\r\n    setIsconformation(false);\r\n    getgemlist();\r\n  }\r\n  function handleDelete(diamondData) {\r\n   \r\n    setDeleteid(diamondData.id);\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(gemstonedata) {\r\n    var bodydata = {};\r\n    bodydata[\"gemstone_type\"] = gemstonedata.gemstone.name;\r\n    bodydata[\"weight_start\"] = gemstonedata.weightstart;\r\n    bodydata[\"weight_end\"] = gemstonedata.weightend;\r\n    bodydata[\"cost_price\"] = gemstonedata.costprice;\r\n    bodydata[\"vendor_code\"] = props.vendor;\r\n    bodydata[\"selling_price_type\"] = gemstonedata.pricetype.label;\r\n    bodydata[\"selling_price\"] = gemstonedata.sellingPrice;\r\n    bodydata[\"isadd\"] = true;\r\n    bodydata[\"ratetype\"] = props.viewtype;\r\n    // alert(JSON.stringify(gemstonedata)\r\n\r\n    await sendNetworkRequest(\"/updategemstoneprice\", {}, bodydata);\r\n    setOpen(false);\r\n    getgemlist();\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n    add: false,\r\n  });\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditgem({\r\n      ...editgem,\r\n      price: diamondData.price,\r\n      updatedAt: new Date(),\r\n    });\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\r\n  }\r\n\r\n  async function handleSave(row) {\r\n    var bodydata = {};\r\n\r\n    console.log(row);\r\n    row.price = editgem.price;\r\n    console.log(row);\r\n\r\n    let variables = {\r\n      cost_price_id: row.id,\r\n\r\n      // weight_start: row.weight_start,\r\n      // weight_end: row.weight_end,\r\n      cost_price: editgem.price,\r\n    };\r\n\r\n    await sendNetworkRequest(\"/updategemstoneprice\", {}, variables);\r\n\r\n    getgemlist();\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  async function getgemlist() {\r\n    let bodydata = {\r\n      vendorid: props.vendor,\r\n      ratetype: props.viewtype,\r\n    };\r\n    let response = await sendNetworkRequest(\"/getvendorgemprice\", {}, bodydata);\r\n    // setProductlists(response.products)\r\n    setgemlist(response.gems);\r\n  }\r\n  useEffect(() => {\r\n    getgemlist();\r\n  }, [vendorid]);\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: {} }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const handleinputChange = (type) => (e) => {\r\n    setEditgem({\r\n      ...editgem,\r\n      [type]: e.target.value,\r\n    });\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n  };\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <ConformationAlert\r\n        title={\"Are you sure to delete?\"}\r\n        positivebtn={\"Yes\"}\r\n        negativebtn={\"No\"}\r\n        message={\"\"}\r\n        data={deleteid}\r\n        onSuccess={handledelete}\r\n        onCancel={hidedeleteconformation}\r\n        isshow={isconformation}\r\n      />\r\n\r\n      <Card className={classes.cardcontent}>\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">{props.title}</Typography>\r\n          </Grid>\r\n          {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              style={{ paddingRight: 16, paddingLeft: 16 }}\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n        {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\r\n        \r\n      </div> */}\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              {props.viewtype == 1 ? (\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ) : (\r\n                <TableRow>\r\n                  {stonecountcolumns.map((column) => (\r\n                    <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              )}\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    debugger\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <> */}\r\n\r\n              <Query\r\n                query={GEMPRICELIST}\r\n                onCompleted={(data) => setPageCount(data.allGemstonePriceSettings.totalCount)}\r\n                variables={{ vendorCode: props.vendor, ratetype: props.viewtype }}\r\n              >\r\n                {({ data, loading, error, refetch }) => {\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>;\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return (\r\n                      <>\r\n                        {data.allGemstonePriceSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.gemstoneType}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.gemstoneType}\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.weightStart}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              <Typography className={classes.heading}>{row.weightEnd}</Typography>\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editgem.price}\r\n                                  onChange={handleinputChange(\"price\")}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                />\r\n                              ) : (\r\n                                <Typography className={classes.heading}>{row.price} </Typography>\r\n                              )}\r\n                            </TableCell>\r\n                            {/* <TableCell align=\"left\">\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editgem.sellingPrice}\r\n                                  onChange={handleinputChange(\"sellingPrice\")}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                />\r\n                              ) : (\r\n                                <Typography className={classes.heading}>{row.sellingPrice} </Typography>\r\n                              )}\r\n                            </TableCell> */}\r\n                            {/* <TableCell align=\"left\">\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <Autocomplete\r\n                                  id=\"free-solo-2-demo\"\r\n                                  fullWidth\r\n                                  disableClearable\r\n                                  className={classes.fixedTag}\r\n                                  getOptionLabel={(option) => option.name}\r\n                                  options={[\r\n                                    { label: 1, name: \"Flat\" },\r\n                                    { label: 2, name: \"Percentage\" },\r\n                                  ]}\r\n                                  renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                    ))\r\n                                  }\r\n                                  renderInput={(params) => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\r\n                                    />\r\n                                  )}\r\n                                />\r\n                              ) : (\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPriceType === 1 ? \"Flat\" : \"Percentage\"}{\" \"}\r\n                                </Typography>\r\n                              )}\r\n                            </TableCell> */}\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">{row.updatedAt}</Moment>\r\n                            </TableCell>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <TableCell style={{ width: 170 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row)}>\r\n                                  <SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}>\r\n                                  <CancelIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell align=\"center\" style={{ width: 170 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}>\r\n                                  <EditIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => handleDelete(row)}>\r\n                                  <DeleteIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                            )}\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    );\r\n                  } else {\r\n                    return <div>{\"Fetch Products\"}</div>;\r\n                  }\r\n                }}\r\n              </Query>\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        {open ? (\r\n          <Addgemstoneprice\r\n            gems={gemmaster}\r\n            isadd={open}\r\n            viewtype={props.viewtype}\r\n            actionSave={handleAdd}\r\n            actionclose={handleClose}\r\n            title={props.title}\r\n            // gems={gemmaster}\r\n            //\r\n            // isadd={open}\r\n            // title={props.title}\r\n            // actionSave={handleAdd}\r\n            // actionclose={handleClose}\r\n          />\r\n        ) : null}\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmakingchargeprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [makingcharge, setMakingcharge] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(makingcharge)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMakingcharge({ ...makingcharge, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMakingcharge({\r\n    ...makingcharge,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight Start\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightstart')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight End\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightend')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid, Card } from \"@material-ui/core\";\r\n\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { MAKINGCHARGEPRICELIST, PRODUCTLISTSTATUSEDIT, METALMASTER, DELETEMAKINGCHARGE } from \"../../../graphql/query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch } from \"@material-ui/core\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport Moment from \"react-moment\";\r\nimport { BASE_URL } from \"../../../config\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport Addmakingchargeprice from \"./Addmakingchargeprice\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport ConformationAlert from \"../../../components/ConformationAlert\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip, TextField } from \"@material-ui/core\";\r\nconst columns = [\r\n  { id: \"Metal\", label: \"Metal\" },\r\n  { id: \"Purity\", label: \"Purity\" },\r\n  { id: \"From Weight\", label: \"From Weight\" },\r\n  { id: \"To weight\", label: \"To weight\" },\r\n  { id: \"Cost Price\", label: \"Cost Price / Selling Price\" },\r\n\r\n  { id: \"updated On\", label: \"updated On\" },\r\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\"></IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid, setVendorid] = React.useState(props.vendor);\r\n  const [editmc, setEditmc] = React.useState({});\r\n  const [puritymaster, setPuritymaster] = React.useState([]);\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\r\n  const [editdiamond, setEditdiamond] = React.useState({});\r\n  const [mchargelist, setMchargelist] = React.useState([]);\r\n  const [deleteid, setDeleteid] = React.useState(\"\");\r\n  const [metalmaster, setMetalmaster] = React.useState([]);\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n    add: false,\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent) {\r\n    let variables = {\r\n      elementId: deleteid,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: DELETEMAKINGCHARGE, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          //refetch();\r\n          // refetchval()\r\n        }\r\n      })\r\n      .catch((err) => {});\r\n    setIsconformation(false);\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id);\r\n    setIsconformation(true);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false, add: true });\r\n  }\r\n  async function handleAdd(makingcontent) {\r\n    let bodydata = {};\r\n    bodydata[\"material\"] = makingcontent.metal.name;\r\n    bodydata[\"weight_start\"] = makingcontent.weightstart;\r\n    bodydata[\"weight_end\"] = makingcontent.weightend;\r\n    bodydata[\"price_type\"] = makingcontent.pricetype.label;\r\n    bodydata[\"vendor_code\"] = props.vendor;\r\n    bodydata[\"purity\"] = makingcontent.purity.shortCode;\r\n    bodydata[\"cost_price\"] = makingcontent.costPrice;\r\n    bodydata[\"selling_price\"] = makingcontent.sellingprice;\r\n    bodydata[\"isadd\"] = true;\r\n\r\n    await sendNetworkRequest(\"/updatemakingcharge\", {}, bodydata);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    setOpen(false);\r\n    getmclist();\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditmc({\r\n      ...editmc,\r\n      price: diamondData.price,\r\n      updatedAt: new Date(),\r\n    });\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\r\n  }\r\n  async function getmclist() {\r\n    let bodydata = {\r\n      vendorid: props.vendor,\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\"/getvendormakingprice\", {}, bodydata);\r\n    setMchargelist(response.gems);\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: {} }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes);\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getmclist();\r\n  }, [vendorid]);\r\n  async function handleSave(row) {\r\n    var bodydata = {};\r\n    console.log(row);\r\n    row.price = editmc.price;\r\n    console.log(row);\r\n\r\n    let variables = {\r\n      cost_price_id: row.id,\r\n\r\n      weight_start: row.weight_start,\r\n      weight_end: row.weight_end,\r\n      cost_price: editmc.price,\r\n    };\r\n    console.log(editmc);\r\n    await sendNetworkRequest(\"/updatemakingcharge\", {}, variables);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    getmclist();\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setEditmc({\r\n      ...editmc,\r\n      [type]: e.target.value,\r\n    });\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n  };\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <ConformationAlert\r\n        title={\"Are you sure to delete?\"}\r\n        positivebtn={\"Yes\"}\r\n        negativebtn={\"No\"}\r\n        message={\"\"}\r\n        data={deleteid}\r\n        onSuccess={handledelete}\r\n        onCancel={hidedeleteconformation}\r\n        isshow={isconformation}\r\n      />\r\n      <Card className={classes.cardcontent}>\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">{props.title}</Typography>\r\n          </Grid>\r\n          {/* <Grid item > \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search By Purity\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              style={{ paddingRight: 16, paddingLeft: 16 }}\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label === \"Cost Price\" ? (props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\") : column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={MAKINGCHARGEPRICELIST}\r\n                onCompleted={(data) => setPageCount(data.allMakingChargeSettings.totalCount)}\r\n                variables={{ vendorCode: props.vendor, ratetype: props.ratetype }}\r\n              >\r\n                {({ data, loading, error, refetch }) => {\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>;\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return (\r\n                      <>\r\n                        {data.allMakingChargeSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.material}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.material}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">{row.purity}</TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_start}\r\n                                    onChange={handleinputChange('weight_start')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                              <Typography className={classes.heading}>{row.weightStart}</Typography>\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_end}\r\n                                    onChange={handleinputChange('weight_end')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                              <Typography className={classes.heading}>{row.weightEnd}</Typography>\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editmc.price}\r\n                                  onChange={handleinputChange(\"price\")}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                />\r\n                              ) : (\r\n                                <Typography className={classes.heading}>{row.price}</Typography>\r\n                              )}\r\n                            </TableCell>\r\n\r\n                            {/* <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell> */}\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">{row.updatedAt}</Moment>\r\n                            </TableCell>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <TableCell style={{ width: 170 }} align=\"left\">\r\n                                <Button onClick={(e) => handleSave(row)}>\r\n                                  <SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}>\r\n                                  <CancelIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell align=\"left\" style={{ width: 170 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}>\r\n                                  <EditIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => handleDelete(row)}>\r\n                                  <DeleteIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                            )}\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    );\r\n                  } else {\r\n                    return <div>{\"Fetch Products\"}</div>;\r\n                  }\r\n                }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,100,200,500]}\r\n                \r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter> */}\r\n          </Table>\r\n        </div>\r\n        {open ? (\r\n          <Addmakingchargeprice\r\n            metals={metalmaster}\r\n            purities={puritymaster}\r\n            isadd={open}\r\n            title={\"Add Making Charge Setup\"}\r\n            actionSave={handleAdd}\r\n            actionclose={handleClose}\r\n          />\r\n        ) : null}\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"./components/Product\";\r\nimport Diamonds from \"./components/Diamonds\";\r\nimport Gemstones from \"./components/Gemstones\";\r\nimport Makingcharge from \"./components/Makingcharge\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({}));\r\nexport const Vendorprice = withRouter((props) => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n\r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = (type) => (event, value) => {\r\n    setVendorcode(value.shortCode);\r\n  };\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: VENDORLIST, variables: {} }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setVendorlist({\r\n          ...vendorlist,\r\n          vendors: fatchvalue.data.allMasterVendors.nodes,\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} sm={12}>\r\n        <Typography component=\"h6\" variant=\"h6\">\r\n          Vendor Based Price List\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={4} sm={4}>\r\n        <Autocomplete\r\n          id=\"free-solo-2-demo\"\r\n          fullWidth\r\n          disableClearable\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name + \"   (\" + option.shortCode + \") \"}\r\n          options={vendorlist.vendors}\r\n          onChange={handlevendorchange(\"vendor\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />)\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Choose Vendor\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n      {vendorcode ? (\r\n        <>\r\n          {/* <Grid item xs={12} sm={12}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n           Gold Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n            <Product vendor={vendorcode} />\r\n          </Grid>\r\n          {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n            <Diamonds vendor={vendorcode} />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup By weight\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n            <Gemstones title={\"Gemstone Price Setup By Weight\"} vendor={vendorcode} viewtype={1} />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           \r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n            <Gemstones title={\"Gemstone Price Setup By No of Stones\"} vendor={vendorcode} viewtype={2} />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Cost Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n            <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Selling Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n            <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\r\n          </Grid>\r\n        </>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default withRouter(Vendorprice);\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  ButtonGroup,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Switch,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState([]);\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(\"\");\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  const handleendDateChange = val => {\r\n      setSelectedendDate(val)\r\n      setVoucherCtx({\r\n        ...voucherCtx,\r\n        \"enddate\": val\r\n      })\r\n    };\r\n  const handleDateChange = val => {\r\n    setSelectedDate(val)\r\n\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"startdate\": val\r\n    })\r\n};\r\n  const handleClick = (event, option) => {\r\n   // setDiscounttype(option);\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"discounttype\": option\r\n   })\r\n  };\r\n  const handleMinimumreq = (event, option) => {\r\n   // setDiscounttype(option);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"minimumreq\": option\r\n    })\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n    \r\n  };\r\n  const handleInputChange = type => (event, value) => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"vouchercodes\":value\r\n    })\r\n    setVouchercode(value)\r\n  }\r\n  // const handleInputChange = (event, option) => {\r\n  //   alert(JSON.stringify(option))\r\n  // }\r\n  // const handleInputChange = type => e => {\r\n  //   setVouchercode(e.target.value.toUpperCase())\r\n  // }\r\n  const handlevouchername = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handlevaluechange = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handleisloggedin = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.checked\r\n    })\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n  //  setIsonce(!isonce);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"isonce\": !voucherCtx.isonce\r\n    })\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\r\n   })\r\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid container item xs={12} sm={12} spacing={1} >\r\n      <Grid   item xs={6} sm={6} >\r\n      <Grid container  item xs={12} sm={12} spacing={1}>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlevouchername('vouchername')}\r\n            id=\"vouchername\"\r\n            name=\"vouchername\"\r\n            value={voucherCtx.vouchername}\r\n            label=\"Voucher Name\"\r\n            />\r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlePrefixChange('voucherprefix')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n             value={voucherprefix}\r\n            label=\"Voucher Prefix\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={6} sm={6} >\r\n\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handleCountChange('vouchercount')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            // value={vouchercode}\r\n            label=\"No of vouchers\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={12} sm={12} >\r\n\r\n         {/* <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            \r\n            onChange={handleInputChange('vouchercode')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            value={vouchercode}\r\n            label=\"Voucher Code\"\r\n            />  */}\r\n\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       freeSolo\r\n                       defaultValue={voucherCtx.vouchercode}\r\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       options={[]}\r\n                        onChange={handleInputChange('vouchercode')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Voucher Codes\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                      //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                       />\r\n                       )}\r\n                       />\r\n                       </Grid>\r\n      </Grid>\r\n      </Grid> \r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            multiline\r\n            rows=\"7\"\r\n            onChange={handlevaluechange('voucherdescription')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n           value={voucherCtx.voucherdescription}\r\n            label=\"Voucher Description\"\r\n            />\r\n\r\n      </Grid>\r\n      \r\n    \r\n      <Grid   item xs={2} sm={2} >\r\n        <Button size=\"small\" variant=\"contained\" \r\n        onClick={event => generateCoupon(event)}\r\n        className={classes.margin}>\r\n            Generate Voucher\r\n          </Button>\r\n      </Grid>\r\n      \r\n          \r\n\r\n        </Grid>\r\n        \r\n       \r\n       \r\n     \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n        <FormControlLabel\r\n        control={\r\n          <Switch\r\n             checked={voucherCtx.isloggedin}\r\n             onChange={handleisloggedin('isloggedin')}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        labelPlacement=\"start\"\r\n\r\n        label=\"Applicable for loggedin user\"\r\n      />  \r\n      </Grid>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n                      \r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n      Discount Type\r\n      </Typography>\r\n      </Grid>\r\n        \r\n\r\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {props.categories.map(option => (\r\n              \r\n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        </Grid>\r\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n            <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"orderqty\"\r\n          name=\"orderqty\"\r\n          label=\"Minimum order Quantity\"\r\n          onChange={handlevaluechange('minimumqty')}\r\n          value={voucherCtx.minimumqty}\r\n          />\r\n        </Grid> </Grid> :  \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Discount Value\"\r\n          onChange={handlevaluechange('voucherdiscount')}\r\n          value={voucherCtx.voucherdiscount}\r\n          />\r\n          </Grid>\r\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Maximun Discount Value\"\r\n          onChange={handlevaluechange('maxvoucherdiscount')}\r\n          value={voucherCtx.maxvoucherdiscount}\r\n          />\r\n          </Grid> : null}\r\n\r\n        </Grid>\r\n}\r\n      \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Uses per user\"\r\n          defaultValue=\"1\"\r\n          helperText=\"One User can use how many times\"\r\n          onChange={handlevaluechange('isonce')}\r\n          value={voucherCtx.isonce}\r\n          />\r\n        {/* <CardActionArea>\r\n\r\n        <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: voucherCtx.isonce\r\n            })}\r\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n\r\n            key={\"\"}\r\n          >\r\n                <CardActions>\r\n\r\n            <Radio\r\n              checked={voucherCtx.isonce}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              label\r\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n              />\r\n            </CardActions>\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               If this option is disabled, discount will be counted for every eligible product\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          </CardActionArea> */}\r\n          </Grid>\r\n         \r\n          <Grid item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('limittouse')}\r\n          fullWidth\r\n          value={voucherCtx.limittouse}\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          helperText=\"How may times we can  use this\"\r\n\r\n          />\r\n        \r\n        </Grid>\r\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n        Minimum Requirements\r\n        </Typography>\r\n      </Grid>\r\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\r\n              \r\n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        \r\n        </Grid> */}\r\n\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        <Grid item xs={12} sm={12} spacing={1}>\r\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('minorder')}\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          value={voucherCtx.minorder}\r\n          label={'Minimum Order Value'}\r\n          />\r\n        {/* } */}\r\n        </Grid>\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n          >\r\n            Usage Limits\r\n            </Typography>\r\n          </Grid> */}\r\n{/* \r\n          <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\r\n            })}\r\n            key={\"\"}\r\n            onClick={event => handleusagelimit(event, \"once\")}\r\n\r\n          >\r\n            <Radio\r\n              checked={usagelimit === \"once\"}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              onClick={event => handleusagelimit(event, \"once\")}\r\n            />\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                className={selected === \"\" ? classes.selectedtext : null}\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               Limit to one use per customer\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          \r\n            </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n<div\r\n  className={clsx(classes.option, {\r\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\r\n  })}\r\n  key={\"\"}\r\n  onClick={event => handleusagelimit(event, \"usagecount\")}\r\n\r\n>\r\n  <Radio\r\n    checked={usagelimit === \"usagecount\"}\r\n    className={classes.optionRadio}\r\n    color=\"primary\"\r\n    onClick={event => handleusagelimit(event, \"usagecount\")}\r\n  />\r\n  <div className={classes.optionDetails}>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"h5\"\r\n    >\r\n     Usage Limit\r\n    </Typography>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"title\"\r\n    >\r\n     Limit number of times this discount can be used in total\r\n    </Typography>\r\n    </div>\r\n  \r\n</div>\r\n<Grid item xs={12} sm={12} spacing={1}>\r\n        {usagelimit === 'once' ? null :\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          \r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          />\r\n        }\r\n        </Grid>\r\n  </Grid> */}\r\n          </Grid>\r\n          <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n        <DateTimePicker\r\n          label=\"Start Date\"\r\n          fullWidth\r\n          inputVariant=\"outlined\"\r\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \r\n          minDate={new Date()}    \r\n          onChange={handleDateChange}\r\n        />\r\n    </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n            <DateTimePicker\r\n      label=\"End Date\"\r\n      fullWidth\r\n      inputVariant=\"outlined\"\r\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\r\n      minDate={selectedDate}\r\n      strictCompareDates={true}\r\n      onChange={handleendDateChange}\r\n    />\r\n    </Grid>\r\n        </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst VoucherComponent = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={voucherCtx.voucherMaster.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n            value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={voucherCtx.voucherMaster.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n//  value={attrobj.componenets}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={voucherCtx.voucherMaster.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\r\n           onChange={handleoptionChange('componenets')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default VoucherComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { VoucherContext } from '../../context';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport FullLoader from '../../components/Loader'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { v4 as uuid } from 'uuid';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\r\nimport { Button, Grid,Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n  \r\nexport default function Voucherdiscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const [attributes, setAttributes] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\r\n  const [open, setOpen] = React.useState(false);\r\n  const [discountid, setDiscountid] = React.useState(\"\");\r\n  const [isloaded, setIsloaded] = useState(false);\r\n\r\n  const [snackMessage,setSnackMessage] = React.useState({\r\n    message:\"Created Successfully\",\r\n    severity:\"Success\"\r\n  });\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\r\n  function attributesadded(attributedata)\r\n  {\r\n    setAttributes(attributedata)\r\n    setIsloading(true)\r\n    //setAttributeobj(value)\r\n    filterapllied(attributedata)\r\n\r\n  }\r\n  async function creatediscount()\r\n  {\r\n    setIsloading(true)\r\n    var discounttype = 2;\r\n    if(voucherCtx.discounttype === 'Free Shipping')\r\n    {\r\n      discounttype = 3\r\n    }\r\n  else if(voucherCtx.discounttype === 'percentage')\r\n    {\r\n      discounttype =2\r\n    }\r\nelse    {\r\n      discounttype = 1\r\n    }\r\n    let bodydata = {}\r\n    bodydata['vouchername'] = voucherCtx.vouchername;\r\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\r\n    bodydata['description'] = voucherCtx.voucherdescription;\r\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\r\n    bodydata['discounttype'] = discounttype;\r\n    bodydata['discount'] = voucherCtx.voucherdiscount;\r\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\r\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\r\n    bodydata['isonce'] = voucherCtx.isonce;\r\n    bodydata['limittouse'] = voucherCtx.limittouse;\r\n    bodydata['minorder'] = voucherCtx.minorder;\r\n    bodydata['attributes'] = attributes;\r\n    bodydata['startdate'] = voucherCtx.startdate;\r\n    bodydata['enddate'] = voucherCtx.enddate;\r\n\r\n    console.log(JSON.stringify(bodydata))\r\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\r\n    setIsloading(false)\r\n    setOpen(true)\r\n\r\n    window.location='/voucherdiscountlist'\r\n\r\n  }\r\n\r\n  async function filterapllied(value)\r\n  {\r\n    var  bodydata = {}\r\n  \r\n    let product_ids = []\r\n\r\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\r\n   setProducts(response.products)\r\n   setSkus(response.skus)\r\n   setIsloading(false)\r\n\r\n    \r\n  }\r\n  async function getdiscountvalue(discount_id)\r\n  {\r\n    let bodydata = {\r\n      id : discount_id\r\n      }\r\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\r\n    let voucherobj = response.response\r\n    let discounttype = voucherobj.discounttype\r\n    var discounttypeval = \"percentage\"\r\n    if(discounttype === 1)\r\n    {\r\n      discounttypeval = 'Fixed'\r\n    }else if(discounttype === 3)\r\n    {\r\n      discounttypeval = 'Free Shipping'\r\n\r\n    }\r\n    let categories = voucherobj.product_attributes.category;\r\n    let selectedcategories = []\r\n    if(categories)\r\n    {\r\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\r\n      if(categories.indexOf(catobj.alias) > -1)\r\n      {\r\n        selectedcategories.push(catobj)\r\n      }\r\n    })\r\n  }\r\n    let materials = voucherobj.product_attributes.materials;\r\n    let selectedmaterials = []\r\n    if(materials)\r\n    {\r\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\r\n      if(materials.indexOf(matobj.alias) > -1 )\r\n      {\r\n        selectedmaterials.push(matobj)\r\n      }\r\n    })\r\n  }\r\n    \r\n    let producttypes = voucherobj.product_attributes.product_types;\r\n    let selectedproduct_types = []\r\n    if(producttypes)\r\n    {\r\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\r\n      if( producttypes.indexOf(protypeobj.alias) > -1)\r\n      {\r\n        selectedproduct_types.push(protypeobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let collections = voucherobj.product_attributes.collections;\r\n    let selectedcollections = []\r\n    if(collections)\r\n    {\r\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\r\n      if( collections.indexOf(collectionobj.alias) > -1)\r\n      {\r\n        selectedcollections.push(collectionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let occassions = voucherobj.product_attributes.occations;\r\n    let selectedoccassions = []\r\n    if(occassions)\r\n    {\r\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\r\n      if( occassions.indexOf(occassionobj.alias) > -1)\r\n      {\r\n        selectedoccassions.push(occassionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let themes = voucherobj.product_attributes.themes;\r\n  let selectedthemes = []\r\n  if(themes)\r\n  {\r\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\r\n    if( themes.indexOf(themeobj.alias) > -1)\r\n    {\r\n      selectedthemes.push(themeobj)\r\n    }\r\n  })\r\n}\r\n\r\n  let styles = voucherobj.product_attributes.styles;\r\n    let selectedstyles = []\r\n    if(styles)\r\n    {\r\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\r\n      if( styles.indexOf(styleobj.alias) > -1)\r\n      {\r\n        selectedstyles.push(styleobj)\r\n      }\r\n    })\r\n  }\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      vouchername: voucherobj.name,\r\n      vouchercode: voucherobj.voucher_codes,\r\n      voucherdescription : voucherobj.description,\r\n      isloggedin: voucherobj.isloginneeded,\r\n      discounttype: discounttypeval,\r\n      minimumqty:0,\r\n      maxvoucherdiscount:voucherobj.max_discount,\r\n      isonce: voucherobj.max_uses_user,\r\n      limittouse:voucherobj.max_uses,\r\n      voucherdiscount:voucherobj.discount_amount,\r\n      minorder: voucherobj.min_cart_value,\r\n      startdate: voucherobj.starts_at,\r\n      enddate: voucherobj.expires_at,\r\n      category: selectedcategories,\r\n      materials: selectedmaterials,\r\n      product_types : selectedproduct_types,\r\n      collections : selectedcollections,\r\n      styles: selectedstyles,\r\n      themes: selectedthemes\r\n    })\r\n    setIsloaded(true)\r\n    }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      \r\n    };\r\n    fetchOrders();\r\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\r\n    {\r\n       setDiscountid( props.location.pathname.split('/')[2]);\r\n      getdiscountvalue(props.location.pathname.split('/')[2])\r\n  \r\n    }else{\r\n      setIsloaded(true)\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n             <FullLoader title=\"\" isopen={isloading}/>\r\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n   {isloaded ? <>\r\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\r\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\r\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\r\n\r\n    <Typography variant=\"h5\" component=\"h2\">\r\n    {products.length} Products and {skus.length} skus\r\n  </Typography>\r\n          </Grid>\r\n          \r\n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\r\n          </Grid>:null} </>\r\n          : null }\r\n          </>:null}\r\n    \r\n   \r\n  </Page>\r\n  </MuiPickersUtilsProvider>\r\n  </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './VoucherdiscountContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Voucherdiscount = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </VoucherProvider>\r\n\r\n)});\r\nexport default Voucherdiscount;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibleIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  FormControlLabel,\r\n  Switch,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //minWidth: 1150\r\n    overflowX: \"auto\"\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  let history = useHistory();\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleEdit(diamondData) {\r\n\r\nhistory.push(`voucherdiscount/${diamondData.id}`)\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      voucherId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={VOUCHERDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                 <>\r\n                                  <TableRow key={row.name}>\r\n                                    <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.description}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.uses} / {row.maxUses}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><VisibleIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"code\",\r\n  \"description\",\r\n  \"uses/Max usage\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const VoucherdiscountListing = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Voucher Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default VoucherdiscountListing;","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst WarehouseModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Warehouse-Modal\"}\r\n    >\r\n      <DialogTitle\r\n        id=\"Warehouse-Modal\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h6\">{`${props.type} Warehouse`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Name\"}\r\n              name=\"name\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.name}\r\n              onChange={props.editItem}\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Shipping In Days\"}\r\n              name=\"shippingInDays\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.shippingInDays}\r\n              onChange={props.editItem}\r\n            />\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WarehouseModal;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_WAREHOUSE,\r\n  DELETE_WAREHOUSE,\r\n  UPDATE_WAREHOUSE,\r\n} from \"../../graphql/mutation\";\r\nimport { WAREHOUSELIST } from \"../../graphql/query\";\r\nimport WarehouseModal from \"./WarehouseModal\";\r\nimport { AlertContext } from \"../../context\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport moment from \"moment\";\r\n\r\nexport const Warehouse = (props) => {\r\n  const { loading, data, error, refetch } = useQuery(WAREHOUSELIST);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({ name: \"\", shippingInDays: \"\" });\r\n\r\n  const editItem = (event) => {\r\n    var { name, value } = event.target;\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n    setItem({ name: \"\", shippingInDays: \"\" });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    item[\"shippingInDays\"] = parseInt(item.shippingInDays);\r\n    if (type === \"Edit\") {\r\n      var id = item.id;\r\n      delete item.id;\r\n      delete item.createdAt;\r\n      delete item.updatedAt;\r\n      delete item.__typename;\r\n      item[\"updatedAt\"] = new Date();\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_WAREHOUSE,\r\n          variables: {\r\n            id,\r\n            item,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_WAREHOUSE,\r\n          variables: {\r\n            item,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setOpen(false);\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Delete\") {\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_WAREHOUSE,\r\n          variables: {\r\n            id: item.id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSwitch = (id, isActive) => {\r\n    client\r\n      .mutate({\r\n        mutation: UPDATE_WAREHOUSE,\r\n        variables: {\r\n          id,\r\n          item: { isActive: !isActive, updatedAt: new Date() },\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully Updated!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Warehouse</Typography>\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Warehouse\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Name</TableCell>\r\n                <TableCell align={\"center\"}>Shipping In Days</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Status</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allWarehouses?.nodes.length === 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>No Warehouses found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allWarehouses?.nodes.length > 0 &&\r\n                data?.allWarehouses?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.name}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.shippingInDays}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <Switch\r\n                        checked={item.isActive}\r\n                        onChange={() => handleSwitch(item.id, item.isActive)}\r\n                        name=\"active\"\r\n                        color=\"primary\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <WarehouseModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import { API_URL } from \"../config\";\r\nimport Axios from \"axios\";\r\n\r\nexport const UploadImage = (file) => {\r\n  var bodyFormData = new FormData();\r\n  bodyFormData.set(\"web_img\", file);\r\n\r\n  return Axios.post(API_URL + \"/banner_image_upload\", bodyFormData, {\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Accept-Language\": \"en-US,en;q=0.8\",\r\n      \"Content-Type\": `multipart/form-data; boundary=${bodyFormData._boundary}`,\r\n    },\r\n  });\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { UploadImage } from \"../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../context/AlertContext\";\r\nconst useStyles = makeStyles({\r\n  Card: {\r\n    height: \"500px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [imgLink, setImgLink] = useState(\"\");\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n        setDisableButton(true);\r\n        setImgLink(res?.data?.web ?? \"\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const ResetFunc = () => {\r\n    setImgLink(\"\");\r\n    setDisableButton(false);\r\n  };\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          Image upload\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={6}>\r\n        <Card fullwidth className={classes.Card}>\r\n          <CardContent>\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              style={{ display: \"none\" }}\r\n              id=\"button-files\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => handleChange(e.target.files[0])}\r\n            />\r\n            <label htmlFor=\"button-files\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                disabled={disableButton}\r\n                startIcon={<CloudUploadIcon />}\r\n              >\r\n                Upload Image\r\n              </Button>\r\n            </label>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} sm={4} lg={6}>\r\n        <Card fullwidth className={classes.Card}>\r\n          <CardContent>\r\n            <Typography\r\n              style={{ textAlign: \"center\", marginTop: 2 }}\r\n              component=\"h4\"\r\n              variant=\"h4\"\r\n            >\r\n              {imgLink\r\n                ? \"Click image to copy link :\"\r\n                : \"Upload image to get link here\"}\r\n            </Typography>\r\n\r\n            {imgLink && (\r\n              <div\r\n                onClick={() => {\r\n                  alert.setSnack({\r\n                    open: true,\r\n                    severity: \"success\",\r\n                    msg: \"Link Copied Successfully\",\r\n                  });\r\n                }}\r\n              >\r\n                {/* <Tooltip title=\"Click to Copy Link\"> */}\r\n                <img\r\n                  style={{ cursor: \"copy\", width: \"100%\", height: \"auto\" }}\r\n                  src={imgLink}\r\n                  alt=\"imag\"\r\n                  loading=\"lazy\"\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(imgLink);\r\n                  }}\r\n                />\r\n                <Typography\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: 6,\r\n                    cursor: \"copy\",\r\n                  }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(imgLink);\r\n                  }}\r\n                >\r\n                  {imgLink}\r\n                </Typography>\r\n                {/* </Tooltip> */}\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        style={{\r\n          margin: \"auto\",\r\n          paddingTop: \"8px\",\r\n        }}\r\n      >\r\n        <Button variant=\"outlined\" onClick={ResetFunc}>\r\n          Reset\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport tableData from \"./data.json\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { AlertContext } from \"../../context\";\r\n\r\nlet fetchMasterCountries = gql`\r\n  query ($name: String) {\r\n    allMasterCountries(filter: { name: { includesInsensitive: $name } }) {\r\n      nodes {\r\n        id\r\n        name\r\n        nicename\r\n        numcode\r\n        phonecode\r\n        currency\r\n        currencyAlias\r\n        currencySymbol\r\n        fxConversionRate\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet addMutationMasterCountry = gql`\r\n  mutation ($input: MasterCountryInput!) {\r\n    createMasterCountry(input: { masterCountry: $input }) {\r\n      masterCountry {\r\n        id\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet updateMutationMasterCountry = gql`\r\n  mutation ($id: Int!, $masterCountryPatch: MasterCountryPatch!) {\r\n    updateMasterCountryById(\r\n      input: { id: $id, masterCountryPatch: $masterCountryPatch }\r\n    ) {\r\n      masterCountry {\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const MasterCountry = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [search, setSearch] = React.useState(null);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const addMasterCountry = (data) => {\r\n    let { alias, isedit, __typename, ...rest } = data;\r\n    let currentTimeStamp = new Date();\r\n    let body = {};\r\n    if (!isedit) {\r\n      body = {\r\n        mutation: addMutationMasterCountry,\r\n        variables: {\r\n          input: {\r\n            ...rest,\r\n            fxConversionRate: Number(rest.fxConversionRate),\r\n            createdAt: currentTimeStamp,\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    } else {\r\n      body = {\r\n        mutation: updateMutationMasterCountry,\r\n        variables: {\r\n          id: rest.id,\r\n          masterCountryPatch: {\r\n            ...rest,\r\n            fxConversionRate: Number(rest.fxConversionRate),\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    client\r\n      .mutate({ ...body })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const syncFXAPI = () => {\r\n    sendNetworkRequest(\"/fxSynclatest\", null, {})\r\n      .then((res) => {\r\n        snack.setSnack({ open: true, msg: res.message });\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Some Error occured, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const { data, loading, error, refetch } = useQuery(fetchMasterCountries, {\r\n    variables: {\r\n      name: search,\r\n    },\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  return (\r\n    <Page title={\"Country List\"}>\r\n      <Breadcrumbs></Breadcrumbs>\r\n      {loading && <LinearProgress className={classes.root} />}\r\n      {!loading && (\r\n        <Mastercontent\r\n          title={\"Country & Fx Rate\"}\r\n          button_title=\"Add New\"\r\n          fxSyncAPI={syncFXAPI}\r\n          onCreate={addMasterCountry}\r\n          onSearch={setSearch}\r\n          columns={tableData.columns}\r\n          values={data?.allMasterCountries?.nodes}\r\n        />\r\n      )}\r\n      {error && <Typography>Some error occured!</Typography>}\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography\r\n          variant=\"caption\"\r\n          component=\"div\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CircularProgressWithLabel;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  Slide,\r\n  Typography,\r\n  IconButton,\r\n  makeStyles,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  TableContainer,\r\n  Paper,\r\n  Button,\r\n  Switch,\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport moment, { now } from \"moment\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_ATTRIBUTE,\r\n  UPDATE_ATTRIBUTE_BY_ID,\r\n} from \"../../graphql/mutation\";\r\nimport { AlertContext } from \"../../context\";\r\nimport { attributesByMasterID } from \"../../graphql/query\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  container: {\r\n    maxHeight: 500,\r\n  },\r\n  searchBox: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(18),\r\n    top: theme.spacing(2),\r\n  },\r\n  createButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(8),\r\n    top: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  formGrid: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst columns = {\r\n  ID: {\r\n    value: \"id\",\r\n    type: Number,\r\n  },\r\n  Name: {\r\n    value: \"name\",\r\n    type: String,\r\n  },\r\n  \"Filter Position\": {\r\n    value: \"filterPosition\",\r\n    type: Number,\r\n  },\r\n  Active: {\r\n    value: \"isActive\",\r\n    type: Boolean,\r\n  },\r\n  Search: {\r\n    value: \"isSearch\",\r\n    type: Boolean,\r\n  },\r\n  Filter: {\r\n    value: \"isFilter\",\r\n    type: Boolean,\r\n  },\r\n  \"Short Code\": {\r\n    value: \"shortCode\",\r\n    type: String,\r\n  },\r\n  Alias: {\r\n    value: \"alias\",\r\n    type: String,\r\n  },\r\n  \"Alias Id\": {\r\n    value: \"aliasId\",\r\n    type: String,\r\n  },\r\n  \"Last Updated On\": {\r\n    value: \"last_updated_at\",\r\n    type: Date,\r\n  },\r\n  \"\": {\r\n    type: \"Edit\",\r\n  },\r\n};\r\n\r\nexport const FilterAttributeSettings = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [attributes, setAttributes] = React.useState({});\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const handleEditChange = (item) => {\r\n    setAttributes(item);\r\n    setEditMode(true);\r\n  };\r\n  const handleSave = () => {\r\n    let { id, last_updated_at, __typename, ...rest } = attributes;\r\n    let payload = {\r\n      attribute: rest,\r\n    };\r\n    if (id) {\r\n      payload.id = id;\r\n      payload.attribute = {\r\n        ...payload.attribute,\r\n        updatedAt: new Date(),\r\n      };\r\n    } else {\r\n      payload.attribute = {\r\n        ...payload.attribute,\r\n        isActive: true,\r\n        isSearch: true,\r\n        isFilter: true,\r\n        masterId: props?.masterData?.id,\r\n        aliasId: payload?.attribute?.filterPosition,\r\n      };\r\n    }\r\n    saveChanges(payload);\r\n    setEditMode(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    let { name, value } = event.target;\r\n    if (name == `filterPosition`) {\r\n      value = Number(value);\r\n    }\r\n    setAttributes({ ...attributes, [name]: value });\r\n  };\r\n\r\n  const saveChanges = (payload) => {\r\n    let mutationQuery = CREATE_ATTRIBUTE;\r\n    if (payload?.id) {\r\n      mutationQuery = UPDATE_ATTRIBUTE_BY_ID;\r\n    }\r\n    client\r\n      .mutate({\r\n        mutation: mutationQuery,\r\n        variables: payload,\r\n      })\r\n      .then(() => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: `Successfully ${!payload?.id ? `Created` : `Updated`}!`,\r\n        });\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSwitchChange = (event, attributes) => {\r\n    let { name } = event.target;\r\n    attributes = { ...attributes, [name]: !attributes[name] };\r\n    let { id, last_updated_at, __typename, ...rest } = attributes;\r\n    let payload = {\r\n      attribute: rest,\r\n    };\r\n    if (id) {\r\n      payload.id = id;\r\n      payload.attribute = {\r\n        ...payload.attribute,\r\n        updatedAt: new Date(),\r\n      };\r\n    }\r\n    saveChanges(payload);\r\n  };\r\n\r\n  const { loading, error, data, refetch } = useQuery(attributesByMasterID, {\r\n    variables: { masterId: props?.masterData?.id, search },\r\n  });\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      TransitionComponent={Transition}\r\n      onClose={props.onClose}\r\n      maxWidth=\"lg\"\r\n    >\r\n      <DialogTitle className={classes.root}>\r\n        <Typography variant=\"h2\">{props?.masterData?.name}</Typography>\r\n        <TextField\r\n          label=\"Search\"\r\n          name=\"search\"\r\n          className={classes.searchBox}\r\n          value={search}\r\n          onChange={(event) => {\r\n            setSearch(event.target.value);\r\n          }}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n        <Button\r\n          className={classes.createButton}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            if (!editMode) {\r\n              handleEditChange({});\r\n            } else {\r\n              handleSave();\r\n            }\r\n          }}\r\n        >\r\n          {!editMode ? `Create` : `Save`}\r\n        </Button>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={props.onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <Grid item xs={!editMode ? 0 : 10}>\r\n            <TableContainer component={Paper} className={classes.container}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {Object.keys(columns).map((item, index) => (\r\n                      <TableCell variant=\"head\" align=\"center\" key={index}>\r\n                        {item}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {loading && (\r\n                    <TableRow>\r\n                      <TableCell colSpan={Object.keys(columns).length}>\r\n                        <Skeleton variant=\"rect\" />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                  {data?.attributes &&\r\n                    data?.attributes?.nodes?.map((item, index) => (\r\n                      <TableRow key={index}>\r\n                        {Object.keys(columns).map((element) => (\r\n                          <TableCell\r\n                            align=\"center\"\r\n                            key={`@${element}_${element?.id}`}\r\n                          >\r\n                            {columns[element].type == Date &&\r\n                              moment(item[columns[element].value]).format(\r\n                                \"DD-MM-YYYY\"\r\n                              )}\r\n                            {![\"Edit\", Date, Boolean].includes(\r\n                              columns[element].type\r\n                            ) && item[columns[element].value]}\r\n                            {columns[element].type == Boolean && (\r\n                              <Switch\r\n                                checked={item[columns[element].value]}\r\n                                inputProps={{ name: columns[element].value }}\r\n                                onChange={(event) => {\r\n                                  handleSwitchChange(event, item);\r\n                                }}\r\n                                color=\"primary\"\r\n                              />\r\n                            )}\r\n                            {columns[element].type == \"Edit\" && (\r\n                              <IconButton\r\n                                onClick={() => {\r\n                                  handleEditChange(item);\r\n                                }}\r\n                              >\r\n                                <EditIcon />\r\n                              </IconButton>\r\n                            )}\r\n                          </TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          {editMode && (\r\n            <Grid item className={classes.formGrid} xs={2}>\r\n              <FormControl>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  value={attributes?.name}\r\n                  onChange={handleInputChange}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Filter Position\"\r\n                  name=\"filterPosition\"\r\n                  value={attributes?.filterPosition}\r\n                  onChange={handleInputChange}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Short Code\"\r\n                  name=\"shortCode\"\r\n                  value={attributes?.shortCode}\r\n                  onChange={handleInputChange}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Alias\"\r\n                  name=\"alias\"\r\n                  value={attributes?.alias}\r\n                  onChange={handleInputChange}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  style={{ position: \"absolute\", right: 1, bottom: -30 }}\r\n                  onClick={() => {\r\n                    setAttributes({});\r\n                    setEditMode(false);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </FormControl>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  TableContainer,\r\n  Tooltip,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Chip,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { NetworkContext, AlertContext } from \"../../context\";\r\nimport exportFromJSON from \"export-from-json\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport { dynamicFilterAttributes } from \"../../graphql/query\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport CircularProgressWithLabel from \"../../components/CircularProgress\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { FilterAttributeSettings } from \"./filter_attribute_settings\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  chipCell: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport const DynamicFilters = (props) => {\r\n  const classes = useStyles();\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [masterData, setMasterData] = React.useState({});\r\n\r\n  const handleClickOpen = (item) => {\r\n    setMasterData(item);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    refetch();\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const socket = socketIOClient(API_URL);\r\n    socket.on(\"filter_sync\", (data) => {\r\n      console.log(data);\r\n      if (data.status !== \"completed\") {\r\n        setProgress(data?.completed * 100);\r\n      } else {\r\n        setProgress(100);\r\n        snack.setSnack({\r\n          severity: \"info\",\r\n          msg: `Process Completed`,\r\n        });\r\n        socket.close();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const downloadProductFilters = () => {\r\n    sendNetworkRequest(\"/fetch_filters\")\r\n      .then((response) => {\r\n        if (response?.result) {\r\n          exportFromJSON({\r\n            data: response.result,\r\n            fileName: `Product_Filters_${new Date().toLocaleDateString()}`,\r\n            exportType: \"csv\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Something went wrong!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    axios\r\n      .post(API_URL + \"/bulk_upload_filters\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          setProgress(1);\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res?.data?.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  let { loading, data, error, refetch } = useQuery(dynamicFilterAttributes);\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        className={classes.grid}\r\n      >\r\n        <Grid item>\r\n          <Tooltip title=\"Download\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => downloadProductFilters()}\r\n              startIcon={<GetAppIcon />}\r\n            >\r\n              Applied Product filters\r\n            </Button>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item>\r\n          <input\r\n            accept=\".csv\"\r\n            className={classes.input}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n            onChange={(event) => {\r\n              const files = event.target.files;\r\n              if (files) {\r\n                handleUpload(files[0]);\r\n              }\r\n            }}\r\n          />\r\n          <label htmlFor=\"icon-button-file\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<CloudUploadIcon />}\r\n              component=\"span\"\r\n            >\r\n              Upload & Apply Product filters\r\n            </Button>\r\n          </label>\r\n        </Grid>\r\n        <Grid item>\r\n          {progress > 0 && <CircularProgressWithLabel value={progress} />}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {[\"Name\", \"Attribute Value\", \"\"].map((item, index) => (\r\n                <TableCell\r\n                  key={index}\r\n                  style={index == 0 ? { width: 130 } : {}}\r\n                  align=\"center\"\r\n                >\r\n                  {item}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {loading && (\r\n              <TableRow>\r\n                <TableCell colSpan={2}>\r\n                  <Skeleton variant=\"rect\" />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n            {!loading &&\r\n              data?.master?.nodes.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell style={{ width: 130 }} align=\"center\">\r\n                    <Typography variant=\"h5\">{item?.name}</Typography>\r\n                  </TableCell>\r\n                  <TableCell className={classes.chipCell}>\r\n                    {item?.attributes?.nodes.map((element, i) => (\r\n                      <Chip\r\n                        key={i}\r\n                        size=\"small\"\r\n                        label={element?.name}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    ))}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        handleClickOpen(item);\r\n                      }}\r\n                    >\r\n                      <SettingsIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            {error && (\r\n              <TableRow>\r\n                <TableCell colSpan={2} align={\"center\"}>\r\n                  <Typography variant=\"body2\">Some Error Occured</Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <FilterAttributeSettings\r\n        open={open}\r\n        onClose={handleClose}\r\n        masterData={masterData}\r\n        refetchMasterData={refetch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { API_URL } from \"../../config\";\r\nimport {\r\n  ALLPAGESCMS,\r\n  UPDATE_STATUS_CMS,\r\n  UPDATE_URL,\r\n} from \"../../graphql/query\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControlLabel,\r\n  Grid,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../context\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  align: { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" },\r\n  cardName: {\r\n    textAlign: \"center\",\r\n    margin: \"8px 0px\",\r\n    textTransform: \"capitalize\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"8px\",\r\n    backgroundColor: \"#3f51b5\",\r\n    padding: \"8px\",\r\n    color: \"#fff\",\r\n  },\r\n  labelAlign: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    gap: \"4px\",\r\n  },\r\n  edit:{\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    gap: \"4px\",\r\n  },\r\n  dialogPaperMid: {\r\n    minWidth: \"400px\",\r\n  },\r\n}));\r\n\r\nexport const CmsHome = withRouter((props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const [state, setState] = useState([]);\r\n  const [newPage, setNewPage] = useState(\"\");\r\n  const [edit, setEdit] = useState({\r\n    open: false,\r\n    page: \"\",\r\n  })\r\n\r\n  console.log(\"handleHome\", state);\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: ALLPAGESCMS,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // debugg(er;\r\n        const dataRecieved = data?.data?.allCdns?.nodes;\r\n        setState(dataRecieved);\r\n      });\r\n  }, []);\r\n\r\n  // Fetch the initial data\r\n  const fetchData = () => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: ALLPAGESCMS,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // debugger;\r\n        const dataRecieved = data.data.allCdns.nodes;\r\n        setState(dataRecieved);\r\n      });\r\n  };\r\n\r\n  // render the title name of the Cards\r\n  const getThePageTitle = (name) => {\r\n    let createdName = name.replace(\r\n      /[A-Z]/g,\r\n      (val) => \" \" + `${val.toLowerCase()}`\r\n    );\r\n    return createdName;\r\n  };\r\n\r\n  // Open the Edit page \r\n  const handleOpenEdit = (page) => {\r\n    setEdit({\r\n      open: true,\r\n      page:page\r\n    })\r\n  };\r\n\r\n  // Chnage the name of the new UrL\r\n  const handleChangeData = (value) => {\r\n    setNewPage(value);\r\n  };\r\n\r\n  // Load the Respective page\r\n  const handleClick = (name) => {\r\n    history.push({\r\n      pathname: \"/cmsComponent\",\r\n      state: {\r\n        name: name,\r\n      },\r\n    });\r\n  };\r\n\r\n  // Change the Status of the page\r\n  const handleChangeActive = (page, isActive) => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: UPDATE_STATUS_CMS,\r\n        variables: {\r\n          isActive: !isActive,\r\n          page: page,\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // debugger;\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Status Updated Successfully\",\r\n        });\r\n        fetchData();\r\n      });\r\n  };\r\n\r\n  // Edit the URL\r\n  const handleEditSumbit = () => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: UPDATE_URL,\r\n        variables: {\r\n          page: edit.page,\r\n          changePage: newPage,\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Url changed Successfully\",\r\n        });\r\n        setEdit({\r\n          open: false,\r\n          page: \"\",\r\n        });\r\n        fetchData();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        {state?.map((val) => (\r\n          <Grid item xs={6} sm={4} lg={3}>\r\n            <div>\r\n              <Card fullwidth className=\"card2\">\r\n                <CardContent>\r\n                  <Typography\r\n                    className={classes.cardName}\r\n                    component=\"h6\"\r\n                    variant=\"h5\"\r\n                    onClick={() => handleClick(val.page)}\r\n                  >\r\n                    {getThePageTitle(val.page)}\r\n                  </Typography>\r\n                  <div className={classes.labelAlign}>\r\n                    <div className={classes.edit}>\r\n                      <Typography>Is page active:</Typography>\r\n                      <FormControlLabel\r\n                        className={classes.align}\r\n                        control={\r\n                          <Switch\r\n                            checked={val.isActive}\r\n                            onChange={() =>\r\n                              handleChangeActive(val.page, val.isActive)\r\n                            }\r\n                            name=\"checkedB\"\r\n                            color=\"primary\"\r\n                          />\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <EditIcon\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => handleOpenEdit(val.page)}\r\n                    />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={edit.open}\r\n        onClose={() => {\r\n          setEdit({\r\n            open: false,\r\n            page: \"\",\r\n          });\r\n        }}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Change the URL</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"page\"\r\n            label=\"Page Route\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(e) => handleChangeData(e.target.value)}\r\n            value={newPage}\r\n            name=\"page\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEditSumbit}>Edit Url</Button>\r\n          <Button\r\n            onClick={() => {\r\n              setEdit({\r\n                open: false,\r\n                page: \"\",\r\n              });\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CmsHome;\r\n","import React from \"react\";\r\nimport { Grid, Card, CardHeader, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport { Breadcrumbs } from \"./../../components\";\r\nimport { AlertContext, NetworkContext } from \"../../context\";\r\nimport SyncSharpIcon from \"@material-ui/icons/SyncSharp\";\r\nimport CircularProgressWithLabel from \"../../components/CircularProgress\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { API_URL } from \"../../config\";\r\n\r\nconst searchIndexs = {\r\n  product_search: {\r\n    Name: \"Products\",\r\n    type: \"products\",\r\n    listener: \"product_search_sync\",\r\n  },\r\n  sku_search: {\r\n    Name: \"Skus\",\r\n    type: \"sku\",\r\n    listener: \"sku_search_sync\",\r\n  },\r\n  seo_search: {\r\n    Name: \"Seos\",\r\n    type: \"seo\",\r\n    listener: \"seo_search_sync\",\r\n  },\r\n};\r\nconst autoId = `component-${Math.random().toString(36).substring(2, 8)}`;\r\nexport const ElasticSearch = (props) => {\r\n  const [indexCount, setIndexCount] = React.useState({});\r\n  let { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [progress, setProgress] = React.useState({});\r\n  const snack = React.useContext(AlertContext);\r\n  const initiateSync = (index) => {\r\n    sendNetworkRequest(\"/sync_elastic_search\", null, {\r\n      ...searchIndexs[index],\r\n    })\r\n      .then((_) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"info\",\r\n          msg: `Sync Initiated!`,\r\n        });\r\n        let socket = socketIOClient(API_URL);\r\n        socket.on(searchIndexs[index].listener, (data) => {\r\n          let tempProgress = { ...progress, [index]: data.status };\r\n          setProgress(tempProgress);\r\n          if (data.status.completed == 1) {\r\n            snack.setSnack({\r\n              open: true,\r\n              severity: \"success\",\r\n              msg: `Sync Completed!`,\r\n            });\r\n            setProgress({});\r\n            socket.close();\r\n            getEsStatus();\r\n          }\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const getEsStatus = () => {\r\n    sendNetworkRequest(\"/es_status\", null, {})\r\n      .then((response) => {\r\n        setIndexCount(response);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  React.useEffect(getEsStatus, []);\r\n  return (\r\n    <Grid container spacing={4}>\r\n      <Grid container item xs={12}>\r\n        <Breadcrumbs />\r\n      </Grid>\r\n      {Object.keys(searchIndexs).map((item) => (\r\n        <Grid container item xs={3} md={3} id={autoId}>\r\n          <Card raised=\"true\" style={{ height: \"100%\", width: \"100%\" }}>\r\n            <CardHeader\r\n              title={searchIndexs[item].Name}\r\n              subheader={indexCount[item]}\r\n              action={\r\n                !progress[item] ? (\r\n                  <Tooltip\r\n                    title={\r\n                      Object.keys(progress).length > 0\r\n                        ? `Sync in Progress!`\r\n                        : `Click to sync!`\r\n                    }\r\n                  >\r\n                    <IconButton\r\n                      aria-label=\"settings\"\r\n                      disabled={Object.keys(progress).length > 0}\r\n                      onClick={() => {\r\n                        initiateSync(item);\r\n                      }}\r\n                    >\r\n                      <SyncSharpIcon color=\"primary\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                ) : (\r\n                  <CircularProgressWithLabel\r\n                    value={progress[item].completed * 100}\r\n                  />\r\n                )\r\n              }\r\n            />\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  IconButton,\r\n  Tooltip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Switch,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  FETCH_COMBO_OFFERED_PRODUCTS,\r\n  GET_UNIQUE_PRODUCT,\r\n  LIST_COMBO_PRODUCTS,\r\n  UPDATE_COMBO_BY_MAIN_PRODUCT,\r\n} from \"../../graphql/query\";\r\nimport { API_URL, BASE_IMAGE_URL } from \"../../config\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { AlertContext } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport CircularProgressWithLabel from \"../../components/CircularProgress\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  comboCard: {\r\n    padding: \"10px\",\r\n  },\r\n  searchInput: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: 8,\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  image: {\r\n    height: 230,\r\n    width: 165,\r\n  },\r\n  productName: {\r\n    fontSize: \"1em\",\r\n  },\r\n  alignCardTypo: {\r\n    paddingTop: \"6px\",\r\n  },\r\n  details: {\r\n    color: \"#3f51b5\",\r\n    fontWeight: 600,\r\n  },\r\n  alignItems: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst InduvidualProductCard = (props) => {\r\n  const classes = useStyles();\r\n  let source = props?.productListByMainProduct ?? props;\r\n  let productId = props?.mainProduct ?? source?.productId;\r\n  return (\r\n    <Card className={classes.image}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt={productId}\r\n        image={`${BASE_IMAGE_URL}${source?.productImagesByProductId?.nodes?.[0]?.imageUrl\r\n          ?.replace(productId, `${productId}/100X100`)\r\n          ?.replace(\"jpg\", \"webp\")}`}\r\n      />\r\n      <CardContent>\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          className={classes.productName}\r\n        >\r\n          {source?.productName}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ComboCard = (props) => {\r\n  const classes = useStyles();\r\n  let { offeredProducts } = props;\r\n  if (offeredProducts.length < 2) {\r\n    offeredProducts = offeredProducts;\r\n  }\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    FETCH_COMBO_OFFERED_PRODUCTS,\r\n    { variables: { offeredProducts } }\r\n  );\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"center\"\r\n      spacing={2}\r\n    >\r\n      <Grid item>\r\n        <Typography style={{ fontWeight: 600 }}>Main Product</Typography>\r\n        <InduvidualProductCard {...props} />\r\n        <Typography className={classes.alignCardTypo}>\r\n          Product Id :{\" \"}\r\n          <span className={classes.details}>{props?.mainProduct}</span>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid>{\"+\"}</Grid>\r\n      {!loading &&\r\n        data &&\r\n        data.allProductLists.nodes.map((product, index) => (\r\n          <>\r\n            <Grid key={product.id} item>\r\n              <Typography>Combo Product{index + 1}</Typography>\r\n              <InduvidualProductCard {...product} />\r\n              <Typography className={classes.alignCardTypo}>\r\n                Product Id :{\" \"}\r\n                <span className={classes.details}>{product?.productId}</span>\r\n              </Typography>\r\n            </Grid>\r\n            {index + 1 < data.allProductLists.nodes.length && (\r\n              <Grid>{\"+\"}</Grid>\r\n            )}\r\n          </>\r\n        ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const ComboOfferConfig = (props) => {\r\n  const initialState = {\r\n    offeredProducts: [],\r\n    discountType: \"\",\r\n    discountValue: 0,\r\n    mainProduct: \"\",\r\n    isActive: true,\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const snack = React.useContext(AlertContext);\r\n  const [openForm, setOpenForm] = useState(false);\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [editState, setEditState] = useState(initialState);\r\n  const [offerError, setOfferError] = React.useState({});\r\n\r\n  const client = useApolloClient();\r\n\r\n  React.useEffect(() => {\r\n    const socket = socketIOClient(API_URL);\r\n    socket.on(\"combo_sync\", (data) => {\r\n      if (data.status !== \"completed\") {\r\n        setProgress(data?.completed * 100);\r\n      } else {\r\n        setProgress(100);\r\n        snack.setSnack({\r\n          severity: \"info\",\r\n          msg: `Process Completed`,\r\n        });\r\n        socket.close();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleComboForm = (product) => {\r\n    setEditState({\r\n      ...editState,\r\n      offeredProducts: product?.offeredProducts,\r\n      discountType: product?.discountType,\r\n      discountValue: product?.discountValue,\r\n      mainProduct: product?.mainProduct,\r\n      isActive: product?.isActive,\r\n    });\r\n    setOpenForm(true);\r\n  };\r\n\r\n  const chipAdd = (chipValue) => {\r\n    client\r\n      .query({ query: GET_UNIQUE_PRODUCT, variables: { productId: chipValue } })\r\n      .then(({ data }) => {\r\n        if (data?.product) {\r\n          setEditState({\r\n            ...editState,\r\n            offeredProducts: [...editState.offeredProducts, chipValue],\r\n          });\r\n        } else {\r\n          setOfferError({\r\n            ...offerError,\r\n            offeredProducts: `${chipValue} is not a valid product!`,\r\n          });\r\n        }\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const chipDelete = (_chip, index) => {\r\n    let { offeredProducts } = editState;\r\n    offeredProducts.splice(index, 1);\r\n    setEditState({\r\n      ...editState,\r\n      offeredProducts,\r\n    });\r\n  };\r\n\r\n  const handleChange = (name, value) => {\r\n    if (name == \"discountValue\") value = Number(value);\r\n    setEditState({\r\n      ...editState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setEditState(initialState);\r\n    setOpenForm(false);\r\n  };\r\n\r\n  const validate = () => {\r\n    const validationField = [\r\n      \"offeredProducts\",\r\n      \"discountType\",\r\n      \"discountValue\",\r\n      \"mainProduct\",\r\n    ];\r\n    let error = [];\r\n    validationField.forEach((val) => {\r\n      if (Array.isArray(editState[val]) && editState[val].length <= 1) {\r\n        error.push(true);\r\n      }\r\n      if (editState[val] !== null && editState[val] !== \"\") {\r\n        error.push(true);\r\n      } else {\r\n        error.push(false);\r\n      }\r\n    });\r\n    if (error.includes(false)) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (validate()) {\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_COMBO_BY_MAIN_PRODUCT,\r\n          variables: editState,\r\n        })\r\n        .then(() => {\r\n          refetch();\r\n          setOpenForm(false);\r\n        })\r\n        .catch(console.log);\r\n    } else {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: `Please fill all the fields`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const { loading, data, error, refetch, networkStatus } =\r\n    useQuery(LIST_COMBO_PRODUCTS);\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    axios\r\n      .post(API_URL + \"/bulk_upload_combo\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          setProgress(1);\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res?.data?.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <Grid item xs={8}>\r\n        <TextField\r\n          className={classes.searchInput}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          placeholder=\"Search by Product ID or Product Name\"\r\n          label=\"Search\"\r\n        />\r\n      </Grid>\r\n      <Grid>\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = `https://s3.ap-southeast-1.amazonaws.com/media.nacjewellers.com/resources/assets/sample_combo.csv`;\r\n            a.setAttribute(\"download\", \"sample_combo.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      {progress == 0 && (\r\n        <Grid item xs={2}>\r\n          <input\r\n            accept=\".csv\"\r\n            className={classes.input}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n            onChange={(event) => {\r\n              const files = event.target.files;\r\n              if (files) {\r\n                handleUpload(files[0]);\r\n              }\r\n            }}\r\n          />\r\n          <label htmlFor=\"icon-button-file\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<CloudUploadIcon />}\r\n              component=\"span\"\r\n            >\r\n              Upload Combo Offers\r\n            </Button>\r\n          </label>\r\n        </Grid>\r\n      )}\r\n      {progress > 0 && (\r\n        <Grid item xs={2}>\r\n          <CircularProgressWithLabel value={progress} />\r\n        </Grid>\r\n      )}\r\n      {!loading &&\r\n        data &&\r\n        data.allProductComboOffers.nodes.map((products) => (\r\n          <Grid key={products.id} component={Paper}>\r\n            <div className={classes.comboCard}>\r\n              <ComboCard {...products} />\r\n            </div>\r\n            <div\r\n              className={classes.alignItems}\r\n              style={{ padding: \"0px 10px\", justifyContent: \"space-between\" }}\r\n            >\r\n              <div>\r\n                <Typography>\r\n                  Discount Type :{\" \"}\r\n                  <span className={classes.details}>\r\n                    {products?.discountType}\r\n                  </span>\r\n                </Typography>\r\n                <Typography>\r\n                  Discount Value :{\" \"}\r\n                  <span className={classes.details}>\r\n                    {products?.discountValue}\r\n                  </span>\r\n                </Typography>\r\n                <Typography>\r\n                  Combo Status :{\" \"}\r\n                  <span className={classes.details}>\r\n                    {products?.isActive ? \"Active\" : \"In-Active\"}\r\n                  </span>\r\n                </Typography>\r\n              </div>\r\n              <Button\r\n                onClick={() => handleComboForm(products)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Edit\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        ))}\r\n      <Dialog\r\n        open={openForm}\r\n        onClose={() => handleClose()}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Edit Combo Offer</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <div\r\n              className={classes.alignItems}\r\n              style={{ marginBottom: \"18px\" }}\r\n            >\r\n              <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Main Product\"\r\n                size=\"small\"\r\n                defaultValue=\"Hello World\"\r\n                variant=\"outlined\"\r\n                disabled={true}\r\n                name=\"mainProduct\"\r\n                value={editState?.mainProduct}\r\n              ></TextField>\r\n              <FormControlLabel\r\n                style={{ margin: \"5px\" }}\r\n                control={\r\n                  <Switch\r\n                    checked={editState.isActive}\r\n                    onChange={({ target }) => {\r\n                      setEditState({\r\n                        ...editState,\r\n                        isActive: target.checked,\r\n                      });\r\n                    }}\r\n                  />\r\n                }\r\n                label={\"Active\"}\r\n              />\r\n            </div>\r\n            <Grid container spacing={2} style={{ marginBottom: \"18px\" }}>\r\n              <Grid item xs={12}>\r\n                <ChipInput\r\n                  value={editState?.offeredProducts}\r\n                  onAdd={chipAdd}\r\n                  onDelete={chipDelete}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  label={\"Offered Products\"}\r\n                  error={Boolean(offerError?.offeredProducts)}\r\n                  helperText={offerError?.offeredProducts}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2} style={{ marginBottom: \"18px\" }}>\r\n              <Grid item xs={6}>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={[\"FLAT\", \"PERCENTAGE\"]}\r\n                  getOptionLabel={(option) => option}\r\n                  value={editState?.discountType}\r\n                  onChange={(event, newValue) => {\r\n                    setEditState({\r\n                      ...editState,\r\n                      discountType: newValue,\r\n                    });\r\n                  }}\r\n                  size=\"small\"\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      size=\"small\"\r\n                      {...params}\r\n                      label=\"Combo box\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"outlined-required\"\r\n                  size=\"small\"\r\n                  label=\"Discount Value\"\r\n                  defaultValue=\"Hello World\"\r\n                  variant=\"outlined\"\r\n                  name=\"discountValue\"\r\n                  onChange={(e) =>\r\n                    handleChange(\"discountValue\", e.target.value)\r\n                  }\r\n                  value={editState?.discountValue}\r\n                ></TextField>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleSubmit()} color=\"primary\" autoFocus>\r\n            Sumbit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport {\r\n  GEMSTONE_MARKUP_SETTING,\r\n  CREATE_GEMSTONE_MARKUP,\r\n  DELETE_MATERIAL_MARKUP,\r\n  UPDATE_MATERIAL_MARKUP,\r\n} from \"../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { validateSDL } from \"graphql/validation/validate\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst StyloriLandingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [update, setUpdate] = React.useState(false);\r\n  const [allgemstone, setallgemstone] = useState([]);\r\n  const [creategem, setCreateGem] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    priceMin: \"\",\r\n    priceMax: \"\",\r\n    markupValue: \"\",\r\n    markupType: \"\",\r\n    error: {\r\n      name: \"\",\r\n      priceMin: \"\",\r\n      priceMax: \"\",\r\n      markupValue: \"\",\r\n      markupType: \"\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  function styloribannerfetch() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GEMSTONE_MARKUP_SETTING,\r\n      }),\r\n    };\r\n\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setallgemstone(fatchvalue.data.allMaterialMarkups.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreateGem({\r\n      ...creategem,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleValidate = () => {\r\n    let isValid = true;\r\n    let error = creategem.error;\r\n\r\n    if (creategem.name.length === 0) {\r\n      isValid = false;\r\n      error.name = \"Name is Required\";\r\n    }\r\n    if (creategem.priceMin.length === 0) {\r\n      isValid = false;\r\n      error.priceMin = \"Price Min is Required\";\r\n    }\r\n    if (creategem.priceMax.length === 0) {\r\n      isValid = false;\r\n      error.priceMax = \"Price Max is Required\";\r\n    }\r\n    if (creategem.markupValue.length === 0) {\r\n      isValid = false;\r\n      error.markupValue = \"Markup Value is Required\";\r\n    }\r\n    if (creategem.markupValue.length === 0) {\r\n      isValid = false;\r\n      error.markupValue = \"Markup Value is Required\";\r\n    }\r\n\r\n    setCreateGem({ ...creategem, error });\r\n    return isValid;\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETE_MATERIAL_MARKUP,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const OnEditData = (val) => {\r\n    setCreateGem({\r\n      id: val?.id,\r\n      name: val?.materialName ?? \"\",\r\n      priceMin: val?.priceMin ?? \"\",\r\n      priceMax: val?.priceMax ?? \"\",\r\n      markupValue: val?.markupValue ?? \"\",\r\n      markupType: val?.markupType ?? \"\",\r\n      error: {\r\n        name: \"\",\r\n        priceMin: \"\",\r\n        priceMax: \"\",\r\n        markupValue: \"\",\r\n        markupType: \"\",\r\n      },\r\n    });\r\n    setUpdate(true);\r\n    setOpen(true);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (handleValidate()) {\r\n      let gem_data = {\r\n        id: creategem?.id?.length === 0 ? uuid() : creategem?.id,\r\n        materialName: creategem.name,\r\n        priceMin: Number(creategem.priceMin),\r\n        priceMax: Number(creategem.priceMax),\r\n        markupValue: Number(creategem.markupValue),\r\n        markupType: 1,\r\n        updatedAt: new Date(),\r\n        createdAt: new Date(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: update ? UPDATE_MATERIAL_MARKUP : CREATE_GEMSTONE_MARKUP,\r\n          variables: gem_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          setOpen(false);\r\n\r\n          styloribannerfetch();\r\n        })\r\n        .catch(console.error);\r\n    }\r\n  };\r\n  console.log(creategem);\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              Gemstone Markup Settings\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Gemstone Markup</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={creategem.name}\r\n              name=\"name\"\r\n            />\r\n\r\n            <lable style={{ color: \"red\" }}>{creategem?.error?.name}</lable>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"priceMin\"\r\n              label=\"Price Min\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              type=\"number\"\r\n              value={creategem.priceMin}\r\n              name=\"priceMin\"\r\n            />\r\n            <lable style={{ color: \"red\" }}>\r\n              {\" \"}\r\n              {creategem?.error?.priceMin}\r\n            </lable>\r\n\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"priceMax\"\r\n              label=\"Price Max\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={creategem.priceMax}\r\n              type=\"number\"\r\n              name=\"priceMax\"\r\n            />\r\n\r\n            <lable style={{ color: \"red\" }}>\r\n              {\" \"}\r\n              {creategem?.error?.priceMax}\r\n            </lable>\r\n\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"markupValue\"\r\n              label=\"Markup Value\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"number\"\r\n              onChange={onChangeData}\r\n              value={creategem.markupValue}\r\n              name=\"markupValue\"\r\n            />\r\n            <lable style={{ color: \"red\" }}>\r\n              {\" \"}\r\n              {creategem?.error?.markupValue}\r\n            </lable>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"markupValue\"\r\n              name=\"markupType\"\r\n              label=\"Markup Type\"\r\n              variant=\"outlined\"\r\n              value={creategem?.markupType ? Number(creategem.markupType) : 1}\r\n              onChange={onChangeData}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <MenuItem value={1}>Flat</MenuItem>\r\n              <MenuItem value={2}>Percentage</MenuItem>\r\n            </Select>\r\n            <lable style={{ color: \"red\" }}>\r\n              {creategem?.error?.markupType}\r\n            </lable>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue} variant=\"outlined\">\r\n              Submit\r\n            </Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Material Name</TableCell>\r\n                <TableCell>Price Min</TableCell>\r\n                <TableCell>Price Max </TableCell>\r\n                <TableCell>Markup Value </TableCell>\r\n                <TableCell>Markup Type</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {allgemstone.map((val) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val?.materialName ?? \"-\"}</TableCell>\r\n                  <TableCell>{val?.priceMin ?? \"-\"}</TableCell>\r\n                  <TableCell>{val?.priceMax ?? \"-\"}</TableCell>\r\n                  <TableCell>{val?.markupValue ?? \"-\"}</TableCell>\r\n\r\n                  <TableCell>\r\n                    {val?.markupType === 1 ? \"Flat\" : \"Percentage\" ?? \"-\"}\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <Button variant=\"outlined\" onClick={() => OnEditData(val)}>\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{\r\n                        color: \"#fff\",\r\n                        backgroundColor: \"red\",\r\n                        marginLeft: \"4px\",\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default StyloriLandingPage;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Table from \"./table\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst GemstoneSetting = (props) => {\r\n  const classes = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs></Breadcrumbs>\r\n      <Table />\r\n    </>\r\n  );\r\n};\r\nexport default GemstoneSetting;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport { GETALLERRORLOGS } from \"../../graphql/query\";\r\nimport { useQuery } from \"react-apollo\";\r\n\r\nconst ErrorLogs = () => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const { loading, data, error, refetch, networkStatus } =\r\n    useQuery(GETALLERRORLOGS);\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Error Logs</Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Page</TableCell>\r\n                <TableCell align={\"center\"}>Error</TableCell>\r\n                <TableCell align={\"center\"}>Message</TableCell>\r\n                <TableCell align={\"center\"}>Date</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allUiErrorLogs?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>No Error found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allUiErrorLogs?.nodes.length > 0 &&\r\n                data?.allUiErrorLogs?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item?.page}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item?.error}\r\n                    </TableCell>{\" \"}\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item?.message}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item?.createdAt, \"YYYY-MM-DD\").format(\r\n                        \"MMM DD,YYYY\"\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={5}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allUiErrorLogs?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ErrorLogs;\r\n","import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nconst Banners = (props) => {\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          Landing Page Banner\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/styloribanner\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\r\n                Stylori\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/silverbanner\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\r\n                Stylori Silver\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n      {/* <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/listingPage\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\r\n                Listing Page\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid> */}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Banners;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nimport {\r\n  ALLSTYLORISILVERLANDINGBANNERS,\r\n  CREATESILVERLANDINGBANNER,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverLandingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLANDINGBANNERS,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allStyloriSilverBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setDisable(false);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            [name]: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: createlandingbanner.position,\r\n        url: createlandingbanner.link,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLANDINGBANNER,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              Silver - Landing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Silver - Landing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Banner's Redirect Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            />\r\n            <Grid container justifyContent=\"space-around\"  style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Mobile Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                <TableCell>Mobile Image</TableCell>\r\n                <TableCell>Desktop Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}/styloriSilver`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}/styloriSilver`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.mobile}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.mobile} */}\r\n                      <img\r\n                        src={val.mobile}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.web} */}\r\n                      <img\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverLandingPage;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nimport {\r\n  ALLSTYLORISILVERLISTINGPAGE,\r\n  CREATESILVERLISTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLISTINGPAGE,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allStyloriSilverBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setDisable(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            mobile: res?.data?.web,\r\n            web: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, mobile: true, web: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: createlandingbanner.position,\r\n        url: createlandingbanner.link,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLISTINGPAGE,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              Silver - Listing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Silver - Listing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Banner's Redirect Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            />\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                 Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                {/* <TableCell>Mobile Image</TableCell> */}\r\n                <TableCell>Banner Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}/silver-jewellery`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}/silver-jewellery`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                     \r\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.web} */}\r\n                      <img\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                        alt=\"images\"\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingPage;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport {\r\n  CREATESPECIFICLISTINGPAGE,\r\n  ALLSPECIFICLISTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n\r\nfunction SpecificListPages(props) {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setDisable(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSPECIFICLISTINGPAGE,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allStyloriSilverBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    debugger;\r\n    if (\r\n      createlandingbanner.urlParam &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        urlParam: createlandingbanner.urlParam,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESPECIFICLISTINGPAGE,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            mobile: res?.data?.web,\r\n            web: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, mobile: true, web: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              Silver - Specific Listing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Silver - Specific Listing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {/* <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            /> */}\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"urlParam\"\r\n              label=\"Banner's Page Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.urlParam}\r\n              name=\"urlParam\"\r\n            />\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>S.No</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                {/* <TableCell>Mobile Image</TableCell> */}\r\n                <TableCell>Banner Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL + val.urlParam}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL + val.urlParam}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                        alt=\"images\"\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SpecificListPages;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nimport {\r\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n  CREATESILVERLISTINGBOTTOMBANNER,\r\n  DELETESILVERLISTINGBOTTOMBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingBottom = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allStyloriSilverBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n\r\n    ClearState();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    ClearState();\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLISTINGBOTTOMBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            web: res?.data?.web,\r\n            mobile: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, web: true, mobile: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (createlandingbanner.mobile && createlandingbanner.web) {\r\n      let create_banner_data = {\r\n        position: \"1\",\r\n        url: \"#\",\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLISTINGBOTTOMBANNER,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              Silver - Listing Page - Bottom Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Silver - Listing Page - Bottom Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {/* <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Link\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            /> */}\r\n            <Grid container justifyContent=\"space-around\"  style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {/* <Grid item style={{ marginLeft: \"5px\" }}>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid> */}\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>S.No</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                <TableCell>Banner Image</TableCell>\r\n                {/* <TableCell>Desktop Image</TableCell> */}\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}/silver-jewellery`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}/silver-jewellery`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                    <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                        alt=\"images\"\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingBottom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\n\r\nimport {\r\n  ALLSTYLORISILVERROUTINGPAGE,\r\n  CREATESTYLORISILVERROUTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingRoutingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERROUTINGPAGE,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allStyloriSilverBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: createlandingbanner.position,\r\n        urlParam: createlandingbanner.urlParam,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESTYLORISILVERROUTINGPAGE,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            [name]: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              Silver Listing Routing Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Stylori Landing Page :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"urlParam\"\r\n              label=\"Router Link\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.urlParam}\r\n              name=\"urlParam\"\r\n            />\r\n  <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Mobile Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Router Link</TableCell>\r\n                <TableCell>Mobile URL</TableCell>\r\n                <TableCell>Web URL</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.urlParam}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {val.urlParam}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.mobile}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {val.mobile}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {val.web}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingRoutingPage;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Breadcrumbs } from \"../../../components\";\r\nimport SilverLandingPage from \"./components/silverlandingpage\";\r\nimport SilverListingPage from \"./components/silverlistingpage\";\r\nimport SpecificListPages from \"./components/specificListPages\";\r\nimport SilverListingRoutingPage from \"./components/silverlistingroutingpage\";\r\nimport SilverListingBottom from \"./components/silverbottmpage\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst Silverbanner = (props) => {\r\n  const classes = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/banners\" name=\"Landing Page Banner\"></Breadcrumbs>\r\n      <SilverLandingPage />\r\n      <SilverListingPage />\r\n      <SpecificListPages />\r\n      <SilverListingBottom />\r\n      {/* <SilverListingRoutingPage /> */}\r\n    </>\r\n  );\r\n};\r\nexport default Silverbanner;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SilverListingPage from \"../components/silverlistingpage\";\r\nimport { Breadcrumbs } from \"../../../../components\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"100%\",\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    imagecontainer: {\r\n      display: \"flex\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    table: {\r\n      minWidth: 500,\r\n    },\r\n    tableWrapper: {\r\n      overflowX: \"auto\",\r\n    },\r\n    link: {\r\n      display: \"flex\",\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(0.5),\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    link_style: {\r\n      color: \"#000\",\r\n    },\r\n  }));\r\n  const SilverListingbanner = (props) => {\r\n    const classes = useStyles2();\r\n  \r\n    return (\r\n      <>\r\n        <Breadcrumbs url=\"/banners\" name=\"Landing Page Banner\"></Breadcrumbs>\r\n        <SilverListingPage />\r\n        {/* <SilverListingRoutingPage /> */}\r\n        {/* <SilverLandingPage /> */}\r\n      </>\r\n    );\r\n  };\r\n  export default SilverListingbanner;\r\n  ","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nimport {\r\n  ALLSTYLORILANDINGBANNERS,\r\n  CREATESTYLORILANDINGBANNER,\r\n  DELETESTYLORILANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst StyloriLandingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORILANDINGBANNERS,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allStyloriBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setDisable(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESTYLORILANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: Number(createlandingbanner.position),\r\n        url: createlandingbanner.link,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESTYLORILANDINGBANNER,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            [name]: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              Stylori - Home Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Stylori Landing Page :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Banner's Redirect Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            />\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Mobile Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* <TextField\r\n              margin=\"dense\"\r\n              id=\"mobile\"\r\n              label=\"Mobile ImagecURL\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.mobile}\r\n              name=\"mobile\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"web\"\r\n              label=\"Desktop Image URL\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.web}\r\n              name=\"web\"\r\n            /> */}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                <TableCell>Mobile Image </TableCell>\r\n                <TableCell>Desktop Image </TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {APP_URL}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.mobile}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        src={val.mobile}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                        alt=\"images\"\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                        alt=\"images\"\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default StyloriLandingPage;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Breadcrumbs } from \"../../../components\";\r\nimport StyloriLandingPage from \"./components/stylorilandingpage\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst Styloribanner = (props) => {\r\n  const classes = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/banners\" name=\"Banner Home Page\"></Breadcrumbs>\r\n      <StyloriLandingPage />\r\n    </>\r\n  );\r\n};\r\nexport default Styloribanner;\r\n","import React from 'react';\r\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './style.css'\r\n\r\n\r\nconst IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default function Editcategory(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    });\r\n\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\r\n            </Grid>\r\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\r\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={12} xs={12}>\r\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\r\n                        <div className=\"z\">\r\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                \r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedA}\r\n                                        onChange={ handleChange('checkedA')}\r\n                                        value=\"checkedA\"\r\n                                        \r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                         </div>  \r\n\r\n                        \r\n                    </Grid>\r\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedB}\r\n                                        onChange={ handleChange('checkedB')}\r\n                                        value=\"checkedB\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\r\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedC}\r\n                                        onChange={ handleChange('checkedC')}\r\n                                        value=\"checkedC\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Cancel\r\n                            </Button>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Save\r\n                            </Button>\r\n                    </Grid>\r\n                    <Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport './table.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    conatainerRow:{\r\n        width:\"300px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 256px\",\r\n    fontSize:\"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        width:\"500px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 270px\",\r\n    fontSize:\"14px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"20px\",\r\n    gridTemplateColumns: \"repeat(3, 1fr)\"\r\n    }\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Columns(props) {\r\n    const classes = useStyles();\r\n\r\n    const checkboxrow = [\r\n        {\r\n            id:1,\r\n            name:\"Published\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:2,\r\n            name:\"AVB\",\r\n            isActive:false,      \r\n        },\r\n        {\r\n            id:3,\r\n            name:\"Price\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:4,\r\n            name:\"Type\",\r\n            isActive:  false,      \r\n        },\r\n        {\r\n            id:5,\r\n            name:\"Flavour\",\r\n            isActive: false ,     \r\n        },\r\n        {\r\n            id:6,\r\n            name:\"Flavour\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:7,\r\n            name: \"Material\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:8,\r\n            name:\"Medium\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:9,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:10,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:11,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:12,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:13,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:14,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:15,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n        \r\n    ]\r\n    const [columns,setColumns ] = React.useState({\r\n        listOfValue:checkboxrow\r\n    })\r\n    function stateChange(id){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n            if(id===data.id){\r\n                data.isActive = data.isActive?false:true;\r\n            }\r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    function resetButton(){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n                data.isActive = false;\r\n            \r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    // const lists = columns.listOfValue.map((head) =>\r\n    //     (\r\n    //         <Grid conatiner>\r\n    //             <Grid item xs={4}><Checkbox\r\n    //                 value=\"secondary\"\r\n    //                 color=\"primary\"\r\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n    //                 checked = {head.isActive}\r\n    //                 onChange = {()=>stateChange(head.id)}\r\n                \r\n    //             />\r\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n    //             </Grid>\r\n    //         </Grid>\r\n    //     )\r\n\r\n    // );\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n         <div style={{ maxHeight: \"420px\"}}>\r\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\r\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\r\n                <Grid conatiner>\r\n              <Grid item   className={classes.conatainerRow}>\r\n                   {columns.listOfValue.map((head) =><Grid container>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                               checked = {head.isActive}\r\n                    onChange = {()=>stateChange(head.id)}\r\n                            \r\n                        />\r\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\r\n                <Grid>\r\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\r\n                </Grid>\r\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\r\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\r\n                        SAVE\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Form, Grid,Select } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Columns from \"./columns\"\r\nimport './table.css'\r\n\r\n\r\n\r\n\r\nconst useStyless = makeStyles(theme => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    '&:hover': {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\"\r\n];\r\n\r\nexport default function FormPropsTextFields() {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n\r\n  return (\r\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\r\n      <Grid lg={2} md={2} sm={3}>\r\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\r\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\r\n\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\r\n\r\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\r\n          \r\n              <Select\r\n              className={classes.notchedOutline}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                \r\n        >\r\n         \r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\r\n        </Select>\r\n         \r\n            <Menu\r\n              id=\"lock-menu\"\r\n              // anchorEl={anchorEl}\r\n\r\n              keepMounted\r\n              // open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              {options.map((option, index) => (\r\n                <MenuItem\r\n                  key={option}\r\n\r\n\r\n                  onClick={event => handleMenuItemClick(event, index)}\r\n                >\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </div>\r\n\r\n\r\n\r\n        </Popover>\r\n\r\n      </Grid>\r\n      <Grid lg={10} md={10} sm={9}>\r\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\r\n        </form>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Columns from './columns';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport './table.css';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        color:\"#06847B\",\r\n        border: \"1px solid #7bbcb7\",\r\n        '&:hover':{\r\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n            border: \"1px solid #06847B\",\r\n        }\r\n      },\r\n\r\n}));\r\n\r\nfunction SortHeader(){\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n \r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n      const handleClose = () => {\r\n        setAnchorEl(false);\r\n      };\r\n      const open = Boolean(anchorEl);\r\n      const id = open ? 'simple-popover' : undefined;\r\n    \r\n     \r\n        return(\r\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\r\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\r\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \r\n                </Grid>\r\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\r\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\r\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\r\n                        </Button>\r\n                        <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                            }}\r\n                            transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                            }}\r\n                        >\r\n                            <Columns columnclose={handleClose}/>\r\n                        </Popover>\r\n\r\n\r\n\r\n                    </Grid>\r\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\r\n                        CREATE PRODUCT\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        ) \r\n\r\n}\r\nexport default SortHeader","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport {TableBody,Grid} from '@material-ui/core';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton'; \r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Filterandsearch from './filterandsearch';\r\nimport SortHeader from './SortHeader';\r\nimport './table.css';\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\r\n  return { name, calories, fat, carbs, protein , protein1, protein2};\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\r\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\r\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\r\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\r\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\r\n];\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\r\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n\r\n   <React.Fragment >\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n    </React.Fragment> \r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n     \r\n    <Toolbar\r\n    \r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\r\n          Nutrition\r\n          \r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            {/* <FilterListIcon /> */}\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n    width:\"100%\", \r\n    overflowX:\"scroll\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n      \r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };    \r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \r\n                <FormControlLabel\r\n               \r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                // label=\"Dense padding\"\r\n            />\r\n        </div>    */}\r\n\r\n\r\n        <SortHeader lg={12} md={12} sm={12}  />\r\n\r\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n        <Filterandsearch/>\r\n\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n            \r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row, index) => {\r\n                        const isItemSelected = isSelected(row.name);\r\n                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\r\n                    </TableRow>\r\n                    \r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n        \r\n              )}\r\n                   \r\n                     \r\n              \r\n              \r\n            </TableBody>\r\n          </Table>\r\n        \r\n        \r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      </Grid>  \r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n","import React from 'react';\r\nimport ProductTable from './ProductTable';\r\nimport './table.css'\r\nfunction newmaterial1() {\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <ProductTable />\r\n        </div>\r\n    )\r\n}\r\nexport default newmaterial1","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ProductContext, ProductProvider } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { API_URL } from \"../../config\";\r\nimport { isString } from \"util\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\r\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { Chip } from \"@material-ui/core\";\r\n\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginImageValidateSize,\r\n  FilePondPluginFileRename\r\n);\r\nconst useStyle = makeStyles((theme) => ({\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n  variantFontSize: {\r\n    fontSize: \".9rem\",\r\n  },\r\n  variantMarginTop: {\r\n    marginTop: \"20px\",\r\n  },\r\n}));\r\nexport function CreateVariant(props) {\r\n  const classes = useStyle();\r\n  let prod_id = props.productId;\r\n  let colors = [];\r\n  let purities = [];\r\n  let diamondtypes = [];\r\n  let oldpurity = [];\r\n\r\n  const TOKEN = \"token\";\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor);\r\n  productCtx.oldproductMetalColor.forEach((colorobj) => {\r\n    colors.push(colorobj.productColor);\r\n  });\r\n  productCtx.oldproductMetalPurity.forEach((colorobj) => {\r\n    purities.push(colorobj.purity);\r\n    oldpurity.push(colorobj);\r\n  });\r\n\r\n  productCtx.oldproductDiamondTypesArray.forEach((diamondobj) => {\r\n    diamondtypes.push(diamondobj.diamondType);\r\n  });\r\n\r\n  const [variant, setVariant] = useState({\r\n    metal_color: [],\r\n    metal_purity: [],\r\n    diamond_color: [],\r\n    diamond_clarity: [],\r\n    variant_diamond_type: [],\r\n    product_images: {},\r\n    size: [],\r\n  });\r\n\r\n  function handleMetalColor(status_data) {\r\n    let color = variant.metal_color;\r\n    color.some((color_data) => color_data.id === status_data.id)\r\n      ? (color = color.filter((color_fil) => color_fil.id !== status_data.id))\r\n      : color.push(status_data);\r\n    setVariant({\r\n      ...variant,\r\n      metal_color: color,\r\n    });\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    let color_arr = [];\r\n    value.map((color, index) => {\r\n      if (\r\n        productCtx.productMetalColor.some(\r\n          (item) => item.productColor === color.productColor\r\n        )\r\n      ) {\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          metal_color: color.productColor,\r\n        };\r\n        color_arr.push(color_obj);\r\n      }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      metal_color: color_arr,\r\n    });\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n    });\r\n  };\r\n  const sendNetworkRequest = async (url, params, data, auth = false) => {\r\n    url = API_URL + url;\r\n    console.info(\"URL\", url, data);\r\n    const method = data ? \"POST\" : \"GET\",\r\n      headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n    let resdata = null;\r\n    if (auth) {\r\n      const token = localStorage.getItem(TOKEN);\r\n      if (token) headers[\"auth\"] = token;\r\n      else window.location = \"/\";\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body: isString(data) ? data : JSON.stringify(data),\r\n      headers,\r\n    });\r\n\r\n    if (response.status < 400) {\r\n      resdata = await response.json();\r\n    } else {\r\n      alert(\r\n        `${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`\r\n      );\r\n    }\r\n    return resdata;\r\n  };\r\n\r\n  const handleMetalPurity = (type) => (event, value) => {\r\n    let purity_arr = [];\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n    });\r\n    value.map((color, index) => {\r\n      let color_obj = {\r\n        ...color,\r\n        purity: color.purity,\r\n      };\r\n      purity_arr.push(color_obj);\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      metal_purity: purity_arr,\r\n    });\r\n  };\r\n  // function handleMetalPurity(status_data) {\r\n  //     status_data.metal_weight = \"\";\r\n  //     status_data.error_message = false;\r\n  //     // alert(JSON.stringify(status_data));\r\n  //     let purity = variant.metal_purity;\r\n  //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         metal_purity: purity\r\n  //     })\r\n  // }\r\n  const diamondTypeChange = (type) => (event, value) => {\r\n    let diamondtype_arr = [];\r\n    value.map((color, index) => {\r\n      if (color.label) {\r\n        let color_obj = {\r\n          ...color,\r\n          diamondType: color.label,\r\n        };\r\n        diamondtype_arr.push(color_obj);\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          diamondType: color.diamondType,\r\n        };\r\n        diamondtype_arr.push(color_obj);\r\n      }\r\n\r\n      //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\r\n      //    }else{ let color_obj = {\r\n      //         ...color,\r\n      //         diamondType: color.label\r\n      //     }\r\n      //     diamondtype_arr.push(color_obj)\r\n      //   }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      variant_diamond_type: diamondtype_arr,\r\n    });\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: diamondtype_arr,\r\n    });\r\n  };\r\n\r\n  // function diamondTypeChange(status_data){\r\n  //     let diamond__type = variant.variant_diamond_type;\r\n  //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         variant_diamond_type: diamond__type\r\n  //     })\r\n  // }\r\n\r\n  const sizeChange = (type) => (event, value) => {\r\n    let size_arr = [];\r\n    // value.map((color, index) => {\r\n    //   if(productCtx.productDiamondTypes.some(item => item === color)){\r\n    //    }else{ let color_obj = {\r\n    //         ...color,\r\n    //         label: color\r\n    //     }\r\n    //     size_arr.push(color_obj)\r\n    //   }\r\n    // })\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      size: value,\r\n    });\r\n  };\r\n  // function sizeChange(status_data) {\r\n  //     let variantSize = variant.size;\r\n  //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         size: variantSize\r\n  //     })\r\n\r\n  // }\r\n\r\n  function setMetalWeightInput(e, metalPurityId) {\r\n    // alert(e.target.value)\r\n    let metalWeight = variant.metal_purity;\r\n    metalWeight =\r\n      metalWeight &&\r\n      metalWeight.map((metal_weight, index) => {\r\n        if (metalPurityId === metal_weight.id) {\r\n          metal_weight.metal_weight = e.target.value;\r\n        }\r\n        return metal_weight;\r\n      });\r\n    setVariant({\r\n      ...variant,\r\n      metal_purity: metalWeight,\r\n    });\r\n  }\r\n  function saveCreateVariant() {\r\n    let createVariant = {\r\n      productId: prod_id,\r\n      productMetalcoloursByProductId: variant.metal_color,\r\n      productPuritiesByProductId: variant.metal_purity,\r\n      productDiamondTypes: variant.variant_diamond_type,\r\n      productSize: variant.size,\r\n      product_images: variant.product_images,\r\n      // productImage:variant.product_images\r\n    };\r\n\r\n    let metal_color_image_length = Object.entries(variant.product_images);\r\n    let metal_purity_weight = false;\r\n    let metal_purity =\r\n      variant.metal_purity &&\r\n      variant.metal_purity.map((metal_weight_check) => {\r\n        if (metal_weight_check.metal_weight === \"\") {\r\n          metal_weight_check.error_message = true;\r\n          metal_purity_weight = true;\r\n        }\r\n        return metal_weight_check;\r\n      });\r\n    variant[\"metal_purity\"] = metal_purity;\r\n    setVariant({\r\n      ...variant,\r\n      variant,\r\n    });\r\n    if (metal_color_image_length.length !== variant.metal_color.length) {\r\n      alert(\"Select Metal Color Images\");\r\n    }\r\n    if (\r\n      (variant.metal_color.length > 0 &&\r\n        variant.metal_color.length === metal_color_image_length.length) ||\r\n      (variant.metal_purity.length > 0 && metal_purity_weight === false) ||\r\n      variant.size.length > 0 ||\r\n      variant.variant_diamond_type.length > 0\r\n    ) {\r\n      let createVariants = productCtx.createVariantList;\r\n      let editVariants = productCtx.editVariants;\r\n      let variants = productCtx.variants;\r\n      let productImages = productCtx.productImages;\r\n      productImages = [...productImages, variant.product_images];\r\n      createVariants.push(createVariant);\r\n      // let params = {\r\n      //     method:'POST',\r\n      //     headers: {\r\n      //         \"Content-Type\": \"application/json\",\r\n      //     },\r\n      //     body: JSON.stringify(createVariant)\r\n      // }\r\n\r\n      props.updatevarient(createVariant);\r\n      console.log(JSON.stringify(createVariant));\r\n    } else {\r\n      alert(\"please fill the Create variant\");\r\n    }\r\n  }\r\n  function backToProductAttribute() {\r\n    props.changeVariant();\r\n  }\r\n  async function uploadimagetoserver(\r\n    bodaydata,\r\n    imageposition,\r\n    imagecolor,\r\n    uploadtype\r\n  ) {\r\n    let prodimages = variant.product_images;\r\n    // if(true)\r\n    // {\r\n    var prodid = prod_id;\r\n    let imagecolourobj = variant.product_images[imagecolor];\r\n    var imagecount = 1;\r\n    if (imagecolourobj) {\r\n      imagecount = imagecolourobj.length + 1;\r\n    }\r\n\r\n    let imagename = prodid + \"_\" + imagecount + imagecolor.charAt(0);\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        product_id: prodid,\r\n      },\r\n      false\r\n    );\r\n    var returnData =\r\n      responsedata && responsedata.data && responsedata.data.returnData;\r\n    var signedRequest = returnData && returnData.signedRequest;\r\n    var url = returnData && returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData && returnData.filepath;\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    if (imagecolourobj) {\r\n      const imageobj = {\r\n        name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\r\n        position: imageposition,\r\n        color: imagecolor,\r\n        image_url: filepathname,\r\n        url:\r\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\r\n          filepathname,\r\n      };\r\n      if (uploadtype === \"edit\") {\r\n        imagecolourobj[imageposition] = imageobj;\r\n      } else {\r\n        imagecolourobj.push(imageobj);\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n    } else {\r\n      const imageobj = {\r\n        name: prodid + \"_1\" + imagecolor.charAt(0),\r\n        position: imageposition,\r\n        color: imagecolor,\r\n        image_url: filepathname,\r\n        url:\r\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\r\n          filepathname,\r\n      };\r\n      imagecolourobj = [];\r\n      imagecolourobj.push(imageobj);\r\n    }\r\n    prodimages[imagecolor] = imagecolourobj;\r\n    setVariant({ ...variant, product_images: prodimages });\r\n    // setFiles([])\r\n    // }\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.productColor}\r\n          getOptionDisabled={(option) =>\r\n            colors.indexOf(option.productColor) > -1\r\n          }\r\n          defaultValue={productCtx.oldproductMetalColor}\r\n          options={productCtx.masterData.metalcolour}\r\n          value={productCtx.productMetalColor}\r\n          onChange={handleoptionChange(\"productMetalColor\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.productColor}\r\n                {...getTagProps({ index })}\r\n                disabled={colors.indexOf(option.productColor) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Metal Colours\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        {/* <Grid item>\r\n                            <FormGroup row>\r\n                                {\r\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\r\n\r\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\r\n                                            <FormControlLabel\r\n                                                disabled\r\n                                                control={\r\n                                                    <Checkbox checked={true} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            /> :\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            />\r\n\r\n                                    ))\r\n                                }\r\n                            </FormGroup>\r\n                            {\r\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\r\n                                    <TextField\r\n                                        className={classes.helperinput}\r\n                                        style={{ width: \"124px\" }}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        fullWidth\r\n                                        type=\"number\"\r\n                                        value={metal_purity.metal_weight}\r\n                                        id=\"metal_weight\"\r\n                                        error={metal_purity && metal_purity.error_message }\r\n                                        name=\"metal_weight\"\r\n                                        label={`Metal Weight${metal_purity.name}`}\r\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </Grid>\r\n                     */}\r\n\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          className={classes.fixedTag}\r\n          margin=\"dense\"\r\n          getOptionLabel={(option) => option.name}\r\n          getOptionDisabled={(option) => purities.indexOf(option.name) > -1}\r\n          defaultValue={productCtx.oldproductMetalPurity}\r\n          options={productCtx.masterData.metalpurity}\r\n          value={productCtx.productMetalPurity}\r\n          onChange={handleMetalPurity(\"productMetalPurity\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.purity}\r\n                {...getTagProps({ index })}\r\n                disabled={purities.indexOf(option.purity) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Metal Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n\r\n        {productCtx.productMetalPurity &&\r\n          productCtx.productMetalPurity.map((metal_purity, index) => (\r\n            <TextField\r\n              key={index}\r\n              className={classes.helperinput}\r\n              style={{ width: \"100px\", marginLeft: \"8px\" }}\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              type=\"number\"\r\n              value={metal_purity.metal_weight}\r\n              id=\"metal_weight\"\r\n              error={metal_purity && metal_purity.error_message}\r\n              name=\"metal_weight\"\r\n              label={`Weight ${metal_purity.purity}`}\r\n              onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n            />\r\n          ))}\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.label}\r\n          getOptionDisabled={(option) =>\r\n            diamondtypes.indexOf(option.label) > -1\r\n          }\r\n          defaultValue={productCtx.oldproductDiamondTypesArray}\r\n          options={productCtx.masterData.diamondtypes}\r\n          value={\r\n            productCtx.productDiamondTypesArray\r\n              ? productCtx.productDiamondTypesArray\r\n              : []\r\n          }\r\n          onChange={diamondTypeChange(\"productDiamondTypesArray\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.diamondType}\r\n                {...getTagProps({ index })}\r\n                disabled={diamondtypes.indexOf(option.diamondType) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Diamond Types\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        {productCtx.variant_size && productCtx.variant_size.length > 0 ? (\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            fullWidth\r\n            getOptionLabel={(option) => option}\r\n            options={productCtx.productVariantSize}\r\n            value={\r\n              productCtx.productSizes\r\n                ? productCtx.productSizes\r\n                : productCtx.variant_size\r\n            }\r\n            onChange={sizeChange(\"productSizes\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Sizes\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        ) : null}\r\n      </Grid>\r\n\r\n      {/* {\r\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\r\n                    <Grid item>\r\n                       \r\n                        <Grid item>\r\n                            <FormGroup row>\r\n                            <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    options={productCtx.masterData.diamondtypes}\r\n                    defaultValue={productCtx.productDiamondTypes}\r\n                    onChange={handleoptionChange('productMetalColor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n                              \r\n                            </FormGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid> : ''\r\n                } */}\r\n\r\n      <Grid container>\r\n        {variant.metal_color === undefined\r\n          ? null\r\n          : variant.metal_color.map((value, index) => (\r\n              <Grid xs={12} container spacing={1} item>\r\n                <Grid xs={12} item>\r\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                    {value.productColor}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sm={12} md={12} item>\r\n                  <FilePond\r\n                    allowImageValidateSize\r\n                    imageValidateSizeMinWidth=\"2400\"\r\n                    imageValidateSizeMinHeight=\"2400\"\r\n                    imageValidateSizeMeasure={(file) =>\r\n                      new Promise((resolve, reject) => {})\r\n                    }\r\n                    labelIdle=\"Upload Image\"\r\n                    allowMultiple={true}\r\n                    //files = {files}\r\n                    onupdatefiles={(fileItem) => {\r\n                      // Set currently active file objectsfiles to this.state\r\n                    }}\r\n                    onaddfile={(error, fileItem) => {\r\n                      uploadimagetoserver(fileItem, index, value.name, \"add\");\r\n                    }}\r\n                    onremovefile={(error, fileItem) => {}}\r\n                    fileRenameFunction={(file) =>\r\n                      new Promise((resolve) => {\r\n                        var prodid = prod_id;\r\n                        let imagecolourobj = variant.product_images[value.name];\r\n                        var imagecount = 1;\r\n                        if (imagecolourobj) {\r\n                          imagecount = imagecolourobj.length + 1;\r\n                        }\r\n                        let imagename =\r\n                          prodid +\r\n                          \"_\" +\r\n                          imagecount +\r\n                          value.name.charAt(0) +\r\n                          file.extension;\r\n                        resolve(imagename);\r\n                      })\r\n                    }\r\n                  ></FilePond>\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n      </Grid>\r\n      {\r\n        <Grid\r\n          container\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"16px\",\r\n          }}\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={(e) => saveCreateVariant()}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\r\n                Back\r\n                </Button> */}\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\nexport default CreateVariant;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Chip,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  Input\r\n} from '@material-ui/core';\r\nimport { ProductContext } from '../../../../context';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 960\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  helperText: {\r\n    textAlign: 'right',\r\n    marginRight: 0\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900]\r\n    }\r\n  }\r\n}));\r\n\r\nconst EditDiamond = props => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id : diamond.id,\r\n    diamondweight  : diamond.diamondweight ? diamond.diamondweight : '',\r\n    diamondcount  : diamond.diamondcount ? diamond.diamondcount : '',\r\n    diamondsettings : diamond.diamondsettings ? diamond.diamondsettings : null,\r\n    diamondshape : diamond.diamondshape ? diamond.diamondshape : null\r\n  }\r\n  const [value, setValue] = useState('');\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n  }\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n  },[editcontent])\r\n \r\n  return (\r\n    <Dialog\r\n      maxWidth=\"lg\"\r\n      onClose={onClose}\r\n      open={open}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <div className={classes.header}>\r\n          <Typography\r\n            align=\"center\"\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n           Diamond Details\r\n          </Typography>\r\n          \r\n        </div>\r\n        <div className={classes.content}>\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.diamondweight}\r\n              placeholder={\"Weight\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondweight')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"#of Stones\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondcount')}\r\n              value={editcontent.diamondcount}\r\n              />\r\n              <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    options={productCtx.masterData.diamondsettings}\r\n                    value={editcontent.diamondsettings}\r\n                    onChange={handleoptionChange('diamondsettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Diamond Setting\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  /> \r\n\r\n                <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={editcontent.diamondshape}\r\n                    options={productCtx.masterData.diamondshapes}\r\n                    onChange={handleoptionChange('diamondshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n          \r\n          \r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            className={classes.applyButton}\r\n            onClick={() => onApply(editcontent)}\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditDiamond.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default EditDiamond;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Button, Chip, TextField, Input } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ProductContext } from \"../../context\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport EditDiamond from \"./Components/EditDiamond/EditDiamond\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"Diamond\", label: \"Diamond\" },\r\n  { id: \"Colour\", label: \"Colour\" },\r\n  { id: \"Clarity\", label: \"Clarity\" },\r\n  { id: \"Weight\", label: \"Weight\" },\r\n  { id: \"Number\", label: \"Number\" },\r\n  { id: \"Setting\", label: \"Setting\" },\r\n  { id: \"Shape\", label: \"Shape\" },\r\n\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    minWidth: 80,\r\n    maxWidth: 80,\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onPageChange(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onPageChange(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    console.log(event, page + 1);\r\n\r\n    onPageChange(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    display: \"flex\",\r\n\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function DiamondDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  let [diamondEditObject, setDiamondEditObject] = React.useState({\r\n    edit: \"\",\r\n  });\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond && props.diamond.length - page * rowsPerPage);\r\n  function DiamondEdit(diamondData) {\r\n    setDiamondEditObject({\r\n      ...diamondEditObject,\r\n      edit: JSON.parse(JSON.stringify(diamondData)),\r\n    });\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\r\n        (settingData, index) => settingData.name === diamondData.diamondSettings\r\n      )[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter(\r\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\r\n      )[0],\r\n      diamondcount: diamondData.stoneCount,\r\n      diamondweight: diamondData.stoneWeight,\r\n    });\r\n    setEditcontent({\r\n      id: diamondData.id,\r\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\r\n        (settingData, index) => settingData.name === diamondData.diamondSettings\r\n      )[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter(\r\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\r\n      )[0],\r\n      diamondcount: diamondData.stoneCount,\r\n      diamondweight: diamondData.stoneWeight,\r\n    });\r\n    setOpenedit(true);\r\n  }\r\n  async function DiamondSave(diamondobj) {\r\n    var bodydata = {};\r\n    if (diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight) {\r\n      let list_data = props.diamond;\r\n      let DiamondChangeData = list_data.map((diamondListData, index) => {\r\n        if (diamondobj.id === diamondListData.id) {\r\n          diamondListData.diamondSettings = diamondobj.diamondsettings.name;\r\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\r\n          diamondListData.stoneCount = diamondobj.diamondcount;\r\n          diamondListData.stoneWeight = diamondobj.diamondweight;\r\n          bodydata[\"diamondSettings\"] = diamondobj.diamondsettings.name;\r\n          bodydata[\"diamondShape\"] = diamondobj.diamondshape.name;\r\n          bodydata[\"stoneCount\"] = diamondobj.diamondcount;\r\n          bodydata[\"stoneWeight\"] = diamondobj.diamondweight;\r\n          bodydata[\"diamondid\"] = diamondobj.id;\r\n          return diamondListData;\r\n        }\r\n        return diamondListData;\r\n      });\r\n      let response = await sendNetworkRequest(\"/editproductdiamond\", {}, bodydata);\r\n\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n\r\n      setEditcontent(null);\r\n      setOpenedit(false);\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not fill all item\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.diamond &&\r\n              props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondType}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondColour}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondClarity}\r\n                  </TableCell>\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align={\"center\"} component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        style={{ width: 40 }}\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Weight\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"diamondweight\")}\r\n                        value={productCtx.diamondweight}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.stoneWeight}\r\n                    </TableCell>\r\n                  )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        style={{ width: 40 }}\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"#of Stones\"\r\n                        name=\"size\"\r\n                        type=\"number\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"diamondcount\")}\r\n                        value={productCtx.diamondcount}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.stoneCount}\r\n                    </TableCell>\r\n                  )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.diamondsettings}\r\n                        options={productCtx.masterData.diamondsettings}\r\n                        onChange={handleoptionChange(\"diamondsettings\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Diamond Setting\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.diamondSettings}\r\n                    </TableCell>\r\n                  )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.diamondshape}\r\n                        options={productCtx.masterData.diamondshapes}\r\n                        onChange={handleoptionChange(\"diamondshape\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Diamond Shape\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.diamondShape}\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align=\"center\" style={{ width: 80 }}>\r\n                      <Button onClick={(e) => DiamondSave(row.id)}>\r\n                        <SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}>\r\n                        <CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align=\"center\" style={{ width: 80 }}>\r\n                      <Button onClick={(e) => DiamondEdit(row)}>\r\n                        <EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            {emptyRows == 0 ? (\r\n              <>\r\n                <TableRow style={{ height: 1 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              </>\r\n            ) : null}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.diamond && props.diamond.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onPageChange={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditDiamond diamond={editcontent} onApply={DiamondSave} onClose={handleApplicationClose} open={openedit} />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Chip,\r\n  colors, Dialog,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { ProductContext } from '../../../../context';\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 960\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  helperText: {\r\n    textAlign: 'right',\r\n    marginRight: 0\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900]\r\n    }\r\n  }\r\n}));\r\n\r\nconst EditGemstone = props => {\r\n\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id: diamond.id,\r\n    gemstonesettings: diamond.gemstonesettings ? diamond.gemstonesettings : '',\r\n    gemstonecount: diamond.gemstonecount ? diamond.gemstonecount : '',\r\n    gemstoneweight: diamond.gemstoneweight ? diamond.gemstoneweight : null,\r\n    gemstonesize: diamond.gemstonesize ? diamond.gemstonesize : null,\r\n    gemstoneshape: diamond?.gemstoneshape\r\n  }\r\n  const [value, setValue] = useState('');\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n\r\n    setEditcontent({ ...editcontent, [type]: e.target.value })\r\n  }\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n    // alert(JSON.stringify(editcontent.gemstonecount))\r\n\r\n  })\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"lg\"\r\n      onClose={onClose}\r\n      open={open}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <div className={classes.header}>\r\n          <Typography\r\n            align=\"center\"\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            Gemstone Details\r\n          </Typography>\r\n\r\n        </div>\r\n        <div className={classes.content}>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonesize}\r\n            placeholder={\"Weight\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstonesize')}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstoneweight}\r\n            placeholder={\"Weight\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstoneweight')}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            placeholder=\"#of Stones\"\r\n            name=\"size\"\r\n            type=\"number\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstonecount')}\r\n            value={editcontent.gemstonecount}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={option => option?.label}\r\n            options={productCtx?.masterData?.gemstonesettings ?? []}\r\n            value={editcontent?.gemstonesettings ?? null}\r\n            onChange={handleoptionChange('gemstonesettings')}\r\n            renderTags={(value, getTagProps) =>\r\n              value?.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Gemostones Setting\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: 'search' }}\r\n              />\r\n            )}\r\n          />\r\n\r\n\r\n          <Autocomplete\r\n\r\n            className={classes.fixedTag}\r\n            getOptionLabel={option => option?.label ?? []}\r\n            value={editcontent?.gemstoneshape ?? []}\r\n            options={productCtx?.masterData.diamondshapes}\r\n            onChange={handleoptionChange('gemstoneshape')}\r\n            renderTags={(value, getTagProps) =>\r\n              value?.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n\r\n                label=\"Gemostones Shape\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: 'search' }}\r\n              />\r\n            )}\r\n          />\r\n\r\n\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            className={classes.applyButton}\r\n            onClick={() => onApply(editcontent)}\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditGemstone.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default EditGemstone;\r\n","import { Button, Chip, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { ProductContext } from '../../context';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport EditGemstone from './Components/EditGemstone/EditGemstone';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n  { id: 'Shape', label: 'Shape' },\r\n  { id: 'Setting', label: 'Setting' },\r\n  { id: 'Size', label: 'Size' },\r\n  { id: 'Weight', label: 'Weight' },\r\n  { id: 'Number', label: 'Number' },\r\n  {\r\n    id: 'Edit',\r\n    label: 'Edit',\r\n    minWidth: 120,\r\n    align: 'center',\r\n    format: value => value.toFixed(2),\r\n  }\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root': {\r\n      padding: 0,\r\n    }\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  table: {\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function GemstoneDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\"\r\n  });\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null)\r\n    setOpenedit(false);\r\n  };\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  let [gemstoneEditObject, setGemstoneEditObject] = React.useState({\r\n    edit: ''\r\n  });\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\r\n  function GemstoneEdit(gemstoneData) {\r\n\r\n    setGemstoneEditObject({\r\n      ...gemstoneEditObject,\r\n      edit: JSON.parse(JSON.stringify(gemstoneData))\r\n    })\r\n    setProductCtx({\r\n      ...productCtx,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\r\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize\r\n    })\r\n    setEditcontent({\r\n      id: gemstoneData.id,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\r\n      gemstoneshape: gemstoneData.gemstoneShape,\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize\r\n    })\r\n    // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\r\n    setOpenedit(true)\r\n  }\r\n  async function GemstoneSave(gemdata) {\r\n    if (gemdata.gemstonesettings && gemdata.gemstoneshape && gemdata.gemstonecount && gemdata.gemstoneweight && gemdata.gemstonesize) {\r\n      let list_data = props.gemstone;\r\n      var bodydata = {}\r\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\r\n        if (gemdata.id === gemstoneListData.id) {\r\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\r\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\r\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\r\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\r\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\r\n          bodydata['gemstoneSetting'] = gemdata.gemstonesettings.name\r\n          bodydata['gemstoneShape'] = gemdata.gemstoneshape.name\r\n          bodydata['stoneCount'] = gemdata.gemstonecount;\r\n          bodydata['gemstoneSize'] = gemdata.gemstonesize;\r\n          bodydata['stoneWeight'] = gemdata.gemstoneweight;\r\n          bodydata['id'] = gemdata.id;\r\n          return gemstoneListData;\r\n        }\r\n        return gemstoneListData;\r\n      });\r\n\r\n      let response = await sendNetworkRequest('/editproductgemstone', {}, bodydata)\r\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data, index) => edit_data.id === gemdata.id)[0];\r\n      let editGemstoneLists = productCtx.editGemstoneLists;\r\n      if (JSON.stringify(editGemstoneList) !== JSON.stringify(gemstoneEditObject.edit)) {\r\n        let status = editGemstoneLists && editGemstoneLists.some((check_edit, index) => check_edit.id === editGemstoneList.id) ?\r\n          editGemstoneLists = editGemstoneLists && editGemstoneLists\r\n            .map((gemstone_list, index) => {\r\n              if (gemstone_list.id === editGemstoneList.id) {\r\n                return editGemstoneList;\r\n              }\r\n              return gemstone_list;\r\n            })\r\n          : editGemstoneLists.push(editGemstoneList);\r\n      }\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\"\r\n      })\r\n      handleClick();\r\n      setProductCtx({\r\n        ...productCtx,\r\n        gemstonelist: gemstoneChangeData,\r\n        editGemstoneLists,\r\n        gemstonesettings: \"\",\r\n        gemstoneshape: \"\",\r\n        gemstonecount: \"\",\r\n        gemstoneweight: \"\",\r\n        gemstonesize: \"\"\r\n      })\r\n      setEditcontent(null)\r\n      setOpenedit(false)\r\n      //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not fill all item\",\r\n        severity: \"info\"\r\n      })\r\n      handleClick();\r\n    }\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n\r\n    setProductCtx({ ...productCtx, [type]: value })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value })\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.gemstoneType}\r\n                </TableCell>\r\n                {btnEdit.action && btnEdit.id == row.id ?\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.label}\r\n                      value={productCtx.gemstoneshape}\r\n                      options={productCtx.masterData.gemstonshapes}\r\n                      onChange={handleoptionChange('gemstoneshape')}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                        ))\r\n                      }\r\n                      renderInput={params => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Gemstone Shape\"\r\n                          margin=\"dense\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: 'search' }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </TableCell> :\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.gemstoneShape}\r\n                  </TableCell>\r\n                }\r\n                {btnEdit.action && btnEdit.id == row.id ?\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.label}\r\n                      value={productCtx.gemstonesettings}\r\n                      options={productCtx.masterData.gemstonesettings}\r\n                      onChange={handleoptionChange('gemstonesettings')}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                        ))\r\n                      }\r\n                      renderInput={params => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Gemstone Setting\"\r\n                          margin=\"dense\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: 'search' }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </TableCell> :\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.gemstoneSetting}\r\n                  </TableCell>\r\n                }\r\n                {btnEdit.action && btnEdit.id == row.id ?\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Input\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"size\"\r\n                      margin=\"dense\"\r\n                      label=\"Gemstone Size\"\r\n                      name=\"size\"\r\n                      onChange={handleInputChange('gemstonesize')}\r\n                      autoComplete=\"size\"\r\n                      value={productCtx.gemstonesize}\r\n                    />\r\n                  </TableCell> :\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.gemstoneSize}\r\n                  </TableCell>}\r\n                {btnEdit.action && btnEdit.id == row.id ?\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Input\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"size\"\r\n                      margin=\"dense\"\r\n                      label=\"Weight\"\r\n                      name=\"size\"\r\n                      autoComplete=\"size\"\r\n                      onChange={handleInputChange('gemstoneweight')}\r\n                      value={productCtx.gemstoneweight}\r\n                    />\r\n                  </TableCell> :\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.stoneWeight}\r\n                  </TableCell>\r\n                }\r\n                {btnEdit.action && btnEdit.id == row.id ?\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Input\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"size\"\r\n                      margin=\"dense\"\r\n                      label=\"#of Stones\"\r\n                      name=\"size\"\r\n                      autoComplete=\"size\"\r\n                      onChange={handleInputChange('gemstonecount')}\r\n                      value={productCtx.gemstonecount}\r\n                    />\r\n                  </TableCell> :\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.stoneCount}\r\n                  </TableCell>\r\n                }\r\n                {\r\n                  btnEdit.action && btnEdit.id == row.id ?\r\n                    <TableCell align=\"center\">\r\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\r\n                      </Button>\r\n                    </TableCell> :\r\n                    <TableCell align=\"center\">\r\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                }\r\n              </TableRow>\r\n            ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n\r\n                count={props.gemstone && props.gemstone.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && <EditGemstone\r\n          diamond={editcontent}\r\n          onApply={GemstoneSave}\r\n          onClose={handleApplicationClose}\r\n          open={openedit}\r\n        />}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Typography, Button, Input } from \"@material-ui/core\";\r\nimport { ProductContext } from \"../../context\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onPageChange(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onPageChange(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onPageChange(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const handleChangeswitch = (name) => (event) => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants && props.variants.length - page * rowsPerPage);\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    setProductCtx({\r\n      ...productCtx,\r\n      approximateMetalWeight: diamondData.skuWeight,\r\n      editleadtime: diamondData.vendorDeliveryTime,\r\n      discount: diamondData.discountDesc,\r\n      editreadytoship: diamondData.isReadyToShip,\r\n      editisdefault: diamondData.isdefault,\r\n      editisactive: diamondData.isActive,\r\n      editisOrderable:  diamondData.isOrderable,\r\n      editorderShippingDays: diamondData.orderShippingDays\r\n    });\r\n    console.log(productCtx);\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\r\n  }\r\n  function DiamondSave(id) {\r\n    var bodydata = {};\r\n    if (productCtx.editleadtime) {\r\n      let list_data = props.variants;\r\n      let Skuchangedata = list_data.map((skulistdata, index) => {\r\n        if (id === skulistdata.generatedSku) {\r\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\r\n          skulistdata.isdefault = productCtx.editisdefault;\r\n          skulistdata.isActive = productCtx.editisactive;\r\n          skulistdata.isReadyToShip = productCtx.editreadytoship;\r\n          skulistdata.isOrderable = productCtx.editisOrderable;\r\n          skulistdata.orderShippingDays = productCtx.editorderShippingDays;\r\n\r\n          skulistdata.discountDesc = productCtx.discount;\r\n          skulistdata.skuWeight = productCtx.approximateMetalWeight;\r\n          // diamondListData.stoneCount = productCtx.diamondcount;\r\n          // diamondListData.stoneWeight = productCtx.diamondweight;\r\n          bodydata[\"vendorDeliveryTime\"] = productCtx.editleadtime;\r\n          bodydata[\"isdefault\"] = productCtx.editisdefault;\r\n          bodydata[\"isActive\"] = productCtx.editisactive;\r\n          bodydata[\"discount\"] = productCtx.discount;\r\n\r\n          bodydata[\"isReadyToShip\"] = productCtx.editreadytoship;\r\n          bodydata[\"isOrderable\"] = productCtx.editisOrderable;\r\n          bodydata[\"orderShippingDays\"] = productCtx.editorderShippingDays;\r\n          bodydata[\"generatedSku\"] = id;\r\n          bodydata[\"approxMetalWeight\"] = productCtx.approximateMetalWeight;\r\n          console.log(JSON.stringify(bodydata));\r\n          return skulistdata;\r\n        }\r\n        return skulistdata;\r\n      });\r\n    }\r\n\r\n    sendNetworkRequest(\"/updateskuinfo\", {}, bodydata);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  //   const handleoptionChange = type => (event, value) => {\r\n\r\n  //     setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  // }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.name === \"Gold Weight\" && props.productcompletedata[0]?.materialName === \"Silver\"\r\n                    ? \"Approximate Metal Weight\"\r\n                    : column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants &&\r\n              props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                <TableRow key={index}>\r\n                  {props.displycolumns.indexOf(\"SKU\") > -1 ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.generatedSku}\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Metal Colour\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40 }} scope=\"row\">\r\n                      {row.metalColor}\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Metal Purity\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.purity}\r\n                    </TableCell>\r\n                  ) : null}\r\n\r\n                  {props.displycolumns.indexOf(\"Gold Weight\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {btnEdit.action &&\r\n                      btnEdit.id == row.generatedSku &&\r\n                      props.productcompletedata[0]?.materialName === \"Silver\" ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          style={{ width: 40 }}\r\n                          value={productCtx.approximateMetalWeight}\r\n                          id=\"approximateMetalWeight\"\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"approximateMetalWeight\"\r\n                          label=\"Approximate Metal Weight\"\r\n                          onChange={handleinputChange(\"approximateMetalWeight\")}\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}> {row.skuWeight}</Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n\r\n                  {props.displycolumns.indexOf(\"Size\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.skuSize}\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Vendor lead Time\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          style={{ width: 40 }}\r\n                          value={productCtx.editleadtime}\r\n                          id=\"productname\"\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"productname\"\r\n                          label=\"Vendor Lead Time\"\r\n                          onChange={handleinputChange(\"editleadtime\")}\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n\r\n                  {props.displycolumns.indexOf(\"Quantity\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          style={{ width: 40 }}\r\n                          value={productCtx.availableStockQty}\r\n                          id=\"qty\"\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"Qty\"\r\n                          label=\"Quantity\"\r\n                          onChange={handleinputChange(\"available_stock_qty\")}\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}>{row.availableStockQty}</Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n\r\n                  {props.displycolumns.indexOf(\"Discount\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          style={{ width: 40 }}\r\n                          value={productCtx.discount}\r\n                          id=\"productname\"\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"productname\"\r\n                          label=\"Discount\"\r\n                          onChange={handleinputChange(\"discount\")}\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}>{row.discountDesc}</Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Ready To Ship\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      <Switch\r\n                        checked={\r\n                          btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip\r\n                        }\r\n                        value=\"checkedA\"\r\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch(\"editreadytoship\") : null}\r\n                        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                      />\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Make an Order\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      <Switch\r\n                        checked={\r\n                          btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisOrderable : row.isOrderable\r\n                        }\r\n                        value=\"checkedA\"\r\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch(\"editisOrderable\") : null}\r\n                        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                      />\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Make an Order-Shipping Days\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40,minWidth:\"180px\" }} component=\"th\" scope=\"row\">\r\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                      <Input\r\n                        className={classes.helperinput}\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        style={{ width: 40 }}\r\n                        value={productCtx.editorderShippingDays}\r\n                        id=\"qty\"\r\n                        error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                        name=\"Qty\"\r\n                        label=\"Quantity\"\r\n                        onChange={handleinputChange(\"editorderShippingDays\")}\r\n                      />\r\n                    ) : (\r\n                      <Typography className={classes.heading}>{row.orderShippingDays}</Typography>\r\n                    )}{\" \"}\r\n                  </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Default\") > -1 ? (\r\n                    <TableCell align=\"center\" style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      <Switch\r\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\r\n                        value=\"checkedA\"\r\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch(\"editisdefault\") : null}\r\n                        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                      />\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Active\") > -1 ? (\r\n                    <TableCell style={{ width: 40 }} align=\"center\">\r\n                      <Switch\r\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\r\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch(\"editisactive\") : null}\r\n                        value=\"checkedA\"\r\n                        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                      />\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                    <TableCell style={{ width: 20 }} align=\"center\">\r\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}>\r\n                        <SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}>\r\n                        <CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align=\"center\" style={{ width: 20 }}>\r\n                      <Button onClick={(e) => DiamondEdit(row)}>\r\n                        <EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.variants && props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onPageChange={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Chip,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  Input\r\n} from '@material-ui/core';\r\nimport { ProductContext } from '../../../../context';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 960\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  content: {\r\n    padding: theme.spacing(2, 2),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  helperText: {\r\n    textAlign: 'right',\r\n    marginRight: 0\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900]\r\n    }\r\n  }\r\n}));\r\n\r\nconst EditPrice = props => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id : diamond.id,\r\n    editcostprice:diamond.editcostprice,\r\n    editcostpricetax: diamond.editcostpricetax,\r\n    editsellingprice:diamond.editsellingprice,\r\n    editsellingpricetax:diamond.editsellingpricetax,\r\n    editmarkupprice: diamond.editmarkupprice,\r\n    editmarkuppricetax : diamond.editmarkuppricetax,\r\n    editdiscountprice: diamond.editdiscountprice,\r\n    editdiscountpricetax: diamond.editdiscountpricetax\r\n  }\r\n  const [value, setValue] = useState('');\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n  }\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n  },[editcontent])\r\n \r\n  return (\r\n    <Dialog\r\n      maxWidth=\"lg\"\r\n      onClose={onClose}\r\n      open={open}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <div className={classes.header}>\r\n          <Typography\r\n            align=\"center\"\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n           Price Details\r\n          </Typography>\r\n          \r\n        </div>\r\n        <div className={classes.content}>\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editcostprice}\r\n              placeholder={\"costPrice\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"costPriceTax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostpricetax')}\r\n              value={editcontent.editcostpricetax}\r\n              />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editsellingprice}\r\n              placeholder={\"Selling Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Selling Pricetax\"\r\n              placeholder=\"Selling Pricetax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingpricetax')}\r\n              value={editcontent.editsellingpricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editmarkupprice}\r\n              placeholder={\"Markup Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkupprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Markup Price Tax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkuppricetax')}\r\n              value={editcontent.editmarkuppricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editdiscountprice}\r\n              placeholder={\"Discount Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Discount Price tax1\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountpricetax')}\r\n              value={editcontent.editdiscountpricetax}\r\n              />\r\n                 \r\n          \r\n          \r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            className={classes.applyButton}\r\n            onClick={() => onApply(editcontent)}\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditPrice.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default EditPrice;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport { Typography, Button, Input, CircularProgress } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport EditPrice from \"./Components/EditPrice/EditPrice\";\r\n\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\n\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onPageChange(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onPageChange(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onPageChange(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    pricerun: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants && props.variants.length - page * rowsPerPage);\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  async function Skupricesync(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, pricerun: true });\r\n\r\n    let bodydata = {\r\n      req_product_id: diamondData.productId,\r\n      generatedSku: diamondData.generatedSku,\r\n    };\r\n    console.log(JSON.stringify(bodydata));\r\n    await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\r\n    setBtnEdit({ ...btnEdit, id: \"\", pricerun: false });\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    setProductCtx({\r\n      ...productCtx,\r\n      editcostprice: diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice: diamondData.sellingPrice,\r\n      editsellingpricetax: diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax: diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax,\r\n    });\r\n    setEditcontent({\r\n      id: diamondData.generatedSku,\r\n      editcostprice: diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice: diamondData.sellingPrice,\r\n      editsellingpricetax: diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax: diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax,\r\n    });\r\n\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\r\n  }\r\n  function DiamondSave(priceobj) {\r\n    var bodydata = {};\r\n    let list_data = props.variants;\r\n    list_data.map((skulistdata, index) => {\r\n      if (priceobj.generatedSku === skulistdata.generatedSku) {\r\n        skulistdata.costPrice = priceobj.editcostprice;\r\n        skulistdata.costPriceTax = priceobj.editcostpricetax;\r\n        skulistdata.sellingPrice = priceobj.editsellingprice;\r\n        skulistdata.sellingPriceTax = priceobj.editsellingpricetax;\r\n        skulistdata.markupPrice = priceobj.editmarkupprice;\r\n        skulistdata.markupPriceTax = priceobj.editmarkuppricetax;\r\n        skulistdata.discountPrice = priceobj.editdiscountprice;\r\n        skulistdata.discountPriceTax = priceobj.editdiscountpricetax;\r\n        bodydata[\"costPrice\"] = parseFloat(editcontent.editcostprice);\r\n        bodydata[\"costPriceTax\"] = parseFloat(editcontent.editcostpricetax);\r\n        bodydata[\"sellingPrice\"] = parseFloat(editcontent.editsellingprice);\r\n        bodydata[\"sellingPriceTax\"] = parseFloat(editcontent.editsellingpricetax);\r\n        bodydata[\"markupPrice\"] = parseFloat(editcontent.editmarkupprice);\r\n        bodydata[\"markupPriceTax\"] = parseFloat(editcontent.editmarkuppricetax);\r\n        bodydata[\"discountPrice\"] = parseFloat(editcontent.editdiscountprice);\r\n        bodydata[\"discountPriceTax\"] = parseFloat(editcontent.editdiscountpricetax);\r\n        bodydata[\"marginOnSalePercentage\"] = parseFloat(editcontent.marginOnSalePercentage);\r\n        bodydata[\"generatedSku\"] = editcontent.id;\r\n        return skulistdata;\r\n      }\r\n      return skulistdata;\r\n    });\r\n    sendNetworkRequest(\"/updateskupriceinfo\", {}, bodydata);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants &&\r\n              props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.generatedSku}\r\n                  </TableCell>\r\n                  {props.displycolumns.indexOf(\"Cost Price\") > -1 ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          style={{ width: 40 }}\r\n                          value={productCtx.editcostprice}\r\n                          id=\"productname\"\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"productname\"\r\n                          label=\"Cost Price\"\r\n                          onChange={handleinputChange(\"editcostprice\")}\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}> {row.costPrice}</Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Cost Price Tax\") > -1 ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          fullWidth\r\n                          value={productCtx.editcostpricetax}\r\n                          id=\"productname\"\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"productname\"\r\n                          label=\"Cost Price Tax\"\r\n                          onChange={handleinputChange(\"editcostpricetax\")}\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}> {row.costPriceTax} </Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Selling Price\") > -1 ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          fullWidth\r\n                          value={productCtx.editsellingprice}\r\n                          id=\"productname\"\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"productname\"\r\n                          label=\"Selling Price\"\r\n                          onChange={handleinputChange(\"editsellingprice\")}\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}>{row.sellingPrice} </Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n\r\n                  {props.displycolumns.indexOf(\"Selling Price Tax\") > -1 ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          fullWidth\r\n                          value={productCtx.editsellingpricetax}\r\n                          id=\"productname\"\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"productname\"\r\n                          label=\"Selling Price Tax\"\r\n                          onChange={handleinputChange(\"editsellingpricetax\")}\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}>{row.sellingPriceTax} </Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n\r\n                  {props.displycolumns.indexOf(\"Markup Price\") > -1 ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          fullWidth\r\n                          value={productCtx.editmarkupprice}\r\n                          id=\"productname\"\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"productname\"\r\n                          label=\"Markup Price\"\r\n                          onChange={handleinputChange(\"editmarkupprice\")}\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}>{row.markupPrice} </Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n\r\n                  {props.displycolumns.indexOf(\"Markup Price Tax\") > -1 ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          fullWidth\r\n                          value={productCtx.editmarkuppricetax}\r\n                          id=\"productname\"\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"productname\"\r\n                          label=\"Markup Price Tax\"\r\n                          onChange={handleinputChange(\"editmarkuppricetax\")}\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}>{row.markupPriceTax} </Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n\r\n                  {props.displycolumns.indexOf(\"Discount Price\") > -1 ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          fullWidth\r\n                          value={productCtx.editdiscountprice}\r\n                          id=\"productname\"\r\n                          onChange={handleinputChange(\"editdiscountprice\")}\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"productname\"\r\n                          label=\"Discount Price\"\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}>{row.discountPrice} </Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Discount Price Tax\") > -1 ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                        <Input\r\n                          className={classes.helperinput}\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          fullWidth\r\n                          value={productCtx.editdiscountpricetax}\r\n                          onChange={handleinputChange(\"editdiscountpricetax\")}\r\n                          id=\"productname\"\r\n                          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\r\n                          name=\"productname\"\r\n                          label=\"Discount Price Tax\"\r\n                        />\r\n                      ) : (\r\n                        <Typography className={classes.heading}>{row.discountPriceTax} </Typography>\r\n                      )}{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n\r\n                  {props.displycolumns.indexOf(\"Margin on Sale\") > -1 ? (\r\n                    <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.marginOnSalePercentage}\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"Discount\") > -1 ? (\r\n                    <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.discount}\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {props.displycolumns.indexOf(\"View\") > -1 ? (\r\n                    <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      <Button variant=\"outlined\" color=\"primary\" onClick={(e) => props.onShow(row.generatedSku)}>\r\n                        Summary\r\n                      </Button>{\" \"}\r\n                    </TableCell>\r\n                  ) : null}\r\n                  {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                    <TableCell style={{ width: 40 }} align=\"center\">\r\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\r\n                        ₹ Run\r\n                      </Button>\r\n                      <Button onClick={(e) => DiamondSave(row)}>\r\n                        <SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}>\r\n                        <CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell style={{ width: 40 }} align=\"center\">\r\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? (\r\n                        <CircularProgress size={15} />\r\n                      ) : (\r\n                        <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\r\n                          ₹ Run\r\n                        </Button>\r\n                      )}\r\n                      <Button onClick={(e) => DiamondEdit(row)}>\r\n                        <EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.variants && props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onPageChange={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditPrice diamond={editcontent} onApply={DiamondSave} onClose={handleApplicationClose} open={openedit} />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  conatainerRow: {\r\n    width: \"300px\",\r\n    color: \"#6f6f6f\",\r\n    display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight: \" 256px\",\r\n    fontSize: \"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"500px\",\r\n      color: \"#6f6f6f\",\r\n      display: \"grid\",\r\n      padding: \"16px 24px\",\r\n      maxHeight: \" 270px\",\r\n      fontSize: \"14px\",\r\n      overflowX: \"visible\",\r\n      overflowY: \"scroll\",\r\n      gridColumnGap: \"20px\",\r\n      gridTemplateColumns: \"repeat(2, 1fr)\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Columns(props) {\r\n  const classes = useStyles();\r\n\r\n  const checkboxrow = props.columns;\r\n  const [columns, setColumns] = React.useState({\r\n    listOfValue: checkboxrow,\r\n  });\r\n  const [showcolumns, setshowColumns] = React.useState();\r\n\r\n  function stateChange(id) {\r\n    let listOfValue = columns.listOfValue.map((data, index) => {\r\n      if (id === data.id) {\r\n        data.isActive = data.isActive ? false : true;\r\n      }\r\n      return data;\r\n    });\r\n    setColumns({\r\n      listOfValue,\r\n    });\r\n  }\r\n  function resetButton() {\r\n    let listOfValue = columns.listOfValue.map((data, index) => {\r\n      if (!data.disabled) {\r\n        data.isActive = false;\r\n      }\r\n\r\n      return data;\r\n    });\r\n    setColumns({\r\n      listOfValue,\r\n    });\r\n  }\r\n  function saveaction() {\r\n    // let listOfValue = columns.listOfValue.map((data,index)=>{\r\n    //     if(data.isActive){\r\n    //               }\r\n    //               return data;\r\n\r\n    // })\r\n    let columnnames = [];\r\n    columns.listOfValue.forEach((element) => {\r\n      if (element.isActive) {\r\n        columnnames.push(element);\r\n      }\r\n    });\r\n    props.selectcolumnfilter(columnnames, props.displytype);\r\n    props.columnclose();\r\n  }\r\n  // const lists = columns.listOfValue.map((head) =>\r\n  //     (\r\n  //         <Grid conatiner>\r\n  //             <Grid item xs={4}><Checkbox\r\n  //                 value=\"secondary\"\r\n  //                 color=\"primary\"\r\n  //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n  //                 checked = {head.isActive}\r\n  //                 onChange = {()=>stateChange(head.id)}\r\n\r\n  //             />\r\n  //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n  //             </Grid>\r\n  //         </Grid>\r\n  //     )\r\n\r\n  // );\r\n\r\n  return (\r\n    <div style={{ maxHeight: \"420px\" }}>\r\n      {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\r\n      <Grid\r\n        style={{\r\n          height: \"270px\",\r\n          borderBottom: \"1px solid #ddd\",\r\n          width: \"100%\",\r\n          margin: \"auto\",\r\n          paddingTop: \"5px\",\r\n          paddingBottom: \"10px\",\r\n        }}\r\n      >\r\n        <Grid conatiner>\r\n          <Grid item className={classes.conatainerRow}>\r\n            {columns.listOfValue.map((head) => (\r\n              <Grid container>\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  checked={head.isActive}\r\n                  disabled={head.disabled}\r\n                  onChange={() => stateChange(head.id)}\r\n                />\r\n                <h3 style={{ fontWeight: \"500\" }}>{head.name}</h3>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\r\n        <Grid>\r\n          <Button size=\"large\" onClick={() => resetButton()}>\r\n            RESET\r\n          </Button>\r\n        </Grid>\r\n        <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Button size=\"small\" onClick={() => props.columnclose()}>\r\n            cancel\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => saveaction()}\r\n            backgroundColor=\"secondary\"\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            className={classes.margin}\r\n          >\r\n            SAVE\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport React from \"react\";\r\nimport Columns from \"./columns\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SortHeader(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [options, setOptions] = React.useState(props.columnnames);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(false);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <Grid container lg={12} md={12} sm={12} xs={12} style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\r\n        <h4 className=\"products\">{props.title ? props.title : \"Variants Table\"} </h4>\r\n      </Grid>\r\n      <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            className=\"product\"\r\n            size=\"small\"\r\n            id=\"one\"\r\n            color=\"primary\"\r\n            backgroundColor=\"secondary\"\r\n            onClick={handleClick}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\r\n          >\r\n            COLUMNS\r\n            <ArrowDownwardIcon fontSize=\"inherit\" />\r\n          </Button>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Columns\r\n              columns={options}\r\n              selectcolumnfilter={props.getColumnnames}\r\n              displytype={props.displytype}\r\n              columnclose={handleClose}\r\n            />\r\n          </Popover>\r\n        </Grid>\r\n        {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\r\n                        CREATE PRODUCT\r\n                        </Button>\r\n                    </Grid> */}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default SortHeader;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { makeid } from \"../../utils/commonmethod\";\r\nimport { BASE_IMAGE_URL } from \"../../config\";\r\nimport { IMAGEDELETE } from \"../../graphql/query\";\r\nimport {\r\n  Paper,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Grid,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport \"./upload.css\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: 100,\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  styleFile: {\r\n    paddingTop: \"10px\",\r\n  },\r\n  card: {\r\n    minHeight: \"150px\",\r\n    textAlign: \"left\",\r\n    boxShadow:\r\n      \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\r\n  },\r\n  formContainer: {\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n    paddingTop: 20,\r\n    paddingBottom: 30,\r\n  },\r\n}));\r\n\r\nexport default function Productimages(props) {\r\n  const classes = useStyles2();\r\n  let image_count = 0;\r\n  let product_id = \"\";\r\n  const { pathname } = useLocation();\r\n  if (pathname) {\r\n    product_id = pathname.split(\"/\")[pathname.split(\"/\").length - 1];\r\n  }\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [title, setTitle] = React.useState(props.color);\r\n  const [productimages, setProductimages] = React.useState(props.prodimages);\r\n  // const [totalimages, setTotalimages] = React.useState(1);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  productimages.forEach((imgobj) => {\r\n    if (props.color === imgobj.productColor) {\r\n      image_count = image_count + 1;\r\n      if (imgobj.productId) {\r\n        product_id = imgobj.productId;\r\n      }\r\n      // setTotalimages(image_count)\r\n    }\r\n  });\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSuccess(false);\r\n  };\r\n  async function uploadimagetoserver(\r\n    fileobj,\r\n    filetype,\r\n    imagename,\r\n    prodid,\r\n    imagecontent,\r\n    isedit,\r\n    position\r\n  ) {\r\n    console.log(fileobj, filetype, imagename, prodid, imagecontent, isedit);\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      { image: filetype, filename: imagename, product_id: prodid },\r\n      false\r\n    );\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    var filepathname = returnData.filepath;\r\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": filetype,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n    if (isedit) {\r\n      imagecontent[\"imageUrl\"] = filepathname.replace(\"jpeg\", \"jpg\");\r\n    } else {\r\n      const imageobj = {\r\n        name: product_id + \"_\" + (image_count + 1) + props.color.charAt(0),\r\n        imagePosition: image_count + 1,\r\n        productColor: props.color,\r\n        productId: product_id,\r\n        imageUrl: filepathname.replace(\"jpeg\", \"jpg\"),\r\n        url:\r\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\r\n          filepathname,\r\n      };\r\n      imagecontent = imageobj;\r\n    }\r\n    if (!isedit) {\r\n      var productimgs = [];\r\n      productimages.forEach((img) => {\r\n        productimgs.push(img);\r\n      });\r\n      productimgs.push(imagecontent);\r\n    }\r\n\r\n    await axios.put(signedRequest, fileobj, options);\r\n\r\n    let responsecontent = await sendNetworkRequest(\r\n      \"/updateproductimage\",\r\n      {},\r\n      { imageobj: imagecontent, isedit: isedit },\r\n      false\r\n    );\r\n\r\n    responsecontent.statuscode === 200 && setSuccess(true);\r\n    setTimeout(function () {\r\n      responsecontent.statuscode === 200 && window.location.reload();\r\n    }, 2500);\r\n\r\n    image_count = image_count + 1;\r\n    if (!isedit) {\r\n      // setProductimages(productimgs);\r\n    }\r\n  }\r\n  const deleteImage = async (imageData) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: IMAGEDELETE,\r\n        variables: { productimageid: imageData.id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        fatchvalue.statuscode = 200 && window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handlenewAssetChange = (e) => {\r\n    const files = e.target.files;\r\n    Object.keys(files).map((file, index) => {\r\n      // const size = files[index].size;\r\n      var imagecount = 1;\r\n      if (productimages) {\r\n        imagecount = image_count + 1;\r\n      }\r\n      let imagename = product_id + \"-\" + imagecount + props.color.charAt(0);\r\n      const fileParts = files[index].type.split(\"/\");\r\n      const fileType = fileParts[1];\r\n\r\n      uploadimagetoserver(\r\n        files[index],\r\n        fileType,\r\n        imagename,\r\n        product_id,\r\n        {},\r\n        false\r\n      );\r\n    });\r\n  };\r\n  const handleAssetChange = (e, imageposition, category, endPoint) => {\r\n    const files = e.target.files;\r\n    Object.keys(files).map((file, index) => {\r\n      const size = files[index].size;\r\n      alert(imageposition);\r\n      let productimageobj = {};\r\n      productimages.forEach((content) => {\r\n        if (\r\n          content.productColor === props.color &&\r\n          imageposition === content.imagePosition\r\n        ) {\r\n          productimageobj = content;\r\n        }\r\n      });\r\n      var prodid = productimageobj.productId;\r\n      var prodcolor = productimageobj.productColor;\r\n      var imagecount = 1;\r\n      let randomnum = makeid(1, \"\", 1);\r\n      if (productimages) {\r\n        //  imagecount = image_count + 1;\r\n      }\r\n      let imagename =\r\n        prodid + \"-\" + imageposition + randomnum + prodcolor.charAt(0);\r\n      const fileParts = files[index].type.split(\"/\");\r\n      const fileType = fileParts[1];\r\n      //alert(imagename)\r\n      uploadimagetoserver(\r\n        files[index],\r\n        fileType,\r\n        imagename,\r\n        prodid,\r\n        productimageobj,\r\n        true\r\n      );\r\n      // alert(imagename)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          title={\r\n            props.color && props.isdefault\r\n              ? props.color + \" (Default Colour)\"\r\n              : props.color\r\n          }\r\n        />\r\n        <CardContent>\r\n          <Grid container spacing={2} className={classes.styleFile}>\r\n            {productimages.map((url, index) => (\r\n              <>\r\n                {props.color === url.productColor ? (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <i\r\n                      className=\"fa fa-window-edit\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: 10,\r\n                        top: 11,\r\n                        color: \"red\",\r\n                        zIndex: \"12\",\r\n                      }}\r\n                    />\r\n\r\n                    <Grid\r\n                      item\r\n                      style={{\r\n                        width: \"150px\",\r\n                        wordBreak: \"break-all\",\r\n                        height: \"150px\",\r\n                        padding: \"8px\",\r\n                        margin: \"0\",\r\n                        cursor: \"pointer\",\r\n                        position: \"relative\",\r\n                      }}\r\n                      className=\"container\"\r\n                    >\r\n                      <input\r\n                        type=\"file\"\r\n                        className=\"custom-file-input\"\r\n                        multiple\r\n                        onChange={(e) =>\r\n                          handleAssetChange(e, url.imagePosition, \"\", \"\")\r\n                        }\r\n                      ></input>\r\n\r\n                      <img\r\n                        src={\r\n                          BASE_IMAGE_URL +\r\n                          url.imageUrl.replace(\r\n                            url.productId,\r\n                            url.productId + \"/1000X1000\"\r\n                          )\r\n                        }\r\n                        alt=\"image\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                          borderRadius: \"4px\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      style={{ margin: \"auto\", display: \"flex\" }}\r\n                      onClick={() => deleteImage(url)}\r\n                    >\r\n                      <DeleteIcon style={{ color: \"grey\" }} />\r\n                    </Button>\r\n                    <br />\r\n                    <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\r\n                      {\" \"}\r\n                      {index + 1}{\" \"}\r\n                    </Typography>\r\n\r\n                    <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\r\n                      {\" \"}\r\n                      {url.ishover ? \"hover\" : \"\"}{\" \"}\r\n                    </Typography>\r\n                  </div>\r\n                ) : null}\r\n              </>\r\n            ))}\r\n            <Grid\r\n              item\r\n              style={{\r\n                width: \"150px\",\r\n                wordBreak: \"break-all\",\r\n                height: \"150px\",\r\n                padding: \"8px\",\r\n                margin: \"0\",\r\n                cursor: \"pointer\",\r\n                textAlign: \"center\",\r\n                position: \"relative\",\r\n              }}\r\n              className=\"container\"\r\n            >\r\n              {\r\n                <label\r\n                  className=\"custom-file-upload\"\r\n                  style={{ display: \"flex\" }}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-plus\"\r\n                    aria-hidden=\"true\"\r\n                    style={{\r\n                      color: \"rgba(60,64,67,.15)\",\r\n                      fontSize: \"45px\",\r\n                      margin: \"auto\",\r\n                    }}\r\n                  ></i>\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"custom-file-input\"\r\n                    multiple\r\n                    onChange={(e) => handlenewAssetChange(e)}\r\n                  ></input>\r\n                </label>\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose}>\r\n          Image Upload Successfully.. Redirecting to Product Edit Page\r\n        </Alert>\r\n      </Snackbar>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n      \r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                 {columnname.type == 8 ?\r\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                View\r\n               </Button> \r\n                : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                {/* {columnname.type === 8 ?\r\n                  <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  size=\"small\"\r\n                  to={'/management/invoices/1'}\r\n                  variant=\"outlined\"\r\n                >\r\n                  View\r\n                </Button>\r\n                : null} */}\r\n\r\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                 View\r\n                                                </Button> : null}  \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n         \r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\r\nimport columnnames from './columnnames.json';\r\n\r\nexport default function ResponsiveDialog(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const theme = useTheme();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('lg');\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.onClose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Dialog\r\n      fullWidth={fullWidth}\r\n      maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\r\n        <DialogContent>\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n       \r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Grid, TextField, Button, Fab } from \"@material-ui/core\";\r\nimport { Input } from \"../../components/Input.js\";\r\nimport { AlertContext, ProductContext, ProductProvider } from \"../../context\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport DiamondDetails from \"./DiamondDetails\";\r\nimport GemstoneDetails from \"./GemstoneDetails\";\r\nimport Variants from \"./Variants\";\r\nimport Skupricing from \"./Skupricing\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"../Productupload/Productupload.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {\r\n  PRODUCTEDIT,\r\n  PRODUCTDIAMONDTYPES,\r\n  PRODUCTDESCRIPTIONEDIT,\r\n} from \"../../graphql/query\";\r\nimport CreateVariant from \"./CreateVariant\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport SortHeader from \"./Components/SortHeader\";\r\nimport columnnames from \"./columnnames.json\";\r\nimport Productimages from \"./Productimages\";\r\nimport FullLoader from \"../../components/Loader\";\r\nimport Pricedetails from \"./Pricedetails\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  Divider,\r\n  Switch,\r\n  RadioGroup,\r\n  Radio,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { sk } from \"date-fns/locale\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function Component(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [expand, setExpand] = React.useState(false);\r\n  const [varientcolumns, setVarientcolumns] = React.useState(\r\n    columnnames.defaultvarients\r\n  );\r\n  const [displycolumns, setDisplycolumns] = React.useState(\r\n    columnnames.defaultvarientnames\r\n  );\r\n  const [pricingcolumns, setPricingcolumns] = React.useState(\r\n    columnnames.pricing\r\n  );\r\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(\r\n    columnnames.defaultpricing\r\n  );\r\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(\r\n    columnnames.defaultpricingnames\r\n  );\r\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\r\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\r\n\r\n  const [loadopen, setLoadopen] = React.useState(true);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    createVariant();\r\n    setExpand(isExpanded ? true : false);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const { productCtx, setProductCtx } = useContext(ProductContext);\r\n  const [state, setstate] = useState({\r\n    create_variant: false,\r\n    duplicate_productName: \"\",\r\n  });\r\n  let prod_id = props.location.pathname.split(\"/\")[2];\r\n  const [filters, setFilters] = useState({});\r\n  const classes = useStyle();\r\n  function keyPress(evt) {\r\n    const productname = evt.target.validity.valid\r\n      ? evt.target.value\r\n      : productCtx.productname;\r\n    setProductCtx({ ...productCtx, productname });\r\n  }\r\n  function changeVariant() {\r\n    setstate({ ...state, create_variant: false });\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n\r\n  const handleinputChange = (type) => (e) => {\r\n    // const re = /^[a-zA-Z \\b]+$/;\r\n    // if (e.target.value === \"\" || re.test(e.target.value)) {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n    // }\r\n  };\r\n  const handledesinputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  // const handleinputChange = type => (event, value) => {\r\n  //   alert(event.target.value)\r\n  //       setProductCtx({ ...productCtx, [type]: value})\r\n  // }\r\n  function dismisspricesummary() {\r\n    setIsshowpricesummary(false);\r\n  }\r\n  function getColumnnames(columnnames, displytype) {\r\n    let displycolumns = [];\r\n    let displycolumnnames = [];\r\n\r\n    columnnames.forEach((element) => {\r\n      displycolumnnames.push(element.name);\r\n      displycolumns.push(element);\r\n    });\r\n    if (displytype === 1) {\r\n      setDisplycolumns(displycolumnnames);\r\n      setVarientcolumns(columnnames);\r\n    } else {\r\n      setPricingcolumns(columnnames);\r\n      setDisplypricingcolumns(displycolumns);\r\n      setDisplycolumnnames(displycolumnnames);\r\n    }\r\n  }\r\n  function createVariant() {\r\n    let diamondTypesArray = [];\r\n    // let diamondClaritySku = [];\r\n    productCtx.diamondlist &&\r\n      productCtx.diamondlist.map((diamond_type) => {\r\n        let diamond_data = {\r\n          id: diamond_type.id,\r\n          diamondType: diamond_type.diamondType,\r\n        };\r\n        let status = diamondTypesArray.some(\r\n          (store_dia) => store_dia.diamondType == diamond_type.diamondType\r\n        )\r\n          ? \"\"\r\n          : diamondTypesArray.push(diamond_data);\r\n        return diamond_type;\r\n      });\r\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\r\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      productCtx,\r\n    });\r\n    let params = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES }),\r\n    };\r\n    fetch(GRAPHQL_DEV_CLIENT, params)\r\n      .then((res) => res.json())\r\n      .then((diamondtypesData) => {\r\n        console.log(\r\n          diamondtypesData.data.allMasterDiamondTypes.nodes,\r\n          \"diamondtypesdata\"\r\n        );\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productDiamondTypes:\r\n            diamondtypesData.data.allMasterDiamondTypes.nodes,\r\n        });\r\n      })\r\n      .catch(console.error);\r\n\r\n    //setstate({ ...state, create_variant: true })\r\n  }\r\n  async function saveProductEditItem() {\r\n    let productEditItem = {\r\n      productId: prod_id,\r\n      productName: productCtx.productname,\r\n      themes: productCtx.themes,\r\n      styles: productCtx.prod_styles,\r\n      occassions: productCtx.occassions,\r\n      collections: productCtx.collections,\r\n      stonecount: productCtx.stonecount,\r\n      stonecolour: productCtx.stonecolour,\r\n      gender: productCtx.product_gender,\r\n      earingBacking: productCtx?.earringbacking?.label ?? null,\r\n      minOrderQty: productCtx.minOrderQty,\r\n      maxOrderQty: productCtx.maxOrderQty,\r\n      width: productCtx.width,\r\n      height: productCtx.height,\r\n      // prodDescription: productCtx.prod_desc,\r\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\r\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\r\n      // transSkuListsByProductId: productCtx.editVariants,\r\n      // productImages:productCtx.productImages,\r\n      // createVariants: productCtx.createVariantList\r\n    };\r\n    // debugger\r\n    console.log(productEditItem);\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: PRODUCTDESCRIPTIONEDIT,\r\n        variables: { productId: prod_id, prod_desc: productCtx.prod_desc },\r\n      }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fetchvalue) => {\r\n        console.log(fetchvalue);\r\n        setProductCtx({\r\n          ...productCtx,\r\n          prod_desc:\r\n            fetchvalue?.data?.updateProductListByProductId?.productList\r\n              ?.prodDescription ?? \"\",\r\n        });\r\n      });\r\n    let response = await sendNetworkRequest(\r\n      \"/editproduct\",\r\n      {},\r\n      productEditItem\r\n    );\r\n    // debugger\r\n    console.log(\"************\");\r\n    console.log(JSON.stringify(productEditItem));\r\n    if (response) {\r\n      console.log(response);\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      handleClick();\r\n      console.log(JSON.stringify(productEditItem));\r\n      // setTimeout(()=>{  window.location='/productlist'},1000)\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not edit product\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n    // const opts = {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify(productEditItem)\r\n    // }\r\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\r\n    // .then(res=>res.json())\r\n    // .then(fetchValue=>{\r\n\r\n    // })\r\n    // .catch(console.error)\r\n    console.log(JSON.stringify(productEditItem));\r\n    // props.history.push('/productlist')\r\n  }\r\n  async function createnewvarient(varientobj) {\r\n    let response = await sendNetworkRequest(\"/addvarient\", {}, varientobj);\r\n    // debugger\r\n    console.log(\"************\");\r\n    console.log(JSON.stringify(varientobj));\r\n    if (response) {\r\n      console.log(response);\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      handleClick();\r\n      // setTimeout(()=>{  window.location='/productlist'},1000)\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not edit product\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n  }\r\n  const handledisableproduct = (name) => async (event) => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\r\n    let bodycontent = {\r\n      productid: prod_id,\r\n      isactive: event.target.checked,\r\n    };\r\n    let esbody = {\r\n      product_id: prod_id,\r\n    };\r\n    var endpoint = \"/reindex\";\r\n    if (event.target.checked) {\r\n      endpoint = \"/esearch_forceindex\";\r\n    }\r\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\r\n\r\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\r\n    let updateproductattr = await sendNetworkRequest(\r\n      \"/updateproductattribute\",\r\n      {},\r\n      esbody\r\n    );\r\n\r\n    console.log(\"************\");\r\n    console.log(JSON.stringify(bodycontent));\r\n    if (response) {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      handleClick();\r\n      // setTimeout(()=>{  window.location='/productlist'},1000)\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not edit product\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n  };\r\n  async function showpricesummary(sku) {\r\n    let response = await sendNetworkRequest(\r\n      \"/viewskupricesummary/\" + sku,\r\n      {},\r\n      null\r\n    );\r\n    let price_summary = [];\r\n    let skuprice = response.price_summary.skuprice;\r\n    // let cost_obj = {\r\n    //   component: \"Cost Price\",\r\n    //   price : skuprice.cost_price - skuprice.cost_price_tax,\r\n    //   tax : skuprice.cost_price_tax,\r\n    //   total : skuprice.cost_price\r\n\r\n    // }\r\n    // price_summary.push(cost_obj)\r\n\r\n    // let selling_price = {\r\n    //   component: \"Selling Price\",\r\n    //   price : skuprice.selling_price ,\r\n    //   tax : skuprice.selling_price_tax,\r\n    //   total : skuprice.selling_price\r\n\r\n    // }\r\n    // price_summary.push(selling_price)\r\n    // let discount_price = {\r\n    //   component: \"discount Price\",\r\n    //   price : skuprice.discount_price ,\r\n    //   tax : skuprice.discount_price_tax,\r\n    //   total : skuprice.discount_price\r\n\r\n    // }\r\n    // price_summary.push(discount_price)\r\n    // let markup_price = {\r\n    //   component: \"markup Price\",\r\n    //   price : skuprice.markup_price ,\r\n    //   tax : skuprice.markup_price_tax,\r\n    //   total : skuprice.markup_price\r\n\r\n    // }\r\n\r\n    let metalprice = response.price_summary.metals;\r\n    metalprice.forEach((element) => {\r\n      let obj = {\r\n        component: element.material_name,\r\n        cost_price: element.cost_price,\r\n        selling_price: element.selling_price,\r\n        markup_price: element.markup,\r\n        discount_price: element.discount_price,\r\n      };\r\n      price_summary.push(obj);\r\n    });\r\n\r\n    let mateialprice = response.price_summary.materials;\r\n    mateialprice.forEach((element) => {\r\n      let obj = {\r\n        component: element.material_name,\r\n        cost_price: element.cost_price,\r\n        selling_price: element.selling_price,\r\n        markup_price: element.markup,\r\n        discount_price: element.discount_price,\r\n      };\r\n      price_summary.push(obj);\r\n    });\r\n    let obj = {\r\n      component: \"SKU Price\",\r\n      cost_price: skuprice.cost_price,\r\n      selling_price: skuprice.selling_price,\r\n      markup_price: skuprice.markup_price,\r\n      discount_price: skuprice.discount_price,\r\n    };\r\n    price_summary.push(obj);\r\n    //alert(JSON.stringify(metalprice))\r\n    //   price_summary.push(markup_price)\r\n    setPricesummaryvalue(price_summary);\r\n    setIsshowpricesummary(true);\r\n  }\r\n  function Skupricesync(diamondData) {\r\n    let bodydata = {\r\n      req_product_id: diamondData,\r\n    };\r\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\r\n  }\r\n  function Skumarkupsync(diamondData) {\r\n    let bodydata = {\r\n      req_product_id: diamondData,\r\n      pricingcomponent: \"updateskuprice\",\r\n    };\r\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\r\n  }\r\n  function updateAttributes(product_id) {\r\n    sendNetworkRequest(\r\n      \"/updateproductattribute\",\r\n      {},\r\n      { product_id: product_id }\r\n    )\r\n      .then((res) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Please wait attributes are being updated.\",\r\n          severity: \"warning\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Some error occurred while updating, Please try again.\",\r\n          severity: \"error\",\r\n        });\r\n      });\r\n  }\r\n  function backProductList() {\r\n    window.location = \"/productlist\";\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: PRODUCTEDIT,\r\n        variables: { productId: prod_id },\r\n      }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        var genders = fatchvalue.data.productListByProductId.gender;\r\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient;\r\n        var earringBackings =\r\n          fatchvalue.data.productListByProductId.earringBacking;\r\n        let sizes_arr = [];\r\n        if (size_obj) {\r\n          let sizes = size_obj.split(\",\");\r\n          sizes.forEach((element) => {\r\n            sizes_arr.push(element);\r\n          });\r\n        }\r\n        let gender_arr = [];\r\n        if (genders) {\r\n          genders = genders.split(\",\");\r\n          genders.forEach((element) => {\r\n            let gender_obj = {\r\n              label: element,\r\n            };\r\n            gender_arr.push(gender_obj);\r\n          });\r\n        }\r\n        let defaultcolour = \"\";\r\n        var images_arr =\r\n          fatchvalue.data.productListByProductId.productImagesByProductId.nodes;\r\n        images_arr.forEach((element) => {\r\n          if (element.isdefault) {\r\n            defaultcolour = element.productColor;\r\n          }\r\n        });\r\n        let earring_backing = null;\r\n        if (earringBackings !== null && earringBackings !== undefined) {\r\n          earring_backing = {\r\n            label: earringBackings,\r\n          };\r\n        }\r\n        var metalcolors = [];\r\n        Array.prototype.insert = function (index, item) {\r\n          this.splice(index, 0, item);\r\n        };\r\n        let metalcolor =\r\n          fatchvalue.data.productListByProductId.productMetalcoloursByProductId\r\n            .nodes;\r\n        metalcolor.forEach((colorobj) => {\r\n          if (colorobj.productColor === defaultcolour) {\r\n            colorobj[\"isdefault\"] = true;\r\n            metalcolors.insert(0, colorobj);\r\n          } else {\r\n            colorobj[\"isdefault\"] = false;\r\n            metalcolors.push(colorobj);\r\n          }\r\n        });\r\n\r\n        console.log(fatchvalue);\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productname: fatchvalue.data.productListByProductId.productName,\r\n          isactive: fatchvalue.data.productListByProductId.isactive,\r\n          product_type: fatchvalue.data.productListByProductId.productType,\r\n          product_categoy:\r\n            fatchvalue.data.productListByProductId.productCategory,\r\n          gemstonelist:\r\n            fatchvalue.data.productListByProductId.productGemstonesByProductSku\r\n              .nodes,\r\n          diamondlist:\r\n            fatchvalue.data.productListByProductId.productDiamondsByProductSku\r\n              .nodes,\r\n          variants:\r\n            fatchvalue.data.productListByProductId.transSkuListsByProductId\r\n              .nodes,\r\n          product_images:\r\n            fatchvalue.data.productListByProductId.productImagesByProductId\r\n              .nodes,\r\n          productMetalColor: metalcolors,\r\n          oldproductMetalColor:\r\n            fatchvalue.data.productListByProductId\r\n              .productMetalcoloursByProductId.nodes,\r\n          productMetalPurity:\r\n            fatchvalue.data.productListByProductId.productPuritiesByProductId\r\n              .nodes,\r\n          oldproductMetalPurity:\r\n            fatchvalue.data.productListByProductId.productPuritiesByProductId\r\n              .nodes,\r\n          variant_size: sizes_arr,\r\n          productmaterials:\r\n            fatchvalue.data.productListByProductId.productMaterialsByProductSku\r\n              .nodes,\r\n          vendorname:\r\n            fatchvalue?.data?.productListByProductId?.masterVendorByVendorCode\r\n              ?.name,\r\n          productvendorcode:\r\n            fatchvalue.data.productListByProductId.productVendorCode,\r\n          product_gender: gender_arr,\r\n          themes:\r\n            fatchvalue.data.productListByProductId.productThemesByProductId\r\n              .nodes,\r\n          prod_styles:\r\n            fatchvalue.data.productListByProductId.productStylesByProductId\r\n              .nodes, // productDiamondColor:diamondTypesArray,\r\n          occassions:\r\n            fatchvalue.data.productListByProductId.productOccassionsByProductId\r\n              .nodes,\r\n          collections:\r\n            fatchvalue.data.productListByProductId.productCollectionsByProductId\r\n              .nodes,\r\n          stonecount:\r\n            fatchvalue.data.productListByProductId.productStonecountsByProductId\r\n              .nodes,\r\n          stonecolour:\r\n            fatchvalue.data.productListByProductId.productStonecolorsByProductId\r\n              .nodes,\r\n          prod_desc: fatchvalue.data.productListByProductId.prodDescription,\r\n          earringbacking: earring_backing,\r\n          minOrderQty:\r\n            fatchvalue.data.productListByProductId?.transSkuListsByProductId\r\n              ?.nodes[0]?.minOrderQty,\r\n          maxOrderQty:\r\n            fatchvalue.data.productListByProductId?.transSkuListsByProductId\r\n              ?.nodes[0]?.maxOrderQty,\r\n          height: fatchvalue.data.productListByProductId?.height,\r\n          width: fatchvalue.data.productListByProductId?.width,\r\n          // productDiamondClarity:diamondClaritySku,\r\n        });\r\n\r\n        setstate({\r\n          ...state,\r\n          duplicate_productName: JSON.parse(\r\n            JSON.stringify(fatchvalue.data.productListByProductId.productName)\r\n          ),\r\n        });\r\n        setLoadopen(false);\r\n      })\r\n      .catch(console.error);\r\n\r\n    fetch(`${API_URL}/fetch_filters?product_id=${prod_id}`, { method: \"get\" })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        let { result } = res;\r\n        if (result.length) {\r\n          setFilters(result[0]);\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n  // debugger\r\n\r\n  console.log(productCtx);\r\n  console.log(productCtx.masterData);\r\n  return state.create_variant ? (\r\n    <CreateVariant\r\n      productMetalColor={productCtx.productMetalColor}\r\n      productMetalPurity={productCtx.productMetalPurity}\r\n      changeVariant={changeVariant}\r\n      productId={prod_id}\r\n    />\r\n  ) : (\r\n    <Grid container>\r\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <Grid item container spacing={1}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={3}\r\n          lg={3}\r\n          spacing={2}\r\n          style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}\r\n        >\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.productname}\r\n            id=\"productname\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.productname\r\n            }\r\n            name=\"productname\"\r\n            label=\"Product Name\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"productname\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.prod_desc ? productCtx.prod_desc : \"\"}\r\n            id=\"prod_desc\"\r\n            // error={\r\n            //   productCtx &&\r\n            //   productCtx.error_message &&\r\n            //   productCtx.error_message.productname\r\n            // }\r\n            name=\"prod_desc\"\r\n            label=\"Product Description\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handledesinputChange(\"prod_desc\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            value={productCtx.product_categoy}\r\n            id=\"product_category\"\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.product_categoy\r\n            }\r\n            name=\"product_category\"\r\n            label=\"Product Category\"\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            value={productCtx.product_type}\r\n            id=\"product_type\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.product_type\r\n            }\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            name=\"product_type\"\r\n            label=\"Product Type\"\r\n          />\r\n          {productCtx?.product_type === \"Earrings\" ||\r\n          productCtx?.product_type === \"earrings\" ? (\r\n            <Autocomplete\r\n              id=\"free-solo-2-demos\"\r\n              className={classes.fixedTag}\r\n              value={productCtx.earringbacking}\r\n              getOptionLabel={(option) => option.label}\r\n              onChange={handleoptionChange(\"earringbacking\")}\r\n              options={productCtx.masterData.earringbacking}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.label}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Earring Backing\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.height}\r\n            id=\"height\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.height\r\n            }\r\n            name=\"height\"\r\n            label=\"Height \"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"height\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.width}\r\n            id=\"width\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.width\r\n            }\r\n            name=\"width\"\r\n            label=\"Width\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"width\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <Input\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            label=\"Vendor Name\"\r\n            fullWidth\r\n            className={classes.helperinput}\r\n            value={productCtx.vendorname}\r\n            id=\"productvendorcode\"\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            name=\"Vendor Name\"\r\n          />\r\n          <Input\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            label=\"Vendor Code\"\r\n            fullWidth\r\n            className={classes.helperinput}\r\n            value={productCtx.productvendorcode}\r\n            id=\"productvendorcode\"\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            name=\"Vendor Code\"\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.minOrderQty}\r\n            id=\"minOrderQty\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.minOrderQty\r\n            }\r\n            name=\"minOrderQty\"\r\n            label=\"Minimum Order Quantity\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"minOrderQty\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />{\" \"}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.maxOrderQty}\r\n            id=\"maxOrderQty\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.maxOrderQty\r\n            }\r\n            name=\"maxOrderQty\"\r\n            label=\"Maximum Order Quantity\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"maxOrderQty\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            disabled\r\n            className={classes.fixedTag}\r\n            value={productCtx.productmaterials}\r\n            options={productCtx.masterData.material}\r\n            getOptionLabel={(option) => option.name}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.materialName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Materials\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  readOnly: true,\r\n                  type: \"search\",\r\n                }}\r\n              />\r\n            )}\r\n          />                    \r\n          {Object.keys(filters).length > 0 && (\r\n            <>\r\n              {Object.keys(filters)\r\n                .filter(\r\n                  (i) =>\r\n                    ![\r\n                      \"product_id\",\r\n                      \"product_name\",\r\n                      \"Material\",                                           \r\n                      \"Product Type\",\r\n                    ].includes(i)\r\n                )\r\n                .map((item, index) => (\r\n                  <Autocomplete\r\n                    key={index}\r\n                    id={index}\r\n                    disabled\r\n                    multiple\r\n                    options={filters[item].split(\",\")}\r\n                    value={filters[item].split(\",\")}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          label={option}\r\n                          {...getTagProps({ index })}\r\n                        />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label={item}\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                      />\r\n                    )}\r\n                  />\r\n                ))}\r\n            </>\r\n          )}\r\n          {/* <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.product_gender}\r\n            options={productCtx.masterData.gender}\r\n            getOptionLabel={(option) => option.label}\r\n            onChange={handleoptionChange(\"product_gender\")}\r\n            options={productCtx.masterData.gender}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Gender\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          /> */}\r\n          {/* <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.themes}\r\n            options={productCtx.masterData.themes}\r\n            value={productCtx.themes}\r\n            getOptionLabel={(option) => option.name}\r\n            onChange={handleoptionChange(\"themes\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Themes\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          /> */}\r\n          {/* <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.prod_styles}\r\n            options={productCtx.masterData.styles}\r\n            getOptionLabel={(option) => option.name}\r\n            onChange={handleoptionChange(\"prod_styles\")}\r\n            value={productCtx.prod_styles}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Styles\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          /> */}\r\n          {/* <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.occassions}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.occassions}\r\n            options={productCtx.masterData.occasions}\r\n            onChange={handleoptionChange(\"occassions\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Occasions\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          /> */}\r\n          {/* <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.collections}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.collections}\r\n            options={productCtx.masterData.collections}\r\n            onChange={handleoptionChange(\"collections\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Collections\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          /> */}\r\n          {/* <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.stonecount}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.stonecount}\r\n            options={productCtx.masterData.stones}\r\n            onChange={handleoptionChange(\"stonecount\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"No of Stones\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          /> */}\r\n          {/* <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.stonecolour}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.stonecolour}\r\n            options={productCtx.masterData.gemstonecolor}\r\n            onChange={handleoptionChange(\"stonecolour\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Stone Colour\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          /> */}\r\n          <FormControlLabel\r\n            label={\r\n              productCtx.isactive\r\n                ? \"Disable this product\"\r\n                : \"Enable this product\"\r\n            }\r\n            control={\r\n              <Switch\r\n                checked={productCtx.isactive}\r\n                onChange={handledisableproduct(\"isactive\")}\r\n                value=\"checkedA\"\r\n              />\r\n            }\r\n          />\r\n          <Grid\r\n            item\r\n            container\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"16px\",\r\n            }}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={(e) => saveProductEditItem()}\r\n              >\r\n                Update\r\n              </Button>\r\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\r\n                  Back\r\n              </Button> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={9}\r\n          lg={9}\r\n          spacing={2}\r\n          style={{ padding: \"15px\" }}\r\n        >\r\n          <Grid container item md={6}></Grid>\r\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\r\n            Diamond Table\r\n          </Grid>\r\n          <DiamondDetails diamond={productCtx.diamondlist} />\r\n          {productCtx.gemstonelist.length > 0 ? (\r\n            <>\r\n              {\" \"}\r\n              <Grid\r\n                style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}\r\n              >\r\n                Gemstone Table\r\n              </Grid>\r\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\r\n            </>\r\n          ) : null}\r\n          <Grid\r\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\r\n          >\r\n            Variant Creation\r\n          </Grid>\r\n\r\n          <Grid style={{}}>\r\n            {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\r\n\r\n            <ExpansionPanel expanded={expand} onChange={handleChange()}>\r\n              <ExpansionPanelSummary\r\n                expandIcon={expand ? <CloseIcon /> : <AddIcon />}\r\n                aria-controls=\"panel1c-content\"\r\n                id=\"panel1c-header\"\r\n              >\r\n                <div className={classes.column}>\r\n                  <Typography className={classes.heading}>\r\n                    Add New variant\r\n                  </Typography>\r\n                </div>\r\n              </ExpansionPanelSummary>\r\n              <Divider />\r\n              <ExpansionPanelDetails className={classes.details}>\r\n                <CreateVariant\r\n                  productMetalColor={productCtx.productMetalColor}\r\n                  productMetalPurity={productCtx.productMetalPurity}\r\n                  changeVariant={changeVariant}\r\n                  productId={prod_id}\r\n                  updatevarient={createnewvarient}\r\n                />\r\n              </ExpansionPanelDetails>\r\n              <Divider />\r\n              {/* <ExpansionPanelActions>\r\n                      <Button size=\"small\">Cancel</Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Save\r\n                      </Button>\r\n                    </ExpansionPanelActions> */}\r\n            </ExpansionPanel>\r\n          </Grid>\r\n          <Grid\r\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\r\n          >\r\n            <SortHeader\r\n              columnnames={columnnames.varients}\r\n              getColumnnames={getColumnnames}\r\n              displytype={1}\r\n            />{\" \"}\r\n          </Grid>\r\n\r\n          <Variants\r\n            variants={productCtx.variants}\r\n            columns={varientcolumns}\r\n            displycolumns={displycolumns}\r\n            productcompletedata={productCtx.productmaterials}\r\n          />\r\n\r\n          <Grid\r\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\r\n          >\r\n            <SortHeader\r\n              title={\"Pricing Table\"}\r\n              columnnames={pricingcolumns}\r\n              displycolumns={displypricingcolumns}\r\n              getColumnnames={getColumnnames}\r\n              displytype={2}\r\n            />\r\n            <Button\r\n              onClick={(e) => Skupricesync(prod_id)}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Price Run For This Product\r\n            </Button>\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <Button\r\n              onClick={(e) => Skumarkupsync(prod_id)}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Run Markup For This Product\r\n            </Button>\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <Button\r\n              onClick={(e) => updateAttributes(prod_id)}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Update Attributes\r\n            </Button>\r\n          </Grid>\r\n          {isshowpricesummary ? (\r\n            <Pricedetails\r\n              onClose={dismisspricesummary}\r\n              values={pricesummaryvalues}\r\n            />\r\n          ) : null}\r\n          <Skupricing\r\n            variants={productCtx.variants}\r\n            onShow={showpricesummary}\r\n            columns={displypricingcolumns}\r\n            displycolumns={displycolumnnames}\r\n          />\r\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\r\n            Product Images\r\n          </Grid>\r\n          {productCtx.productMetalColor.map((colors, index) => (\r\n            <Productimages\r\n              key={index}\r\n              color={colors.productColor}\r\n              isdefault={colors.isdefault}\r\n              prodimages={productCtx.product_images}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport const ProductAttributes = withRouter((props) => {\r\n  const classes = useStyles2();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"loaderdiv\">\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n\r\n  const _content = (\r\n    <ProductProvider\r\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\r\n    >\r\n      <Component {...props} />\r\n    </ProductProvider>\r\n  );\r\n  return _content;\r\n});\r\nexport default withRouter(ProductAttributes);\r\n","import { Box, Button, CircularProgress, Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { RiFileUploadFill } from \"react-icons/ri\";\r\nimport xlsxParser from 'xlsx-parse-json';\r\nimport { AlertContext } from \"../../context\";\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    file: {\r\n        fontSize: \"60px\"\r\n    },\r\n    root: {\r\n        border: \"1px solid #c1c1c1\",\r\n        borderRadius: \"10px\",\r\n        cursor: \"pointer\"\r\n    },\r\n    title: {\r\n        fontSize: \"18px\",\r\n        color: \"black\",\r\n        textAlign: \"center\",\r\n        marginTop: \"10px\"\r\n    },\r\n    roots: {\r\n        marginTop: \"10%\"\r\n    },\r\n    res: {\r\n        color: \"green\",\r\n        fontSize: \"18px\",\r\n\r\n        textAlign: \"center\",\r\n        marginTop: \"10px\"\r\n    }\r\n}));\r\nconst PriceUpload = (props) => {\r\n    const [data, setData] = React.useState(\"\")\r\n    const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const classes = styles();\r\n    const snack = React.useContext(AlertContext)\r\n    const handleFile = (file) => {\r\n        xlsxParser\r\n            .onFileSelection(file)\r\n            .then(data => {\r\n\r\n                if (data.Sheet1.length == 0) {\r\n\r\n                } else {\r\n\r\n                    let body = {\r\n                        sku_details: data.Sheet1.map(item => {\r\n                            return {\r\n                                \"product_id\": item[\"SKU\"],\r\n                                \"selling_price\": Number(item[\"Selling Price\"]),\r\n                                \"selling_price_tax\": Number(item[\"Selling Price Tax\"]),\r\n                                \"markup_price\": Number(item[\"Markup Price\"]),\r\n                                \"markup_price_tax\": Number(item[\"Markup Price Tax\"]),\r\n                                \"discount_price\": Number(item[\"Discount Price\"]),\r\n                                \"discount_price_tax\": Number(item[\"Discount Price Tax\"]),\r\n                            }\r\n                        })\r\n                    }\r\n                    setOpen(true)\r\n                    sendNetworkRequest('/silverpriceupload', {}, body)\r\n                        .then((response) => {\r\n                            setOpen(false)\r\n\r\n                            snack.setSnack({\r\n                                open: true,\r\n                                severity: \"success\",\r\n                                msg: response.message,\r\n                            });\r\n                        }).catch(err => {\r\n                            setOpen(false)\r\n                            snack.setSnack({\r\n                                open: true,\r\n                                severity: \"error\",\r\n                                msg: \"Some error occured!,Please Try later\",\r\n                            });\r\n                        })\r\n                }\r\n            });\r\n    }\r\n    const selectimg = (e) => {\r\n        const files = e.target.files;\r\n        if (files && files[0]) handleFile(files[0]);\r\n\r\n\r\n    };\r\n    const downloadURI = () => {\r\n        var link = document.createElement(\"a\");\r\n        link.download = \"StyloriPriceSampleFile\";\r\n        link.href = \"https://styloriimages.s3.ap-south-1.amazonaws.com/samplefiles/stylori+price+sample+file.xlsx\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n\r\n    }\r\n    return (\r\n        <div className={classes.roots}\r\n        >\r\n            <center>  <Button variant=\"contained\" color=\"primary\" onClick={downloadURI}>Download Sample File</Button></center>\r\n            <br />\r\n\r\n            <label\r\n\r\n            >\r\n                <Grid container direction=\"row\" justifyContent=\"center\" >\r\n                    {open ?\r\n                        <Grid item xs={12} >\r\n                            <center>\r\n                                <CircularProgress color=\"primary\" />\r\n                            </center>\r\n                        </Grid>\r\n                        :\r\n                        <Grid item xs={11} sm={6} md={3} lg={3} className={classes.root}>\r\n                            <br />\r\n                            <br />\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"img\"\r\n                                style={{ display: \"none\" }}\r\n                                id=\"uplodebtn\"\r\n                                onChange={selectimg}\r\n                            />\r\n\r\n                            <Box\r\n                                display=\"flex\"\r\n                                flexDirection=\"row\"\r\n                                justifyContent=\"center\"\r\n                                alignItems=\"center\"\r\n\r\n                            >\r\n                                <Box >\r\n                                    <RiFileUploadFill className={classes.file} />\r\n                                </Box>\r\n\r\n                            </Box>\r\n\r\n                            <br />\r\n                            <br />\r\n\r\n                        </Grid>}\r\n\r\n                </Grid >\r\n            </label>\r\n            <Typography className={classes.title}>{open ? \"Uploading...\" : \"Upload Price Sheet\"}</Typography>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default PriceUpload;","const route = {\r\n  login: \"/login\",\r\n  dashboard: \"/dashboard\",\r\n  profile: \"/profile\",\r\n  productupload: \"/productupload\",\r\n  configuration: \"/Configuration\",\r\n  vendor: \"/vendorlist\",\r\n  productlist: \"/productlist\",\r\n  orderlist: \"/orderlist\",\r\n  orderdetails: \"/orderdetails/:id\",\r\n  userorders: \"/orderlist/:userid\",\r\n  userwishlist: \"/userwishlist/:userid\",\r\n  address: \"/address/:userid\",\r\n\r\n  materiallist: \"/material\",\r\n  mastermaterial: \"/materialmaster\",\r\n  mastercolors: \"/mastercolors\",\r\n  masterpurities: \"/masterpurities\",\r\n  salediscountlist: \"/salediscountlist\",\r\n  voucherdiscountlist: \"/voucherdiscountlist\",\r\n\r\n  producttypes: \"/producttypes\",\r\n  voucherdiscount: \"/voucherdiscount\",\r\n  salediscount: \"/salediscount\",\r\n  priceupdate: \"/priceupdate\",\r\n  productAttributes: \"/product_attributes\",\r\n  diamondDetails: \"/diamond_details\",\r\n  gemstoneDetails: \"/gemstone-details\",\r\n  variants: \"/variants\",\r\n  images: \"/images\",\r\n  createVariant: \"/create_variant\",\r\n  materiallistpage: \"/newmaterial\",\r\n  editCategory: \"/editcategory\",\r\n  vendorPrice: \"/vendorpricesetup\",\r\n  markupPrice: \"/markuppricesetup\",\r\n  taxsetup: \"/taxsetup\",\r\n  editdiscount: \"/salediscount/:id\",\r\n  editvoucher: \"/voucherdiscount/:id\",\r\n  masterstyles: \"/masterstyles\",\r\n  masterthemes: \"/masterthemes\",\r\n  masteroccassions: \"/masteroccassions\",\r\n  masterpaymentstatus: \"/paymentstatus\",\r\n  mastercollections: \"/collections\",\r\n  masterdesigns: \"/designs\",\r\n  masterorderstatus: \"/orderstatus\",\r\n  shippingzones: \"/zones\",\r\n  shipmentsettings: \"/shipmensettings\",\r\n  shippingattributes: \"/shippingattributes\",\r\n  masterdiamonds: \"/diamonds\",\r\n  diamondsettings: \"/diamondsettings\",\r\n  diamondshapes: \"/diamondshapes\",\r\n  earringbacking: \"/earringbacking\",\r\n  addshippingattributes: \"/addshippingattributes\",\r\n  addtaxattributes: \"/addtaxattributes\",\r\n  userconfiguration: \"/userconfiguration\",\r\n  masterroles: \"/masterroles\",\r\n  manageadminusers: \"/manageadminusers\",\r\n  goldpriceupdate: \"/goldpriceupdate\",\r\n\r\n  manageusers: \"/manageusers\",\r\n\r\n  masterpages: \"/masterpages\",\r\n\r\n  gemsettings: \"/gemstonesettings\",\r\n  gemshapes: \"/gemstoneshapes\",\r\n  gemtypes: \"/gemstonetypes\",\r\n  gender: \"/genders\",\r\n  seo: \"/seopriority\",\r\n  taxsettings: \"/taxsettings\",\r\n  masterattributes: \"/masterattributes\",\r\n  dynamicFilter: \"/filters\",\r\n\r\n  masterstones: \"/masterstones\",\r\n  masterstonecolors: \"/masterstonecolors\",\r\n  masterstoneshapes: \"/masterstoneshapes\",\r\n  weights: \"/weights\",\r\n  customerdetails: \"/customerdetails/:id\",\r\n\r\n  category: \"/categories\",\r\n  countriesFx: \"/countriesFx\",\r\n  imageUpload: \"/imageUpload\",\r\n  banners: \"/banners\",\r\n  styloribanner: \"/styloribanner\",\r\n  silverbanner: \"/silverbanner\",\r\n  silverlistingbanner: \"/listingPage\",\r\n  warehouse: \"/warehouse\",\r\n  holiday_manager: \"/holiday-manager\",\r\n  inventory: \"/inventory\",\r\n  abandoned_cart: \"/cart-details\",\r\n  price_upload: \"/price-upload\",\r\n  error_logs: \"/error-logs\",\r\n  pricelogs: \"/price-logs\",\r\n  GemstoneMarkupSettings: \"gemstone-setting\",\r\n  CmsHome: \"/cmsHome\",\r\n  BannerCMS: \"/bannerCMS\",\r\n  CmsComponent: \"/cmsComponent\",\r\n  SearchSettings: \"/search_settings\",\r\n  ComboOfferConfig:\"/combo_offer_config\"\r\n};\r\n\r\nexport default route;\r\n","import { makeStyles, fade } from \"@material-ui/core/styles\";\r\nconst drawerWidth = 260;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    color: \"red\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 200,\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginLeft: \"0px\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    overflow: \"auto\",\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nconst drawerWidth = 260;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      flex: \"1 0 auto\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      outline: 0,\r\n      zIndex: 1200,\r\n      position: \"fixed\",\r\n      overflowY: \"auto\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  profile: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    minHeight: \"fit-content\",\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n","import Collapse from \"@material-ui/core/Collapse\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { Link as RouterLink, withRouter } from \"react-router-dom\";\r\nimport { GlobalContext, ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport data from \"../menupages.json\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction SideBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { isreload, setIsreload } = React.useState(false);\r\n  let accesspages = localStorage.getItem(\"accesspages\");\r\n  console.log(accesspages);\r\n  const handleDrawer = () => {\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\r\n  };\r\n  const handleClick = (type) => (e) => {\r\n    if (\r\n      type === \"Pricing\" ||\r\n      type === \"Inventory & Shipping Setup\" ||\r\n      type === \"Orders\"\r\n    ) {\r\n      setGlobalCtx({\r\n        ...globalCtx,\r\n        optionname: type,\r\n        selectedIndex: 5,\r\n        isExpand: !globalCtx.isExpand,\r\n      });\r\n    } else {\r\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\r\n    }\r\n  };\r\n  async function getmasterpages() {\r\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\r\n    let pages = [];\r\n    let pagepermissions = [];\r\n\r\n    pageaccess.pages.forEach((element) => {\r\n      pages.push(element.pageurl);\r\n      if (element.is_write) {\r\n        pagepermissions.push(element.pageurl);\r\n      }\r\n    });\r\n    // setPages(pageaccess)\r\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\r\n    //setIsreload(true)\r\n\r\n    localStorage.setItem(\"accesspages\", pages);\r\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\r\n\r\n    window.location.reload();\r\n  }\r\n  React.useEffect(() => {\r\n    //alert(globalCtx.accesspages)\r\n    if (!accesspages) {\r\n      // getmasterpages()\r\n    } else {\r\n      //  setIsreload(true)\r\n    }\r\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n  }, []);\r\n  function handleListItemClick(event, index) {\r\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\r\n  }\r\n  return (\r\n    <>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n          }),\r\n        }}\r\n        open={globalCtx.sideBarOpen}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawer}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List>\r\n          {data.menus.map((menuobj, index) => (\r\n            \r\n            <>\r\n              {menuobj.submenu ? (\r\n                <>\r\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\r\n                    <>\r\n                      <ListItem button onClick={handleClick(menuobj.name)}>\r\n                        <ListItemIcon>\r\n                          <img\r\n                            style={{ width: \"18px\" }}\r\n                            src={menuobj.icon}\r\n                            alt=\"menu\"\r\n                          ></img>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={menuobj.name} />\r\n                        {globalCtx.isExpand &&\r\n                          globalCtx.optionname === menuobj.name ? (\r\n                          <ExpandLess />\r\n                        ) : (\r\n                          <ExpandMore />\r\n                        )}\r\n                      </ListItem>\r\n                      <Collapse\r\n                        in={\r\n                          globalCtx.isExpand &&\r\n                          globalCtx.optionname === menuobj.name\r\n                        }\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                      >\r\n                        <List component=\"div\" disablePadding>\r\n                          {menuobj.submenu.map((submenuobj, subindex) => (\r\n                            <>\r\n                              {accesspages &&\r\n                                accesspages.indexOf(submenuobj.url) > -1 ? (\r\n                                <Link\r\n                                  underline=\"none\"\r\n                                  component={RouterLink}\r\n                                  to={submenuobj.url}\r\n                                >\r\n                                  <ListItem\r\n                                    button\r\n                                    className={classes.nested}\r\n                                    selected={\r\n                                      globalCtx.selectedIndex === subindex\r\n                                    }\r\n                                    onClick={(event) =>\r\n                                      handleListItemClick(event, subindex)\r\n                                    }\r\n                                  >\r\n                                    <ListItemIcon>\r\n                                      <img\r\n                                        style={{ width: \"18px\" }}\r\n                                        src={submenuobj.icons}\r\n                                      ></img>\r\n                                    </ListItemIcon>\r\n\r\n                                    <ListItemText primary={submenuobj.name} />\r\n                                  </ListItem>\r\n                                </Link>\r\n                              ) : null}\r\n                            </>\r\n                          ))}\r\n                        </List>\r\n                      </Collapse>{\" \"}\r\n                    </>\r\n                  ) : null}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {\" \"}\r\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\r\n                    <Link\r\n                      underline=\"none\"\r\n                      component={RouterLink}\r\n                      to={menuobj.url}\r\n                    >\r\n                      <ListItem\r\n                        button\r\n                        key={\"Product List\"}\r\n                        selected={globalCtx.optionname === menuobj.name}\r\n                        onClick={handleClick(menuobj.name)}\r\n                      >\r\n                        <ListItemIcon>\r\n                          <img\r\n                            style={{ width: \"18px\" }}\r\n                            src={menuobj.icon}\r\n                            alt=\"menu\"\r\n                          ></img>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={menuobj.name} />\r\n                      </ListItem>\r\n                    </Link>\r\n                  ) : null}{\" \"}\r\n                </>\r\n              )}\r\n            </>\r\n          ))}\r\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\r\n\r\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Product List\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <ListItem button  onClick={handleClick('Pricing')}>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Pricing\" />\r\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\r\n\r\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\r\n  <ListItemIcon>\r\n    <StarBorder />\r\n  </ListItemIcon>\r\n  <ListItemText primary=\"Gold Price Setup\" />\r\n</ListItem>\r\n</Link>\r\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Vendor Price Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Selling Price Markup Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Discount Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Price Run\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User List\" />\r\n      </ListItem> \r\n      </Link>\r\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\r\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Vendorlist\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\r\n\r\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Order List\"} />\r\n            </ListItem>\r\n            </Link>\r\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\r\n\r\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Configuration\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\r\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n                  <ListItemText primary={\"Vouchers\"} />\r\n                </ListItem>\r\n                </Link>\r\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User and Roles Management\" />\r\n      </ListItem> \r\n      </Link> */}\r\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sales Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Voucher Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(SideBar);\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { useStyles } from './styles';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SideBar from '../SideBar';\r\nimport { GlobalContext } from '../../context';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport './style.css'\r\n\r\n\r\nfunction PAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  function handleProfileMenuOpen(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleMobileMenuClose() {\r\n    setMobileMoreAnchorEl(null);\r\n  }\r\n\r\n  function handleMenuClose() {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n  function handlelogout() {\r\n    localStorage.removeItem(\"accesstoken\")\r\n    window.location = '/'\r\n  }\r\n\r\n  \r\n  function handleDrawer(){\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\r\n  }\r\n\r\n  function handleMobileMenuOpen(event) {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem> */}\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem> */}\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\r\n              [classes.appBarShift]: globalCtx.sideBarOpen,\r\n            })} >\r\n        <Toolbar>\r\n          <IconButton\r\n            className=\"hide\"\r\n            edge=\"start\"\r\n            className={classes.hide}\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: globalCtx.sideBarOpen,\r\n            })}\r\n            onClick={handleDrawer}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\r\n           Stylori\r\n          </Typography>\r\n          \r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </>\r\n  );\r\n}\r\n\r\nconst PrimaryAppBar = withRouter(PAppBar);\r\n\r\nconst MainWrapper = props => {\r\n  const classes = useStyles();\r\n  let { component: Component, ...rest } = props;\r\n\r\n  return(\r\n    <main className={classes.content} >\r\n        <div className={classes.toolbar} />\r\n        <Component {...rest} />\r\n      </main>\r\n  )\r\n}\r\n\r\nexport const withAppBar = (component, props) => {\r\n\r\n  return(\r\n    <>\r\n      <CssBaseline />\r\n      <PrimaryAppBar {...props} />\r\n      <SideBar {...props} />\r\n      <MainWrapper component={component} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PrimaryAppBar;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport route from \"./route\";\r\nimport { withAppBar } from \"../components/PrimaryAppBar\";\r\n\r\nconst PrivateRoute = (props) => {\r\n  const { component, ...rest } = props;\r\n\r\n  const checkAuth = () => {\r\n    let accesstoken = localStorage.getItem(\"accesstoken\");\r\n    if (accesstoken) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const Component = (props) => withAppBar(component, props);\r\n  return checkAuth() ? (\r\n    rest.path === \"/\" || rest.path === \"/login\" ? (\r\n      <Redirect to={route.productlist} />\r\n    ) : (\r\n      <Component {...rest} />\r\n    )\r\n  ) : (\r\n    <Redirect to={route.login} />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    dialogPaper: {\r\n        minWidth: \"1200px\",\r\n    },\r\n    dialogPaperMid: {\r\n        minWidth: \"800px\",\r\n    },\r\n    dialogHeader: {\r\n        backgroundColor: \"#fff\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\"\r\n    },\r\n    dialogTitle: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\"\r\n    },\r\n    root: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    imagecontainer: {\r\n        display: \"flex\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    table: {\r\n        minWidth: 500,\r\n    },\r\n    tableWrapper: {\r\n        overflowX: \"auto\",\r\n        backgroundColor: \"#fff\",\r\n        marginBottom: \"60px\"\r\n    },\r\n    link: {\r\n        display: \"flex\",\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(0.5),\r\n        width: 20,\r\n        height: 20,\r\n    },\r\n    link_style: {\r\n        color: \"#000\",\r\n    },\r\n}));\r\n","import { TableCell, TableRow, Button, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst getComponent = (data) => {\r\n  switch (data.type) {\r\n    case \"TEXT\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: data?.customWidth ? data?.customWidth : \"\",\r\n            lineBreak: data?.customWidth ? \"anywhere\" : \"unset\",\r\n          }}\r\n        >\r\n          {data.rowData ? data.rowData : \"-\"}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    case \"HTMLTEXT\": {\r\n      return <div>{parse(data.rowData)}</div>;\r\n    }\r\n    case \"INCREMENT\": {\r\n      return <div>{data.rowIndex + 1}</div>;\r\n    }\r\n    case \"TOTAL_STORES\": {\r\n      return <div>{data?.rowData?.length}</div>;\r\n    }\r\n    case \"DETAILED_ARR\": {\r\n      return data?.rowData?.map((_) => {\r\n        return (\r\n          <Typography>\r\n            <div>{_?.title}</div>\r\n            <img\r\n              alt=\"nacimages\"\r\n              src={_?.img}\r\n              style={{ width: \"150px\", height: \"auto\" }}\r\n            />\r\n            <div style={{ color: \"blue\" }}>{_?.imageTitle}</div>\r\n          </Typography>\r\n        );\r\n      });\r\n    }\r\n    case \"VIEW_DETAILS\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: \"blue\",\r\n            cursor: \"pointer\",\r\n            textDecoration: \"underline\",\r\n          }}\r\n          onClick={data?.handleViewStores}\r\n        >\r\n          View Details\r\n        </div>\r\n      );\r\n    }\r\n    case \"MBL_IMAGE\": {\r\n      return (\r\n        <img\r\n          alt={data.rowData ? data.rowData : \"\"}\r\n          src={data.rowData}\r\n          style={{ width: \"150px\", height: \"auto\" }}\r\n        />\r\n      );\r\n    }\r\n    case \"WEB_IMAGE\": {\r\n      return (\r\n        <img\r\n          alt={data.rowData ? data.rowData : \"\"}\r\n          src={data.rowData}\r\n          style={{ width: \"150px\", height: \"auto\" }}\r\n        />\r\n      );\r\n    }\r\n    case \"IMAGE\": {\r\n      return (\r\n        <img\r\n          alt=\"nacimages\"\r\n          src={data.rowData.img}\r\n          style={{ width: \"150px\", height: \"auto\" }}\r\n        />\r\n      );\r\n    }\r\n    case \"ACTION\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            gap: 6,\r\n          }}\r\n        >\r\n          <EditIcon onClick={data?.handleEdit} style={{ cursor: \"pointer\" }} />\r\n          <DeleteIcon\r\n            onClick={data?.handleDelete}\r\n            style={{ color: \"red\", cursor: \"pointer\" }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    case \"EDIT\": {\r\n      return (\r\n        <EditIcon style={{ cursor: \"pointer\" }} onClick={data?.handleEdit} />\r\n      );\r\n    }\r\n    case \"BUTTON_ARRAY\": {\r\n      return (\r\n        <div>\r\n          {data.rowData.map((val) => (\r\n            <div style={{ paddingBottom: \"4px\" }}>\r\n              <div>{val.name}</div>\r\n              {val.url.length > 0 && (\r\n                <div style={{ color: \"blue\" }}>{val.url}</div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    case \"IMG_ARRAY\": {\r\n      return (\r\n        <div style={{ paddingBottom: \"4px\" }}>\r\n          <img\r\n            style={{ width: \"150px\", height: \"auto\" }}\r\n            src={data?.rowData?.img}\r\n          ></img>\r\n        </div>\r\n      );\r\n    }\r\n    case \"ARRAYTEXT\": {\r\n      return data?.rowData?.map((_) => {\r\n        return (\r\n          <Typography>\r\n            <div>{_.name}</div>\r\n            {_.url.length > 0 && <div style={{ color: \"blue\" }}>{_.url}</div>}\r\n          </Typography>\r\n        );\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nconst TableBodyRow = ({\r\n  tableData = [],\r\n  rowData = {},\r\n  rowIndex = null,\r\n  handleViewStores = () => null,\r\n  handleDelete = () => null,\r\n  handleEdit = () => null,\r\n}) => {\r\n  return (\r\n    <TableRow>\r\n      {tableData.map((val, i) => (\r\n        <TableCell>\r\n          {getComponent({\r\n            type: val.type,\r\n            rowData: rowData[val.name],\r\n            rowIndex: rowIndex,\r\n            handleViewStores: (e) => {\r\n              handleViewStores(e, rowData, rowIndex);\r\n            },\r\n            handleDelete: (e) => {\r\n              handleDelete(e, rowData, rowIndex);\r\n            },\r\n            handleEdit: (e) => {\r\n              handleEdit(e, rowData, rowIndex);\r\n            },\r\n            customWidth: val?.width,\r\n          })}\r\n        </TableCell>\r\n      ))}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableBodyRow;\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction TableHeaderComp(props) {\r\n    const classes = useStyles();\r\n    const { name, handleAddNew = () => null, noAddNew = false } = props\r\n    return (\r\n        <div className={classes.dialogHeader} style={{ padding: \"8px\" }}>\r\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n                {name}\r\n            </Typography>\r\n            {!noAddNew && <Button variant=\"contained\" color=\"primary\" onClick={handleAddNew}>\r\n                Add New\r\n            </Button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableHeaderComp;\r\n","import {\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Link,\r\n    Button,\r\n    Table,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableBodyRow from \"./tableBodyRow\";\r\nimport TableHeaderComp from \"./tableHead\";\r\n\r\nconst TableComp = ({\r\n    name,\r\n    noAddNew = false,\r\n    header = [],\r\n    tableData = [],\r\n    data = [],\r\n    handleViewStores = () => null,\r\n    handleDelete = () => null,\r\n    handleEdit = () => null,\r\n    handleAddNew = () => null\r\n}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <TableHeaderComp name={name} noAddNew={noAddNew} handleAddNew={handleAddNew}\r\n            />\r\n            <div className={classes.tableWrapper}>\r\n                <Table\r\n                    className={classes.table}\r\n                    border={1}\r\n                    borderColor={\"#ddd\"}\r\n                    size=\"small\"\r\n                    stickyHeader\r\n                >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {header?.map((val) => (\r\n                                <TableCell>{val}</TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    {data.length > 0 ?\r\n                        <TableBody>\r\n                            {data.map((val, index) => (\r\n                                <TableBodyRow\r\n                                    tableData={tableData}\r\n                                    rowData={val}\r\n                                    rowIndex={index}\r\n                                    handleViewStores={handleViewStores}\r\n                                    handleDelete={handleDelete}\r\n                                    handleEdit={handleEdit}\r\n                                />\r\n                            ))}\r\n                        </TableBody> :\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                padding: \"10px 0px\",\r\n                            }}\r\n                        >\r\n                            <Typography variant=\"body1\"> No data Found </Typography>\r\n                        </div>}\r\n                </Table>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TableComp;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const consolePagesStyles = makeStyles((theme) => ({\r\n  dialogPaperMid: {\r\n    width: \"300px\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  dialogPaper: {\r\n    minWidth: \"1200px\",\r\n  },\r\n  dialogPaperMid: {\r\n    minWidth: \"800px\",\r\n  },\r\n  dialogHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  dialogTitle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  headerName: {\r\n    fontSize: \"18px\",\r\n    fontWeight: \"600\",\r\n    padding: \"10px 0\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n    marginLeft: \"13px\",\r\n  },\r\n  containerDiv: {\r\n    background: \"#dfd8d8\",\r\n    padding: \"10px\",\r\n    borderRadius: \"6px\",\r\n    margin: \"10px 0\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  carouselParentImg: {\r\n    background: \"#dfd8d8\",\r\n    padding: \"10px\",\r\n    borderRadius: \"6px\",\r\n  },\r\n  addContainer: {\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  collectionName: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    fontWeight: 600,\r\n    fontSize: \"20px\",\r\n    margin: \"10px\",\r\n  },\r\n  carouselImageName: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    fontWeight: 600,\r\n    fontSize: \"17px\",\r\n    margin: \"10px\",\r\n  },\r\n  carouselImage: {\r\n    width: \"40%\",\r\n    display: \"flex\",\r\n    margin: \"10px auto\",\r\n  },\r\n  carouselPrice: {\r\n    fontSize: \"16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"10px\",\r\n  },\r\n  carouselUrl: {\r\n    color: \"blue\",\r\n    fontSize: \"15px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"10px\",\r\n  },\r\n  carouselItems: {\r\n    background: \"#d4d4e7\",\r\n    borderRadius: \"6px\",\r\n    margin: \"12px 0\",\r\n  },\r\n  carouselItemsTwo: {\r\n    background: \"#b8d2df\",\r\n    borderRadius: \"6px\",\r\n    margin: \"12px 0\",\r\n  },\r\n  editCarouselImage: {\r\n    margin: \"7px 0\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  careerColor: {\r\n    color: \"#ED1165\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"600\",\r\n    margin: \"10px 0\",\r\n  },\r\n  careerdescr: {\r\n    color: \"#666\",\r\n    fontSize: \"14px\",\r\n    lineHeight: \"22px\",\r\n    margin: \"10px 0\",\r\n  },\r\n  positionHead: {\r\n    color: \"#ED1165\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"600\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"10px 0\",\r\n  },\r\n  role: {\r\n    fontSize: \"16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"10px 0\",\r\n  },\r\n  jobHead: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"700\",\r\n    color: \"#394578\",\r\n    margin: \"10px 0\",\r\n  },\r\n  keyRoleDiv: {\r\n    background: \"#b8d2df\",\r\n    borderRadius: \"6px\",\r\n    margin: \"5px 0\",\r\n    padding: \"12px 12px\",\r\n  },\r\n  requirementsDiv: {\r\n    background: \"#ccc\",\r\n    borderRadius: \"6px\",\r\n    margin: \"5px 0\",\r\n    padding: \"12px 12px\",\r\n  },\r\n  addpoints: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  headerBottom: {\r\n    marginTop: \"15px\",\r\n    \"& p\": {\r\n      fontSize: \"12px\",\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n}));\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Position\",\r\n  \"Link to Check\",\r\n  \"Mobile Image\",\r\n  \"Desktop Image\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"position\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n  { type: \"WEB_IMAGE\", name: \"web\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst BannerCMS = (props) => {\r\n  const classes = consolePagesStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    position: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n    url: \"\",\r\n  };\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const [index, setIndex] = React.useState();\r\n\r\n  useEffect(() => {\r\n    const index = props?.state?.indexOf(props?.data);\r\n    setIndex(index);\r\n  },[]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.position && state.url && state.mobile && state.web) {\r\n      if (editData.isEdit) {\r\n        const editBanner = props?.data?.props?.banners;\r\n        editBanner.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: editBanner,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"HomePageBanner\", \"banners\",index);\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: [...props?.data?.props?.banners, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"HomePageBanner\", \"banners\",index);\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const banners = props?.data?.props?.banners;\r\n    banners.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        banners: banners,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"HomePageBanner\", \"banners\",index);\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.banners}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n        name={\"Banner Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"position\"\r\n            label=\"Position\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.position}\r\n            name=\"position\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Banner's Redirect Link (Routes Only)\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.url}\r\n            name=\"url\"\r\n            required\r\n          />\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-around\"\r\n            style={{ padding: \"16px 0px\" }}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n              />\r\n              <label htmlFor=\"button-file\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                  disabled={disableButton.mobile}\r\n                >\r\n                  Mobile Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.web}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Desktop Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n          </Grid>\r\n          {(state.mobile.length > 0 || state.web.length > 0) && (\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              {state.mobile.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.mobile}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              {state.web.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.web}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BannerCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { consolePagesStyles } from \"./style\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Navigation URL\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"TEXT\", name: \"navigateUrl\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CollectionCardCMS = (props) => {\r\n  const classes = consolePagesStyles();\r\n\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    image: \"\",\r\n    navigateUrl: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [disableButton, setDisable] = React.useState({\r\n    image: false,\r\n  });\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.image && state.navigateUrl) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.collectionGrid;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            collectionGrid: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionCardData\", \"collectionGrid\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            collectionGrid: [...props?.data?.props?.collectionGrid, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionCardData\", \"collectionGrid\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const cardContent = props?.data?.props?.collectionGrid;\r\n    cardContent.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        collectionGrid: cardContent,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CollectionCardData\", \"collectionGrid\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          name={\"Collection Card Component\"}\r\n          data={props?.data?.props?.collectionGrid}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"navigateUrl\"\r\n              label=\"Navigate Url\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.navigateUrl}\r\n              onChange={onChangeData}\r\n              name=\"navigateUrl\"\r\n              required\r\n            />\r\n\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.image}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Collection Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n            {state.image.length > 0 && (\r\n              <Grid\r\n                container\r\n                justifyContent=\"flex-start\"\r\n                style={{ padding: \"16px 0px\" }}\r\n              >\r\n                {state.image.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.image}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollectionCardCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\n\r\nconst header = [\"S.No\", \"Name\", \"Icon Image\", \"Image Class Name\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"name\" },\r\n  { type: \"WEB_IMAGE\", name: \"icon\" },\r\n  { type: \"TEXT\", name: \"class\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst HomePageIconsCMS = (props) => {\r\n  const classes = consolePagesStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    name: \"\",\r\n    icon: \"\",\r\n    class: \"\",\r\n  };\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    icon: false,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.name && state.icon && state.class) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"HomePageIconsList\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"HomePageIconsList\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"HomePageIconsList\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n        name={\"Home Page Icon Component\"}\r\n        handleAddNew={handleClickOpen}\r\n        noAddNew\r\n      />\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Home Page Icons Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.name}\r\n            name=\"name\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"class\"\r\n            label=\"Icon's Class Name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.class}\r\n            name=\"class\"\r\n            required\r\n          />\r\n          <Grid container style={{ padding: \"16px 0px\" }}>\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"icon\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.icon}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Desktop Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            {state.icon.length > 0 && (\r\n              <Grid container style={{ padding: \"16px 0px\" }}>\r\n                {state.icon.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.icon}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default HomePageIconsCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { consolePagesStyles } from \"./style\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Navigation URL\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"TEXT\", name: \"navigateUrl\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CollectionJewelleryCardCMS = (props) => {\r\n  const classes = consolePagesStyles();\r\n\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    image: \"\",\r\n    navigateUrl: \"\",\r\n  };\r\n\r\n  const [disableButton, setDisable] = React.useState({\r\n    image: false,\r\n  });\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.image && state.navigateUrl) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.jewelleryGrid;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            jewelleryGrid: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionJewelleryData\", \"jewelleryGrid\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            jewelleryGrid: [...props?.data?.props?.jewelleryGrid, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionJewelleryData\", \"jewelleryGrid\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const cardContent = props?.data?.props?.jewelleryGrid;\r\n    cardContent.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        jewelleryGrid: cardContent,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CollectionJewelleryData\", \"jewelleryGrid\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          name={\"Collection Jewellery Card Component\"}\r\n          data={props?.data?.props?.jewelleryGrid}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Add New Collection Jewellery Card Item\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"navigateUrl\"\r\n              label=\"Navigate Url\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.navigateUrl}\r\n              onChange={onChangeData}\r\n              name=\"navigateUrl\"\r\n              required\r\n            />\r\n\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.image}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Jewellery Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n            {state.image.length > 0 && (\r\n              <Grid\r\n                container\r\n                justifyContent=\"flex-start\"\r\n                style={{ padding: \"16px 0px\" }}\r\n              >\r\n                {state.image.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.image}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollectionJewelleryCardCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Image\",\r\n  \"Title\",\r\n  \"Card Header\",\r\n  \"Card Content\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"cardHeader\" },\r\n  { type: \"TEXT\", name: \"cardContent\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst StoriesCardCMS = (props) => {\r\n  const classes = consolePagesStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    image: \"\",\r\n    title: \"\",\r\n    cardHeader: \"\",\r\n    cardContent: \"\",\r\n  };\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    image: false,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.title && state.image && state.cardHeader && state.cardContent) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.storiesData;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storiesData: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"StoriesCard\", \"storiesData\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storiesData: [...props?.data?.props?.storiesData, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"StoriesCard\", \"storiesData\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.storiesData;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        storiesData: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"StoriesCard\", \"storiesData\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.storiesData}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n        name={\"Stories Card Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Stories Card Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"cardHeader\"\r\n            label=\"Card Header\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.cardHeader}\r\n            name=\"cardHeader\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"cardContent\"\r\n            label=\"Card Content\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.cardContent}\r\n            name=\"cardContent\"\r\n            required\r\n          />\r\n          <Grid container style={{ padding: \"16px 0px\" }}>\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.image}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Desktop Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            {state.image.length > 0 && (\r\n              <Grid container style={{ padding: \"16px 0px\" }}>\r\n                {state.image.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.image}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StoriesCardCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Image\",\r\n  \"Image Position\",\r\n  \"Customer Name\",\r\n  \"Product Color\",\r\n  \"Product Id\",\r\n  \"Sku Url\",\r\n  \"Markup Price\",\r\n  \"Message\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"WEB_IMAGE\", name: \"imageUrl\" },\r\n  { type: \"TEXT\", name: \"imagePosition\" },\r\n  { type: \"TEXT\", name: \"customerName\" },\r\n  { type: \"TEXT\", name: \"productColor\" },\r\n  { type: \"TEXT\", name: \"productId\" },\r\n  { type: \"TEXT\", name: \"skuUrl\",width:\"80px\" },\r\n  { type: \"TEXT\", name: \"markupPrice\" },\r\n  { type: \"TEXT\", name: \"message\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst TestimonialCollectionCardCMS = (props) => {\r\n  const classes = consolePagesStyles();\r\n\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    title: \"\",\r\n    imageUrl: \"\",\r\n    imagePosition: \"\",\r\n    customerName: \"\",\r\n    productColor: \"\",\r\n    productId: \"\",\r\n    skuUrl: \"\",\r\n    markupPrice: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [disableButton, setDisable] = React.useState({\r\n    imageUrl: false,\r\n  });\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.title &&\r\n      state.imageUrl &&\r\n      state.imagePosition &&\r\n      state.customerName &&\r\n      state.productColor &&\r\n      state.productId &&\r\n      state.skuUrl &&\r\n      state.markupPrice &&\r\n      state.message\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"TestimonialCard\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"TestimonialCard\", \"cardContent\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const cardContent = props?.data?.props?.cardContent;\r\n    cardContent.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: cardContent,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"TestimonialCard\", \"cardContent\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          name={\"Testimonial Card Component\"}\r\n          data={props?.data?.props?.cardContent}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Add New Testimonioal Card Item\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.title}\r\n              onChange={onChangeData}\r\n              name=\"title\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"imagePosition\"\r\n              label=\"Image Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.imagePosition}\r\n              onChange={onChangeData}\r\n              name=\"imagePosition\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"customerName\"\r\n              label=\"Customer Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.customerName}\r\n              onChange={onChangeData}\r\n              name=\"customerName\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"productColor\"\r\n              label=\"Product Color\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.productColor}\r\n              onChange={onChangeData}\r\n              name=\"productColor\"\r\n              required\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"productId\"\r\n              label=\"Product Id\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.productId}\r\n              onChange={onChangeData}\r\n              name=\"productId\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"skuUrl\"\r\n              label=\"Sku Url\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.skuUrl}\r\n              onChange={onChangeData}\r\n              name=\"skuUrl\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"markupPrice\"\r\n              label=\"Markup Price\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.markupPrice}\r\n              onChange={onChangeData}\r\n              name=\"markupPrice\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"message\"\r\n              label=\"Message\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.message}\r\n              onChange={onChangeData}\r\n              name=\"message\"\r\n              required\r\n            />\r\n\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"imageUrl\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.imageUrl}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Collection Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n            {state?.imageUrl?.length > 0 && (\r\n              <Grid\r\n                container\r\n                justifyContent=\"flex-start\"\r\n                style={{ padding: \"16px 0px\" }}\r\n              >\r\n                {state?.imageUrl?.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state?.imageUrl}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestimonialCollectionCardCMS;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { TableComp } from \"../../../components/table\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport update from \"immutability-helper\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Banner\",\r\n  \"primary Image Name\",\r\n  \"Primary Image\",\r\n  \"Secondary Image\",\r\n  \"Secondary Image Name\",\r\n  \"View Details\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"IMG_ARRAY\", name: \"containerImage\" },\r\n  { type: \"TEXT\", name: \"primaryContantName\" },\r\n  { type: \"WEB_IMAGE\", name: \"primaryImage\" },\r\n  { type: \"WEB_IMAGE\", name: \"secondaryImage\" },\r\n  { type: \"TEXT\", name: \"secondaryContantName\" },\r\n  { type: \"VIEW_STORES\", name: \"\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  containerImage: {\r\n    img: \"\",\r\n    navigateUrl: \"\",\r\n  },\r\n  primaryImage: \"\",\r\n  primaryNavigateUrl: \"\",\r\n  primaryContantName: \"\",\r\n  primaryButtonName: \"\",\r\n  primaryCarouselDetails: [],\r\n  secondaryImage: \"\",\r\n  secondaryNavigateUrl: \"\",\r\n  secondaryContantName: \"\",\r\n  secondaryButtonName: \"\",\r\n  secondaryCarouselDetails: [],\r\n};\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n  isView: false,\r\n};\r\n\r\nconst initialPrimary = {\r\n  imageTitle: \"\",\r\n  price: \"\",\r\n  navigateUrl: \"\",\r\n  img: \"\",\r\n};\r\n\r\nconst initialSecondary = {\r\n  imageTitle: \"\",\r\n  price: \"\",\r\n  navigateUrl: \"\",\r\n  img: \"\",\r\n};\r\n\r\nconst CollectionCarouselCMS = (props) => {\r\n  const { data } = props;\r\n\r\n  const classes = consolePagesStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [openDetails, setOpenDetails] = useState(false);\r\n  const [state, setState] = React.useState({ ...initialState });\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [formState, setFormState] = React.useState({\r\n    imageTitle: \"\",\r\n  });\r\n  const [hidden, setHidden] = React.useState({\r\n    primary: false,\r\n  });\r\n  const [primary, setPrimary] = React.useState({ ...initialPrimary });\r\n  const [secondary, setSecondary] = React.useState({ ...initialSecondary });\r\n\r\n  const handleAddCarouselDetails = () => {\r\n    setOpenDetails(true);\r\n  };\r\n\r\n  const handleViewStores = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({\r\n      ...editData,\r\n      isEdit: false,\r\n      editIndex: rowIndex,\r\n      isView: true,\r\n    });\r\n    setState({\r\n      ...rowData,\r\n      primaryCarouselDetails: rowData.primaryCarouselDetails,\r\n      secondaryCarouselDetails: rowData.secondaryCarouselDetails,\r\n    });\r\n  };\r\n\r\n  const updatePrimary = (key, name) => {\r\n    setPrimary({ ...primary, [key]: name });\r\n  };\r\n\r\n  const updateSecondary = (key, name) => {\r\n    setSecondary({ ...secondary, [key]: name });\r\n  };\r\n\r\n  const updateState = (key, value) => {\r\n    setHidden({ ...hidden, [key]: value });\r\n  };\r\n\r\n  const handleChange = (file, name, parentKey, index) => {\r\n    if (name === \"containerImage\") {\r\n      UploadImage(file)\r\n        .then((res) => {\r\n          if (res?.data?.web) {\r\n            setState({\r\n              ...state,\r\n              containerImage: {\r\n                img: res?.data?.web,\r\n              },\r\n            });\r\n            alert.setSnack({\r\n              open: true,\r\n              severity: \"success\",\r\n              msg: \"Image Uploaded Successfully\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (name === \"primaryCarouselImage\") {\r\n      UploadImage(file)\r\n        .then((res) => {\r\n          if (res?.data?.web) {\r\n            updatePrimary(\"img\", res?.data?.web);\r\n\r\n            alert.setSnack({\r\n              open: true,\r\n              severity: \"success\",\r\n              msg: \"Image Uploaded Successfully\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (name === \"secondaryCarouselImage\") {\r\n      UploadImage(file)\r\n        .then((res) => {\r\n          if (res?.data?.web) {\r\n            updateSecondary(\"img\", res?.data?.web);\r\n\r\n            alert.setSnack({\r\n              open: true,\r\n              severity: \"success\",\r\n              msg: \"Image Uploaded Successfully\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      UploadImage(file)\r\n        .then((res) => {\r\n          if (res?.data?.web) {\r\n            setState({\r\n              ...state,\r\n              [name]: res?.data?.web,\r\n            });\r\n            // updatePrimary(name , res?.data?.web)\r\n            alert.setSnack({\r\n              open: true,\r\n              severity: \"success\",\r\n              msg: \"Image Uploaded Successfully\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSecondaryChange = (file, name, parentKey, index) => {\r\n    UploadImage(file).then((res) => {\r\n      if (res?.data?.web) {\r\n        const data = [...state?.secondaryCarouselDetails];\r\n        data[index][\"img\"] = res?.data?.web;\r\n        console.log(data, \"lllll\");\r\n        setState({ ...state, [parentKey]: data });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlePrimaryChange = (file, name, parentKey, index) => {\r\n    UploadImage(file).then((res) => {\r\n      if (res?.data?.web) {\r\n        const data = [...state?.primaryCarouselDetails];\r\n        data[index][\"img\"] = res?.data?.web;\r\n        console.log(data, \"lllll\");\r\n        setState({ ...state, [parentKey]: data });\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeData = (key, name) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [key]: name,\r\n    }));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setOpenDetails(false);\r\n    setPrimary(initialPrimary);\r\n    setSecondary(initialSecondary);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = data?.props?.Testimony?.carousel?.data;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        carouselTop: data.props.carouselTop,\r\n        Testimony: {\r\n          carousel: {\r\n            setting: data.props.Testimony.carousel.setting,\r\n            data: content,\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    console.log(getData, \"DELETEgetDatagetData\");\r\n    props.handleSubmit(getData, \"collectionCarouselCardComponent\", \"data\");\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: false, isView: false });\r\n    setState(initialState);\r\n  };\r\n\r\n  const delPrimaryItems = (val, i, data) => {\r\n    const delRow = [...state?.primaryCarouselDetails];\r\n    delRow.splice(i, 1);\r\n    setState({ ...state, primaryCarouselDetails: delRow });\r\n  };\r\n\r\n  const delSecondaryItems = (val, i, data) => {\r\n    const delRow = [...state?.secondaryCarouselDetails];\r\n    delRow.splice(i, 1);\r\n    setState({ ...state, secondaryCarouselDetails: delRow });\r\n  };\r\n\r\n  const addPrimaryItems = () => {\r\n    updateState(\"primary\", true);\r\n    const constructedData = {\r\n      imageTitle: primary?.imageTitle ?? \"\",\r\n      img: primary?.img ?? \"\",\r\n      navigateUrl: primary?.navigateUrl ?? \"\",\r\n      price: primary?.price ?? \"\",\r\n    };\r\n    const data = [...state?.primaryCarouselDetails, constructedData];\r\n    onChangeData(\"primaryCarouselDetails\", data);\r\n    setPrimary({ ...initialPrimary });\r\n  };\r\n\r\n  const addSecondaryItems = () => {\r\n    const payload = {\r\n      imageTitle: secondary?.imageTitle ?? \"\",\r\n      img: secondary?.img ?? \"\",\r\n      navigateUrl: secondary?.navigateUrl ?? \"\",\r\n      price: secondary?.price ?? \"\",\r\n    };\r\n    const data = [...state?.secondaryCarouselDetails, payload];\r\n    onChangeData(\"secondaryCarouselDetails\", data);\r\n\r\n    updateState(\"secondary\", true);\r\n    setSecondary({ ...initialSecondary });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setHidden({ ...hidden, primary: \"true\" });\r\n    setEditData({\r\n      ...editData,\r\n      isEdit: true,\r\n      editIndex: rowIndex,\r\n      isView: false,\r\n    });\r\n    setState({\r\n      ...rowData,\r\n      primaryCarouselDetails: rowData.primaryCarouselDetails,\r\n      secondaryCarouselDetails: rowData.secondaryCarouselDetails,\r\n    });\r\n    // setEditData(initialEdit)\r\n  };\r\n\r\n  const validate = () => {\r\n    if (\r\n      state.containerImage &&\r\n      state.primaryImage &&\r\n      state.primaryNavigateUrl &&\r\n      state.primaryContantName &&\r\n      state.primaryButtonName &&\r\n      state.primaryCarouselDetails &&\r\n      state.secondaryImage &&\r\n      state.secondaryNavigateUrl &&\r\n      state.secondaryContantName &&\r\n      state.secondaryButtonName &&\r\n      state.secondaryCarouselDetails\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate) {\r\n      if (editData.isEdit) {\r\n        const values = data?.props?.Testimony?.carousel?.data;\r\n        values.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            carouselTop: data.props.carouselTop,\r\n            Testimony: {\r\n              carousel: {\r\n                setting: data.props.Testimony.carousel.setting,\r\n                data: values,\r\n              },\r\n            },\r\n          },\r\n        };\r\n\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n        console.log(getData, \"EDITgetDatagetData\");\r\n\r\n        props.handleSubmit(getData, \"collectionCarouselCardComponent\", \"data\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            carouselTop: data.props.carouselTop,\r\n            Testimony: {\r\n              carousel: {\r\n                setting: data.props.Testimony.carousel.setting,\r\n                data: [...data?.props?.Testimony?.carousel?.data, state],\r\n              },\r\n            },\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n        console.log(getData, \"ADDgetDatagetData\");\r\n\r\n        props.handleSubmit(getData, \"collectionCarouselCardComponent\", \"data\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  console.log(primary, \"stateRowstateRow\");\r\n  console.log(state, \"statestatestate\");\r\n\r\n  const handlePrimaryContentChange = (key, value, index) => {\r\n    const newState = update(state, {\r\n      primaryCarouselDetails: {\r\n        [index]: {\r\n          [key]: { $set: value },\r\n        },\r\n      },\r\n    });\r\n    setState(newState);\r\n  };\r\n\r\n  const handleSecondaryContentChange = (key, value, index) => {\r\n    const newState = update(state, {\r\n      secondaryCarouselDetails: {\r\n        [index]: {\r\n          [key]: { $set: value },\r\n        },\r\n      },\r\n    });\r\n    setState(newState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableComp\r\n        name=\"Collection Component\"\r\n        header={header}\r\n        tableData={tableData}\r\n        data={data?.props?.Testimony?.carousel?.data}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n        handleAddNew={handleAddNew}\r\n        handleViewStores={handleViewStores}\r\n      />\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          View Collection Details\r\n        </DialogTitle>\r\n        {editData?.isView ? (\r\n          <DialogContent>\r\n            <Grid container className={classes.addContainer}>\r\n              {[state]?.map((val) => {\r\n                return (\r\n                  <>\r\n                    <Grid item xs={12}>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val?.containerImage?.img}\r\n                        style={{ width: \"100%\", height: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                    <h1>Primary Carousel Details</h1>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        className={classes.collectionName}\r\n                        alt=\"nacimages\"\r\n                      >\r\n                        {val?.primaryContantName}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ display: \"flex\" }}>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val?.primaryImage ?? \"\"}\r\n                        style={{ width: \"75%\", margin: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.carouselItems}>\r\n                      <Grid container>\r\n                        {val?.primaryCarouselDetails?.map((e) => {\r\n                          return (\r\n                            <Grid item xs={6} style={{ textAlign: \"center\" }}>\r\n                              <Grid item xs={12}>\r\n                                <Grid item style={{ margin: \"7px 0\" }}>\r\n                                  <img\r\n                                    alt=\"nacimages\"\r\n                                    className={classes.carouselImage}\r\n                                    src={e?.img ?? \"\"}\r\n                                  />\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography\r\n                                  className={classes.carouselImageName}\r\n                                  alt=\"nacimages\"\r\n                                >\r\n                                  {e?.imageTitle ?? \"\"}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography\r\n                                  className={classes.carouselPrice}\r\n                                  alt=\"nacimages\"\r\n                                >\r\n                                  {e.price ?? \"\"}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography\r\n                                  className={classes.carouselUrl}\r\n                                  alt=\"nacimages\"\r\n                                >\r\n                                  <a>{e?.navigateUrl ?? \"\"}</a>\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                          );\r\n                        })}\r\n                      </Grid>\r\n                    </Grid>\r\n                    <h1>Secondary Carousel Details</h1>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        className={classes.collectionName}\r\n                        alt=\"nacimages\"\r\n                      >\r\n                        {val?.secondaryContantName}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ display: \"flex\" }}>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val?.secondaryImage ?? \"\"}\r\n                        style={{ width: \"75%\", margin: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.carouselItemsTwo}>\r\n                      <Grid container>\r\n                        {val?.secondaryCarouselDetails?.map((e) => {\r\n                          return (\r\n                            <Grid item xs={6} style={{ textAlign: \"center\" }}>\r\n                              <Grid item xs={12}>\r\n                                <Grid item style={{ margin: \"7px 0\" }}>\r\n                                  <img\r\n                                    alt=\"nacimages\"\r\n                                    className={classes.carouselImage}\r\n                                    src={e?.img ?? \"\"}\r\n                                  />\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography\r\n                                  className={classes.carouselImageName}\r\n                                  alt=\"nacimages\"\r\n                                >\r\n                                  {e?.imageTitle ?? \"\"}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography\r\n                                  className={classes.carouselPrice}\r\n                                  alt=\"nacimages\"\r\n                                >\r\n                                  {e.price ?? \"\"}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography\r\n                                  className={classes.carouselUrl}\r\n                                  alt=\"nacimages\"\r\n                                >\r\n                                  <a>{e?.navigateUrl ?? \"\"}</a>\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                          );\r\n                        })}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </DialogContent>\r\n        ) : (\r\n          <DialogContent>\r\n            <Grid\r\n              item\r\n              style={{\r\n                margin: \"7px 0\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"containerImage\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) =>\r\n                  handleChange(e.target.files[0], \"containerImage\")\r\n                }\r\n              />\r\n              <label htmlFor=\"containerImage\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Banner Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            {state?.containerImage?.img && (\r\n              <Grid item style={{ margin: \"7px 0\" }}>\r\n                <img\r\n                  alt=\"nacimages\"\r\n                  src={state?.containerImage?.img}\r\n                  style={{ width: \"100%\", height: \"auto\" }}\r\n                />\r\n              </Grid>\r\n            )}\r\n            <Typography className={classes.headerName}>Primary Item</Typography>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"primaryContantName\"\r\n              label=\"Primary Collection Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={(e) =>\r\n                onChangeData(\"primaryContantName\", e.target.value)\r\n              }\r\n              value={state.primaryContantName}\r\n              name=\"primaryContantName\"\r\n              required\r\n              style={{ margin: \"7px 0\" }}\r\n            />\r\n\r\n            {editData?.isEdit ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"12px 0\" }}\r\n                onClick={handleAddCarouselDetails}\r\n              >\r\n                Add New\r\n              </Button>\r\n            ) : (\r\n              <Grid\r\n                container\r\n                className={classes.addContainer}\r\n                style={{ alignItems: \"center\" }}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"Image Title\"\r\n                    label=\"Image Title\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={(val) =>\r\n                      updatePrimary(\r\n                        \"imageTitle\",\r\n                        val.target.value,\r\n                        \"primaryCarouselDetails\"\r\n                      )\r\n                    }\r\n                    value={primary.imageTitle}\r\n                    name=\"Image Title\"\r\n                    required\r\n                    style={{ margin: \"7px 7px 7px 0\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"price\"\r\n                    label=\"price\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={(val) =>\r\n                      updatePrimary(\r\n                        \"price\",\r\n                        val.target.value,\r\n                        \"primaryCarouselDetails\"\r\n                      )\r\n                    }\r\n                    value={primary.price}\r\n                    name=\"price\"\r\n                    required\r\n                    style={{ margin: \"7px 0\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    style={{ display: \"none\" }}\r\n                    id=\"Primary carousel item\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                      handleChange(e.target.files[0], \"primaryCarouselImage\");\r\n                    }}\r\n                  />\r\n                  <label htmlFor=\"Primary carousel item\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      style={{ width: \"100%\" }}\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Primary item\r\n                    </Button>\r\n                  </label>\r\n                  {primary?.img && (\r\n                    <Grid item style={{ margin: \"7px 0\" }}>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={primary?.img ?? \"\"}\r\n                        style={{ width: \"100px\", height: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"navigateUrl\"\r\n                    label=\"Navigate Url\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={(val) =>\r\n                      updatePrimary(\r\n                        \"navigateUrl\",\r\n                        val.target.value,\r\n                        \"primaryCarouselDetails\"\r\n                      )\r\n                    }\r\n                    value={primary.navigateUrl}\r\n                    name=\"navigateUrl\"\r\n                    required\r\n                    style={{ margin: \"7px 0\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid Item xs={2} className={classes.addBtn}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={addPrimaryItems}\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {openDetails && (\r\n              <Grid\r\n                container\r\n                className={classes.addContainer}\r\n                style={{ alignItems: \"center\" }}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"Image Title\"\r\n                    label=\"Image Title\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={(val) =>\r\n                      updatePrimary(\r\n                        \"imageTitle\",\r\n                        val.target.value,\r\n                        \"primaryCarouselDetails\"\r\n                      )\r\n                    }\r\n                    value={primary.imageTitle}\r\n                    name=\"Image Title\"\r\n                    required\r\n                    style={{ margin: \"7px 7px 7px 0\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"price\"\r\n                    label=\"price\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={(val) =>\r\n                      updatePrimary(\r\n                        \"price\",\r\n                        val.target.value,\r\n                        \"primaryCarouselDetails\"\r\n                      )\r\n                    }\r\n                    value={primary.price}\r\n                    name=\"price\"\r\n                    required\r\n                    style={{ margin: \"7px 0\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    style={{ display: \"none\" }}\r\n                    id=\"Primary carousel item\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                      handleChange(e.target.files[0], \"primaryCarouselImage\");\r\n                    }}\r\n                  />\r\n                  <label htmlFor=\"Primary carousel item\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      style={{ width: \"100%\" }}\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Primary item\r\n                    </Button>\r\n                  </label>\r\n                  {primary?.img && (\r\n                    <Grid item style={{ margin: \"7px 0\" }}>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={primary?.img ?? \"\"}\r\n                        style={{ width: \"100px\", height: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"navigateUrl\"\r\n                    label=\"Navigate Url\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={(val) =>\r\n                      updatePrimary(\r\n                        \"navigateUrl\",\r\n                        val.target.value,\r\n                        \"primaryCarouselDetails\"\r\n                      )\r\n                    }\r\n                    value={primary.navigateUrl}\r\n                    name=\"navigateUrl\"\r\n                    required\r\n                    style={{ margin: \"7px 0\" }}\r\n                  />\r\n                </Grid>\r\n                <Grid Item xs={2} className={classes.addBtn}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={addPrimaryItems}\r\n                  >\r\n                    Add New\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {editData?.isEdit ? (\r\n              <Grid\r\n                container\r\n                style={{\r\n                  padding: \"16px 0px\",\r\n                  background: \" #dfd8d8\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                {state.primaryImage && (\r\n                  <>\r\n                    <Grid item>\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        className={classes.input}\r\n                        style={{ display: \"none\" }}\r\n                        id=\"Primary collection Image\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={(e) =>\r\n                          handleChange(e.target.files[0], \"primaryImage\")\r\n                        }\r\n                      />\r\n                      <label htmlFor=\"Primary collection Image\">\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          component=\"span\"\r\n                          startIcon={<CloudUploadIcon />}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.carouselParentImg}>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={state.primaryImage}\r\n                        className={classes.carouselImage}\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            ) : (\r\n              <>\r\n                <Grid container style={{ padding: \"16px 0px\" }}>\r\n                  <Grid item>\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      className={classes.input}\r\n                      style={{ display: \"none\" }}\r\n                      id=\"Primary collection Image\"\r\n                      multiple\r\n                      type=\"file\"\r\n                      onChange={(e) =>\r\n                        handleChange(e.target.files[0], \"primaryImage\")\r\n                      }\r\n                    />\r\n                    <label htmlFor=\"Primary collection Image\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        component=\"span\"\r\n                        startIcon={<CloudUploadIcon />}\r\n                      >\r\n                        Primary collection Image\r\n                      </Button>\r\n                    </label>\r\n                  </Grid>\r\n                </Grid>\r\n                {state.primaryImage && (\r\n                  <Grid item xs={12} className={classes.carouselParentImg}>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.primaryImage}\r\n                      className={classes.carouselImage}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {state?.primaryCarouselDetails?.length > 0 &&\r\n              hidden?.primary &&\r\n              state?.primaryCarouselDetails?.map((e, i) => {\r\n                console.log(e, \"eeeeee\");\r\n                return (\r\n                  <Grid container className={classes.containerDiv}>\r\n                    <Grid Item xs={6}>\r\n                      <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id={`\"imageTitle\"`}\r\n                        label=\"Item image title\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={(event) =>\r\n                          handlePrimaryContentChange(\r\n                            \"imageTitle\",\r\n                            event.target.value,\r\n                            i\r\n                          )\r\n                        }\r\n                        value={e?.imageTitle}\r\n                        name=\"imageTitle\"\r\n                        required\r\n                        style={{ margin: \"7px 7px 7px 0\" }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.editCarouselImage}>\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        className={classes.input}\r\n                        style={{ display: \"none\" }}\r\n                        id={`pri-files_${i}`}\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={(e) =>\r\n                          handlePrimaryChange(\r\n                            e.target.files[0],\r\n                            \"primaryDetailImage\",\r\n                            \"primaryCarouselDetails\",\r\n                            i\r\n                          )\r\n                        }\r\n                      />\r\n                      <label htmlFor={`pri-files_${i}`}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          component=\"span\"\r\n                          startIcon={<CloudUploadIcon />}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      </label>\r\n                      {e.img && (\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            margin: \"7px 0\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            alt=\"nacimages\"\r\n                            src={e.img}\r\n                            style={{ width: \"100px\", height: \"auto\" }}\r\n                          />\r\n                        </Grid>\r\n                      )}\r\n                    </Grid>\r\n\r\n                    <Grid Item xs={4}>\r\n                      <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"price\"\r\n                        label=\"Item Price\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={(val) =>\r\n                          handlePrimaryContentChange(\r\n                            \"price\",\r\n                            val.target.value,\r\n                            i\r\n                          )\r\n                        }\r\n                        value={e?.price}\r\n                        name=\"price\"\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                    <Grid Item xs={5}>\r\n                      <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"navigateUrl\"\r\n                        label=\"Navigate Url\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={(val) =>\r\n                          handlePrimaryContentChange(\r\n                            \"navigateUrl\",\r\n                            val.target.value,\r\n                            i\r\n                          )\r\n                        }\r\n                        value={e?.navigateUrl}\r\n                        name=\"navigateUrl\"\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      Item\r\n                      xs={2}\r\n                      style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                    >\r\n                      <DeleteIcon\r\n                        onClick={(val) => delPrimaryItems(val, i, state)}\r\n                        style={{ color: \"red\", cursor: \"pointer\" }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            <Typography className={classes.headerName}>\r\n              Secondary Carousel Item\r\n            </Typography>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"secondaryContantName\"\r\n              label=\"Secondary collection name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={(e) =>\r\n                onChangeData(\"secondaryContantName\", e.target.value)\r\n              }\r\n              value={state.secondaryContantName}\r\n              name=\"secondaryContantName\"\r\n              required\r\n              style={{ margin: \"7px 0\" }}\r\n            />\r\n\r\n            <Grid\r\n              container\r\n              className={classes.addContainer}\r\n              style={{ alignItems: \"center\" }}\r\n            >\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"Image Title\"\r\n                  label=\"Image Title\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onChange={(val) =>\r\n                    updateSecondary(\r\n                      \"imageTitle\",\r\n                      val.target.value,\r\n                      \"secondaryCarouselDetails\"\r\n                    )\r\n                  }\r\n                  value={secondary.imageTitle}\r\n                  name=\"Image Title\"\r\n                  required\r\n                  style={{ margin: \"7px 7px 7px 0\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"price\"\r\n                  label=\"price\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onChange={(val) =>\r\n                    updateSecondary(\r\n                      \"price\",\r\n                      val.target.value,\r\n                      \"secondaryCarouselDetails\"\r\n                    )\r\n                  }\r\n                  value={secondary.price}\r\n                  name=\"price\"\r\n                  required\r\n                  style={{ margin: \"7px 0\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"Secondary carousel item\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    handleChange(e.target.files[0], \"secondaryCarouselImage\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"Secondary carousel item\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    style={{ width: \"100%\" }}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Secondary item\r\n                  </Button>\r\n                </label>\r\n                {secondary?.img && (\r\n                  <Grid item style={{ margin: \"7px 0\" }}>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={secondary?.img ?? \"\"}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"navigateUrl\"\r\n                  label=\"Navigate Url\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onChange={(val) =>\r\n                    updateSecondary(\r\n                      \"navigateUrl\",\r\n                      val.target.value,\r\n                      \"secondaryCarouselDetails\"\r\n                    )\r\n                  }\r\n                  value={secondary.navigateUrl}\r\n                  name=\"navigateUrl\"\r\n                  required\r\n                  style={{ margin: \"7px 0\" }}\r\n                />\r\n              </Grid>\r\n              <Grid Item xs={1} className={classes.addBtn}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={addSecondaryItems}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {editData?.isEdit ? (\r\n              <Grid\r\n                container\r\n                style={{\r\n                  padding: \"16px 0px\",\r\n                  background: \" #dfd8d8\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                {state.secondaryImage && (\r\n                  <>\r\n                    <Grid item>\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        className={classes.input}\r\n                        style={{ display: \"none\" }}\r\n                        id=\"Secondary collection Image\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={(e) =>\r\n                          handleChange(e.target.files[0], \"secondaryImage\")\r\n                        }\r\n                      />\r\n                      <label htmlFor=\"Secondary collection Image\">\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          component=\"span\"\r\n                          startIcon={<CloudUploadIcon />}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      </label>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.carouselParentImg}>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={state.secondaryImage}\r\n                        className={classes.carouselImage}\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            ) : (\r\n              <>\r\n                <Grid container style={{ padding: \"16px 0px\" }}>\r\n                  <Grid item>\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      className={classes.input}\r\n                      style={{ display: \"none\" }}\r\n                      id=\"Secondary collection Image\"\r\n                      multiple\r\n                      type=\"file\"\r\n                      onChange={(e) =>\r\n                        handleChange(e.target.files[0], \"secondaryImage\")\r\n                      }\r\n                    />\r\n                    <label htmlFor=\"Secondary collection Image\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        component=\"span\"\r\n                        startIcon={<CloudUploadIcon />}\r\n                      >\r\n                        Secondary collection Image\r\n                      </Button>\r\n                    </label>\r\n                  </Grid>\r\n                </Grid>\r\n                {state.secondaryImage && (\r\n                  <Grid item xs={12} className={classes.carouselParentImg}>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.secondaryImage}\r\n                      className={classes.carouselImage}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </>\r\n            )}\r\n            {state?.secondaryCarouselDetails?.length > 0 &&\r\n              hidden?.primary &&\r\n              state?.secondaryCarouselDetails?.map((e, i) => {\r\n                return (\r\n                  <Grid container className={classes.containerDiv}>\r\n                    <Grid Item xs={6} style={{ margin: \"7px 0\" }}>\r\n                      <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"imageTitle\"\r\n                        label=\"Item image title\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={(event) =>\r\n                          handleSecondaryContentChange(\r\n                            \"imageTitle\",\r\n                            event.target.value,\r\n                            i\r\n                          )\r\n                        }\r\n                        value={e?.imageTitle}\r\n                        name=\"imageTitle\"\r\n                        required\r\n                        style={{ margin: \"7px 7px 7px 0\" }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.editCarouselImage}>\r\n                      <input\r\n                        accept=\"image/*\"\r\n                        className={classes.input}\r\n                        style={{ display: \"none\" }}\r\n                        id={`sec-files_${i}`}\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={(e) =>\r\n                          handleSecondaryChange(\r\n                            e.target.files[0],\r\n                            \"secondaryDetailImage\",\r\n                            \"secondaryCarouselDetails\",\r\n                            i\r\n                          )\r\n                        }\r\n                      />\r\n                      <label htmlFor={`sec-files_${i}`}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          component=\"span\"\r\n                          startIcon={<CloudUploadIcon />}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      </label>\r\n                      {e.img && (\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            margin: \"7px 0\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            alt=\"nacimages\"\r\n                            src={e.img}\r\n                            style={{ width: \"100px\", height: \"auto\" }}\r\n                          />\r\n                        </Grid>\r\n                      )}\r\n                    </Grid>\r\n\r\n                    <Grid Item xs={5} style={{ margin: \"7px 0\" }}>\r\n                      <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"price\"\r\n                        label=\"Item Price\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={(val) =>\r\n                          handleSecondaryContentChange(\r\n                            \"price\",\r\n                            val.target.value,\r\n                            i\r\n                          )\r\n                        }\r\n                        value={e?.price}\r\n                        name=\"price\"\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                    <Grid Item xs={5}>\r\n                      <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"navigateUrl\"\r\n                        label=\"Navigate Url\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={(val) =>\r\n                          handleSecondaryContentChange(\r\n                            \"navigateUrl\",\r\n                            val.target.value,\r\n                            i\r\n                          )\r\n                        }\r\n                        value={e?.navigateUrl}\r\n                        name=\"navigateUrl\"\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      Item\r\n                      xs={1}\r\n                      style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                    >\r\n                      <DeleteIcon\r\n                        onClick={(val) => delSecondaryItems(val, i, state)}\r\n                        style={{ color: \"red\", cursor: \"pointer\" }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                );\r\n              })}\r\n          </DialogContent>\r\n        )}\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\nexport default CollectionCarouselCMS;\r\n","import React, { Component } from \"react\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { ContentState, convertToRaw, EditorState } from \"draft-js\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\n\r\nclass EditorConvertToHTML extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const parentState = this.props.parentState;\r\n    console.log(\"parentState-1\", parentState);\r\n    const contentBlock = htmlToDraft(parentState);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(\r\n        contentBlock.contentBlocks\r\n      );\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.setState({\r\n        editorState,\r\n      });\r\n    }\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    // if (editorState) {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n    const data = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    console.log(\"data-00\", data);\r\n    this.props.handleChangeState(data);\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorStyle={{\r\n            border: \"1px solid rgb(208 207 207)\",\r\n            borderRadius: \"7px\",\r\n            padding: \"0px 14px\",\r\n          }}\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          toolbarClassName=\"toolbar-class\"\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          toolbar={{\r\n            fontFamily: {\r\n              options: [\r\n                \"Arial\",\r\n                \"Georgia\",\r\n                \"Impact\",\r\n                \"Tahoma\",\r\n                \"Times New Roman\",\r\n                \"Verdana\",\r\n                \"Noto Serif,serif\",\r\n              ],\r\n              className: undefined,\r\n              component: undefined,\r\n              dropdownClassName: undefined,\r\n            },\r\n            fontSize: {\r\n              // icon: fontSize,\r\n              options: [8, 9, 10, 11, 12,13, 14,15, 16, 18, 24, 30, 36, 48, 60, 72, 96],\r\n              className: undefined,\r\n              component: undefined,\r\n              dropdownClassName: undefined,\r\n            },\r\n            colorPicker: { colors: ['rgb(97,189,109)', 'rgb(26,188,156)', 'rgb(84,172,210)', 'rgb(44,130,201)',\r\n            'rgb(147,101,184)', 'rgb(71,85,119)', 'rgb(204,204,204)', 'rgb(65,168,95)', 'rgb(0,168,133)',\r\n            'rgb(61,142,185)', 'rgb(41,105,176)', 'rgb(85,57,130)', 'rgb(40,50,78)', 'rgb(0,0,0)',\r\n            'rgb(247,218,100)', 'rgb(251,160,38)', 'rgb(235,107,86)', 'rgb(226,80,65)', 'rgb(163,143,132)',\r\n            'rgb(239,239,239)', 'rgb(255,255,255)', 'rgb(250,197,28)', 'rgb(243,121,52)', 'rgb(209,72,65)',\r\n            'rgb(184,49,47)', 'rgb(124,112,107)', 'rgb(209,213,216)','rgb(47,52,139)','rgb(57,69,124)','rgb(102,102,102)'],}\r\n          }}\r\n        />\r\n        {/* <textarea\r\n          disabled\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditorConvertToHTML;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport parse from \"html-react-parser\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst header = [\"S.No\", \"Heading\", \"View\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"role\" },\r\n  { type: \"VIEW_DETAILS\", name: \"\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  role: \"\",\r\n  JobDescription: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n  isView: false,\r\n};\r\n// const initialKeyPoints = {\r\n//   points: \"\",\r\n// };\r\n\r\n// const initialRequirementPoints = {\r\n//   points: \"\",\r\n// };\r\n\r\nconst CareersCMS = (props) => {\r\n  const { data } = props;\r\n\r\n  const alert = useContext(AlertContext);\r\n\r\n  const classes = consolePagesStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [openBlog, setOpenBlog] = useState(false);\r\n  const [blog, setBlog] = useState([]);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState({ ...initialEdit });\r\n  //   const [keyrolePoint, setKeyRolePoint] = React.useState({\r\n  //     ...initialKeyPoints,\r\n  //   });\r\n  //   const [requirementPoint, setRequirementPoint] = React.useState({\r\n  //     ...initialRequirementPoints,\r\n  //   });\r\n\r\n  //   const handleViewStores = (e, rowData, rowIndex) => {\r\n  //     setState(rowData);\r\n  //     setOpen(true);\r\n  //     setEditData({ ...editData, isEdit: false, editIndex: rowIndex });\r\n  //   };\r\n\r\n  const handleViewMore = (e, rowData, rowIndex) => {\r\n    setOpenBlog(true);\r\n    setBlog(rowData);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  //   const handleChangeKeyRoleData = (key, value, i, parentKey) => {\r\n  //     const data = [...state?.KeyRole?.listingPoints];\r\n  //     data[i][\"points\"] = value;\r\n  //     setState({ ...state, [\"keyRole\"]: data });\r\n  //   };\r\n\r\n  //   const handleChangeRequirementData = (key, value, i, parentKey) => {\r\n  //     debugger;\r\n  //     const data = [...state?.requirements?.listingPoints];\r\n  //     data[i][\"points\"] = value;\r\n  //     setState({\r\n  //       ...state,\r\n  //       [\"requirements\"]: {\r\n  //         ...state.requirements,\r\n  //         listingPoints: data,\r\n  //       },\r\n  //     });\r\n  //     console.log(\"points\", data);\r\n  //   };\r\n\r\n  //   const handlekeyRoleAdd = (key, value) => {\r\n  //     setKeyRolePoint({ ...keyrolePoint, [key]: value });\r\n  //   };\r\n\r\n  //   const handleReqAdd = (key, value) => {\r\n  //     setRequirementPoint({ ...requirementPoint, [key]: value });\r\n  //   };\r\n\r\n  //   const addKeyRolePoint = () => {\r\n  //     const constructedData = {\r\n  //       points: keyrolePoint.points,\r\n  //     };\r\n  //     const data = [...state?.KeyRole?.listingPoints, constructedData];\r\n  //     setState({\r\n  //       ...state,\r\n  //       KeyRole: {\r\n  //         ...state.KeyRole,\r\n  //         listingPoints: data,\r\n  //       },\r\n  //     });\r\n  //     setKeyRolePoint({ ...initialKeyPoints });\r\n  //   };\r\n  //   const addReqPoint = () => {\r\n  //     const constructedData = {\r\n  //       points: requirementPoint.points,\r\n  //     };\r\n  //     const data = [...state?.requirements?.listingPoints, constructedData];\r\n  //     setState({\r\n  //       ...state,\r\n  //       requirements: {\r\n  //         ...state.requirements,\r\n  //         listingPoints: data,\r\n  //       },\r\n  //     });\r\n  //     setRequirementPoint({ ...initialRequirementPoints });\r\n  //   };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state?.role && state?.JobDescription) {\r\n      if (editData.isEdit) {\r\n        const storeDataEdit = props?.data?.props;\r\n        storeDataEdit.splice(editData.editIndex, 1, {\r\n          role: state?.role,\r\n          JobDescription: state?.JobDescription,\r\n        });\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: storeDataEdit,\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"careersComponent\", \"props\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: [...props?.data?.props, state],\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n\r\n        props.handleSubmit(getData, \"careersComponent\", \"props\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangeState = (data) => {\r\n    setState({\r\n      ...state,\r\n      JobDescription: data,\r\n    });\r\n  };\r\n\r\n  const handleCloseStores = () => {\r\n    setOpenBlog(false);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: content,\r\n    };\r\n    props.handleSubmit(getData, \"careersComponent\", \"props\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={data?.props}\r\n        handleEdit={handleEdit}\r\n        handleDelete={handleDelete}\r\n        handleViewStores={handleViewMore}\r\n        handleAddNew={handleClickOpen}\r\n        name={\"Careers Component\"}\r\n      />\r\n\r\n      {/* View More */}\r\n      <Dialog\r\n        // classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={openBlog}\r\n        onClose={handleCloseStores}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <div className={classes.dialogHeader}>\r\n            <div>Careers Inner Page</div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={handleCloseStores}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>Role :</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>{blog?.role}</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>Job Description :</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>\r\n              {blog?.JobDescription\r\n                ? parse(blog?.JobDescription)\r\n                : blog?.JobDescription}\r\n            </Typography>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Dialog open={open} onClose={handleClose} classes={{ paper: classes.dialogPaperMid }}>\r\n        <DialogTitle id=\"form-dialog-title\">View Career Details</DialogTitle>\r\n        <DialogContent>\r\n          {[state].map((val) => {\r\n            return (\r\n              <>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"role\"\r\n                  label=\"Role\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={val?.role}\r\n                  onChange={onChangeData}\r\n                  name=\"role\"\r\n                  required\r\n                />\r\n                <div className={classes.headerBottom}>\r\n                  <Typography>Job Description :</Typography>\r\n                </div>\r\n                <EditorConvertToHTML\r\n                  handleChangeState={handleChangeState}\r\n                  parentState={val?.JobDescription}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\nexport default CareersCMS;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst header = [\"S.No\", \"Banner Image\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"web\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\nconst initialState = {\r\n  web: \"\",\r\n};\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst CareerBannerCMS = (props) => {\r\n  const { data } = props;\r\n  const alert = useContext(AlertContext);\r\n  const classes = consolePagesStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState({ ...initialEdit });\r\n  const [state, setState] = React.useState({ ...initialState });\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, editIndex: rowIndex, isEdit: true });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.web) {\r\n      if (editData.isEdit) {\r\n        const editBanner = data?.props?.banners;\r\n        editBanner.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: editBanner,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"bannerComponent\", \"banners\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: [...data?.props?.banners, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"bannerComponent\", \"banners\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={data?.props?.banners}\r\n        handleEdit={handleEdit}\r\n        name={\"Career Banner Component\"}\r\n        noAddNew\r\n      />\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">View Banner</DialogTitle>\r\n        <DialogContent>\r\n          <Grid\r\n            item\r\n            style={{\r\n              margin: \"7px 0\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              style={{ display: \"none\" }}\r\n              id=\"img\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n            />\r\n            <label htmlFor=\"img\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                startIcon={<CloudUploadIcon />}\r\n              >\r\n                Banner Image\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n          {state?.web && (\r\n            <Grid item style={{ margin: \"7px 0\" }}>\r\n              <img\r\n                alt=\"nacimages\"\r\n                src={state?.web}\r\n                style={{ width: \"100%\", height: \"auto\" }}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\nexport default CareerBannerCMS;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Content\",\r\n    \"Action\",\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"TEXT\", name: \"content\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n    title: \"\",\r\n    content: \"\"\r\n}\r\n\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n}\r\n\r\n\r\nconst StyloriSilverCMS = (props) => {\r\n    const { data } = props\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [state, setState] = useState({ ...initialState })\r\n    const [arrData, setArrData] = useState()\r\n    const [editData, setEditData] = useState({ ...initialEdit })\r\n\r\n    useEffect(() => {\r\n        setArrData([data?.props])\r\n    }, [])\r\n\r\n\r\n    const onChangeData = (key, value) => {\r\n        setState({ ...state, [key]: value })\r\n    }\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true)\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex })\r\n        setState(rowData)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.title &&\r\n            state.content\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n\r\n        if (validate) {\r\n            const values = arrData;\r\n            values.splice(editData.editIndex, 1, state);\r\n            const getData = {\r\n                component: props?.data?.component,\r\n                props: values[0]\r\n            };\r\n            setOpen(false);\r\n            setState(initialState);\r\n            setEditData(initialEdit);\r\n\r\n            props.handleSubmit(getData, \"StyloriSilver\", \"props\");\r\n        }\r\n        else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <Paper>\r\n\r\n            <TableComp\r\n                header={header}\r\n                tableData={tableData}\r\n                data={arrData}\r\n                handleEdit={handleEdit}\r\n                name={\"Stylori Silver Component\"}\r\n                noAddNew\r\n            />\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"form-dialog-title\">Edit Stylori Silver Details</DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"title\"\r\n                                    label=\"Title\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('title', e.target.value)}\r\n                                    value={state?.title}\r\n                                    name=\"title\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"content\"\r\n                                    label=\"Content\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('content', e.target.value)}\r\n                                    value={state?.content}\r\n                                    name=\"content\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onsubmitvalue}>Add</Button>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    )\r\n}\r\nexport default StyloriSilverCMS","import React, { useState, useContext } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Image Card\",\r\n    \"Text\",\r\n    \"Url\",\r\n    \"Action\",\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"WEB_IMAGE\", name: \"image\" },\r\n    { type: \"TEXT\", name: \"text\" },\r\n    { type: \"TEXT\", name: \"url\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n    \"text\": \"\",\r\n    \"image\": \"\",\r\n    \"url\": \"\"\r\n}\r\n\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n}\r\n\r\nexport const StylesCard = (props) => {\r\n    const { data } = props\r\n\r\n \r\n    const classes = consolePagesStyles()\r\n    const [open, setOpen] = useState(false)\r\n    const [state, setState] = useState({ ...initialState })\r\n    const [editData, setEditData] = useState({ ...initialEdit })\r\n    const [index,setIndex] = useState()\r\n\r\n    useEffect(() => {\r\n        const index = props?.state?.indexOf(data);\r\n        setIndex(index)\r\n    },[])\r\n\r\n    const onChangeData = (key, value) => {\r\n        debugger\r\n        setState({ ...state, [key]: value })\r\n    }\r\n\r\n    const HandleImageUpload = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({ ...state, image: res?.data?.web })\r\n\r\n                }\r\n                alert.setSnack({\r\n                    open: true,\r\n                    severity: \"success\",\r\n                    msg: \"Image Uploaded Successfully\",\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true)\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex })\r\n        setState(rowData)\r\n    }\r\n\r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n        debugger\r\n        let getData = []\r\n        let card = data?.props?.cardContent\r\n        card.splice(rowIndex, 1)\r\n\r\n        getData = {\r\n            component: data?.component,\r\n            props: {\r\n                cardContent: card\r\n            },\r\n            type:\"styles\"\r\n        };\r\n        console.log(getData, \"getDatagetData\")\r\n        props.handleSubmit(getData, \"StylesCard\", \"cardContent\",index);\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setState(initialState)\r\n        setEditData(initialEdit)\r\n    }\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.image &&\r\n            state.text &&\r\n            state.url\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n\r\n        if (validate) {\r\n            if (editData.isEdit) {\r\n                const values = data?.props?.cardContent;\r\n                values.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: data?.component,\r\n                    props: {\r\n                        cardContent: values\r\n                    },\r\n                    type:\"styles\"\r\n                };\r\n                setOpen(false);\r\n                setState(initialState);\r\n                setEditData(initialEdit);\r\n                console.log(getData, \"EDITgetDatagetData\")\r\n                props.handleSubmit(getData, \"StylesCard\", \"cardContent\",index);\r\n            } else {\r\n                let getData = [];\r\n                getData = {\r\n                    component: data?.component,\r\n                    props: {\r\n                        cardContent: [...data?.props?.cardContent, state]\r\n                    },\r\n                    type:\"styles\"\r\n                };\r\n                setOpen(false);\r\n                setState(initialState);\r\n                setEditData(initialEdit);\r\n                props.handleSubmit(getData, \"StylesCard\", \"data\",index);\r\n\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n\r\n    };\r\n    return (\r\n        <Paper>\r\n\r\n            <TableComp\r\n                header={header}\r\n                tableData={tableData}\r\n                data={data?.props?.cardContent}\r\n                handleEdit={handleEdit}\r\n                handleDelete={handleDelete}\r\n\r\n                name={\"Styles Card Component\"}\r\n                handleAddNew={handleAddNew} \r\n            />\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"form-dialog-title\">Edit Styles Card Details</DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        <Grid container>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"text\"\r\n                                    label=\"Text\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('text', e.target.value)}\r\n                                    value={state?.text}\r\n                                    name=\"text\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"url\"\r\n                                    label=\"Url\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('url', e.target.value)}\r\n                                    value={state?.url}\r\n                                    name=\"url\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item\r\n                                style={{\r\n                                    margin: \"7px 0\", display: \"flex\",\r\n                                    justifyContent: \"center\", width: \"100%\"\r\n                                }}>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    className={classes.input}\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"containerImage\"\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                    onChange={(e) => HandleImageUpload(e.target.files[0], \"image\")}\r\n                                />\r\n                                <label htmlFor=\"containerImage\">\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        component=\"span\"\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                    >Card Image\r\n                                    </Button>\r\n                                </label>\r\n                            </Grid>\r\n                            {state?.image && (\r\n                                <Grid item style={{ margin: \"7px 0\" }}>\r\n                                    <img\r\n                                        alt=\"nacimages\"\r\n                                        src={state?.image}\r\n                                        style={{ width: \"100%\", height: \"auto\" }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onsubmitvalue}>Add</Button>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    )\r\n}","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"title\", \"Description\", \"Action\"];\r\nconst storeheader = [\"S.No\", \"Image\", \"title\", \"Description\", \"Url\", \"Action\"];\r\nconst StoretableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"subText\" },\r\n  { type: \"TEXT\", name: \"button_Text\",width:\"400px\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"subText\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  background_Image: \"\",\r\n  title: \"\",\r\n  image: \"\",\r\n  subText: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nexport const SilverYarnsCMS = (props) => {\r\n  const { data } = props;\r\n\r\n  const classes = consolePagesStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [state, setState] = useState({ ...initialState });\r\n  const [arrData, setArrData] = useState();\r\n  const [editData, setEditData] = useState({ ...initialEdit });\r\n  const [index, setIndex] = useState();\r\n  console.log(\"arrData\", arrData);\r\n\r\n  useEffect(() => {\r\n    setArrData([data?.props]);\r\n    const index = props?.state?.indexOf(data);\r\n    setIndex(index);\r\n  }, []);\r\n\r\n  const onChangeData = (key, value) => {\r\n    setState({ ...state, [key]: value });\r\n  };\r\n\r\n  const HandleImageUpload = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({ ...state, image: res?.data?.web });\r\n        }\r\n        alert.setSnack({\r\n          open: true,\r\n          severity: \"success\",\r\n          msg: \"Image Uploaded Successfully\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    let card = data?.props?.cardContent;\r\n    card.splice(rowIndex, 1);\r\n\r\n    getData = {\r\n      component: data?.component,\r\n      props: {\r\n        cardContent: card,\r\n      },\r\n    };\r\n    console.log(getData, \"getDatagetData\");\r\n    props.handleSubmit(getData, \"StyloriCard\", \"cardContent\", index);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const validate = () => {\r\n    if (state.image && state.title && state.subText) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate) {\r\n      const values = arrData;\r\n      values.splice(editData.editIndex, 1, state);\r\n      const getData = {\r\n        component: data?.component,\r\n        props: values[0],\r\n      };\r\n      setOpen(false);\r\n      setState(initialState);\r\n      setEditData(initialEdit);\r\n      console.log(getData, \"EDITgetDatagetData\");\r\n      props.handleSubmit(getData, \"StyloriCard\", \"props\", index);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Paper>\r\n      <TableComp\r\n        header={data?.component === \"StyloriYarns\" ? header : storeheader}\r\n        tableData={\r\n          data?.component === \"StyloriYarns\" ? tableData : StoretableData\r\n        }\r\n        data={arrData}\r\n        handleEdit={handleEdit}\r\n        handleDelete={handleDelete}\r\n        noAddNew\r\n        name={`${data?.component} Component`}\r\n      />\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">{`Edit ${data?.component} Details`}</DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            <Grid container>\r\n              <Grid Item xs={12}>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"title\"\r\n                  label=\"title\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onChange={(e) => onChangeData(\"title\", e.target.value)}\r\n                  value={state?.title}\r\n                  name=\"title\"\r\n                  required\r\n                  style={{ margin: \"7px 0\" }}\r\n                />\r\n              </Grid>\r\n              {data?.component !== \"StyloriYarns\" && (\r\n                <Grid Item xs={12}>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"button_Text\"\r\n                    label=\"URL\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={(e) =>\r\n                      onChangeData(\"button_Text\", e.target.value)\r\n                    }\r\n                    value={state?.button_Text}\r\n                    name=\"button_Text\"\r\n                    required\r\n                    style={{ margin: \"7px 0\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              <Grid Item xs={12}>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"subText\"\r\n                  label=\"subText\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onChange={(e) => onChangeData(\"subText\", e.target.value)}\r\n                  value={state?.subText}\r\n                  name=\"subText\"\r\n                  required\r\n                  style={{ margin: \"7px 0\" }}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  margin: \"7px 0\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"containerImage\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    HandleImageUpload(e.target.files[0], \"image\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"containerImage\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Card Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state?.image && (\r\n                <Grid item style={{ margin: \"7px 0\" }}>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state?.image}\r\n                    style={{ width: \"100%\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Subtitle\",\r\n    \"URL\",\r\n    \"Action\",\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"title_Text\" },\r\n    { type: \"TEXT\", name: \"sub_Text\" },\r\n    { type: \"TEXT\", name: \"url\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n}\r\n\r\n\r\nexport const StyloriSilverTitleCMS = (props) => {\r\n    const { data } = props\r\n\r\n    const classes = consolePagesStyles()\r\n    const [open, setOpen] = useState(false)\r\n    const [state, setState] = useState({\r\n        title_Text: \"\",\r\n        sub_Text: \"\",\r\n        url:\"\"\r\n    })\r\n    const [index,setIndex] = useState()\r\n    const [arrData, setArrData] = useState()\r\n    const [editData, setEditData] = useState({ ...initialEdit })\r\n\r\n    useEffect(() => {\r\n        setArrData([data?.props]);\r\n        const index = props?.state?.indexOf(data);\r\n        setIndex(index)\r\n    }, [])\r\n\r\n\r\n    const onChangeData = (key, value) => {\r\n        setState({ ...state, [key]: value })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true)\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex })\r\n        setState(rowData)\r\n    }\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.title_Text &&\r\n            state.sub_Text\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validate) {\r\n            debugger\r\n            const values = arrData;\r\n            values.splice(editData.editIndex, 1, state);\r\n            let getData = [];\r\n            getData = {\r\n                component: data?.component,\r\n                props: {\r\n                    title_Text: state.title_Text,\r\n                    sub_Text: state.sub_Text,\r\n                    url: state.url\r\n                }\r\n            };\r\n            setOpen(false);\r\n            setEditData(initialEdit);\r\n            props.handleSubmit(getData, \"StyloriTitle\", \"props\",index);\r\n        }\r\n        else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <Paper>\r\n\r\n            <TableComp\r\n                header={header}\r\n                tableData={tableData}\r\n                data={arrData}\r\n                handleEdit={handleEdit}\r\n                noAddNew\r\n                name={\"Stylori Silver Title Component\"}\r\n            />\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"form-dialog-title\">Edit Stylori Silver Title</DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        <Grid container>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"title_Text\"\r\n                                    label=\"Title\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('title_Text', e.target.value)}\r\n                                    value={state?.title_Text}\r\n                                    name=\"title_Text\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"sub_Text\"\r\n                                    label=\"Text\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('sub_Text', e.target.value)}\r\n                                    value={state?.sub_Text}\r\n                                    name=\"sub_Text\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"url\"\r\n                                    label=\"URL\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('url', e.target.value)}\r\n                                    value={state?.url}\r\n                                    name=\"url\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onsubmitvalue}>Add</Button>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\n\r\n\r\nconst initialState = {\r\n    text: \"\",\r\n    writer: \"\",\r\n    url: \"\"\r\n}\r\n\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n}\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Writer\",\r\n    \"Saying\",\r\n    \"Action\",\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"writer\" },\r\n    { type: \"TEXT\", name: \"text\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nexport const TestimonialCMS = (props) => {\r\n\r\n    const { data } = props\r\n\r\n    const classes = consolePagesStyles()\r\n    const [open, setOpen] = useState(false)\r\n    const [state, setState] = useState({ ...initialState })\r\n    const [editData, setEditData] = useState({ ...initialEdit })\r\n\r\n\r\n    const onChangeData = (key, value) => {\r\n        setState({ ...state, [key]: value })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setState(initialState)\r\n        setEditData(initialEdit)\r\n    }\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        // debugger\r\n        setOpen(true)\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex })\r\n        setState(rowData)\r\n    }\r\n\r\n\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.writer &&\r\n            state.text &&\r\n            state.url\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validate) {\r\n            debugger\r\n            if (editData.isEdit) {\r\n                const values = data?.props?.cardContent;\r\n                values.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: data?.component,\r\n                    props: {\r\n                        cardContent: values\r\n                    }\r\n                };\r\n                setOpen(false);\r\n                setEditData(initialEdit);\r\n                props.handleSubmit(getData, \"TestimonialSlider\", \"props\");\r\n            } else {\r\n                let getData = [];\r\n                getData = {\r\n                    component: data?.component,\r\n                    props: {\r\n                        cardContent: [...data?.props?.cardContent, state]\r\n                    }\r\n                };\r\n                setOpen(false);\r\n                setState(initialState)\r\n                setEditData(initialEdit);\r\n                props.handleSubmit(getData, \"TestimonialSlider\", \"props\");\r\n            }\r\n        }\r\n        else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n\r\n    };\r\n    const handleAddNew = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n        const values = data?.props?.cardContent;\r\n        values.splice(rowIndex, 1);\r\n        let getData = [];\r\n        getData = {\r\n            component: data?.component,\r\n            props: {\r\n                cardContent: values\r\n            }\r\n        };\r\n        props.handleSubmit(getData, \"TestimonialSlider\", \"props\");\r\n    }\r\n    return (\r\n        <Paper>\r\n\r\n            <TableComp\r\n                header={header}\r\n                tableData={tableData}\r\n                data={data?.props?.cardContent}\r\n                handleDelete={handleDelete}\r\n                handleEdit={handleEdit}\r\n                handleAddNew={handleAddNew}\r\n                name={\"Stylori Testimonial Component\"}\r\n            />\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"form-dialog-title\">Edit Stylori Silver Testimonial Details</DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        <Grid container>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"text\"\r\n                                    label=\"Saying\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('text', e.target.value)}\r\n                                    value={state?.text}\r\n                                    name=\"text\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"writer\"\r\n                                    label=\"Writer\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('writer', e.target.value)}\r\n                                    value={state?.writer}\r\n                                    name=\"writer\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"url\"\r\n                                    label=\"Url\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('url', e.target.value)}\r\n                                    value={state?.url}\r\n                                    name=\"url\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onsubmitvalue}>Add</Button>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    )\r\n}","import React, { useState, useContext } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Image\",\r\n    \"Text\",\r\n    \"Price\",\r\n    \"URL\",\r\n    \"Action\",\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"WEB_IMAGE\", name: \"image\" },\r\n    { type: \"TEXT\", name: \"bottomText\" },\r\n    { type: \"TEXT\", name: \"price\" },\r\n    { type: \"TEXT\", name: \"url\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n    \"bottomText\": \"\",\r\n    \"image\": \"\",\r\n    \"price\": \"\",\r\n    \"url\": \"\",\r\n\r\n}\r\n\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n}\r\n\r\nexport const StylesCardPrice = (props) => {\r\n    const { data } = props\r\n\r\n\r\n    const classes = consolePagesStyles()\r\n    const [open, setOpen] = useState(false)\r\n    const [state, setState] = useState({ ...initialState })\r\n    const [editData, setEditData] = useState({ ...initialEdit })\r\n    const [index, setIndex] = React.useState();\r\n\r\n    useEffect(() => {\r\n      const index = props?.state?.indexOf(props?.data);\r\n      setIndex(index);\r\n    },[]);\r\n\r\n    const onChangeData = (key, value) => {\r\n        debugger\r\n        setState({ ...state, [key]: value })\r\n    }\r\n\r\n    const HandleImageUpload = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({ ...state, image: res?.data?.web })\r\n\r\n                }\r\n                alert.setSnack({\r\n                    open: true,\r\n                    severity: \"success\",\r\n                    msg: \"Image Uploaded Successfully\",\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true)\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex })\r\n        setState(rowData)\r\n    }\r\n\r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n        debugger\r\n        let getData = []\r\n        let card = data?.props?.cardContent\r\n        card.splice(rowIndex, 1)\r\n\r\n        getData = {\r\n            component: data?.component,\r\n            props: {\r\n                cardContent: card\r\n            }\r\n        };\r\n        console.log(getData, \"getDatagetData\")\r\n        props.handleSubmit(getData, \"StyloriCardPrice\", \"cardContent\",index);\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setState(initialState)\r\n        setEditData(initialEdit)\r\n    }\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.image &&\r\n            state.text &&\r\n            state.url\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n\r\n        if (validate) {\r\n            if (editData.isEdit) {\r\n                const values = data?.props?.cardContent;\r\n                values.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: data?.component,\r\n                    props: {\r\n                        cardContent: values\r\n                    }\r\n                };\r\n                setOpen(false);\r\n                setState(initialState);\r\n                setEditData(initialEdit);\r\n                props.handleSubmit(getData, \"StyloriCardPrice\", \"cardContent\",index);\r\n            } else {\r\n                debugger\r\n                let getData = [];\r\n                getData = {\r\n                    component: data?.component,\r\n                    props: {\r\n                        cardContent: [...data?.props?.cardContent, state]\r\n                    }\r\n                };\r\n                setOpen(false);\r\n                setState(initialState);\r\n                setEditData(initialEdit);\r\n\r\n                props.handleSubmit(getData, \"StyloriCardPrice\", \"data\",index);\r\n\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n\r\n    };\r\n    return (\r\n        <Paper>\r\n\r\n            <TableComp\r\n                header={header}\r\n                tableData={tableData}\r\n                data={data?.props?.cardContent}\r\n                handleEdit={handleEdit}\r\n                handleDelete={handleDelete}\r\n\r\n                name={\"Price Card Component\"}\r\n                handleAddNew={handleAddNew}\r\n            />\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"form-dialog-title\">Edit Price Card Details</DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        <Grid container>\r\n                            <Grid item xs={12}\r\n                                style={{\r\n                                    margin: \"7px 0\", display: \"flex\",\r\n                                    justifyContent: \"center\", width: \"100%\"\r\n                                }}>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    className={classes.input}\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"containerImage\"\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                    onChange={(e) => HandleImageUpload(e.target.files[0], \"image\")}\r\n                                />\r\n                                <label htmlFor=\"containerImage\">\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        component=\"span\"\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                    >Card Image\r\n                                    </Button>\r\n                                </label>\r\n                            </Grid>\r\n                            {state?.image && (\r\n                                <Grid item style={{ margin: \"7px 0\" }}>\r\n                                    <img\r\n                                        alt=\"nacimages\"\r\n                                        src={state?.image}\r\n                                        style={{ width: \"100%\", height: \"auto\" }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"bottomText\"\r\n                                    label=\"Text\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('bottomText', e.target.value)}\r\n                                    value={state?.bottomText}\r\n                                    name=\"bottomText\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"url\"\r\n                                    label=\"Url\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('url', e.target.value)}\r\n                                    value={state?.url}\r\n                                    name=\"url\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"price\"\r\n                                    label=\"Price\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('price', e.target.value)}\r\n                                    value={state?.price}\r\n                                    name=\"price\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onsubmitvalue}>Add</Button>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    )\r\n}","import React, { useState, useContext } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Image Card\",\r\n    \"Action\",\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"url\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n    \"image\": \"\",\r\n    \"url\": \"\"\r\n}\r\n\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n}\r\n\r\nexport const InstaCardCMS = (props) => {\r\n    const { data } = props\r\n\r\n\r\n    const classes = consolePagesStyles()\r\n    const [open, setOpen] = useState(false)\r\n    const [state, setState] = useState({ ...initialState })\r\n    const [editData, setEditData] = useState({ ...initialEdit })\r\n\r\n    const onChangeData = (key, value) => {\r\n        debugger\r\n        setState({ ...state, [key]: value })\r\n    }\r\n\r\n    const HandleImageUpload = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({ ...state, image: res?.data?.web })\r\n\r\n                }\r\n                alert.setSnack({\r\n                    open: true,\r\n                    severity: \"success\",\r\n                    msg: \"Image Uploaded Successfully\",\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true)\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex })\r\n        setState(rowData)\r\n    }\r\n\r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n        debugger\r\n        let getData = []\r\n        let card = data?.props?.cardContent\r\n        card.splice(rowIndex, 1)\r\n\r\n        getData = {\r\n            component: data?.component,\r\n            props: {\r\n                cardContent: card\r\n            }\r\n        };\r\n        props.handleSubmit(getData, \"InstagramPost\", \"cardContent\");\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setState(initialState)\r\n        setEditData(initialEdit)\r\n    }\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.image &&\r\n            state.text &&\r\n            state.url\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n\r\n        if (validate) {\r\n            if (editData.isEdit) {\r\n                const values = data?.props?.cardContent;\r\n                values.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: data?.component,\r\n                    props: {\r\n                        cardContent: values\r\n                    }\r\n                };\r\n                setOpen(false);\r\n                setState(initialState);\r\n                setEditData(initialEdit);\r\n                props.handleSubmit(getData, \"InstagramPost\", \"cardContent\");\r\n            } else {\r\n                debugger\r\n                let getData = [];\r\n                getData = {\r\n                    component: data?.component,\r\n                    props: {\r\n                        cardContent: [...data?.props?.cardContent, state]\r\n                    }\r\n                };\r\n                setOpen(false);\r\n                setState(initialState);\r\n                setEditData(initialEdit);\r\n                console.log(getData, \"ADDgetDatagetData\")\r\n\r\n                props.handleSubmit(getData, \"InstagramPost\", \"data\");\r\n\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n\r\n    };\r\n    return (\r\n        <Paper>\r\n\r\n            <TableComp\r\n                header={header}\r\n                tableData={tableData}\r\n                data={data?.props?.cardContent}\r\n                handleEdit={handleEdit}\r\n                handleDelete={handleDelete}\r\n\r\n                name={\"Instagram Card Component\"}\r\n                handleAddNew={handleAddNew}\r\n            />\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"form-dialog-title\">Edit Instagram Card Details</DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        <Grid container>\r\n                            <Grid Item xs={12}>\r\n                            </Grid>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"url\"\r\n                                    label=\"Url\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('url', e.target.value)}\r\n                                    value={state?.url}\r\n                                    name=\"url\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                            {/* <Grid item\r\n                                style={{\r\n                                    margin: \"7px 0\", display: \"flex\",\r\n                                    justifyContent: \"center\", width: \"100%\"\r\n                                }}>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    className={classes.input}\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"containerImage\"\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                    onChange={(e) => HandleImageUpload(e.target.files[0], \"image\")}\r\n                                />\r\n                                <label htmlFor=\"containerImage\">\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        component=\"span\"\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                    >Card Image\r\n                                    </Button>\r\n                                </label>\r\n                            </Grid>\r\n                            {state?.image && (\r\n                                <Grid item style={{ margin: \"7px 0\" }}>\r\n                                    <img\r\n                                        alt=\"nacimages\"\r\n                                        src={state?.image}\r\n                                        style={{ width: \"100%\", height: \"auto\" }}\r\n                                    />\r\n                                </Grid>\r\n                            )} */}\r\n                        </Grid>\r\n\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onsubmitvalue}>Add</Button>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    )\r\n}","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport parse from \"html-react-parser\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"View\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"VIEW_DETAILS\", name: \"\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  description: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n  isView: false,\r\n};\r\n\r\nconst CareerHeaderCMS = (props) => {\r\n  const { data } = props;\r\n\r\n  const alert = useContext(AlertContext);\r\n\r\n  const classes = consolePagesStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [openBlog, setOpenBlog] = useState(false);\r\n  const [blog, setBlog] = useState([]);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState({ ...initialEdit });\r\n\r\n  const handleViewMore = (e, rowData, rowIndex) => {\r\n    setOpenBlog(true);\r\n    setBlog(rowData);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state?.title && state?.description) {\r\n      if (editData.isEdit) {\r\n        const storeDataEdit = props?.data?.props;\r\n        storeDataEdit.splice(editData.editIndex, 1, {\r\n          title: state?.title,\r\n          description: state?.description,\r\n        });\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: storeDataEdit,\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n\r\n        props.handleSubmit(getData, \"careerHeader\", \"props\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: [...props?.data?.props, state],\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"careerHeader\", \"props\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangeState = (data) => {\r\n    setState({\r\n      ...state,\r\n      description: data,\r\n    });\r\n  };\r\n\r\n  const handleCloseStores = () => {\r\n    setOpenBlog(false);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: content,\r\n    };\r\n    props.handleSubmit(getData, \"careerHeader\", \"props\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={data?.props}\r\n        handleEdit={handleEdit}\r\n        handleDelete={handleDelete}\r\n        handleViewStores={handleViewMore}\r\n        handleAddNew={handleClickOpen}\r\n        name={\"Careers Header Component\"}\r\n      />\r\n\r\n      {/* View More */}\r\n      <Dialog fullWidth open={openBlog} onClose={handleCloseStores}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <div className={classes.dialogHeader}>\r\n            <div>Careers Header Inner Page</div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={handleCloseStores}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>Role :</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>{blog?.title}</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>Job Description :</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>\r\n              {blog?.description ? parse(blog?.description) : blog?.description}\r\n            </Typography>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Dialog open={open} onClose={handleClose} classes={{ paper: classes.dialogPaperMid }}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          View Career Header Details\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {[state].map((val) => {\r\n            return (\r\n              <>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"title\"\r\n                  label=\"Title\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={val?.title}\r\n                  onChange={onChangeData}\r\n                  name=\"title\"\r\n                  required\r\n                />\r\n                <div className={classes.headerBottom}>\r\n                  <Typography>Description :</Typography>\r\n                </div>\r\n                <EditorConvertToHTML\r\n                  handleChangeState={handleChangeState}\r\n                  parentState={val?.description}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\nexport default CareerHeaderCMS;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport parse from \"html-react-parser\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst header = [\"S.No\", \"Heading\", \"View\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"role\" },\r\n  { type: \"VIEW_DETAILS\", name: \"\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  role: \"\",\r\n  JobDescription: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n  isView: false,\r\n};\r\n\r\nconst FaqCMS = (props) => {\r\n  const { data } = props;\r\n\r\n  const alert = useContext(AlertContext);\r\n\r\n  const classes = consolePagesStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [openBlog, setOpenBlog] = useState(false);\r\n  const [blog, setBlog] = useState([]);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState({ ...initialEdit });\r\n\r\n  const handleViewMore = (e, rowData, rowIndex) => {\r\n    setOpenBlog(true);\r\n    setBlog(rowData);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state?.role && state?.JobDescription) {\r\n      if (editData.isEdit) {\r\n        const storeDataEdit = props?.data?.props;\r\n        storeDataEdit.splice(editData.editIndex, 1, {\r\n          role: state?.role,\r\n          JobDescription: state?.JobDescription,\r\n        });\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: storeDataEdit,\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"faqComponent\", \"props\");\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: [...props?.data?.props, state],\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n\r\n        props.handleSubmit(getData, \"faqComponent\", \"props\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangeState = (data) => {\r\n    setState({\r\n      ...state,\r\n      JobDescription: data,\r\n    });\r\n  };\r\n\r\n  const handleCloseStores = () => {\r\n    setOpenBlog(false);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: content,\r\n    };\r\n    props.handleSubmit(getData, \"faqComponent\", \"props\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={data?.props}\r\n        handleEdit={handleEdit}\r\n        handleDelete={handleDelete}\r\n        handleViewStores={handleViewMore}\r\n        handleAddNew={handleClickOpen}\r\n        name={\"Careers Component\"}\r\n      />\r\n\r\n      {/* View More */}\r\n      <Dialog\r\n        // classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={openBlog}\r\n        onClose={handleCloseStores}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <div className={classes.dialogHeader}>\r\n            <div>Careers Inner Page</div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={handleCloseStores}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>Role :</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>{blog?.role}</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>Job Description :</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>\r\n              {blog?.JobDescription\r\n                ? parse(blog?.JobDescription)\r\n                : blog?.JobDescription}\r\n            </Typography>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Dialog open={open} onClose={handleClose} classes={{ paper: classes.dialogPaperMid }}>\r\n        <DialogTitle id=\"form-dialog-title\">View Career Details</DialogTitle>\r\n        <DialogContent>\r\n          {[state].map((val) => {\r\n            return (\r\n              <>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"role\"\r\n                  label=\"Role\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={val?.role}\r\n                  onChange={onChangeData}\r\n                  name=\"role\"\r\n                  required\r\n                />\r\n                <div className={classes.headerBottom}>\r\n                  <Typography>Job Description :</Typography>\r\n                </div>\r\n                <EditorConvertToHTML\r\n                  handleChangeState={handleChangeState}\r\n                  parentState={val?.JobDescription}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\nexport default FaqCMS;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Action\",\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"title_Text\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n}\r\n\r\n\r\nexport const FaqTitleCMS = (props) => {\r\n    const { data } = props\r\n\r\n    const classes = consolePagesStyles()\r\n    const [open, setOpen] = useState(false)\r\n    const [state, setState] = useState({\r\n        title_Text: \"\",\r\n        sub_Text: \"\",\r\n    })\r\n    const [index,setIndex] = useState()\r\n    const [arrData, setArrData] = useState()\r\n    const [editData, setEditData] = useState({ ...initialEdit })\r\n\r\n    useEffect(() => {\r\n        setArrData([data?.props]);\r\n        const index = props?.state?.indexOf(data);\r\n        setIndex(index)\r\n    }, [])\r\n\r\n\r\n    const onChangeData = (key, value) => {\r\n        setState({ ...state, [key]: value })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true)\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex })\r\n        setState(rowData)\r\n    }\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.title_Text &&\r\n            state.sub_Text\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validate) {\r\n            debugger\r\n            const values = arrData;\r\n            values.splice(editData.editIndex, 1, state);\r\n            let getData = [];\r\n            getData = {\r\n                component: data?.component,\r\n                props: {\r\n                    title_Text: state.title_Text,\r\n                    sub_Text: state.sub_Text\r\n                }\r\n            };\r\n            setOpen(false);\r\n            setEditData(initialEdit);\r\n            props.handleSubmit(getData, \"faqTitle\", \"props\",index);\r\n        }\r\n        else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <Paper>\r\n\r\n            <TableComp\r\n                header={header}\r\n                tableData={tableData}\r\n                data={arrData}\r\n                handleEdit={handleEdit}\r\n                noAddNew\r\n                name={\"Stylori Silver Title Component\"}\r\n            />\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"form-dialog-title\">Edit Stylori Silver Title</DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        <Grid container>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"title_Text\"\r\n                                    label=\"Title\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('title_Text', e.target.value)}\r\n                                    value={state?.title_Text}\r\n                                    name=\"title_Text\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onsubmitvalue}>Add</Button>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    )\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Text\",\r\n    \"Action\",\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"text\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n    \"text\": \"\",\r\n    \"image\": \"\",\r\n    \"url\": \"\"\r\n}\r\n\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n}\r\n\r\nexport const HomeNotificationCMS = (props) => {\r\n    const { data } = props\r\n\r\n \r\n    const classes = consolePagesStyles()\r\n    const [open, setOpen] = useState(false)\r\n    const [state, setState] = useState({ ...initialState })\r\n    const [editData, setEditData] = useState({ ...initialEdit })\r\n    const [index,setIndex] = useState()\r\n\r\n    useEffect(() => {\r\n        const index = props?.state?.indexOf(data);\r\n        setIndex(index)\r\n    },[])\r\n\r\n    const onChangeData = (key, value) => {\r\n        debugger\r\n        setState({ ...state, [key]: value })\r\n    }\r\n\r\n    const HandleImageUpload = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({ ...state, image: res?.data?.web })\r\n\r\n                }\r\n                alert.setSnack({\r\n                    open: true,\r\n                    severity: \"success\",\r\n                    msg: \"Image Uploaded Successfully\",\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true)\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex })\r\n        setState(rowData)\r\n    }\r\n\r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n        debugger\r\n        let getData = []\r\n        let card = data?.props?.cardContent\r\n        card.splice(rowIndex, 1)\r\n\r\n        getData = {\r\n            component: data?.component,\r\n            props: {\r\n                cardContent: card\r\n            }\r\n        };\r\n        console.log(getData, \"getDatagetData\")\r\n        props.handleSubmit(getData, \"HomeNotifiaction\", \"cardContent\",index);\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setState(initialState)\r\n        setEditData(initialEdit)\r\n    }\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.image &&\r\n            state.text &&\r\n            state.url\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n\r\n        if (validate) {\r\n            if (editData.isEdit) {\r\n                const values = data?.props?.cardContent;\r\n                values.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: data?.component,\r\n                    props: {\r\n                        cardContent: values\r\n                    }\r\n                };\r\n                setOpen(false);\r\n                setState(initialState);\r\n                setEditData(initialEdit);\r\n                console.log(getData, \"EDITgetDatagetData\")\r\n                props.handleSubmit(getData, \"HomeNotifiaction\", \"cardContent\",index);\r\n            } else {\r\n                debugger\r\n                let getData = [];\r\n                getData = {\r\n                    component: data?.component,\r\n                    props: {\r\n                        cardContent: [...data?.props?.cardContent, state]\r\n                    }\r\n                };\r\n                setOpen(false);\r\n                setState(initialState);\r\n                setEditData(initialEdit);\r\n                console.log(getData, \"ADDgetDatagetData\")\r\n\r\n                props.handleSubmit(getData, \"HomeNotifiaction\", \"data\",index);\r\n\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n\r\n    };\r\n    return (\r\n        <Paper>\r\n\r\n            <TableComp\r\n                header={header}\r\n                tableData={tableData}\r\n                data={data?.props?.cardContent}\r\n                handleEdit={handleEdit}\r\n                handleDelete={handleDelete}\r\n\r\n                name={\"Notification Component\"}\r\n                handleAddNew={handleAddNew}\r\n            />\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"form-dialog-title\">Edit Home Notification</DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        <Grid container>\r\n                            <Grid Item xs={12}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"text\"\r\n                                    label=\"Text\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => onChangeData('text', e.target.value)}\r\n                                    value={state?.text}\r\n                                    name=\"text\"\r\n                                    required\r\n                                    style={{ margin: \"7px 0\" }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onsubmitvalue}>Add</Button>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    )\r\n}","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport parse from \"html-react-parser\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst header = [\"S.No\", \"Header\", \"Heading\", \"View\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"header\" },\r\n  { type: \"TEXT\", name: \"role\" },\r\n  { type: \"VIEW_DETAILS\", name: \"\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  header: \"\",\r\n  role: \"\",\r\n  JobDescription: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n  isView: false,\r\n};\r\n\r\nconst FaqSCMS = (props) => {\r\n  const { data } = props;\r\n\r\n  const alert = useContext(AlertContext);\r\n\r\n  const classes = consolePagesStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [openBlog, setOpenBlog] = useState(false);\r\n  const [blog, setBlog] = useState([]);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState({ ...initialEdit });\r\n\r\n  const handleViewMore = (e, rowData, rowIndex) => {\r\n    setOpenBlog(true);\r\n    setBlog(rowData);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state?.role && state?.JobDescription) {\r\n      if (editData.isEdit) {\r\n        const storeDataEdit = props?.data?.props;\r\n        storeDataEdit.splice(editData.editIndex, 1, {\r\n            header:state?.header,\r\n          role: state?.role,\r\n          JobDescription: state?.JobDescription,\r\n        });\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: storeDataEdit,\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"faqComponents\", \"props\");\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: [...props?.data?.props, state],\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n\r\n        props.handleSubmit(getData, \"faqComponents\", \"props\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangeState = (data) => {\r\n    setState({\r\n      ...state,\r\n      JobDescription: data,\r\n    });\r\n  };\r\n\r\n  const handleCloseStores = () => {\r\n    setOpenBlog(false);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: content,\r\n    };\r\n    props.handleSubmit(getData, \"faqComponents\", \"props\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={data?.props}\r\n        handleEdit={handleEdit}\r\n        hasChild={true}\r\n        handleDelete={handleDelete}\r\n        handleViewStores={handleViewMore}\r\n        handleAddNew={handleClickOpen}\r\n        name={\"Careers Component\"}\r\n      />\r\n\r\n      {/* View More */}\r\n      <Dialog\r\n        // classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={openBlog}\r\n        onClose={handleCloseStores}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <div className={classes.dialogHeader}>\r\n            <div>Careers Inner Page</div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={handleCloseStores}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>Role :</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>{blog?.role}</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>Job Description :</Typography>\r\n          </div>\r\n          <div className={classes.innerDialog}>\r\n            <Typography>\r\n              {blog?.JobDescription\r\n                ? parse(blog?.JobDescription)\r\n                : blog?.JobDescription}\r\n            </Typography>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">View FAQ Details</DialogTitle>\r\n        <DialogContent>\r\n          {[state].map((val) => {\r\n            return (\r\n              <>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"role\"\r\n                  label=\"Role\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={val?.role}\r\n                  onChange={onChangeData}\r\n                  name=\"role\"\r\n                  required\r\n                />\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"header\"\r\n                  label=\"Header\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={val?.header}\r\n                  onChange={onChangeData}\r\n                  name=\"header\"\r\n                  required\r\n                />\r\n                <div className={classes.headerBottom}>\r\n                  <Typography>Job Description :</Typography>\r\n                </div>\r\n                <EditorConvertToHTML\r\n                  handleChangeState={handleChangeState}\r\n                  parentState={val?.JobDescription}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\nexport default FaqSCMS;\r\n","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nexport const DatePickerComp = (props) => {\r\n  console.log(props?.value , \"ll\")\r\n  return (\r\n    <DatePicker selected={props?.value ? new Date(props?.value):null} onChange={(date) => props?.onChange(date)} />\r\n  );\r\n};","import {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport TableComp from \"../../../components/table/tableComp\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n// import TableHeaderComp from \"./TableHeadComp\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport moment from \"moment\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport {DatePickerComp} from \"../../../components/datePickerComp\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Image\",\r\n  \"Header\",\r\n  \"Header Bottom\",\r\n  \"Heading Text\",\r\n  \"Content\",\r\n  \"Date\",\r\n  \"Button Text\",\r\n  \"View More\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"TEXT\", name: \"header\" },\r\n  { type: \"HTMLTEXT\", name: \"header_Bottom\" },\r\n  { type: \"TEXT\", name: \"heading\" },\r\n  { type: \"TEXT\", name: \"content\" },\r\n  { type: \"DATE_PICKER\", name: \"date\" },\r\n  { type: \"TEXT\", name: \"bottomText\" },\r\n  { type: \"VIEW_STORES\", name: \"blogs\", customName: \"View Details\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst options = [\"Left\", \"Right\"];\r\n\r\nconst initialBlogDetails = {\r\n  image: \"\",\r\n  header: \"\",\r\n  header_Bottom: \"\",\r\n  heading: \"\",\r\n  content: \"\",\r\n  date: new Date(),\r\n  bottomText: \"\",\r\n  description_1: \"\",\r\n  description_2: \"\",\r\n  description_3: \"\",\r\n  end_Text: \"\",\r\n  third_Image: {\r\n    align: \"\",\r\n    image: \"\",\r\n  },\r\n  second_Image: {\r\n    banners: [],\r\n  },\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nfunction BlogPageCMS(props) {\r\n  const classes = consolePagesStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [openBlog, setOpenBlog] = useState(false);\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [addBlogsOpens, setAddBlogs] = useState(false);\r\n  const [state, setState] = useState({\r\n    blogs: [],\r\n  });\r\n\r\n  const [blogState, setBlogState] = useState({ ...initialBlogDetails });\r\n  const [editData, setEditData] = useState(initialEdit);\r\n\r\n  const handleViewMore = (e, data, index) => {\r\n    setOpenBlog(true);\r\n    setBlogs(data);\r\n  };\r\n\r\n  const handleCloseStores = () => {\r\n    setOpenBlog(false);\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setAddBlogs(true);\r\n  };\r\n\r\n  const handleAddNewStoresClose = () => {\r\n    setAddBlogs(false);\r\n    setEditData(initialEdit);\r\n    setBlogState(initialBlogDetails);\r\n  };\r\n\r\n  const onChangeStoreData = (event) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name, i) => {\r\n    debugger;\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        console.log(res?.data, \"ll\");\r\n        if (res?.data?.web) {\r\n          if (name === \"banners\") {\r\n            setBlogState({\r\n              ...blogState,\r\n              second_Image: {\r\n                banners: [\r\n                  ...blogState?.second_Image?.banners,\r\n                  {\r\n                    position: blogState?.second_Image?.banners.length,\r\n                    url: \"\",\r\n                    urlParam: \"\",\r\n                    web: res?.data?.web,\r\n                    mobile: res?.data?.web,\r\n                  },\r\n                ],\r\n              },\r\n            });\r\n          } else if (name === \"third_Image\") {\r\n            setBlogState({\r\n              ...blogState,\r\n              third_Image: {\r\n                ...blogState?.third_Image,\r\n                image: res?.data?.web,\r\n              },\r\n            });\r\n          } else if (name === \"editBanners\") {\r\n            debugger;\r\n            const newBanner = {\r\n              position: i + 1,\r\n              url: \"\",\r\n              urlParam: \"\",\r\n              web: res?.data?.web,\r\n              mobile: res?.data?.web,\r\n            };\r\n            const editBanners = [...blogState?.second_Image?.banners];\r\n            editBanners.splice(i, 1, newBanner);\r\n            setBlogState({\r\n              ...blogState,\r\n              second_Image: {\r\n                banners: editBanners,\r\n              },\r\n            });\r\n          } else {\r\n            setBlogState({\r\n              ...blogState,\r\n              [name]: res?.data?.web,\r\n            });\r\n          }\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = () => {\r\n    if (\r\n      blogState.image &&\r\n      blogState.header &&\r\n      blogState.header_Bottom &&\r\n      blogState.heading &&\r\n      blogState.content &&\r\n      blogState.date &&\r\n      blogState.bottomText &&\r\n      blogState.description_1 &&\r\n      blogState.description_2 &&\r\n      blogState.description_3 &&\r\n      blogState.end_Text &&\r\n      blogState.third_Image.align &&\r\n      blogState.third_Image.image.length > 0 &&\r\n      blogState.second_Image.banners.length > 0\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const storeDataEdit = props?.data?.props?.cardContent;\r\n        storeDataEdit.splice(editData.editIndex, 1, {\r\n          bottomText: blogState?.bottomText,\r\n          content: blogState?.content,\r\n          date: moment(blogState?.date).format(\"MM/DD/YYYY\"),\r\n          description_1: blogState?.description_1,\r\n          description_2: blogState?.description_2,\r\n          description_3: blogState?.description_3,\r\n          end_Text: blogState?.end_Text,\r\n          header: blogState?.header,\r\n          header_Bottom: blogState?.header_Bottom,\r\n          heading: blogState?.heading,\r\n          image: blogState?.image,\r\n          second_Image: {\r\n            banners: blogState?.second_Image?.banners?.map((val, index) => {\r\n              return {\r\n                position: index,\r\n                url: \"\",\r\n                urlParam: \"\",\r\n                web: val.web,\r\n              };\r\n            }),\r\n          },\r\n          third_Image: {\r\n            align: blogState?.third_Image?.align,\r\n            image: blogState?.third_Image?.image,\r\n          },\r\n        });\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: storeDataEdit,\r\n          },\r\n        };\r\n        handleAddNewStoresClose();\r\n        props.handleSubmit(getData, \"blogPageCard\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [\r\n              ...props?.data?.props?.cardContent,\r\n              {\r\n                bottomText: blogState?.bottomText,\r\n                content: blogState?.content,\r\n                date: new Date(blogState?.date),\r\n                description_1: blogState?.description_1,\r\n                description_2: blogState?.description_2,\r\n                description_3: blogState?.description_3,\r\n                end_Text: blogState?.end_Text,\r\n                header: blogState?.header,\r\n                header_Bottom: blogState?.header_Bottom,\r\n                heading: blogState?.heading,\r\n                image: blogState?.image,\r\n                second_Image: blogState.second_Image,\r\n                third_Image: {\r\n                  align: blogState?.third_Image?.align,\r\n                  image: blogState?.third_Image?.image,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        };\r\n        setAddBlogs(false);\r\n        props.handleSubmit(getData, \"blogPageCard\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setBlogState(initialBlogDetails);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleAddNew();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setBlogState(rowData);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"blogPageCard\", \"cardContent\");\r\n  };\r\n\r\n  const handleChangeheaderBottom = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      header_Bottom: data,\r\n    });\r\n  };\r\n\r\n  const handleChangeDescription_1 = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      description_1: data,\r\n    });\r\n  };\r\n\r\n  const handleChangeDescription_2 = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      description_2: data,\r\n    });\r\n  };\r\n\r\n  const handleChangeDescription_3 = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      description_3: data,\r\n    });\r\n  };\r\n  const handleDate = (value) => {\r\n    setBlogState({ ...blogState, date: value });\r\n  };\r\n  const handleDeleteBanner = (i) => {\r\n    const editBanners = [...blogState?.second_Image?.banners];\r\n    editBanners.splice(i, 1);\r\n    setBlogState({\r\n      ...blogState,\r\n      second_Image: {\r\n        banners: editBanners,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      {/* <TableHeaderComp\r\n        name={\"Blog Page Component\"}\r\n        handleAddNew={handleAddNew}\r\n      /> */}\r\n\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleViewStores={handleViewMore}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* View the Stores */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={openBlog}\r\n        onClose={handleCloseStores}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <div className={classes.dialogHeader}>\r\n            <div>Blogs Inner Page</div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={handleCloseStores}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className={classes.innerDialog}>\r\n            <Grid>\r\n              <div className={classes.imageText}>\r\n                <Typography>Second Image</Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid container spacing={2} style={{ padding: \"10px 10px 20px\" }}>\r\n                {blogs?.second_Image?.banners?.map((val) => {\r\n                  return (\r\n                    <Grid md={4} xs={4}>\r\n                      <div>\r\n                        <img src={val?.web} alt=\"Second Image\" width={\"90%\"} />\r\n                      </div>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Third Image</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.blogInnerImage}>\r\n                    <img src={blogs?.third_Image?.image} alt=\"Third Image\" />\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Description_1</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.description_1}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Description_2</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.description_2}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Description_3</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.description_3}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>End Text</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.end_Text}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.alignText}>\r\n                    <Typography>Align</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.third_Image?.align}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Add the Data */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={addBlogsOpens}\r\n        onClose={handleAddNewStoresClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" style={{ paddingBottom: \"0px\" }}>\r\n          <div className={classes.dialogHeader}>\r\n            <div>Add Blog Page Details</div>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div\r\n            className={classes.dialogHeader}\r\n            style={{\r\n              borderBottom: \"1px solid #e0e0e0\",\r\n              marginBottom: \"6px\",\r\n              paddingBottom: \"6px\",\r\n            }}\r\n          ></div>\r\n          <div className={classes.textFields}>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"header\"\r\n              label=\"Header\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.header}\r\n              name=\"header\"\r\n              required\r\n            />\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Header Bottom Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeheaderBottom}\r\n                parentState={blogState.header_Bottom}\r\n              />\r\n            </div>\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"outlined-multiline-flexible\"\r\n              label=\"Heading Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState.heading}\r\n              name=\"heading\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.content}\r\n              name=\"content\"\r\n              multiline\r\n              rows={4}\r\n              required\r\n            />\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Date Picker :</Typography>\r\n              </div>\r\n              <div className={classes.datePicker}>\r\n                <DatePickerComp onChange={handleDate} value={blogState?.date} />\r\n                {console.log(blogState?.date, \"ll\")}\r\n              </div>\r\n            </div>\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"bottomText\"\r\n              label=\"Button Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.bottomText}\r\n              name=\"bottomText\"\r\n              required\r\n            />\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Description_1 Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeDescription_1}\r\n                parentState={blogState.description_1}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Description_2 Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeDescription_2}\r\n                parentState={blogState.description_2}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Description_3 Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeDescription_3}\r\n                parentState={blogState.description_3}\r\n              />\r\n            </div>\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"end_Text\"\r\n              label=\"End Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.end_Text}\r\n              name=\"end_Text\"\r\n              multiline\r\n              rows={4}\r\n              required\r\n            />\r\n            <Autocomplete\r\n              value={blogState?.third_Image?.align}\r\n              onChange={(event, newValue) => {\r\n                setBlogState({\r\n                  ...blogState,\r\n                  third_Image: { ...blogState.third_Image, align: newValue },\r\n                });\r\n              }}\r\n              id=\"controllable-states-demo\"\r\n              options={options}\r\n              sx={{ width: 300 }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                  label=\"Third Image Align Position\"\r\n                  required\r\n                  margin=\"dense\"\r\n                />\r\n              )}\r\n            />\r\n            <Grid container spacing={8} style={{ paddingTop: \"8px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    First Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {blogState.image.length > 0 && (\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={blogState.image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <Grid container spacing={5} style={{ paddingTop: \"8px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file2\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"banners\")}\r\n                />\r\n                <label htmlFor=\"button-file2\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Second Banner Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {blogState?.second_Image?.banners.length > 0 &&\r\n                blogState?.second_Image?.banners?.map((img, index) => {\r\n                  return (\r\n                    <Grid item style={{ position: \"relative\" }}>\r\n                      <div style={{ position: \"absolute\", width: \"150px\" }}>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                          }}\r\n                        >\r\n                          <input\r\n                            accept=\"image/*\"\r\n                            style={{ display: \"none\" }}\r\n                            id={`button-file-edit${index}`}\r\n                            multiple\r\n                            type=\"file\"\r\n                            onChange={(e) => {\r\n                              handleChange(\r\n                                e.target.files[0],\r\n                                \"editBanners\",\r\n                                index\r\n                              );\r\n                            }}\r\n                          />\r\n                          <label htmlFor={`button-file-edit${index}`}>\r\n                            <Edit\r\n                              style={{\r\n                                fontSize: \"12px\",\r\n                                color: \"#fff\",\r\n                                backgroundColor: \"#000\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            />\r\n                          </label>\r\n                          <div style={{ backgroundColor: \"#000\" }}>\r\n                            <Delete\r\n                              style={{\r\n                                fontSize: \"12px\",\r\n                                color: \"#fff\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                              onClick={() => handleDeleteBanner(index)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={img?.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                  );\r\n                })}\r\n            </Grid>\r\n            <Grid container spacing={8} style={{ paddingTop: \"8px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file3\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    handleChange(e.target.files[0], \"third_Image\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"button-file3\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Third Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {blogState?.third_Image?.image.length > 0 && (\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={blogState?.third_Image?.image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <div\r\n              className={classes.dialogHeader}\r\n              style={{ justifyContent: \"center\" }}\r\n              // onClick={addStoreDetails}\r\n            >\r\n              {/* <Button variant=\"contained\" color=\"primary\">\r\n                    Add Blog Details\r\n                  </Button> */}\r\n            </div>\r\n          </div>\r\n          {/* )} */}\r\n          {/* <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\r\n              Blogs Page Added\r\n            </Typography>\r\n            <TableComp\r\n              header={blogHeader}\r\n              // tableData={tableStoreData}\r\n              // data={state?.blogs}\r\n              // handleEdit={handleStoresEdit}\r\n              // handleDelete={handleDeleteStore}\r\n            /> */}\r\n\r\n          <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default BlogPageCMS;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { API_URL } from \"../../../config\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { CMSBYPAGES, CMS_UPDATE, CREATE_CMS } from \"../../../graphql/query\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport BannerCMS from \"./bannerCMS\";\r\nimport CollectionCardCMS from \"./collectionCardCMS\";\r\nimport HomePageIconsCMS from \"./homePageIcons\";\r\nimport CollectionJewelleryCardCMS from \"./collectionJewelleryCardCMS\";\r\nimport StoriesCardCMS from \"./storiesCardCMS\";\r\nimport TestimonialCollectionCardCMS from \"./testimonialCardCMS\";\r\nimport { consolePagesStyles } from \"./style\";\r\nimport CollectionCarouselCMS from \"./collectionCarouselCMS\";\r\nimport CareersCMS from \"./careersCMS\";\r\nimport CareerBannerCMS from \"./careerBannerCMS\";\r\nimport StyloriSilverCMS from \"./styloriSilverCMS\";\r\nimport { StylesCard } from \"./StyleCardCMS\";\r\nimport { SilverYarnsCMS } from \"./silverYarnsCMS\";\r\nimport { StyloriSilverTitleCMS } from \"./styloriSilverTitleCMS\";\r\nimport { TestimonialCMS } from \"./testimonialCMS\";\r\nimport { StylesCardPrice } from \"./stylesCardPrice\";\r\nimport { InstaCardCMS } from \"./instaCardCMS\";\r\nimport CareerHeaderCMS from \"./careerHeaderCMS\";\r\nimport FaqCMS from \"./faqCMS\";\r\nimport { FaqTitleCMS } from \"./faqTitleCMS\";\r\nimport { HomeNotificationCMS } from \"./homeNotificationCMS\";\r\nimport FaqSCMS from \"./faqSCMS\";\r\nimport BlogPageCMS from \"./blogsPageCMS\";\r\n\r\nfunction CmsComponent(props) {\r\n  const location = useLocation();\r\n  const snack = React.useContext(AlertContext);\r\n  const classes = consolePagesStyles();\r\n\r\n  const [state, setState] = useState([]);\r\n  const [cloneDialog, setCloneDialog] = useState(false);\r\n  const [cloneState, setCloneState] = useState({\r\n    page: null,\r\n  });\r\n\r\n  console.log(\"dataRecieved\", state);\r\n\r\n  useEffect(() => {\r\n    fetchCall();\r\n  }, []);\r\n\r\n  // Initial fetch call by the page\r\n  const fetchCall = () => {\r\n    const pageName = location?.state?.name;\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: CMSBYPAGES,\r\n        variables: { page: pageName },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const dataRecieved = JSON.parse(data?.data?.cdnByPage?.data);\r\n        setState(dataRecieved);\r\n      });\r\n  };\r\n\r\n  // Open Handle Clone\r\n  const handleClone = () => {\r\n    console.log(\"handleClone\", state);\r\n    setCloneDialog(true);\r\n  };\r\n\r\n  // Close Handle Clone\r\n  const handleCloneDialogClose = () => {\r\n    setCloneDialog(false);\r\n  };\r\n\r\n  // Handle the clone State\r\n  const onChangeData = (event) => {\r\n    setCloneState({\r\n      ...cloneState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // Clone Submit\r\n  const handleCloneSumbit = () => {\r\n    if (cloneState.page) {\r\n      const cloneData = JSON.stringify(state);\r\n      const pageName = cloneState.page;\r\n      fetch(`${API_URL}/graphql`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          query: CREATE_CMS,\r\n          variables: {\r\n            cloneData: cloneData,\r\n            page: pageName,\r\n          },\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          handleCloneDialogClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Page Created Successfully\",\r\n          });\r\n        });\r\n    } else {\r\n      snack.setSnack({\r\n        open: true,\r\n        msg: \"Please enter the page Route\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // on submitting each component (for Add, Edit and Delete) same Update call\r\n  const handleSubmit = async (data, component, propsKey,editIndex) => {\r\n    const replaceIndex = editIndex ?? state.findIndex((val) => val.component === component);\r\n    const newState = state;\r\n    newState.splice(replaceIndex, 1, data);\r\n    const stringifyState = JSON.stringify(newState);\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: CMS_UPDATE,\r\n        variables: {\r\n          stringifyState: stringifyState,\r\n          page: location.state.name,\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Successfully Updated!\",\r\n        });\r\n        const newStateSet = JSON.parse(JSON.stringify(newState));\r\n        setState(newStateSet);\r\n        fetchCall();\r\n      });\r\n  };\r\n\r\n  // Rendering the Tables based on the type of the component\r\n  const getTheTable = (val) => {\r\n    switch (val?.component) {\r\n      case \"HomePageBanner\": {\r\n        return <BannerCMS data={val} handleSubmit={handleSubmit} state={state} />;\r\n      }\r\n\r\n      case \"HomeNotifiaction\":{\r\n        return <HomeNotificationCMS data={val} handleSubmit={handleSubmit} />\r\n      }\r\n\r\n      case \"CollectionCardData\": {\r\n        return <CollectionCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"HomePageIconsList\": {\r\n        return <HomePageIconsCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"CollectionJewelleryData\": {\r\n        return (\r\n          <CollectionJewelleryCardCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n\r\n      case \"TestimonialCard\": {\r\n        return (\r\n          <TestimonialCollectionCardCMS\r\n            data={val}\r\n            handleSubmit={handleSubmit}\r\n          />\r\n        );\r\n      }\r\n\r\n      case \"blogPageCard\": {\r\n        return <BlogPageCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"StoriesCard\": {\r\n        return <StoriesCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"collectionCarouselCardComponent\": {\r\n        return <CollectionCarouselCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"bannerComponent\": {\r\n        return <CareerBannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"careerHeader\": {\r\n        return <CareerHeaderCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"careersComponent\": {\r\n        return <CareersCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"StyloriSilver\": {\r\n        return <StyloriSilverCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"TestimonialSlider\": {\r\n        return <TestimonialCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"StyloriCard\": {\r\n        return <StylesCard data={val} handleSubmit={handleSubmit} state={state} />;\r\n      }\r\n\r\n      case \"StyloriCardPrice\": {\r\n        return <StylesCardPrice data={val} handleSubmit={handleSubmit} state={state} />;\r\n      }\r\n\r\n      case \"StyloriTitle\": {\r\n        return <StyloriSilverTitleCMS data={val} handleSubmit={handleSubmit} state={state} />;\r\n      }\r\n\r\n      case \"StyloriStore\": {\r\n        return <SilverYarnsCMS data={val} handleSubmit={handleSubmit} state={state} />;\r\n      }\r\n\r\n      case \"StyloriYarns\":{\r\n        return <SilverYarnsCMS data={val} handleSubmit={handleSubmit} state={state} />;\r\n      }\r\n\r\n      case \"InstagramPost\": {\r\n        return <InstaCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"faqComponent\": {\r\n        return <FaqCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"faqTitle\":{\r\n        return <FaqTitleCMS data={val} handleSubmit={handleSubmit}  />\r\n      }\r\n\r\n      case \"faqComponents\":{\r\n        return <FaqSCMS  data={val} handleSubmit={handleSubmit} />\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Clone Button */}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n        style={{ marginBottom: \"10px\" }}\r\n      >\r\n        <Grid>\r\n          <Button variant=\"contained\" onClick={handleClone} color=\"primary\">\r\n            Clone\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Tables in the Component */}\r\n      {state.map((val, i) => {\r\n        return getTheTable(val);\r\n      })}\r\n\r\n      {/* Clone Dialog  */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={cloneDialog}\r\n        onClose={handleCloneDialogClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Clone the {location?.state?.name} page\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"page\"\r\n            label=\"Page Route\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={cloneState.page}\r\n            name=\"page\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloneSumbit}>Clone Page</Button>\r\n          <Button onClick={handleCloneDialogClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CmsComponent;\r\n","import ApolloClient from \"apollo-boost\";\r\nimport React from \"react\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../context\";\r\nimport { NetworkProvider } from \"../context/NetworkContext\";\r\nimport { ProductContext } from \"../context/ProductuploadContext\";\r\nimport {\r\n  AbandonedCart,\r\n  Addshippingattributes,\r\n  Addtaxattributes,\r\n  CategoryList,\r\n  Configuration,\r\n  Customerdetails,\r\n  Dashboard,\r\n  DiscountList,\r\n  Earringbacking,\r\n  Goldpriceupdate,\r\n  HolidayManager,\r\n  Inventory,\r\n  Login,\r\n  Manageadminusers,\r\n  Manageusers,\r\n  Markupprice,\r\n  Masterattribute,\r\n  Mastercategories,\r\n  Mastercollections,\r\n  Masterdesigns,\r\n  Masterdiamonds,\r\n  Masterdiamondsettings,\r\n  Masterdiamondshapes,\r\n  Mastergemsettings,\r\n  Mastergemshapes,\r\n  Mastergemtypes,\r\n  Mastergenders,\r\n  Mastermetalcolors,\r\n  Masteroccassions,\r\n  Masterorderstatus,\r\n  Masterpaymentstatus,\r\n  Masterproducttypes,\r\n  Masterpurities,\r\n  Masterroles,\r\n  Masterscreens,\r\n  Masterstonecolors,\r\n  Masterstones,\r\n  Masterstoneshapes,\r\n  Masterstyles,\r\n  Masterthemes,\r\n  Masterweights,\r\n  Materialmaster,\r\n  OrderList,\r\n  OrderManagementDetails,\r\n  PriceLogs,\r\n  Priceupdate,\r\n  Productlist,\r\n  Productupload,\r\n  Salediscount,\r\n  Seopriority,\r\n  Shipmentsettings,\r\n  Shippingattributes,\r\n  Shippingzones,\r\n  Taxsettings,\r\n  Taxsetup,\r\n  Useraddresses,\r\n  Userconfiguration,\r\n  Userwishlist,\r\n  Vendorlist,\r\n  Vendorprice,\r\n  Voucherdiscount,\r\n  VoucherdiscountListing,\r\n  Warehouse,\r\n  MasterCountry,\r\n  DynamicFilters,\r\n  CmsHome,\r\n  ElasticSearch,\r\n  ComboOfferConfig,\r\n} from \"../screens\";\r\nimport GemstoneSetting from \"../screens/GemstoneSetting/GemstoneSetting\";\r\nimport ErrorLogs from \"../screens/ErrorLogs/ErrorLogs\";\r\nimport Banners from \"../screens/Banners/banners\";\r\nimport Silverbanner from \"../screens/Banners/silverbanner/silverbanner\";\r\nimport SilverListingbanner from \"../screens/Banners/silverbanner/silverListingBanner/silverListingBanner\";\r\nimport Styloribanner from \"../screens/Banners/styloribanner/styloribanner\";\r\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\r\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\r\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\r\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\r\nimport { ImageUpload } from \"../screens/ImageUpload\";\r\nimport PriceUpload from \"../screens/uploadprice/index.js\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport route from \"./route\";\r\nimport BannerCMS from \"../screens/cmsHome/CMSComponent/bannerCMS\";\r\nimport CmsComponent from \"../screens/cmsHome/CMSComponent\";\r\n\r\nconst MainApp = () => {\r\n  const { globalCtx } = React.useContext(GlobalContext);\r\n  const { productCtx } = React.useContext(ProductContext);\r\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      {/* <ProductProvider > */}\r\n      <NetworkProvider>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Login} />\r\n          <Route path={route.login} component={Login} />\r\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\r\n          <PrivateRoute path={route.productupload} component={Productupload} />\r\n          <PrivateRoute path={route.configuration} component={Configuration} />\r\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\r\n          <PrivateRoute path={route.productlist} component={Productlist} />\r\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\r\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\r\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\r\n          <PrivateRoute path={route.pricelogs} component={PriceLogs} />\r\n          <PrivateRoute path={route.imageUpload} component={ImageUpload} />\r\n          <PrivateRoute\r\n            path={route.producttypes}\r\n            component={Masterproducttypes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.voucherdiscount}\r\n            component={Voucherdiscount}\r\n          />\r\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\r\n          <PrivateRoute path={route.orderlist} component={OrderList} />\r\n          <PrivateRoute path={route.userorders} component={OrderList} />\r\n          <PrivateRoute path={route.address} component={Useraddresses} />\r\n\r\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\r\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\r\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\r\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\r\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\r\n          <PrivateRoute path={route.category} component={Mastercategories} />\r\n          <PrivateRoute\r\n            path={route.masterattributes}\r\n            component={Masterattribute}\r\n          />\r\n          <PrivateRoute path={route.dynamicFilter} component={DynamicFilters} />\r\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\r\n          <PrivateRoute\r\n            path={route.masterstonecolors}\r\n            component={Masterstonecolors}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterstoneshapes}\r\n            component={Masterstoneshapes}\r\n          />\r\n          <PrivateRoute path={route.weights} component={Masterweights} />\r\n          <PrivateRoute\r\n            path={route.masteroccassions}\r\n            component={Masteroccassions}\r\n          />\r\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\r\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\r\n          <PrivateRoute\r\n            path={route.manageadminusers}\r\n            component={Manageadminusers}\r\n          />\r\n          <PrivateRoute\r\n            path={route.goldpriceupdate}\r\n            component={Goldpriceupdate}\r\n          />\r\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\r\n          <PrivateRoute\r\n            path={route.customerdetails}\r\n            component={Customerdetails}\r\n          />\r\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\r\n          <PrivateRoute\r\n            path={route.orderdetails}\r\n            component={OrderManagementDetails}\r\n          />\r\n\r\n          <PrivateRoute\r\n            path={route.userconfiguration}\r\n            component={Userconfiguration}\r\n          />\r\n\r\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\r\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\r\n\r\n          <PrivateRoute\r\n            path={route.mastermaterial}\r\n            component={Materialmaster}\r\n          />\r\n          <PrivateRoute\r\n            path={route.mastercolors}\r\n            component={Mastermetalcolors}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterpurities}\r\n            component={Masterpurities}\r\n          />\r\n          <PrivateRoute\r\n            path={route.salediscountlist}\r\n            component={DiscountList}\r\n          />\r\n          <PrivateRoute\r\n            path={route.voucherdiscountlist}\r\n            component={VoucherdiscountListing}\r\n          />\r\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\r\n          <PrivateRoute\r\n            path={route.mastercollections}\r\n            component={Mastercollections}\r\n          />\r\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\r\n          <PrivateRoute\r\n            path={route.masterdiamonds}\r\n            component={Masterdiamonds}\r\n          />\r\n          <PrivateRoute\r\n            path={route.diamondsettings}\r\n            component={Masterdiamondsettings}\r\n          />\r\n          <PrivateRoute\r\n            path={route.diamondshapes}\r\n            component={Masterdiamondshapes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.earringbacking}\r\n            component={Earringbacking}\r\n          />\r\n          <PrivateRoute\r\n            path={route.gemsettings}\r\n            component={Mastergemsettings}\r\n          />\r\n          <PrivateRoute path={route.countriesFx} component={MasterCountry} />\r\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\r\n          <PrivateRoute\r\n            path={route.masterpaymentstatus}\r\n            component={Masterpaymentstatus}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterorderstatus}\r\n            component={Masterorderstatus}\r\n          />\r\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\r\n          <PrivateRoute\r\n            path={route.shippingattributes}\r\n            component={Shippingattributes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.addshippingattributes}\r\n            component={Addshippingattributes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.addtaxattributes}\r\n            component={Addtaxattributes}\r\n          />\r\n\r\n          <PrivateRoute path={route.gender} component={Mastergenders} />\r\n          <PrivateRoute path={route.seo} component={Seopriority} />\r\n\r\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path={route.editdiscount}\r\n            component={Salediscount}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path={`${route.productAttributes}/:id`}\r\n            component={ProductAttributes}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path={`${route.createVariant}`}\r\n            component={CreateVariant}\r\n          />\r\n          <PrivateRoute\r\n            path={route.shipmentsettings}\r\n            component={Shipmentsettings}\r\n          />\r\n          <PrivateRoute path={route.banners} component={Banners} />\r\n          <PrivateRoute path={route.styloribanner} component={Styloribanner} />\r\n          <PrivateRoute path={route.silverbanner} component={Silverbanner} />\r\n          <PrivateRoute\r\n            path={route.silverlistingbanner}\r\n            component={SilverListingbanner}\r\n          />\r\n          <PrivateRoute\r\n            path={route.holiday_manager}\r\n            component={HolidayManager}\r\n          />\r\n          <PrivateRoute path={route.error_logs} component={ErrorLogs} />\r\n          <PrivateRoute path={route.warehouse} component={Warehouse} />\r\n          <PrivateRoute path={route.inventory} component={Inventory} />\r\n          <PrivateRoute path={route.abandoned_cart} component={AbandonedCart} />\r\n          <PrivateRoute path={route.price_upload} component={PriceUpload} />\r\n          <PrivateRoute path={route.CmsHome} component={CmsHome} />\r\n          <PrivateRoute path={route.BannerCMS} component={BannerCMS} />\r\n          <PrivateRoute path={route.CmsComponent} component={CmsComponent} />\r\n          <PrivateRoute path={route.SearchSettings} component={ElasticSearch} />\r\n          <PrivateRoute\r\n            path={route.ComboOfferConfig}\r\n            component={ComboOfferConfig}\r\n          />\r\n          <PrivateRoute\r\n            path={route.GemstoneSetting}\r\n            component={GemstoneSetting}\r\n          />\r\n        </Switch>\r\n      </NetworkProvider>\r\n      {/* </ProductProvider> */}\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nexport default MainApp;\r\n","import React from \"react\";\r\nimport { Alerts as Alert } from \"./components\";\r\nimport { AlertProps, AlertContext } from \"./context\";\r\n\r\nclass AppAlert extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      severity: AlertProps.severity.success,\r\n      msg: \"\",\r\n      vertical: AlertProps.vertical.top,\r\n      horizontal: AlertProps.horizontal.center,\r\n    };\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({\r\n      open: false,\r\n      severity: AlertProps.severity.success,\r\n      msg: \"\",\r\n      vertical: AlertProps.vertical.top,\r\n      horizontal: AlertProps.horizontal.center,\r\n    });\r\n  };\r\n\r\n  set = (props) => {\r\n    this.setState({ ...props });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AlertContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          onclose: this.close,\r\n          setSnack: this.set,\r\n        }}\r\n      >\r\n        {this.state.open ? <Alert {...this.state} onclose={this.close} /> : \"\"}\r\n        {this.props.children}\r\n      </AlertContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppAlert;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport MainApp from \"./routes\";\r\nimport { GlobalProvider } from \"./context\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport AppAlert from \"./App.Alert\";\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <CssBaseline />\r\n          <Router>\r\n            <AppAlert>\r\n              <MainApp />\r\n            </AppAlert>\r\n          </Router>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}