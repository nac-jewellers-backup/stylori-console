{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","components/ProductFilter/ProductFilter.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","screens/Banners/banners.js","screens/Banners/styloribanner/components/stylorilandingpage.js","screens/Banners/styloribanner/styloribanner.js","screens/Banners/silverbanner/components/silverlandingpage.js","screens/Banners/silverbanner/components/silverlistingpage.js","screens/Banners/silverbanner/components/specificListPages.js","screens/Banners/silverbanner/components/silverbottmpage.js","screens/Banners/silverbanner/components/silverlistingroutingpage.js","screens/Banners/silverbanner/silverbanner.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","orderdetails","userorders","userwishlist","address","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","addtaxattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","category","banners","styloribanner","silverbanner","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","_excluded","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","Page_excluded","buildGradient","start","end","concat","grey","colors","blue","indigo","gradients","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","taggedTemplateLiteral","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","ALLMARKUPPRICE","_templateObject9","DIAMONDPRICELIST","_templateObject10","GEMPRICELIST","_templateObject11","CATGORYLIST","_templateObject12","MATERIALMASTER","_templateObject13","_templateObject14","SALEDISCOUNTS","_templateObject15","_templateObject16","VOUCHERDISCOUNTS","_templateObject17","METALMASTER","_templateObject18","MAKINGCHARGEPRICELIST","_templateObject19","VOUCHERSTATUSEDIT","_templateObject20","_templateObject21","_templateObject22","DISCOUNTSTATUSEDIT","_templateObject23","DELETEMARKUPPRICE","_templateObject24","DELETEGOLDPRICE","_templateObject25","DELETESALEDISCOUNT","_templateObject26","DELETEVOUCHERDISCOUNT","_templateObject27","DELETEMAKINGCHARGE","_templateObject28","DELETEGEMCHARGE","_templateObject29","DELETEDIAMONDCHARGE","_templateObject30","PRODUCTDIAMONDTYPES","PRODUCTEDIT","ALLMASTERRINGSIZE","ALLSTYLORILANDINGBANNERS","ALLSTYLORISILVERLANDINGBANNERS","ALLSTYLORISILVERLISTINGBOTTOMBANNERS","DELETESILVERLANDINGBANNER","ALLSTYLORISILVERLISTINGPAGE","ALLSPECIFICLISTINGPAGE","CREATESPECIFICLISTINGPAGE","PRODUCTDESCRIPTIONEDIT","ORDERS","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_templateObject36","_templateObject37","queries_templateObject","queries_templateObject2","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","BASE_IMAGE_URL","APP_URL","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","size","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","prod_desc","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","useEffect","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","LoginForm_excluded","classes","useContext","_React$useContext2","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","handleChange","persist","target","type","checked","handleSubmit","signinobj","pageaccess","pages","pagepermissions","statuscode","setItem","accessToken","forEach","element","push","pageurl","is_write","history","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","initailRingSize","updateRingSize","AddressForm_excluded","_getMasterRingSize","then","res","allMasterRingsSizes","getMasterRingSize","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","_productCtx$masterDat","_productCtx$masterDat2","_productCtx$masterDat3","_productCtx$masterDat4","_productCtx$masterDat5","_productCtx$masterDat6","_productCtx$masterDat7","_productCtx$masterDat8","_productCtx$masterDat9","_productCtx$masterDat10","_productCtx$masterDat11","_productCtx$masterDat12","PaymentForm_excluded","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","Review_excluded","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","Step4_excluded","selectedOption","default_metal_size","Step5_excluded","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","image_url","axios","put","file","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","border","&:hover","typography","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","showproductdetails","_showproductdetails","prod_id","bodycontent","productid","filterparams","categoryname","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","Visibility_default","product_name","vendor_code","product_category","Switch","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","Label_excluded","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","goBack","ArrowBackIos_default","drawer","header","buttonIcon","contentSection","contentSectionHeader","cursor","contentSectionContent","addButton","minAmount","maxAmount","radioGroup","actions","Filter","masters","onFilter","Filter_excluded","initialValues","company","mobile","version","commodity","_useState3","_useState4","_useState5","_useState6","setValues","handleoptionchange","Drawer","anchor","Close_default","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","Search_excluded","searchcontent","setSearchcontent","Search_default","esm_Input_Input","disableUnderline","filterButton","filterIcon","ProductFilter","dataCSV","ProductFilter_excluded","openFilter","setOpenFilter","components_Search_Search","pathname","react_csv","keyCSV","valueCSV","textDecoration","FilterList_default","components_Filter_Filter","Productlist","responseCSV","setMasters","setFilterparams","setDataCSV","_fetchCSVdata","responseData","keyData","_i","_Object$entries","_Object$entries$_i","res_json","entries","fetchCSVdata","components_ProductFilter_ProductFilter","filterobj","filtercontent","Product","Header","Header_excluded","onAdd","inner","Results","Results_excluded","CardActions","results","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","Results_Results_excluded","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","i","Math","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","AboutVoucher_excluded","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","_React$createElement","VoucherComponent_excluded","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","components_Results_Results_excluded","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","AboutVoucher_AboutVoucher_excluded","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","_callee4","_context4","href","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","anchorEl","setAnchorEl","Boolean","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","OrderList_components_Header_Header_excluded","borderTop","Header_SortHeader","containergrid","OrderList_components_Results_Results_excluded","columnobjs","orderdate","onupdate","_showorderdetails","orderurl","components_EnhancedTableHead_EnhancedTableHead","col","iswrite","showorderdetails","paymentmode","paymentstatus","orderstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","fail_reason","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","join","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","opts","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","filter","match","username","OrderList_components_Results_Results","showcolumns","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","closeButton","other","Addmetalprice_excluded","disableTypography","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","handleinputChange","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","readOnly","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","Adddiamondprice_excluded","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice_excluded","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","handleDelete","Addmakingchargeprice_excluded","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup_excluded","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","Salediscount_components_Results_Results_excluded","components_AboutVoucher_AboutVoucher_excluded","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","VoucherComponent_VoucherComponent_excluded","Viewsku_excluded","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","onDelete","Viewsku_DialogActions","Products","Products_excluded","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","author","applyButton","EditContent","diamond","onApply","EditContent_excluded","showpreview","setShowpreview","previewurl","toggleChecked","imageurl","previmagenames","previmages","moment","foldername","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","alt","src","small","oninit","imagecontainer","masterlist","setMasterlist","openedit","setOpenedit","aliasName","setaliasName","onCreate","Array","prototype","insert","setpreviewurl","_React$useState33","_React$useState34","_React$useState35","_React$useState36","toLowerCase","button_title","sort_id","filterOrder","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","toolbar","deleteButton","deleteIcon","OrderManagementDetails_components_Header_Header_excluded","OrderInfo","OrderInfo_excluded","setOption","setPaymentstatus","setOrderstatus","user_profile","first_name","last_name","shopping_cart","cart_addresses","addressline2","state","country","contact_number","discounted_price","awb_number","giftwraps","payment_mode","select","OrderItems","OrderItems_excluded","react_perfect_scrollbar_lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","text_heading","text_content","final_total_text","OrderDetails","OrderDetails_excluded","trans_sku_list","sku_weight","diamond_type","round","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","_fetchorderdetails","order_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","Materialmaster","Mastermetalcolors","Masterpurities_components_Results_Results_excluded","Masterpurities","DiscountList_components_Header_Header_excluded","DiscountList_components_Results_Results_excluded","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","VoucherdiscountListing_components_Header_Header_excluded","VoucherdiscountListing_components_Results_Results_excluded","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections_components_Results_Results_excluded","Mastercollections","Masterdesigns_components_Results_Results_excluded","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings_components_Results_Results_excluded","Mastergemsettings","Mastergemshapes_components_Results_Results_excluded","Mastergemshapes","Mastergemtypes_components_Results_Results_excluded","Mastergemtypes","Mastergenders_components_Results_Results_excluded","Mastergenders","Seopriority_components_Results_Results_excluded","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles_components_Results_Results_excluded","Masterstyles","Masterthemes_components_Results_Results_excluded","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","AttributesComponent_excluded","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","setFiltercontent","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","General","General_excluded","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","Userwishlist_components_Results_Results_excluded","setInvoices","invoice","date","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses_components_Results_Results_excluded","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","AttributesComponent_AttributesComponent_excluded","Addtaxattributes","AttributesComponent_AttributesComponent","Banners","link_style","StyloriLandingPage","alllandingbanner","setalllandingbanner","web","createlandingbanner","setCreatelandingbanner","_styloribannerfetch","allStyloriBanners","styloribannerfetch","onChangeData","onsubmitvalue","create_banner_data","Number","now","toISOString","Styloribanner","stylorilandingpage","SilverLandingPage","allStyloriSilverBanners","SilverListingPage","SpecificListPages","urlParam","SilverListingBottom","Silverbanner","silverlandingpage","silverlistingpage","specificListPages","silverbottmpage","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","minHeight","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","selected","icons","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrimaryAppBar_excluded","PrivateRoute","PrivateRoute_excluded","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","EditDiamond","EditDiamond_excluded","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","DiamondSave","_DiamondSave","diamondobj","list_data","diamondListData","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","diamondType","settingData","shapeData","colSpan","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","EditGemstone_excluded","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","availableStockQty","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","EditPrice_excluded","pricerun","Skupricesync","_Skupricesync","productId","priceobj","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","productSizes","sizeChange","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","updatevarient","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","ishover","aria-hidden","handlenewAssetChange","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","_React$createElement2","_React$createElement3","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","changeVariant","_saveProductEditItem","productEditItem","productName","fetchvalue","updateProductListByProductId","productList","prodDescription","_createnewvarient","varientobj","_showpricesummary","sku","price_summary","skuprice","obj","material_name","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","handledesinputChange","materialName","esbody","endpoint","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","editcategory_excluded","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5c5e411.chunk.js","sourcesContent":["const route = {\n  login: \"/login\",\n  dashboard: \"/dashboard\",\n  profile: \"/profile\",\n  productupload: \"/productupload\",\n  configuration: \"/Configuration\",\n  vendor: \"/vendorlist\",\n  productlist: \"/productlist\",\n  orderlist: \"/orderlist\",\n  orderdetails: \"/orderdetails/:id\",\n  userorders: \"/orderlist/:userid\",\n  userwishlist: \"/userwishlist/:userid\",\n  address: \"/address/:userid\",\n\n  materiallist: \"/material\",\n  mastermaterial: \"/materialmaster\",\n  mastercolors: \"/mastercolors\",\n  masterpurities: \"/masterpurities\",\n  salediscountlist: \"/salediscountlist\",\n  voucherdiscountlist: \"/voucherdiscountlist\",\n\n  producttypes: \"/producttypes\",\n  voucherdiscount: \"/voucherdiscount\",\n  salediscount: \"/salediscount\",\n  priceupdate: \"/priceupdate\",\n  productAttributes: \"/product_attributes\",\n  diamondDetails: \"/diamond_details\",\n  gemstoneDetails: \"/gemstone-details\",\n  variants: \"/variants\",\n  images: \"/images\",\n  createVariant: \"/create_variant\",\n  materiallistpage: \"/newmaterial\",\n  editCategory: \"/editcategory\",\n  vendorPrice: \"/vendorpricesetup\",\n  markupPrice: \"/markuppricesetup\",\n  taxsetup: \"/taxsetup\",\n  editdiscount: \"/salediscount/:id\",\n  editvoucher: \"/voucherdiscount/:id\",\n  masterstyles: \"/masterstyles\",\n  masterthemes: \"/masterthemes\",\n  masteroccassions: \"/masteroccassions\",\n  masterpaymentstatus: \"/paymentstatus\",\n  mastercollections: \"/collections\",\n  masterdesigns: \"/designs\",\n  masterorderstatus: \"/orderstatus\",\n  shippingzones: \"/zones\",\n  shipmentsettings: \"/shipmensettings\",\n  shippingattributes: \"/shippingattributes\",\n  masterdiamonds: \"/diamonds\",\n  diamondsettings: \"/diamondsettings\",\n  diamondshapes: \"/diamondshapes\",\n  earringbacking: \"/earringbacking\",\n  addshippingattributes: \"/addshippingattributes\",\n  addtaxattributes: \"/addtaxattributes\",\n  userconfiguration: \"/userconfiguration\",\n  masterroles: \"/masterroles\",\n  manageadminusers: \"/manageadminusers\",\n  goldpriceupdate: \"/goldpriceupdate\",\n\n  manageusers: \"/manageusers\",\n\n  masterpages: \"/masterpages\",\n\n  gemsettings: \"/gemstonesettings\",\n  gemshapes: \"/gemstoneshapes\",\n  gemtypes: \"/gemstonetypes\",\n  gender: \"/genders\",\n  seo: \"/seopriority\",\n  taxsettings: \"/taxsettings\",\n  masterattributes: \"/masterattributes\",\n\n  masterstones: \"/masterstones\",\n  masterstonecolors: \"/masterstonecolors\",\n  masterstoneshapes: \"/masterstoneshapes\",\n  weights: \"/weights\",\n  customerdetails: \"/customerdetails/:id\",\n\n  category: \"/categories\",\n\n  banners: \"/banners\",\n  styloribanner: \"/styloribanner\",\n  silverbanner : \"/silverbanner\"\n};\n\nexport default route;\n","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from \"graphql-tag\";\n\nconst PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterGenders {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        diamondClarity\n        diamondColor\n        id\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondsShapes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterThemes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        id\n        alias\n        name\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondClarities {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterVendors {\n      nodes {\n        id\n        name\n        shortCode\n        vendorDelivaryDays\n      }\n    }\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n      nodes {\n        productSeries\n        id\n      }\n    }\n    allMasterGemstonesTypes {\n      nodes {\n        alias\n        colorCode\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterGemstonesShapes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterEarringBackings {\n      nodes {\n        name\n        createdAt\n        alias\n        id\n        nodeId\n        updatedAt\n      }\n    }\n    allMasterGemstonesSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\nconst PRODUCTFILTERMASTER = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n        displayOrder\n      }\n    }\n  }\n`;\n\nconst ALLPRODUCTLIST = gql`\n  query {\n    allProductLists(first: 500) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLIST = (category) => gql`\n  query ($Veiw: Int!, $Offset: Int!) {\n    allProductLists(first: $Veiw, offset: $Offset) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLISTS = gql`\n  query {\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\n      nodes {\n        vendorDelivaryDays\n        updatedAt\n        state\n        shortCode\n        partnerCategory\n        name\n        organization\n        gstNo\n        currency\n        createdAt\n        city\n        address\n      }\n      totalCount\n    }\n  }\n`;\n\nconst TaxList_1 = gql`\n  query {\n    allMasterTaxSettings {\n      nodes {\n        hsnNumber\n        taxName\n        taxValue\n        updatedAt\n        id\n      }\n      totalCount\n    }\n  }\n`; /*********** configuration query */\n\nconst TaxList = `\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      sgst\n      productAttributes\n      displayAttributes\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList = `\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL = `\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS = `\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      shortCode\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES = `\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER = `\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    alias\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER = `\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER = `\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER = `\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER = `\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER = `\nquery {\n  allMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      shortCode\n      diamondClarity\n      diamondColor\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n\n`;\n\nconst PAYMENTSTATUSMASTER = `\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS = `\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES = `\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES = `\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name\n    id\n    alias\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES = `\nquery{\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPAGES = `\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER = `\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING = `\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONES = `\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES = `\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES = `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`;\nconst ACTIVESHIPPINGZONES = `\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES = `\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS = `\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS = `\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES = `\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERATTRIBUTES = `\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    isTopMenu\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS = `\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES = `\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES = `\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER = `\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES = `\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      imageUrl\n        mobileImageUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        purity\n        vendorCode\n        updatedAt\n        sellingPriceType\n        sellingPrice\n        material\n        id\n        createdAt\n        costPrice\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDMARKUP = gql`\n  query MyQuery($vendorCode: String!) {\n    allPricingMarkups(condition: { material: $vendorCode }, orderBy: UPDATED_AT_DESC) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        purities\n        markupValue\n        markupType\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\nconst ALLMARKUPPRICE = gql`\n  query MyQuery {\n    allPricingMarkups(orderBy: UPDATED_AT_DESC) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        purities\n        markupValue\n        markupType\n        id\n        createdAt\n        __typename\n      }\n      totalCount\n      __typename\n    }\n  }\n`;\nconst DIAMONDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        costPrice\n        createdAt\n        diamondClarity\n        diamondColour\n        id\n        sellingPrice\n        sellingPriceType\n        updatedAt\n        vendorCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst GEMPRICELIST = gql`\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode, rateType: $ratetype }) {\n      nodes {\n        createdAt\n        id\n        sellingPriceType\n        updatedAt\n        vendorCode\n        gemstoneType\n        price\n        priceType\n        rateType\n        weightEnd\n        weightStart\n        __typename\n      }\n      totalCount\n      __typename\n    }\n  }\n`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\nconst CATGORYLIST = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        shortCode\n        id\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTTYPEMASTER = gql`\n  query {\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MATERIALMASTER = gql`\n  query {\n    allMasterMaterials {\n      nodes {\n        alias\n        name\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MASTERCOLORS = gql`\n  query {\n    allMasterMetalsColors {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst SALEDISCOUNTS = gql`\n  query {\n    allSaleDiscounts {\n      nodes {\n        id\n        discountName\n        discountType\n        discountValue\n        components\n        attributes\n        isActive\n        productAttributes\n        productAttributesText\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst VOUCHERDISCOUNTS = gql`\n  query {\n    allVouchers {\n      nodes {\n        id\n        name\n        code\n        uses\n        maxUses\n        isActive\n        voucherCodes\n        description\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst MASTERPURITIES = gql`\n  query {\n    allMasterMetalsPurities {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLIST = `\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER = `\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst MASTERCATEGORY = `\nquery {\n  \n    allMasterProductCategories {\n      nodes {\n        name\n        shortCode\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        name\n        shortCode\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        name\n        id\n        shortCode\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        shortCode\n      }\n    }\n  \n  \n}`;\n\nconst GEMSTONEMASTER = `\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\nconst MAKINGCHARGEPRICELIST = gql`\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\n    allMakingChargeSettings(condition: { vendorCode: $vendorCode, rateType: $ratetype }) {\n      nodes {\n        weightStart\n        weightEnd\n        vendorCode\n        updatedAt\n        sellingPriceType\n        rateType\n        purity\n        priceType\n        price\n        material\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst PRODUCTLISTSTATUSEDIT = gql`\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\n    __typename\n    updateProductListByProductId(input: { productId: $productId, productListPatch: { isactive: $isActive } }) {\n      clientMutationId\n      productList {\n        isactive\n      }\n    }\n  }\n`;\n\nconst CREATETAXSETUP = gql`\n  mutation MyMutation(\n    $id: UUID!\n    $updatedAt: Date!\n    $createdAt: Date!\n    $taxValue: Double!\n    $taxName: String!\n    $hsnNumber: String!\n  ) {\n    __typename\n    createMasterTaxSetting(\n      input: {\n        masterTaxSetting: {\n          id: $id\n          updatedAt: $updatedAt\n          createdAt: $createdAt\n          taxValue: $taxValue\n          taxName: $taxName\n          hsnNumber: $hsnNumber\n        }\n      }\n    ) {\n      clientMutationId\n    }\n  }\n`;\n\nconst VOUCHERSTATUSEDIT = gql`\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateVoucherById(input: { id: $voucherId, voucherPatch: { isActive: $isActive } }) {\n      clientMutationId\n      voucher {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateSaleDiscountById(input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }) {\n      clientMutationId\n      saleDiscount {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DELETEMARKUPPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deletePricingMarkupById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGOLDPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETESALEDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteSaleDiscountById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteVoucherById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEMAKINGCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGEMCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETEDIAMONDCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productId\n    productName\n    productType\n    prodDescription\n    vendorCode\n    productVendorCode\n    sellingQty\n    maxBookingQty\n    gender\n    earringBacking\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n   \n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        marginOnSalePercentage\n        markupPriceTax\n        marginOnSalePercentage\n        sellingPrice\n        discountDesc\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        availableStockQty\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n`;\n\nconst ALLMASTERRINGSIZE = `\n  query {\n    allMasterRingsSizes {\n      nodes {\n        gender\n        productType\n        name\n        size\n        sizeValue\n      }\n    }\n  }\n`;\n\nconst ALLSTYLORILANDINGBANNERS = `\nquery MyQuery {\n  allStyloriBanners {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n    }\n  }\n}\n`;\nconst ALLSTYLORISILVERLANDINGBANNERS = `\nquery MyQuery {\n  allStyloriSilverBanners(condition: {urlParam: \"landing\"}) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}\n\n\n`;\n\nconst CREATESTYLORILANDINGBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createStyloriBanner(\n    input: {\n      styloriBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n      }\n    }\n  ) {\n    clientMutationId\n    styloriBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\nconst DELETESTYLORILANDINGBANNER = `\nmutation MyMutation($id : Int!) {\n  deleteStyloriBannerById(input: {id: $id}) {\n    styloriBanner {\n      id\n      mobile\n      position\n      url\n      web\n      \n    }\n  }\n}`;\n\nconst ALLSTYLORISILVERLISTINGBOTTOMBANNERS = `\nquery MyQuery {\n  allStyloriSilverBanners(condition: {urlParam: \"bottom\"}) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}\n`;\nconst CREATESILVERLISTINGBOTTOMBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n   $position: String\n) {\n  createStyloriSilverBanner(\n    input: {\n      styloriSilverBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        url: $url\n        web: $web\n        urlParam: \"bottom\"\n        position: $position\n      }\n    }\n  ) {\n    clientMutationId\n    styloriSilverBanner {\n      id\n      mobile\n      updatedAt\n      url\n      web\n      createdAt\n      urlParam\n    }\n  }\n}\n\n`;\nconst DELETESILVERLISTINGBOTTOMBANNER = `\nmutation MyMutation($id: Int!) {\n  deleteStyloriSilverBannerById(input: { id: $id }) {\n    styloriSilverBanner {\n      id\n      mobile\n      position\n      url\n      web\n    }\n  }\n}`;\n\nconst CREATESILVERLANDINGBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: String\n) {\n  createStyloriSilverBanner(\n    input: {\n      styloriSilverBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam :\"landing\"\n      }\n    }\n  ) {\n    clientMutationId\n    styloriSilverBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}`;\nconst DELETESILVERLANDINGBANNER = `\nmutation MyMutation($id : Int!) {\n  deleteStyloriSilverBannerById(input: {id: $id}) {\n    styloriSilverBanner {\n      id\n      nodeId\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\nconst ALLSTYLORISILVERLISTINGPAGE = `\nquery MyQuery {\n  allStyloriSilverBanners\n  (condition: {urlParam: \"listingPage\"}) \n  {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam \n    }\n  }\n}\n\n`;\n\nconst ALLSPECIFICLISTINGPAGE = `\nquery MyQuery {\n  allStyloriSilverBanners\n  (condition: {url: \"specificListingPage\"}) \n  {\n    nodes {\n      id\n      mobile\n      position\n      web\n      urlParam\n    }\n  }\n}\n`;\n\nconst CREATESPECIFICLISTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $web: String\n  $mobile: String\n  $urlParam :String\n) {\n  createStyloriSilverBanner(\n    input: {\n      styloriSilverBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n       \n        url: \"specificListingPage\"\n        web: $web\n        urlParam : $urlParam\n      }\n    }\n  ) {\n    clientMutationId\n    styloriSilverBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nconst CREATESILVERLISTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: String\n) {\n  createStyloriSilverBanner(\n    input: {\n      styloriSilverBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam : \"listingPage\"\n      }\n    }\n  ) {\n    clientMutationId\n    styloriSilverBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\nconst PRODUCTDESCRIPTIONEDIT = `\nmutation MyMutation($productId: String!, $prod_desc: String!) {\n  updateProductListByProductId(\n    input: {\n      productListPatch: { prodDescription: $prod_desc }\n      productId: $productId\n    }\n  ) {\n    productList {\n      prodDescription\n      id\n      productId\n    }\n  }\n}\n\n`;\n\nconst ALLSTYLORISILVERROUTINGPAGE = `\nquery MyQuery {\n  allStyloriSilverBanners(condition: {url: \"#\"}) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}`;\nconst CREATESTYLORISILVERROUTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $web: String\n  $mobile: String\n  $position: String\n  $urlParam: String\n) {\n  createStyloriSilverBanner(\n    input: {\n      styloriSilverBanner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: \"S\"\n        web: $web\n        urlParam: $urlParam\n      }\n    }\n  ) {\n    clientMutationId\n    styloriSilverBanner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n      urlParam\n    }\n  }\n}\n`;\n\nconst HOLIDAYLIST = gql`\n  query ($first: Int, $offset: Int, $filter: HolidayManagerFilter) {\n    allHolidayManagers(first: $first, offset: $offset, filter: $filter, orderBy: DATE_ASC) {\n      nodes {\n        id\n        holiday\n        date\n        createdAt\n        updatedAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst WAREHOUSELIST = gql`\n  query {\n    allWarehouses(orderBy: ID_ASC) {\n      nodes {\n        id\n        name\n        shippingInDays\n        isActive\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\n\nconst INVENTORYLIST = gql`\n  query ($first: Int, $offset: Int, $filter: InventoryFilter) {\n    allInventories(first: $first, offset: $offset, filter: $filter) {\n      nodes {\n        id\n        generatedSku\n        numberOfItems\n        createdAt\n        updatedAt\n        warehouse: warehouseByWarehouseId {\n          id\n          name\n        }\n      }\n      totalCount\n    }\n  }\n`;\n\nconst VALIDATEGENERATEDSKU = gql`\n  query ($generatedSku: String!) {\n    allTransSkuLists(condition: { generatedSku: $generatedSku }) {\n      nodes {\n        id\n      }\n    }\n  }\n`;\n\nconst STOCKSTATUS = gql`\n  query {\n    allWarehouses {\n      nodes {\n        name\n        isActive\n        inventoriesByWarehouseId {\n          aggregates {\n            sum {\n              numberOfItems\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ABANDONEDCART = gql`\n  query (\n    $first: Int\n    $offset: Int\n    $orderBy: [ShoppingCartsOrderBy!]\n    $condition: ShoppingCartCondition\n    $filter: ShoppingCartFilter\n  ) {\n    allShoppingCarts(first: $first, offset: $offset, orderBy: $orderBy, condition: $condition, filter: $filter) {\n      nodes {\n        id\n        isActive\n        netAmount\n        status\n        taxAmount\n        userprofileId\n        user: userProfileByUserprofileId {\n          id\n          firstName\n          lastName\n          username\n          email\n          mobile\n        }\n        cart_items: shoppingCartItemsByShoppingCartId {\n          nodes {\n            productSku\n            qty\n            transSkuListByProductSku {\n              generatedSku\n              skuId\n              productListByProductId {\n                productName\n              }\n            }\n          }\n        }\n        grossAmount\n        discountedPrice\n        discount\n        createdAt\n        updatedAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst CARTBYID = gql`\n  query ($id: UUID!) {\n    cart: shoppingCartById(id: $id) {\n      id\n      isActive\n      netAmount\n      status\n      taxAmount\n      userprofileId\n      grossAmount\n      discountedPrice\n      discount\n      createdAt\n      updatedAt\n      address: cartAddressesByCartId {\n        nodes {\n          id\n          addressline1\n          addressline2\n          city\n          contactNumber\n          country\n          countryCode\n          createdAt\n          firstname\n          lastname\n          pincode\n          salutation\n          state\n          updatedAt\n          addressType\n        }\n      }\n      user: userProfileByUserprofileId {\n        id\n        firstName\n        lastName\n        username\n        email\n        mobile\n        isemailverified\n        ismobileverified\n      }\n      cart_items: shoppingCartItemsByShoppingCartId {\n        nodes {\n          productSku\n          qty\n          transSkuListByProductSku {\n            markupPrice\n            markupPriceTax\n            discountPrice\n            discountPriceTax\n            generatedSku\n            skuId\n            productListByProductId {\n              productName\n              productImagesByProductId(condition: { isdefault: true, imagePosition: 1 }) {\n                nodes {\n                  productId\n                  imageUrl\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport {\n  PRODUCTCATEGORY,\n  PRODUCTLIST,\n  PRODUCTEDIT,\n  PRODUCTLISTSTATUSEDIT,\n  PRODUCTDIAMONDTYPES,\n  GOLDPRICELIST,\n  DIAMONDPRICELIST,\n  GEMPRICELIST,\n  MAKINGCHARGEPRICELIST,\n  VENDORLIST,\n  ALLPRODUCTLIST,\n  DIAMONDMARKUP,\n  PRODUCTFILTERMASTER,\n  METALMASTER,\n  GEMSTONEMASTER,\n  MASTERCATEGORY,\n  DELETEMARKUPPRICE,\n  DELETEMAKINGCHARGE,\n  DELETEGEMCHARGE,\n  DELETEGOLDPRICE,\n  DELETESALEDISCOUNT,\n  CATGORYLIST,\n  DELETEDIAMONDCHARGE,\n  VENDORLISTS,\n  TaxList,\n  PRODUCTTYPEMASTER,\n  MATERIALMASTER,\n  MASTERCOLORS,\n  MASTERPURITIES,\n  SALEDISCOUNTS,\n  VOUCHERDISCOUNTS,\n  DELETEVOUCHERDISCOUNT,\n  VOUCHERSTATUSEDIT,\n  DISCOUNTSTATUSEDIT,\n  MASTERMATERIAL,\n  MASTERMATERIALCOLORS,\n  MASTERPRODUCTPURITIES,\n  COLLECTIONMASTER,\n  DESIGNMASTER,\n  DIAMONDMASTER,\n  DIAMONDSETTINGS,\n  DIAMONDSHAPES,\n  MASTERPRODUCTTYPES,\n  MASTERGEMSETTINGS,\n  MASTERGEMSHAPES,\n  MASTERGEMTYPES,\n  MASTERGENDER,\n  SEOPRIORITIES,\n  CREATETAXSETUP,\n  TaxSettingList,\n  MASTERCATEGORIES,\n  EARRINGBACKING,\n  MASTERATTRIBUTES,\n  MASTERSTONESHAPES,\n  MASTERSTONECOLORS,\n  MASTERSTONES,\n  MASTERWEIGHTS,\n  THEMEMASTER,\n  STYLEMASTER,\n  OCCASSIONSMASTER,\n  PAYMENTSTATUSMASTER,\n  SHIPPINGZONES,\n  MASTERCOUNTRIES,\n  SHIPPINGCHARGES,\n  ACTIVESHIPPINGZONES,\n  MASTERPAGES,\n  GOLDPRICESETUPMASTER,\n  ALLMASTERRINGSIZE,\n  ALLSTYLORILANDINGBANNERS,\n  CREATESTYLORILANDINGBANNER,\n  DELETESTYLORILANDINGBANNER,\n  ALLSTYLORISILVERLANDINGBANNERS,\n  CREATESILVERLANDINGBANNER,\n  DELETESILVERLANDINGBANNER,\n  PRODUCTDESCRIPTIONEDIT,\n  ALLMARKUPPRICE,\n  ALLSTYLORISILVERLISTINGPAGE,\n  CREATESILVERLISTINGPAGE,\n  ALLSTYLORISILVERROUTINGPAGE,\n  CREATESTYLORISILVERROUTINGPAGE,\n  HOLIDAYLIST,\n  WAREHOUSELIST,\n  INVENTORYLIST,\n  VALIDATEGENERATEDSKU,\n  STOCKSTATUS,\n  ABANDONEDCART,\n  CARTBYID,\n  ALLSPECIFICLISTINGPAGE,\n  CREATESPECIFICLISTINGPAGE,\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\n  CREATESILVERLISTINGBOTTOMBANNER,\n  DELETESILVERLISTINGBOTTOMBANNER,\n};\n","import { gql } from \"apollo-boost\";\n\nexport const PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const USERORDERS = gql`\n  query($userid: UUID!) {\n    allOrders(\n      filter: { userProfileByUserProfileId: { id: { equalTo: $userid } } }\n    ) {\n      nodes {\n        paymentMode\n        paymentStatus\n        updatedAt\n        createdAt\n        awbNumber\n        cartId\n        orderStatus\n        comments\n        id\n        shoppingCartByCartId {\n          shoppingCartItemsByShoppingCartId {\n            nodes {\n              transSkuListByProductSku {\n                generatedSku\n                productListByProductId {\n                  productCategory\n                  productType\n                  productCollectionsByProductId {\n                    nodes {\n                      collectionName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          giftwrapsByCartId {\n            nodes {\n              message\n              giftFrom\n              giftTo\n            }\n          }\n\n          cartAddressesByCartId {\n            nodes {\n              firstname\n              contactNumber\n              addressline1\n              addressline2\n              city\n              pincode\n              state\n            }\n          }\n          userProfileByUserprofileId {\n            firstName\n            mobile\n            email\n          }\n        }\n        paymentDetailsByOrderId {\n          nodes {\n            paymentResponse\n          }\n        }\n      }\n    }\n  }\n`;\nexport const ORDERS = (orderid) => gql`query {\n  allOrders(filter:  ${\n    orderid\n      ? `{userProfileId: {equalTo: \"${orderid}\"}}`\n      : `{id: {isNull: false}}`\n  },orderBy: CREATED_AT_DESC) {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n          userAddressesByUserProfileId {\n            nodes {\n              contactNumber\n            }\n          }\n          \n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`;\n\nexport const MATERIALMASTER = gql`\n  query {\n    allMasterVendors {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterPricingComponents(condition: { isActive: true }) {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductCategories {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const VOUCHERMASTER = gql`\n  query {\n    allMasterVendors {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterPricingComponents(condition: { isActive: true }) {\n      nodes {\n        name\n        id\n      }\n    }\n    allMasterProductCategories {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n\n    allMasterMetalsPurities {\n      nodes {\n        name\n        id\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n\n    allMasterThemes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        shortCode\n        diamondColor\n        diamondClarity\n        id\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        name\n        alias\n        id\n      }\n    }\n  }\n`;\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`;\n\nexport const TAXMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._,\n        //     name: _.name,\n        //     size:_.size,\n        //     productType : _.productType ,\n        // }))\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking,\n            // metalSizeMinToMax\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const userOders = {\n    query: USERORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._\n        // }))\n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes,\n            // metalSizeMinToMax\n        }\n    }\n\n\n}","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api.stylori.com\";\nexport const API_URL = \"https://api.stylori.com\";\nexport const GRAPHQL_DEV_CLIENT = \"https://api.stylori.com/graphql\";\nexport const URL = \"https://console.stylori.com\";\nexport const BASE_IMAGE_URL = \"https://assets.stylori.com/\";\nexport const APP_URL = \"https://stylori.com\";\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"\n// export const BASE_URL = \"http://localhost:8000\"\n// export const URL = \"https://localhost:3000\"\n","import React from \"react\";\nimport { productCategory } from \"../services/mapper\";\nimport { API_URL } from \"../config\";\nimport { isString } from \"util\";\n\nconst TOKEN = \"accesstoken\";\n\nconst initialNetworkCtx = {\n  networkCtx: {\n    mapper: productCategory,\n    status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n    notRequested: true,\n  },\n  setNetworkCtx: () => null,\n  sendNetworkRequest: () => null,\n};\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n  url = API_URL + url;\n  console.info(\"URL\", url, data);\n  const method = data ? \"POST\" : \"GET\",\n    headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n  let resdata = null;\n  if (auth) {\n    const token = localStorage.getItem(TOKEN);\n    if (token) headers[\"x-access-token\"] = token;\n    // else window.location = '/'\n  }\n  const response = await fetch(\n    url,\n    method === \"GET\"\n      ? { method }\n      : {\n          method,\n          body: isString(data) ? data : JSON.stringify(data),\n          headers,\n        }\n  );\n\n  if (response.status < 400) {\n    resdata = await response.json();\n  } else {\n    resdata = await response.json();\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n    // {\n    //    if(!resdata.auth)\n    //    {\n    //     //alert(resdata.message)\n    //    }\n    // }else{\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    // }\n  }\n  resdata[\"statuscode\"] = response.status;\n\n  return resdata;\n};\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n  const [networkCtx, setNetworkCtx] = React.useState(initialNetworkCtx.networkCtx);\n\n  return (\n    <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}>{props.children}</NetworkContext.Provider>\n  );\n};\n","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst productuploadCtxInitial = {\n  productCtx: {\n    product_categoy: \"\",\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\n    product_type: \"\",\n    productname: \"\",\n    material: \"\",\n    product_type_shortcode: \"\",\n    category: [],\n    metalColour: \"\",\n    metalpurities: \"\",\n    isExpand: false,\n    selectedgender: \"\",\n    selected_metal_colour: {},\n    gender: {},\n    product_gender: [],\n    vendorcode: \"\",\n    productseries: [],\n    size: 0,\n    sizes: [],\n    selected_sizes: [],\n    metal: {\n      value: 1,\n      label: \"Diamond\",\n    },\n    materials: [\n      \"Diamond\",\n      \"Gold\",\n      \"Gemstone\",\n      \"Solitaire\",\n      \"Silver\",\n      \"Platinum\",\n    ],\n    gemstontypes: \"\",\n    gemstonshapes: \"\",\n    product_code: \"\",\n    isactive: false,\n    gemstonelist: [],\n    diamondlist: [],\n    variants: [],\n    oldproductMetalColor: [],\n    oldproductMetalPurity: [],\n    productMetalColor: [],\n    productMetalPurity: [],\n    productDiamondColor: [],\n    productDiamondClarity: [],\n    productDiamondTypes: [],\n    productImages: [],\n    productDiamondTypesArray: [],\n    oldproductDiamondTypesArray: [],\n    productmaterials: [],\n    createVariantList: [],\n    editVariants: [],\n    editDiamondLists: [],\n    editGemstoneLists: [],\n    productVariantSize: [\n      8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n    ],\n    variant_size: [],\n    gemstonetype: \"\",\n    gemstoneshape: \"\",\n    gemstonesettings: \"\",\n    gemstonesize: \"\",\n    gemstonecount: \"\",\n    gemstoneweight: \"\",\n    stonetype: \"\",\n\n    editleadtime: \"\",\n    editreadytoship: false,\n    editisdefault: false,\n    editisactive: false,\n\n    editcostprice: 0,\n    editsellingprice: 0,\n    editmarkupprice: 0,\n    editdiscountprice: 0,\n    editcostpricetax: 0,\n    editsellingpricetax: 0,\n    editmarkuppricetax: 0,\n    editdiscountpricetax: 0,\n\n    diamondclarity: \"\",\n    diamondcolor: \"\",\n    diamondsettings: \"\",\n    diamondshape: \"\",\n    diamondcount: \"\",\n    diamondweight: \"\",\n    metalindex: -1,\n    themes: [],\n    prod_styles: [],\n    occassions: [],\n    collections: [],\n    stonecount: [],\n    stonecolour: [],\n    product_images: {},\n    metalcolour: [],\n    metal_purity: [],\n    metalpurity: [],\n    metal_color: 0,\n    metal_weight: 0,\n    diamond_colour: 0,\n    diamond_clarity: 0,\n    metal_height: 0,\n    metal_width: 0,\n    metal_length: 0,\n    metal_object: 0,\n    diamondtype: 0,\n    metals: [],\n    error_message: {},\n    prod_desc: \"\",\n  },\n  masterData: {},\n  setProductCtx: () => null,\n};\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n  return productuploadCtxInitial.productCtx;\n};\n\nexport const ProductProvider = (props) => {\n  console.info(\"PROPS\", props, props.value.mappertype);\n  const [productCtx, setProductCtx] = React.useState(\n    mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\n  );\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"productCtx s\", productCtx);\n  }, [productCtx.material]);\n\n  return (\n    <ProductContext.Provider\n      value={{\n        productCtx,\n        setProductCtx,\n        masterData: mapDataToCtx(\n          props.value.data,\n          props.value.mapper,\n          props.value.mappertype\n        ),\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \n    if(Object.keys(apiData).length === 0) return {};\n \n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport gradients from \"../../../../utils/gradients\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { GlobalContext } from \"../../../../context\";\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar,\n} from \"@material-ui/core\";\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: \"is required\" },\n    email: true,\n  },\n  password: {\n    presence: { allowEmpty: false, message: \"is required\" },\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  card: {\n    maxWidth: \"100%\",\n    overflow: \"unset\",\n    display: \"flex\",\n    position: \"relative\",\n    \"& > *\": {\n      flexGrow: 1,\n      flexBasis: \"50%\",\n      width: \"50%\",\n    },\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4),\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: \"absolute\",\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32,\n  },\n  loginForm: {},\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n  person: {\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      flexGrow: 1,\n      margin: theme.spacing(1),\n    },\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {},\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState((formState) => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {},\n    }));\n  }, [formState.values]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setFormState((formState) => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === \"checkbox\"\n            ? event.target.checked\n            : event.target.value,\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true,\n      },\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (formState.isValid) {\n      //alert(JSON.stringify(formState.values))\n      let signinobj = await sendNetworkRequest(\n        \"/api/auth/signin\",\n        {},\n        formState.values\n      );\n\n      if (signinobj.statuscode === 200) {\n        localStorage.setItem(\"accesstoken\", signinobj.accessToken);\n\n        let pageaccess = await sendNetworkRequest(\n          \"/getpageaccess\",\n          {},\n          {},\n          true\n        );\n        let pages = [];\n        let pagepermissions = [];\n        let bannerpage = {\n          pagename: \"Banners\",\n          pageurl: \"/banners\",\n          is_view: true,\n          is_write: true,\n        };\n\n        debugger;\n        console.log(pageaccess);\n        // pageaccess.pages.push(bannerpage);\n        pageaccess.pages.forEach((element) => {\n          pages.push(element.pageurl);\n          // pagepermissions[element.pageurl] = {\n          //   isread : element.is_view,\n          //   iswrite : element.is_write\n          // }\n          if (element.is_write) {\n            pagepermissions.push(element.pageurl);\n          }\n        });\n        // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n        //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n        localStorage.setItem(\"accesspages\", pages);\n        localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n        props.history.push(\"/productlist\");\n      } else {\n        setShowmessage(signinobj.message);\n        setOpen(true);\n      }\n    } else {\n      alert(\"has some error\");\n    }\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = (field) =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography gutterBottom variant=\"h3\">\n          Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {/* Sign in on the internal platform */}\n        </Typography>\n\n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError(\"email\")}\n              fullWidth\n              helperText={hasError(\"email\") ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || \"\"}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError(\"password\")}\n              fullWidth\n              helperText={\n                hasError(\"password\") ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || \"\"}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Log in\n          </Button>\n          <Snackbar\n            open={open}\n            autoHideDuration={6000}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            onClose={handleClose}\n          >\n            <Alert onClose={handleClose} severity=\"error\">\n              {showmessage}\n            </Alert>\n          </Snackbar>\n        </form>\n      </CardContent>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default withRouter(LoginForm);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport { Input } from \"../../components/Input.js\";\nimport Page from \"../../components/Page\";\n\nimport \"./Login.css\";\nimport { LoginForm } from \"./components\";\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar,\n} from \"@material-ui/core\";\n\nexport class Login extends React.Component {\n  render() {\n    return (\n      <Page className=\"root\" title=\"Login\">\n        <LoginForm />\n      </Page>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport clsx from \"clsx\";\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext } from \"../../context\";\nimport FullLoader from \"../../components/Loader\";\nimport \"./Productupload.css\";\nimport Select from \"react-select\";\nimport \"./floating_dropdown.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useQuery } from \"react-apollo\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n];\nconst useStyles = makeStyles((theme) => ({\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  dropdownlayout: {\n    \"& .menu\": {\n      position: \"Relative !important\",\n    },\n  },\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3),\n  },\n  fieldGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0),\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n    },\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  dateField: {\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AddressForm(props) {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [initailRingSize, updateRingSize] = useState([]);\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  async function getMasterRingSize() {\n    fetch(GRAPHQL_DEV_CLIENT, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\n    })\n      .then((res) => res.json())\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\n  }\n  React.useEffect(() => {\n    getMasterRingSize();\n  }, []);\n  React.useEffect(() => {}, [productCtx]);\n\n  // const handleChange = selectedOption => {\n\n  // };\n  const handlesizeChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\n  };\n  const handlevendorChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\n  };\n\n  const changeproducttype = (type) => (event, newvalue) => {\n    setProductCtx({ ...productCtx, product_type: newvalue });\n  };\n  const handlechange = (type) => (selectedOption) => {\n    if (type === \"product_type\") {\n      if (selectedOption) {\n        var size = \"\";\n        var minvalue = 0;\n        var maxvalue = 0;\n        var selected_sizes = [];\n        var default_size = 0;\n        if (selectedOption.shortCode === \"K\") {\n          selected_sizes.push({\n            value: \"KID\",\n            label: \"KID\",\n          });\n          selected_sizes.push({\n            value: \"XS\",\n            label: \"XS\",\n          });\n          selected_sizes.push({\n            value: \"S\",\n            label: \"S\",\n          });\n          selected_sizes.push({\n            value: \"M\",\n            label: \"M\",\n          });\n          selected_sizes.push({\n            value: \"L\",\n            label: \"L\",\n          });\n          selected_sizes.push({\n            value: \"XL\",\n            label: \"XL\",\n          });\n        } else {\n          if (selectedOption.shortCode === \"R\" && productCtx.selectedgender.name === \"Male\") {\n            minvalue = 13;\n            maxvalue = 25;\n            default_size = 15;\n          }\n          if (selectedOption.shortCode === \"R\" && productCtx.selectedgender.name === \"Female\") {\n            minvalue = 8;\n            maxvalue = 23;\n            default_size = 12;\n          }\n\n          for (var i = minvalue; i < maxvalue; i++) {\n            selected_sizes.push({\n              value: i,\n              label: \"\" + i,\n            });\n          }\n        }\n\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: selectedOption.shortCode,\n          product_type: selectedOption,\n          size,\n          default_size,\n          selected_sizes,\n        });\n      } else {\n        setProductCtx({ ...productCtx, product_type_shortcode: \"\", product_type: \"\", size, selected_sizes: \"\" });\n      }\n    } else {\n      setProductCtx({ ...productCtx, [type]: selectedOption });\n    }\n  };\n  const handleTextChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"vendorcode\") {\n      setProductCtx({ ...productCtx, [type]: value, vendorleadtime: value.vendorDelivaryDays });\n    } else {\n      setProductCtx({ ...productCtx, [type]: value });\n    }\n  };\n\n  const switchisorderable = (event) => {\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\n  };\n\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n\n  const handleGenderChange = (type) => (event, value) => {\n    var minvalue = 0;\n    var maxvalue = 0;\n    var selected_sizes = [];\n    var sizes = [];\n    var default_size = 0;\n    // if (productCtx.product_type.shortCode === \"K\") {\n    //   default_size = \"XS\";\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    // } else {\n    //   if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\n    //     minvalue = 13;\n    //     maxvalue = 26;\n    //     default_size = \"\" + 15;\n    //   }\n    //   if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\n    //     minvalue = 8;\n    //     maxvalue = 24;\n    //     default_size = \"\" + 12;\n    //   }\n\n    //   for (var i = minvalue; i < maxvalue; i++) {\n    //     selected_sizes.push(\"\" + i);\n    //     sizes.push(\"\" + i);\n    //   }\n    // }\n\n    initailRingSize.forEach((e) => {\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\n        selected_sizes.push(\"\" + e.sizeValue);\n        sizes.push(\"\" + e.sizeValue);\n      }\n    });\n    setProductCtx({ ...productCtx, [type]: value, sizes, selected_sizes, default_size });\n  };\n\n  const handleMaterialChange = (type) => (event, value) => {\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\n    if (value) {\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\n        if (steps.indexOf(\"Step3\") === -1) {\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n        }\n      }\n    }\n    setProductCtx({ ...productCtx, [type]: value, steps });\n  };\n\n  const handleInputChange = (type) => (e) => {\n    var size = productCtx.size;\n    var materials = productCtx.materials;\n    var selected_sizes = productCtx.selected_sizes;\n\n    if (type === \"selectedgender\") {\n      var minvalue = 0;\n      var maxvalue = 0;\n      selected_sizes = [];\n      if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\n        size = \"13-25\";\n        minvalue = 13;\n        maxvalue = 26;\n      }\n      if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\n        size = \"8-18\";\n        minvalue = 8;\n        maxvalue = 19;\n      }\n\n      for (var i = minvalue; i < maxvalue; i++) {\n        selected_sizes.push({\n          value: i,\n          label: \"\" + i,\n        });\n      }\n    }\n\n    if (type === \"product_categoy\") {\n      if (e.target.value === \"Platinum Jewellery\") {\n        materials.push(\"Platinum Jewellery\");\n        var index = materials.indexOf(\"Silver Jewellery\");\n\n        if (index >= 0) {\n          materials.splice(index, 1);\n        }\n      } else if (e.target.value === \"Silver Jewellery\") {\n        materials.push(\"Silver Jewellery\");\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\n        if (index1 >= 0) {\n          materials.splice(index1, 1);\n        }\n      } else {\n        var indexval = materials.indexOf(\"Silver Jewellery\");\n\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n        indexval = materials.indexOf(\"Platinum Jewellery\");\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n      }\n    }\n\n    setProductCtx({ ...productCtx, size, [type]: e, materials, selected_sizes });\n  };\n\n  const materialChange = (type) => (selectedOption) => {\n    //   let material = { ...productCtx.material, [type]: selectedOption }\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\n    //   if(material.material)\n    //   {\n    //   material.material.forEach(element => {\n    let material_names = [];\n    if (selectedOption) {\n      selectedOption.forEach((element) => {\n        material_names.push(element.name);\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\n          if (steps.indexOf(\"Step3\") === -1) {\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n          }\n        }\n      });\n    }\n    //   });\n    // }\n\n    setProductCtx({ ...productCtx, [type]: selectedOption, steps, material_names });\n  };\n  const keyPress = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {/* <FullLoader /> */}\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} spacing={1}>\n            <Card {...rest} className={clsx(classes.root, className)}>\n              <CardHeader title=\"Product Information 1\" />\n              <Divider />\n              <CardContent className={classes.cardcontent}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} sm={12} spacing={1}>\n                    <Input\n                      className={classes.helperinput}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      error={productCtx.error_message.productname}\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={keyPress(\"productname\")}\n                    />\n                  </Grid>\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\n                    <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange(\"product_categoy\")}\n                      options={productCtx.masterData.category.map((option) => option.label)}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />)\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Category\"\n                          margin=\"dense\"\n                          error={productCtx.error_message.product_categoy}\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} spacing={1}>\n                    <Autocomplete\n                      id=\"product_type\"\n                      className={classes.fixedTag}\n                      getOptionLabel={(option) => option.label}\n                      defaultValue={productCtx.product_type}\n                      options={productCtx.masterData.product_type}\n                      onChange={handleoptionChange(\"product_type\")}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />)\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Type\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          error={productCtx.error_message.product_type}\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Product Information 2\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      {productCtx.product_type ? (\n                        <>\n                          <Grid item xs={12} sm={6}>\n                            <Autocomplete\n                              id=\"free-solo-2-demo\"\n                              multiple\n                              className={classes.fixedTag}\n                              defaultValue={productCtx.material_names}\n                              options={productCtx.masterData.material.map((option) => option.label)}\n                              onChange={handleMaterialChange(\"material_names\")}\n                              renderTags={(value, getTagProps) =>\n                                value.map((option, index) => (\n                                  <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                                ))\n                              }\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Select Product Materials\"\n                                  margin=\"dense\"\n                                  variant=\"outlined\"\n                                  error={productCtx.error_message.material_names}\n                                  fullWidth\n                                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                                />\n                              )}\n                            />\n                          </Grid>\n                        </>\n                      ) : null}\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.selectedgender}\n                          options={productCtx.masterData.gender.map((option) => option.label)}\n                          onChange={handleGenderChange(\"selectedgender\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Gender\"\n                              margin=\"dense\"\n                              error={productCtx.error_message.selectedgender}\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalpurity}\n                          options={productCtx.masterData.metalpurity}\n                          onChange={handleoptionChange(\"metalpurity\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Purity\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              error={productCtx.error_message.metalpurity}\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalcolour}\n                          options={productCtx.masterData.metalcolour}\n                          onChange={handleoptionChange(\"metalcolour\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Colour\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.metalcolour}\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </>\n            ) : null}\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Vendor Information\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.vendorcode}\n                          getOptionLabel={(option) => option.label}\n                          options={productCtx.masterData.vendorcode}\n                          onChange={handleoptionChange(\"vendorcode\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Vendor Code\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.vendorcode}\n                              fullWidth\n                              InputProps={{ ...params.InputProps, type: \"search\" }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Product Code\"\n                          fullWidth\n                          className={classes.helperinput}\n                          value={productCtx.productvendorcode}\n                          error={productCtx.error_message.productvendorcode}\n                          id=\"productvendorcode\"\n                          name=\"productvendorcode\"\n                          onChange={handleTextChange(\"productvendorcode\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Lead Time\"\n                          fullWidth\n                          className={classes.helperinput}\n                          error={productCtx.error_message.vendorleadtime}\n                          value={productCtx.vendorleadtime}\n                          InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                          id=\"vendorleadtime\"\n                          name=\"vendorleadtime\"\n                          onChange={handleTextChange(\"vendorleadtime\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n                          <RadioGroup\n                            aria-label=\"position\"\n                            name=\"position\"\n                            value={productCtx.isreorderable}\n                            onChange={switchisorderable}\n                            row\n                          >\n                            <FormControlLabel\n                              value=\"Yes\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"Yes\"\n                              labelPlacement=\"right\"\n                            />\n                            <FormControlLabel value=\"No\" control={<Radio color=\"primary\" />} label=\"No\" labelPlacement=\"right\" />\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>{\" \"}\n              </>\n            ) : null}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12}>\n                {productCtx.product_type ? (\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader\n                      title=\"Default SKU For Display\n  \"\n                    />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_colour}\n                            onChange={handleoptionChange(\"default_metal_colour\")}\n                            options={productCtx.metalcolour.map((option) => option.label)}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Colour\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_metal_colour}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_purity}\n                            onChange={handleoptionChange(\"default_metal_purity\")}\n                            options={productCtx.metalpurity.map((option) => option.label)}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Purity\"\n                                margin=\"dense\"\n                                error={productCtx.error_message.default_metal_purity}\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>\n                ) : null}\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              (productCtx.product_type.shortCode === \"BA\" ||\n                productCtx.product_type.shortCode === \"R\" ||\n                productCtx.product_type.shortCode === \"SK\" ||\n                productCtx.product_type.shortCode === \"K\") &&\n              productCtx.sizes.length > 0 ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Size Information\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            multiple\n                            freeSolo\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.selected_sizes}\n                            options={productCtx.sizes}\n                            onChange={handleoptionChange(\"selected_sizes\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Ring Sizes\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.selected_sizes}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_type\"\n                            className={classes.fixedTag}\n                            freeSolo\n                            defaultValue={productCtx.default_size}\n                            options={productCtx.selected_sizes}\n                            onChange={handleoptionChange(\"default_size\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Select Default Size\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_size}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type && productCtx.product_type.alias === \"Earrings\" ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Type of Fit\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.earringbacking}\n                            options={productCtx.masterData.earringbacking.map((option) => option.label)}\n                            onChange={handleoptionChange(\"earringbacking\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Earring Backing\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.earringbacking}\n                                InputProps={{ ...params.InputProps, type: \"search\" }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}></Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport {\n  Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\n  CardContent,\n} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Select from \"react-select\";\nimport { Input } from \"../../components/Input.js\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { ProductContext } from \"../../context\";\nimport Box from \"@material-ui/core/Box\";\nimport SelectPlaceholder from \"../../components/SelectPlaceholder.js\";\n\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const materialChange = (type) => (e) => {\n    let selected_metal_colour = {\n      ...productCtx.selected_metal_colour,\n      [type]: e.target.checked,\n    };\n    setProductCtx({ ...productCtx, selected_metal_colour });\n  };\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n\n  console.log(productCtx);\n  return (\n    <React.Fragment>\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={6}>\n          <Card {...rest} className={clsx(classes.root, className)}>\n            <CardHeader title=\"Type of Fit\" />\n            <Divider />\n            <CardContent className={classes.cardcontent}>\n              <Grid container spacing={1}>\n                <Grid item container xs={12} sm={12}>\n                  <Grid item xs={6} sm={3}>\n                    {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange(\"product_code\")}\n                      name=\"size\"\n                      value={\n                        \"S\" +\n                        productCtx.product_type.shortCode +\n                        (productCtx.masterData?.productseries[0].value + 1)\n                      }\n                    />\n                  </Grid>\n                </Grid>\n                {[\"R\", \"B\"].includes(\n                  productCtx.product_type.shortCode\n                ) ? null : (\n                  <>\n                    <Grid item xs={4}>\n                      <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Height\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(\"metal_height\")}\n                        value={\n                          productCtx.metal_height === 0\n                            ? \"\"\n                            : productCtx.metal_height\n                        }\n                      />\n                    </Grid>\n\n                    <Grid item xs={4}>\n                      <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Width\"\n                        name=\"size\"\n                        onChange={handleInputChange(\"metal_width\")}\n                        value={\n                          productCtx.metal_width === 0\n                            ? \"\"\n                            : productCtx.metal_width\n                        }\n                        autoComplete=\"size\"\n                      />\n                    </Grid>\n                  </>\n                )}\n\n                {productCtx.product_type === \"Bracelets\" ? (\n                  <Grid item xs={6}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id=\"size\"\n                      label=\"Length\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange(\"metal_length\")}\n                      value={\n                        productCtx.metal_length === 0\n                          ? \"\"\n                          : productCtx.metal_length\n                      }\n                    />\n                  </Grid>\n                ) : null}\n              </Grid>\n            </CardContent>\n          </Card>\n          <Card {...rest} className={clsx(classes.root, className)}>\n            <CardHeader\n              title=\"Enter weights for different Purity\n\"\n            />\n            <Divider />\n            <CardContent className={classes.cardcontent}>\n              <Grid container spacing={1}>\n                <Grid item xs={12}></Grid>\n                {productCtx.metalpurity.map((row) => (\n                  <Grid item container xs={12} spacing={2}>\n                    <Grid item xs={6}>\n                      <Input\n                        variant=\"outlined\"\n                        disabled\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Purity\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        value={row.name}\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"size\"\n                        label=\"Weight\"\n                        name=\"size\"\n                        error={\n                          productCtx.error_message[`${row.name}_metal_weight`]\n                        }\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(`${row.name}_metal_weight`)}\n                        value={\n                          productCtx[`${row.name}_metal_weight`] === 0\n                            ? \"\"\n                            : productCtx[`${row.name}_metal_weight`]\n                        }\n                      />\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Card {...rest} className={clsx(classes.root, className)}>\n            <CardHeader title=\"Type of Fit\" />\n            <Divider />\n            <CardContent className={classes.cardcontent}>\n              <Grid container xs={12} sm={12} spacing={2}>\n                <Grid item xs={6} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.themes}\n                    onChange={handleoptionChange(\"themes\")}\n                    options={productCtx?.masterData?.themes.map(\n                      (option) => option.name\n                    )}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip\n                          variant=\"outlined\"\n                          size=\"small\"\n                          label={option}\n                          {...getTagProps({ index })}\n                        />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.prod_styles}\n                    onChange={handleoptionChange(\"prod_styles\")}\n                    options={\n                      productCtx.masterData?.styles.map(\n                        (option) => option.name\n                      ) ?? []\n                    }\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip\n                          variant=\"outlined\"\n                          size=\"small\"\n                          label={option}\n                          {...getTagProps({ index })}\n                        />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.prod_styles}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.occassions}\n                    onChange={handleoptionChange(\"occassions\")}\n                    options={\n                      productCtx.masterData?.occasions.map(\n                        (option) => option.name\n                      ) ?? []\n                    }\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip\n                          variant=\"outlined\"\n                          size=\"small\"\n                          label={option}\n                          {...getTagProps({ index })}\n                        />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.occassions}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"product_category\"\n                    multiple\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.collections}\n                    onChange={handleoptionChange(\"collections\")}\n                    options={\n                      productCtx.masterData?.collections.map(\n                        (option) => option.name\n                      ) ?? []\n                    }\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip\n                          variant=\"outlined\"\n                          size=\"small\"\n                          label={option}\n                          {...getTagProps({ index })}\n                        />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error={productCtx.error_message.collections}\n                        InputProps={{ ...params.InputProps, type: \"search\" }}\n                      />\n                    )}\n                  />\n                </Grid>\n                {productCtx.material_names.indexOf(\"Gemstone\") > -1 ? (\n                  <>\n                    <Grid item xs={12} sm={6}>\n                      <Autocomplete\n                        id=\"product_category\"\n                        multiple\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.stonecount}\n                        onChange={handleoptionChange(\"stonecount\")}\n                        options={\n                          productCtx.masterData?.stones.map(\n                            (option) => option.name\n                          ) ?? []\n                        }\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip\n                              variant=\"outlined\"\n                              size=\"small\"\n                              label={option}\n                              {...getTagProps({ index })}\n                            />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"No of Stones\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{\n                              ...params.InputProps,\n                              type: \"search\",\n                            }}\n                          />\n                        )}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <Autocomplete\n                        id=\"product_category\"\n                        multiple\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.stonecolour}\n                        onChange={handleoptionChange(\"stonecolour\")}\n                        options={\n                          productCtx.masterData?.gemstonecolor.map(\n                            (option) => option.name\n                          ) ?? []\n                        }\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip\n                              variant=\"outlined\"\n                              size=\"small\"\n                              label={option}\n                              {...getTagProps({ index })}\n                            />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Stone Colour\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{\n                              ...params.InputProps,\n                              type: \"search\",\n                            }}\n                          />\n                        )}\n                      />\n                    </Grid>\n                  </>\n                ) : null}\n              </Grid>\n\n              <Grid item xs={6}></Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\n// Import React FilePond\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// Import FilePond styles\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\n\n// Register the plugins\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { file } from \"@babel/types\";\n\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginImageValidateSize,\n  FilePondPluginFileRename\n);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n  },\n  img: {\n    height: \"100%\",\n    width: \"100%\",\n    objectFit: \"contain\",\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function Review() {\n  let count = 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images, setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = [];\n    let product_images = [];\n\n    productCtx.metalcolour.forEach((element) => {\n      if (element.name === productCtx.default_metal_colour) {\n        product_images[element.name] = [];\n        if (metalcolour.length > 0) {\n          metalcolour.unshift(element);\n        } else {\n          metalcolour.push(element);\n        }\n      } else {\n        metalcolour.push(element);\n        product_images[element.name] = [];\n      }\n    });\n    setMetalcolour(metalcolour);\n  }, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n    //alert(JSON.stringify(bodaydata))\n\n    let prodimages = productCtx.product_images;\n    if (prodimages) {\n      var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1);\n      let imagecolourobj = productCtx.product_images[imagecolor];\n      var imagecount = 1;\n      if (imagecolourobj) {\n        imagecount = imagecolourobj.length + 1;\n      }\n\n      let imagename = prodid + \"-\" + imagecount + imagecolor.charAt(0);\n      let responsedata = await sendNetworkRequest(\n        \"/uploadimage\",\n        {},\n        { image: bodaydata.fileExtension, filename: imagename, product_id: prodid },\n        false\n      );\n      var returnData = responsedata.data.returnData;\n      var signedRequest = returnData.signedRequest;\n      var url = returnData.url;\n      console.log(\"responseurl\" + url);\n      var filepathname = returnData.filepath;\n      filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\n      var options = {\n        headers: {\n          \"Content-Type\": bodaydata.fileExtension,\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      };\n\n      if (imagecolourobj) {\n        const imageobj = {\n          name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\n          position: imagecolourobj.length + 1,\n          color: imagecolor,\n          image_url: filepathname,\n          url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\n        };\n        if (uploadtype === \"edit\") {\n          imagecolourobj[imageposition] = imageobj;\n        } else {\n          imagecolourobj.push(imageobj);\n        }\n        prodimages[imagecolor] = imagecolourobj;\n      } else {\n        const imageobj = {\n          name: prodid + \"_1\" + imagecolor.charAt(0),\n          position: imageposition,\n          color: imagecolor,\n          image_url: filepathname,\n          url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\n        };\n        imagecolourobj = [];\n        imagecolourobj.push(imageobj);\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n      setProductCtx({ ...productCtx, product_images: prodimages });\n      // setFiles([])\n    }\n    await axios.put(signedRequest, bodaydata.file, options);\n  }\n\n  function removefiles(imageposition, imagecolor) {\n    let prodimages = productCtx.product_images;\n\n    if (prodimages) {\n      let imagecolourobj = prodimages[imagecolor];\n\n      if (imagecolourobj) {\n        if (imagecolourobj.length > imageposition) {\n          let removedfile = imagecolourobj[imageposition];\n\n          imagecolourobj[imageposition] = { ...removedfile, url: \"\" };\n        }\n      }\n      prodimages[imagecolor] = imagecolourobj;\n      setProductCtx({ ...productCtx, product_images: prodimages });\n      //alert(JSON.stringify(productCtx.product_images))\n    }\n  }\n\n  const handleInit = () => {\n    // alert(\"initialized\")\n  };\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item direction=\"row\" xs={12}>\n          <Grid container justify=\"left\" spacing={2}>\n            {metalcolour === undefined\n              ? null\n              : metalcolour.map((value, index) => (\n                  <Grid xs={12} container spacing={1} item>\n                    <Grid xs={12} item>\n                      <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                        {value.name}\n                      </Typography>\n                    </Grid>\n                    {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n                    <Grid xs={12} sm={12} md={12} item>\n                      <FilePond\n                        allowImageValidateSize\n                        imageValidateSizeMinWidth=\"2400\"\n                        imageValidateSizeMinHeight=\"2400\"\n                        imageValidateSizeMeasure={(file) =>\n                          new Promise((resolve, reject) => {\n                            console.log(file);\n                            console.log(\"filepond property\");\n                            debugger;\n                          })\n                        }\n                        labelIdle=\"Upload Image\"\n                        allowMultiple={true}\n                        //files = {files}\n                        onupdatefiles={(fileItem) => {\n                          // Set currently active file objectsfiles to this.state\n                        }}\n                        onaddfile={(error, fileItem) => {\n                          uploadimagetoserver(fileItem, index, value.name, \"add\");\n                        }}\n                        onremovefile={(error, fileItem) => {}}\n                        fileRenameFunction={(file) =>\n                          new Promise((resolve) => {\n                            var prodid =\n                              \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1);\n                            let imagecolourobj = productCtx.product_images[value.name];\n                            var imagecount = 1;\n                            if (imagecolourobj) {\n                              imagecount = imagecolourobj.length + 1;\n                            }\n                            let imagename = prodid + \"_\" + imagecount + value.name.charAt(0) + file.extension;\n                            resolve(imagename);\n                          })\n                        }\n                      ></FilePond>\n                      {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n                    </Grid>\n                  </Grid>\n                ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { Grid } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nimport Step4 from \"./Step4\";\nimport Step5 from \"./Step5\";\nimport Step6 from \"./Step6\";\nimport Step7 from \"./Step7\";\nimport Step8 from \"./Step8\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { element } from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\",\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\",\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;\n    case \"Step6\":\n      return <Step6 />;\n\n    case \"Step7\":\n      return <Step7 />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var error_content = {};\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if (activeStep === 0) {\n      if (!productCtx.product_type) {\n        isvalid = false;\n        error_content[\"product_type\"] = \"Error messsage\";\n      }\n      if (!productCtx.productname) {\n        isvalid = false;\n        error_content[\"productname\"] = \"Error messsage\";\n      }\n      if (!productCtx.product_categoy) {\n        isvalid = false;\n        error_content[\"product_categoy\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.metalcolour) {\n        isvalid = false;\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n      if (!productCtx.material_names) {\n        isvalid = false;\n        error_content[\"material_names\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalpurity\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.vendorcode) {\n        isvalid = false;\n        error_content[\"vendorcode\"] = \"Error messsage\";\n      }\n      if (!productCtx.vendorleadtime) {\n        isvalid = false;\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.default_metal_colour) {\n        isvalid = false;\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\n      }\n      if (!productCtx.default_metal_purity) {\n        isvalid = false;\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\n      }\n      if (!productCtx.productvendorcode) {\n        isvalid = false;\n        error_content[\"productvendorcode\"] = \"Error messsage\";\n      }\n      if (\n        !productCtx.earringbacking &&\n        productCtx.product_type.alias === \"Earrings\"\n      ) {\n        isvalid = false;\n        error_content[\"earringbacking\"] = \"Error messsage\";\n      }\n      if (!productCtx.selectedgender) {\n        isvalid = false;\n        error_content[\"selectedgender\"] = \"Error messsage\";\n      }\n      if (\n        (!productCtx.selected_sizes ||\n          productCtx.selected_sizes.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"selected_sizes\"] = \"Error messsage\";\n      }\n\n      if (\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"default_size\"] = \"Error messsage\";\n      }\n      // isvalid = true;\n    }\n\n    if (activeStep === 1) {\n      productCtx.metalpurity.forEach((element) => {\n        const keyvalue = element.name + \"_metal_weight\";\n\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\n          isvalid = false;\n\n          error_content[keyvalue] = \"Error messsage\";\n        }\n      });\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (productCtx.product_type_shortcode === \"R\") {\n        if (!productCtx.metal_height) {\n          isvalid = false;\n          error_content[\"metal_height\"] = \"Error messsage\";\n        }\n        if (!productCtx.metal_width) {\n          isvalid = false;\n          error_content[\"metal_width\"] = \"Error messsage\";\n        }\n      }\n\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\n        isvalid = false;\n        error_content[\"prod_styles\"] = \"Error messsage\";\n      }\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\n        isvalid = false;\n        error_content[\"occassions\"] = \"Error messsage\";\n      }\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\n      // {\n      //   isvalid = false\n      //   error_content['collections'] = \"Error messsage\"\n      // }\n\n      //  isvalid = true;\n    }\n\n    setProductCtx({ ...productCtx, error_message: error_content });\n    if (activeStep === productCtx.steps.length - 1) {\n      console.info(\"HANDLE\", sendNetworkRequest);\n      const productseries =\n        productCtx.masterData.productseries[0].productSeries;\n\n      delete productCtx[\"masterData\"];\n\n      var formdata = productCtx;\n      formdata[\"productseries\"] = productseries;\n\n      setLoading(true);\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\n      setLoading(false);\n      setSuccess(true);\n      await sleep(500);\n      window.location.replace(\"/productlist\");\n    } else {\n      if (isvalid) {\n        setActiveStep(activeStep + 1);\n      }\n    }\n\n    //else\n    //  {\n    //  }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async function sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n  }\n  console.log(productCtx, \"Component Samir\");\n  return (\n    <Grid item xs={12} sm={12}>\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\n      </Snackbar>\n\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {productCtx.steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel></StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </Paper>\n\n      <React.Fragment>\n        {activeStep === productCtx.steps.length ? (\n          <React.Fragment>\n            <Typography variant=\"h5\" gutterBottom>\n              Product Added Successfully\n            </Typography>\n            <Typography variant=\"subtitle1\"></Typography>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {getStepContent(productCtx.steps[activeStep])}\n            <div className={classes.buttons}>\n              {activeStep !== 0 && (\n                <Button onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === productCtx.steps.length - 1\n                  ? \"Product Upload\"\n                  : \"Next\"}\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Component from \"./Component\";\nimport { ProductProvider } from \"../../context\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const Productupload = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n});\nexport default Productupload;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from \"react\";\nimport { Form, Grid, Select } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip } from \"@material-ui/core\";\n\nconst useStyless = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\",\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange = (type) => (e) => {\n    setSearchtext(e.target.value);\n  };\n  const handlecategoryChange = (type) => (event, value) => {\n    setCategory(value.name);\n    props.applyfilter(searchtext, value.name, producttype);\n  };\n  const handletypeChange = (type) => (event, value) => {\n    setProducttype(value.name);\n    props.applyfilter(searchtext, category, value.name);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  function applyfilter() {\n    props.applyfilter(searchtext, category, producttype);\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div\n      className=\"search\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        background: \"white\",\n        borderTop: \"1px solid #e4e4e4\",\n        borderBottom: \"1px solid #e4e4e4\",\n      }}\n    >\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          fullWidth\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.mastercategory}\n          onChange={handlecategoryChange(\"product_category\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.masterproducttype}\n          onChange={handletypeChange(\"product_type\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <TextField\n          fullWidth\n          margin=\"dense\"\n          onChange={handleinputChange(\"productname\")}\n          placeholder={\"Search by product name or product id\"}\n          onChange={handleinputChange(\"productname\")}\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Button\n          onClick={(e) => applyfilter()}\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          Search\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibityIcon from '@material-ui/icons/Visibility';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'vendor_code', label: 'vendor code' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'createdAt', label: 'Created on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('updatedAt');\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  \n  }, [])\n  useEffect( () => {\n    getproductlist(props.filterparams.searchtext,props.filterparams.categoryname,props.filterparams.product_type,\"\",\"\",order,orderBy)\n  \n  }, [props.filterparams])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n async function showproductdetails(prod_id){\n   let bodycontent = {\n    productid : prod_id\n   }\n\n    let response =  await sendNetworkRequest('/getproducturl', {}, bodycontent)\n    console.log(response)\n  //setProductlists(response.products.rows)\n window.open(response.url, '_blank');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button onClick={(e) => showproductdetails(row.product_id)}>\n                                    <VisibityIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\" onClick={() => showproductdetails(row)}>\n                                    {/* <Link variant=\"body2\">  */}\n                                    {row.product_name}\n\n                                    {/* </Link>   */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  \n\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React from \"react\";\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { URL } from \"../../config\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useHistory } from 'react-router-dom';\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.grey[300],\n    },\n    \"&:active\": {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info(\"You clicked a breadcrumb.\");\n}\n\nexport default function CustomizedBreadcrumbs(props) {\n  let history = useHistory();\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        onClick={() => history.goBack()}\n        // href={props.url ? `${URL + props.url}` : URL + \"/configuration\"}\n        label={props.name ? props.name : \"Configuration\"}\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n    </Breadcrumbs>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Chip,\n  Collapse,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Slider,\n  TextField,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: 420,\n    maxWidth: '100%'\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1\n  },\n  contentSection: {\n    padding: theme.spacing(2, 0)\n  },\n  contentSectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    cursor: 'pointer'\n  },\n  contentSectionContent: {},\n  formGroup: {\n   \n    padding: theme.spacing(2, 0)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  tags: {\n    marginTop: theme.spacing(1)\n  },\n  minAmount: {\n    marginRight: theme.spacing(3)\n  },\n  maxAmount: {\n    marginLeft: theme.spacing(3)\n  },\n  radioGroup: {},\n  actions: {\n    padding: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Filter = props => {\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n      name: '',\n      company: '',\n      mobile: '',\n      city: '',\n      version: null,\n      commodity: []\n  };\n\n  const [expandProject, setExpandProject] = useState(true);\n  const [expandCustomer, setExpandCustomer] = useState(false);\n  const [values, setValues] = useState({ ...initialValues });\n\n  const handleClear = () => {\n    setValues({ \n      ...initialValues });\n  };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n  const handleoptionchange = type => (event, value) => {\n    setValues(values => ({\n      ...values,\n      [type]: value\n    }));\n  }\n  const handleinputchange = type => (e) => {\n    setValues({\n      ...values,\n      [type]: e.target.value\n    })\n  }\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n  const handleDateChange = type => (date) => {\n    setValues({\n      ...values,\n      [type]: date\n    })\n  };\n  const handleToggleProject = () => {\n    setExpandProject(expandProject => !expandProject);\n  };\n\n  const handleToggleCustomer = () => {\n    setExpandCustomer(expandCustomer => !expandCustomer);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    onFilter && onFilter(values);\n    onClose && onClose()\n  };\n\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.header}>\n          <Button\n            onClick={onClose}\n            size=\"small\"\n          >\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </div>\n        <div className={classes.content}>\n          <Grid container xs={12} spacing={1}>\n            {/* <Grid item xs={12}>\n                      <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={values.name}\n                            onChange={handleinputchange('name')}\n                           label=\"Name\"\n                          />\n            </Grid> */}\n             <Grid xs={12}>\n            <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masters.product_categories}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_category}\n                  getOptionLabel={(option) => option.name}\n                  onChange={handleoptionchange('product_category')}\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n                      \n           \n            <Grid item xs={12}>\n            <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={masters.product_types}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_type}\n                  onChange={handleoptionchange('product_type')}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n           </Grid>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            fullWidth\n            onClick={handleClear}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Apply filters\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  masters : PropTypes.object,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, className, ...rest } = props;\n  const [searchcontent, setSearchcontent] = React.useState('');\n\n  const classes = useStyles();\n  const handleinputchange = type => e => {\n    setSearchcontent(e.target.value)\n  }\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search by order id, Name and Mobile\"\n          onChange={handleinputchange('searchcontent')}\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={() => onSearch(searchcontent)}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport { Search, Filter } from \"./components\";\n\nimport { CSVLink } from \"react-csv\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480,\n  },\n  filterButton: {\n    marginLeft: \"auto\",\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst ProductFilter = (props) => {\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid item>\n        <Search className={classes.search} onSearch={onSearch} />\n      </Grid>\n\n      <Grid item>\n        {window.location.pathname === \"/productlist\" ? (\n          <>\n            {\" \"}\n            <CSVLink\n              header={dataCSV.keyCSV}\n              data={dataCSV.valueCSV}\n              filename={\"ProductDetails.csv\"}\n              style={{ textDecoration: \"none \" }}\n            >\n              <Button\n                color=\"primary\"\n                style={{ marginRight: \"8px\" }}\n                size=\"small\"\n                variant=\"outlined\"\n              >\n                Download CSV\n              </Button>\n            </CSVLink>\n          </>\n        ) : (\n          \"\"\n        )}\n\n        <Button\n          className={classes.filterButton}\n          color=\"primary\"\n          onClick={handleFilterOpen}\n          size=\"small\"\n          variant=\"outlined\"\n        >\n          <FilterListIcon className={classes.filterIcon} /> Filter\n        </Button>\n      </Grid>\n\n      <Filter\n        onClose={handleFilterClose}\n        onFilter={onFilter}\n        open={openFilter}\n        masters={masters}\n      />\n    </Grid>\n  );\n};\n\nProductFilter.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n  masters: PropTypes.object,\n};\n\nexport default ProductFilter;\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { PRODUCTLIST, PRODUCTCATEGORY, PRODUCTFILTERMASTER, PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"../../components/Products\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport FullLoader from \"../../components/Loader\";\nimport { ProductFilter } from \"../../components\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nexport const Productlist = withRouter(\n  withApollo((props) => {\n    const [masters, setMasters] = useState({});\n    const [filterparams, setFilterparams] = useState({});\n    const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\n    const { sendNetworkRequest } = React.useContext(NetworkContext);\n    let responseCSV;\n    function onFilter(filterobj) {\n      let filtercontent = {};\n\n      if (filterobj.product_category) {\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      if (filterobj.product_type) {\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      setFilterparams({\n        ...filterparams,\n        ...filtercontent,\n      });\n      // fetchadminusers()\n    }\n    function onSearch(searchtext) {\n      //  alert(searchtext)\n      setFilterparams({\n        ...filterparams,\n        searchtext,\n      });\n      // fetchadminusers()\n    }\n\n    async function fetchCSVdata() {\n      responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\n      let responseData = responseCSV.res_json;\n\n      if (responseCSV.statuscode === 200) {\n        let keyData = [];\n\n        for (const [key] of Object.entries(responseData[0])) {\n          keyData.push({ label: key, key: key });\n        }\n\n        console.log(keyData);\n        setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\n      }\n    }\n    useEffect(() => {\n      const query = props.client.query;\n      query({\n        query: PRODUCTFILTERMASTER,\n        fetchPolicy: \"network-only\",\n      })\n        .then((data) => {\n          if (data) {\n            let product_categories = data.data.allMasterProductCategories.nodes;\n            let product_types = data.data.allMasterProductTypes.nodes;\n            setMasters({\n              product_categories,\n              product_types,\n            });\n          } else {\n          }\n        })\n        .catch((error) => {\n          console.log(\"smbcj\");\n        });\n\n      fetchCSVdata();\n    }, []);\n\n    return (\n      <Grid container spacing={2}>\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={6} sm={6}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Products\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\n            <Link underline=\"none\" component={RouterLink} to={\"/productupload\"}>\n              <Button variant=\"contained\" color=\"primary\">\n                Add New Product\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n        <ProductFilter masters={masters} onSearch={onSearch} onFilter={onFilter} dataCSV={dataCSV} />\n        <Product filterparams={filterparams} />\n      </Grid>\n    );\n  })\n);\n\nexport default Productlist;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport { Query, withApollo } from \"react-apollo\";\nimport { CATGORYLIST } from \"../../../../graphql/query\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  const { className, orders, ...rest } = props;\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  const [editcontent, setEditcontent] = React.useState({});\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias: vendordata.alias,\n      name: vendordata.name,\n      isedit: true,\n    });\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\n  }\n  async function Savevendor(refetch) {}\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    props.onCancel();\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Card>\n        <CardHeader title=\"Category\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n\n                  <TableCell align=\"left\">Alias</TableCell>\n\n                  <TableCell align=\"left\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  <Query\n                    query={CATGORYLIST}\n                    onCompleted={(data) =>\n                      setPageCount(data.allMasterProductCategories.totalCount)\n                    }\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\n                  >\n                    {({ data, loading, error, refetch }) => {\n                      if (loading) {\n                        // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>;\n                        // return false\n                      }\n                      if (data) {\n                        return (\n                          <>\n                            {data.allMasterProductCategories.nodes.map(\n                              (row, index) => (\n                                <>\n                                  {index == 0 && props.isadd ? (\n                                    <TableRow key={row.name}>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => Cancelcreate()}>\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    </TableRow>\n                                  ) : null}\n                                  <TableRow key={row.name}>\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"categoryname\"\n                                          name=\"categoryname\"\n                                          value={editcontent.name}\n                                          onChange={handleInputChange(\"name\")}\n                                          label=\"Name\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.name}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"alias\"\n                                          name=\"alias\"\n                                          value={editcontent.alias}\n                                          onChange={handleInputChange(\"alias\")}\n                                          label=\"alias\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.shortCode}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button\n                                          onClick={(e) => CancelEdit(row)}\n                                        >\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell\n                                        align=\"center\"\n                                        onClick={(e) => Editvendor(row)}\n                                        style={{ width: 20 }}\n                                      >\n                                        <Button>\n                                          <EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                    )}\n                                  </TableRow>\n                                </>\n                              )\n                            )}\n                          </>\n                        );\n                      } else {\n                        return <div>{\"Fetch Products\"}</div>;\n                      }\n                    }}\n                  </Query>\n                }\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  orders: [],\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { v4 as uuid } from 'uuid';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { v4 as uuid } from 'uuid';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { v4 as uuid } from 'uuid';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    // button: {\n    //     color:\"#06847B\",\n    //     border: \"1px solid #7bbcb7\",\n    //     '&:hover':{\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n    //         border: \"1px solid #06847B\",\n    //     }\n    //   },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n               \n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        \n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems:\"center\",\n  },\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n   //props.onSearch(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n\n      <Grid\n        className={classes.contantview}\n        container\n        spacing={3}\n      >\n        <Grid item xs={3} >\n           <Typography\n           variant=\"h4\"\n           style={{margin: \"8px\"}}\n          >\n            Orders\n          </Typography>\n           {/* <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography>  */}\n        </Grid>\n        <Grid container xs={6} item  >\n        <Grid xs={9} item >\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item >\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \n\n          </Grid>\n\n\n        </Grid>\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\n\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n \n  console.log(props);\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n        {props.columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            width={headCell.type == 9 ? 300 : null}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label ? headCell.label : headCell.name}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n   // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n    overflowY: 'auto',\n    maxHeight: '100vh'\n  },\n  containergrid: {\n    overflowX: 'scroll',\n    width: 1000,\n    height: 20,\n    overflowY: 'hidden'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  // debugger\n  console.log(props)\n  const { className, orders, ...rest } = props;\n  const [editcontent,setEditcontent] = React.useState({})\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : 'Order Date');\n  const handleRequestSort = (event, property) => {\n\n    const isAsc = orderBy === property && order === 'asc';\n\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    \n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent)\n   // setIsadd(false)\n  // alert(JSON.stringify(editcontent))\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  setBtnEdit({ ...btnEdit, id:'', action: false })\n // refetch()\n}\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  async function showorderdetails(orderurl){\n\n    \n  window.open(orderurl);\n   }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n      let paymentstatusobj = {}\n      props.orderstatus.forEach(element => {\n        if(vendordata.orderstatus === element.name)\n        {\n          paymentstatusobj = element;\n        }\n      });\n      \n     delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus : paymentstatusobj,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\n\n  }\n  function CancelEdit(diamondData) {\n  //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n \n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n \n    // }\n    //    setIsadd(false)\n     setEditcontent({})\n     setBtnEdit({ ...btnEdit, id:'', action: false })\n   }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    \n      <Card>\n       \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          \n         \n            <div className={classes.tableWrapper}>\n              \n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n                {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n              <EnhancedTableHead\n              columns={props.columnobjs}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  {/* </TableRow>\n                </TableHead> */}\n                <TableBody style={{overflow : \"scroll\"}}>\n                {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      {props.columnobjs.map(col => (\n                        <>\n                        {col.key === 'action' && props.iswrite?   \n                        <TableCell align=\"center\" style = {{width: 20}}>\n                        {\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                          </Button>\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\n                          </Button></> : <Button \n                           >\n                             <VisibilityIcon onClick={(e) => showorderdetails(`/orderdetails/${order.orderid}`)}/>\n                     </Button>\n                         } \n                   </TableCell> : \n                   <>\n                   {\n                    btnEdit.action && btnEdit.id == order.orderid  ?\n                        <TableCell>\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \n                        { col.type == 2 ? <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        \n                        id={col.key}\n                        name={col.key}\n                        value={editcontent[col.key]}\n                        onChange={handleInputChange(col.key)}\n    \n                        label={col.label}\n                       />:null } \n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                                       </Moment>:null } \n\n                   {col.type == 5 && order.paymentmode == 'COD' ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.paymentstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                /> : null }  \n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \n       \n                  {col.type == 3 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.orderstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                /> : null }\n                            \n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                             </Moment>: <Typography> {order[col.key]}</Typography> } \n\n                          \n                           \n                           </TableCell> }\n                        </>\n                        }\n                       \n                      </>\n                      ))}                      \n\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10,50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n   \n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { v4 as uuid } from 'uuid';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n\n  async function updateorder(ordercontent)\n  {\n  let response =  await sendNetworkRequest('/updateorderstatus', {}, ordercontent)\n    window.location.reload();\n\n   // getorders()\n  }\n  function searchorder(searchtext)\n  {\n    if(searchtext.length > 0)\n    {\n    var data_filter = orders.filter( element => \n      element.email &&  element.email.match(searchtext+'.*')  || \n      element.mobile && element.mobile.match(searchtext+'.*') ||\n      element.orderid && element.orderid.match(searchtext+'.*') || \n      element.username && element.username.match(searchtext+'.*')\n      )\n      setFilteredorder(data_filter)\n    }else{\n      setFilteredorder(orders)\n    }\n  }\n  async function getorders()\n  {\n    var orders_arr = []\n    orderCtx.orderMaster.orders.forEach(element => {\n\n        let orderobj = {}\n        orderobj['orderid'] = element.id\n        orderobj['orderdate'] = element.createdAt\n        orderobj['paymentmode'] = element.paymentMode\n        orderobj['cartid'] = element.cartId\n       // orderobj['paymentstatusmaster'] = element.paymentStatus\n       orderobj['awbNumber'] = element.awbNumber ? element.awbNumber : \"\"\n       orderobj['comments'] = element.comments ? element.comments : \"\"\n       orderobj['orderstatus'] = element.orderStatus\n       if(element.paymentMode === 'COD')\n       {\n        orderobj['paymentstatus'] = element.paymentStatus\n\n       }\n        if(element.paymentDetailsByOrderId)\n        {\n            let pgresponseobj = element.paymentDetailsByOrderId.nodes\n            pgresponseobj.forEach(pgres => {\n           let response_pg =   JSON.parse(pgres.paymentResponse)\n                    if(element.paymentMode === 'Prepaid')\n                    {\n                      orderobj['paymentstatus'] = response_pg.ipgTransactionId + ' \\n'+response_pg.fail_reason+ ' \\n'+response_pg.status\n\n                    }\n\n            } )\n        }\n        if(element.shoppingCartByCartId)\n        {\n            let cartcontent = element.shoppingCartByCartId\n\n                if(cartcontent.cartAddressesByCartId)\n                {\n                    let addresscontent = cartcontent.cartAddressesByCartId.nodes;\n                    addresscontent.forEach(addressobj => {\n                        orderobj['address'] = addressobj.addressline1\n                        if(!orderobj[\"mobile\"])\n                        {\n                          orderobj['mobile'] = addressobj.contactNumber\n\n                        }\n                        if(!orderobj[\"username\"])\n                        {\n                          orderobj['username'] = addressobj.firstname ? addressobj.firstname : \"\"\n\n                        }\n\n                    })\n\n                }\n            if(cartcontent.shoppingCartItemsByShoppingCartId)\n            {\n              \n\n                let cartitemscontent = cartcontent.shoppingCartItemsByShoppingCartId.nodes\n                let skus = []\n                \n                cartitemscontent.forEach(element => {\n                    if(element.transSkuListByProductSku)\n                    {\n                        skus.push(element.transSkuListByProductSku.generatedSku)\n                    }\n\n                    \n                })\n                orderobj['skus'] = skus.join(' , ')\n            }\n            if(cartcontent.userProfileByUserprofileId)\n            {\n             // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n              let usercontent = cartcontent.userProfileByUserprofileId\n              if(usercontent.firstName)\n              {\n                orderobj['username'] = usercontent.firstName ? usercontent.firstName : \"\"\n\n              }\n                orderobj['email'] = usercontent.email ? usercontent.email : \"\"\n                if(!orderobj[\"username\"])\n                            {\n                              orderobj['username'] = usercontent.firstname ? usercontent.firstname : \"\"\n\n\n                            }\n\n              let useraddressess = usercontent.userAddressesByUserProfileId\n              if(useraddressess)\n              {\n                let address_arr = useraddressess.nodes\n                address_arr.forEach(useraddressobj => {\n\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                });\n              }\n            }\n\n            if(cartcontent.giftwrapsByCartId)\n            {\n                let giftobj = cartcontent.giftwrapsByCartId.nodes;\n                giftobj.forEach(gift => {\n                    orderobj['giftmessage'] = gift.message\n                })\n            }\n        }\n        orders_arr.push(orderobj)\n    });\n    \n    setOrders(orders_arr)\n    setFilteredorder(orders_arr)\n  }\n  async function getmaster(getmaster)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes)\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\n\n        \n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem('pagepermissions')\n    if(pagepermission.indexOf('/orderlist') > -1)\n    {\n      setIswrite(true)\n\n    }else\n    {\n      setIswrite(false)\n    }\n    getmaster()\n  }, [])\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n        \n     \n    };\n\n    getmaster()\n    getorders()\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n//   debugger\n// console.log(displaycolumnnames)\n// console.log(displaycolumns)\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Orders\n          </Typography>\n          </Grid>\n          \n    </Grid> */}\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\n    {filteredorder ? <Results\n      className={classes.results}\n      orderstatus={paymentstatus}\n      paymentstatus={orderstatus}\n      iswrite={iswrite}\n     orders={filteredorder}\n     onupdate={updateorder}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    /> : null }\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport { ORDERS } from '../../services/queries';\n\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n    let user_id = props.location.pathname.split('/')[2];\n      \n    const { data, loading, error } = useQuery(ORDERS(user_id));\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    if(deleteid.length > 0)\n    {\n      let variables ={\n        elementId:deleteid[0]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    if(deleteid.length > 1)\n    {\n      let variables ={\n        elementId:deleteid[1]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    setgemlist([])\n\n    setDeleteid([])\n    getgemlist()\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n\n    let deleteids = [];\n    deleteids.push(diamondData.costprice.id)\n    deleteids.push(diamondData.sellprice.id)\n\n     setDeleteid(deleteids)\n     setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid, Card } from \"@material-ui/core\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Input } from \"@material-ui/core\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { MAKINGCHARGEPRICELIST, PRODUCTLISTSTATUSEDIT, METALMASTER, DELETEMAKINGCHARGE } from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport Addmakingchargeprice from \"./Addmakingchargeprice\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../config\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\nconst columns = [\n  { id: \"Metal\", label: \"Metal\" },\n  { id: \"Purity\", label: \"Purity\" },\n  { id: \"From Weight\", label: \"From Weight\" },\n  { id: \"To weight\", label: \"To weight\" },\n  { id: \"Cost Price\", label: \"Cost Price\" },\n\n  { id: \"updated On\", label: \"updated On\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid, setVendorid] = React.useState(props.vendor);\n  const [editmc, setEditmc] = React.useState({});\n  const [puritymaster, setPuritymaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [editdiamond, setEditdiamond] = React.useState({});\n  const [mchargelist, setMchargelist] = React.useState([]);\n  const [deleteid, setDeleteid] = React.useState(\"\");\n  const [metalmaster, setMetalmaster] = React.useState([]);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n    add: false,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent) {\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEMAKINGCHARGE, variables })\n      .then((res) => {\n        if (res !== null) {\n          //refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id);\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false, add: true });\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata = {};\n    bodydata[\"material\"] = makingcontent.metal.name;\n    bodydata[\"weight_start\"] = makingcontent.weightstart;\n    bodydata[\"weight_end\"] = makingcontent.weightend;\n    bodydata[\"price_type\"] = makingcontent.pricetype.label;\n    bodydata[\"vendor_code\"] = props.vendor;\n    bodydata[\"purity\"] = makingcontent.purity.shortCode;\n    bodydata[\"cost_price\"] = makingcontent.costPrice;\n    bodydata[\"selling_price\"] = makingcontent.sellingprice;\n    bodydata[\"isadd\"] = true;\n\n    await sendNetworkRequest(\"/updatemakingcharge\", {}, bodydata);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    setOpen(false);\n    getmclist();\n  }\n  function handleEdit(diamondData) {\n    setEditmc({\n      ...editmc,\n      price: diamondData.price,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n  async function getmclist() {\n    let bodydata = {\n      vendorid: props.vendor,\n    };\n\n    let response = await sendNetworkRequest(\"/getvendormakingprice\", {}, bodydata);\n    setMchargelist(response.gems);\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes);\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes);\n      })\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    getmclist();\n  }, [vendorid]);\n  async function handleSave(row) {\n    var bodydata = {};\n    console.log(row);\n    row.price = editmc.price;\n    console.log(row);\n\n    let variables = {\n      cost_price_id: row.id,\n\n      weight_start: row.weight_start,\n      weight_end: row.weight_end,\n      cost_price: editmc.price,\n    };\n    console.log(editmc);\n    await sendNetworkRequest(\"/updatemakingcharge\", {}, variables);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    getmclist();\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  const handleinputChange = (type) => (e) => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value,\n    });\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\n  };\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n  async function productItemStatusChange(id, isactive, refetch) {\n    let variables = {\n      productId: id,\n      isActive: isactive ? false : true,\n    };\n    await props.client\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n        }\n      })\n      .catch(console.error);\n  }\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      <ConformationAlert\n        title={\"Are you sure to delete?\"}\n        positivebtn={\"Yes\"}\n        negativebtn={\"No\"}\n        message={\"\"}\n        data={deleteid}\n        onSuccess={handledelete}\n        onCancel={hidedeleteconformation}\n        isshow={isconformation}\n      />\n      <Card className={classes.cardcontent}>\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\">{props.title}</Typography>\n          </Grid>\n          {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                    {column.label === \"Cost Price\" ? (props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\") : column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <Query\n                query={MAKINGCHARGEPRICELIST}\n                onCompleted={(data) => setPageCount(data.allMakingChargeSettings.totalCount)}\n                variables={{ vendorCode: props.vendor, ratetype: props.ratetype }}\n              >\n                {({ data, loading, error, refetch }) => {\n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    return (\n                      <>\n                        {data.allMakingChargeSettings.nodes.map((row, index) => (\n                          <TableRow key={row.material}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.material}\n                            </TableCell>\n                            <TableCell align=\"left\">{row.purity}</TableCell>\n\n                            <TableCell align=\"left\">\n                              {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                              <Typography className={classes.heading}>{row.weightStart}</Typography>\n                            </TableCell>\n\n                            <TableCell align=\"left\">\n                              {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                              <Typography className={classes.heading}>{row.weightEnd}</Typography>\n                            </TableCell>\n\n                            <TableCell align=\"left\">\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <Input\n                                  variant=\"outlined\"\n                                  margin=\"dense\"\n                                  label=\"Cost Price\"\n                                  fullWidth\n                                  className={classes.helperinput}\n                                  value={editmc.price}\n                                  onChange={handleinputChange(\"price\")}\n                                  id=\"productvendorcode\"\n                                  name=\"Cost Price\"\n                                />\n                              ) : (\n                                <Typography className={classes.heading}>{row.price}</Typography>\n                              )}\n                            </TableCell>\n\n                            {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n                            <TableCell align=\"left\">\n                              <Moment format=\"DD MMM YYYY hh:mm a\">{row.updatedAt}</Moment>\n                            </TableCell>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell style={{ width: 170 }} align=\"left\">\n                                <Button onClick={(e) => handleSave(row)}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </TableCell>\n                            ) : (\n                              <TableCell align=\"left\" style={{ width: 170 }}>\n                                <Button onClick={(e) => handleEdit(row)}>\n                                  <EditIcon />\n                                </Button>\n                                <Button onClick={(e) => handleDelete(row)}>\n                                  <DeleteIcon />\n                                </Button>\n                              </TableCell>\n                            )}\n                          </TableRow>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Fetch Products\"}</div>;\n                  }\n                }}\n              </Query>\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n            </TableBody>\n            {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n          </Table>\n        </div>\n        {open ? (\n          <Addmakingchargeprice\n            metals={metalmaster}\n            purities={puritymaster}\n            isadd={open}\n            title={\"Add Making Charge Setup\"}\n            actionSave={handleAdd}\n            actionclose={handleClose}\n          />\n        ) : null}\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"./components/Product\";\nimport Diamonds from \"./components/Diamonds\";\nimport Gemstones from \"./components/Gemstones\";\nimport Makingcharge from \"./components/Makingcharge\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\n\nconst useStyle = makeStyles((theme) => ({}));\nexport const Vendorprice = withRouter((props) => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n  const classes = useStyle();\n\n  const handlevendorchange = (type) => (event, value) => {\n    setVendorcode(value.shortCode);\n  };\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setVendorlist({\n          ...vendorlist,\n          vendors: fatchvalue.data.allMasterVendors.nodes,\n        });\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12} sm={12}>\n        <Typography component=\"h6\" variant=\"h6\">\n          Vendor Based Price List\n        </Typography>\n      </Grid>\n\n      <Grid item xs={4} sm={4}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          fullWidth\n          disableClearable\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name + \"   (\" + option.shortCode + \") \"}\n          options={vendorlist.vendors}\n          onChange={handlevendorchange(\"vendor\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />)\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Choose Vendor\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      {vendorcode ? (\n        <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Product vendor={vendorcode} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Diamonds vendor={vendorcode} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Gemstones title={\"Gemstone Price Setup By Weight\"} vendor={vendorcode} viewtype={1} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Gemstones title={\"Gemstone Price Setup By No of Stones\"} vendor={vendorcode} viewtype={2} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n          </Grid>\n\n          {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n            <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n          </Grid>\n        </>\n      ) : null}\n    </Grid>\n  );\n});\n\nexport default withRouter(Vendorprice);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Input, Grid, Card } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { DIAMONDMARKUP, PRODUCTLISTSTATUSEDIT, DELETEMARKUPPRICE , ALLMARKUPPRICE} from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport Addmarkup from \"./Addmarkup\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nconst columns = [\n  { id: \"Component\", label: \"Components\" },\n  { id: \"Product Category\", label: \"product Category\" },\n  { id: \"Product Type\", label: \"Product Type\" },\n  { id: \"Selling Price Min\", label: \"Selling Price Min\" },\n  { id: \"Selling Price Max\", label: \"Selling Price Max\" },\n  { id: \"Markup Type\", label: \"Markup Type\" },\n  { id: \"Markup value\", label: \"Markup value\" },\n\n  { id: \"updatedAt\", label: \"updatedAt\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Dessert (100g serving)\" },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [editmarkup, setEditmarkup] = React.useState({});\n  const [goldpricelist, setGoldpricelist] = React.useState({});\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState(\"\");\n  const [refetch, setRefetch] = React.useState(null);\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch) {\n    setIsdelete(true);\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEMARKUPPRICE, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id);\n\n    setIsconformation(true);\n  }\n\n  async function updatemarkup(markupcontent, refetch) {\n    var bodydata = {};\n    bodydata[\"category\"] = markupcontent.category.name;\n    bodydata[\"producttype\"] = markupcontent.producttype.name;\n    bodydata[\"sellingPriceMin\"] = markupcontent.sellpricemin;\n    bodydata[\"sellingPriceMax\"] = markupcontent.sellpricemax;\n    bodydata[\"markuptype\"] = markupcontent.markuptype.label;\n    bodydata[\"markupValue\"] = markupcontent.markup;\n    bodydata[\"material\"] = pricecomponent;\n    console.log(\"XXXXXXXX\");\n    await sendNetworkRequest(\"/addmarkup\", {}, bodydata);\n    setOpen(false);\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n      ...editmarkup,\n      markupid: diamondData.id,\n      sellingPriceMin: diamondData.sellingPriceMin,\n      sellingPriceMax: diamondData.sellingPriceMax,\n      markupValue: diamondData.markupValue,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n  async function handleSave(id, refetch) {\n    var bodydata = {};\n\n    await sendNetworkRequest(\"/updatemarkup\", {}, editmarkup);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value });\n  };\n  const handlecomponentChange = (type) => (event, value) => {\n    setPriceomponent(value);\n  };\n  const handleinputChange = (type) => (e) => {\n    setEditmarkup({\n      ...editmarkup,\n      [type]: e.target.value,\n    });\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\n  };\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      <Card className={classes.cardcontent}>\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\n          <Grid item xs={3}>\n            <Typography variant=\"h6\">{\"Selling Price Markup Setup\"}</Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              className={classes.fixedTag}\n              defaultValue={pricecomponent}\n              options={[\"Diamond\", \"Gem Stone\", \"Gold\", \"Making Charge\", \"All\"]}\n              onChange={handlecomponentChange(\"earringbacking\")}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />)\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Pricing Components\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  // error = {productCtx.error_message.earringbacking}\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <Query\n                query={pricecomponent === \"All\" ? ALLMARKUPPRICE : DIAMONDMARKUP}\n                onCompleted={(data) => setPageCount(data.allPricingMarkups.totalCount)}\n                variables={{ vendorCode: pricecomponent }}\n              >\n                {({ data, loading, error, refetch }) => {\n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    setGoldpricelist(data);\n                    return (\n                      <>\n                        <ConformationAlert\n                          title={\"Are you sure to delete?\"}\n                          positivebtn={\"Yes\"}\n                          negativebtn={\"No\"}\n                          message={\"\"}\n                          refetch={refetch}\n                          onSuccess={handledelete}\n                          onCancel={hidedeleteconformation}\n                          isshow={isconformation}\n                        />\n                        {open ? (\n                          <Addmarkup\n                            isadd={open}\n                            material={pricecomponent}\n                            refetch={refetch}\n                            actionSave={updatemarkup}\n                            category={props.categories}\n                            producttype={props.producttypes}\n                            title={props.title}\n                            actionclose={handleClose}\n                          />\n                        ) : null}\n\n                        {data.allPricingMarkups.nodes.map((row, index) => (\n                          <>\n                            <TableRow key={row.category}>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.material}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.category}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.productType ? row.productType : \"All\"}\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>{row.sellingPriceMin} </Typography>\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>{row.sellingPriceMax} </Typography>\n                              </TableCell>\n\n                              <TableCell align=\"center\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Autocomplete\n                                    id=\"free-solo-2-demo\"\n                                    fullWidth\n                                    disableClearable\n                                    className={classes.fixedTag}\n                                    getOptionLabel={(option) => option.name}\n                                    onChange={handleoptionChange(\"sellingPriceType\")}\n                                    options={[\n                                      { label: 1, name: \"Flat\" },\n                                      { label: 2, name: \"Percentage\" },\n                                    ]}\n                                    renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                        <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                    }\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label=\"Price Type\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        InputProps={{ ...params.InputProps, readOnly: true, type: \"search\" }}\n                                      />\n                                    )}\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>\n                                    {row.markupType === 1 ? \"Flat\" : \"Percentage\"}{\" \"}\n                                  </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value={editmarkup.markupValue}\n                                    onChange={handleinputChange(\"markupValue\")}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>{row.markupValue} </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                </Moment>\n                              </TableCell>\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <TableCell style={{ width: 170 }} align=\"center\">\n                                  <Button onClick={(e) => handleSave(row.id, refetch)}>\n                                    <SaveIcon />\n                                  </Button>\n                                  <Button onClick={(e) => CancelEdit(row)}>\n                                    <CancelIcon />\n                                  </Button>\n                                </TableCell>\n                              ) : (\n                                <TableCell align=\"center\" style={{ width: 170 }}>\n                                  <Button onClick={(e) => handleEdit(row)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button onClick={(e) => handleDelete(row, refetch)}>\n                                    <DeleteIcon />\n                                  </Button>\n                                </TableCell>\n                              )}\n                            </TableRow>\n                          </>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Loading...\"}</div>;\n                  }\n                }}\n              </Query>\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n            </TableBody>\n            {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '12px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '12px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n      if(type === 'materials')\n      {\n        let elements_arr = []\n        value.forEach(element => {\n          elements_arr.push(element.name)\n          \n        });\n        if(elements_arr.indexOf(\"Gold\") > -1)\n        {\n          setIsgold(true)\n        }else\n        {\n          setIsgold(false)\n        }\n\n        if(elements_arr.indexOf(\"Diamond\") > -1)\n        {\n          setIsdiamond(true)\n        }else\n        {\n          setIsdiamond(false)\n        }\n      }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n           options={voucherCtx.voucherMaster.diamondtypes}\n           onChange={handleoptionChange('diamondtype')}\n           value={attrobj.diamondtype}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen(prodskus)\n  {\n    setOpen(true)\n    setSelectskus(prodskus)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.title} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Chip,IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { v4 as uuid } from 'uuid';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {palette} from '../../theme'\nimport Page from '../../components/Page'\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n \n  \n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  \n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      discountid : discount_id\n      }\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach(comp => {\n      comparr.push({\n        name: comp\n      })\n    })\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids)\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname:response.discunt.discount_name,\n      discountvalue:response.discunt.discount_value,\n      discounttype:response.discunt.discount_type,\n      discounttitle:response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes)\n    })\n    setIsloaded(true)\n  }\n  async function creatediscount(ispricerun)\n  {\n   let skuarray  = []\n    while(skus.length > 0)\n    {\n        let sku_content = skus.splice(0,25000)\n        skuarray.push(sku_content)\n    }\n    if(errorskus.length > 0 )\n    {\n      alert(\"Some skus are overlapping\")\n    }else{\n     \n    let discount_count = 0\n   setIsloading(true)\n      updatediscount(discount_count)\n     async function updatediscount()\n      {\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      discountname : attributeobj.discountname,\n      discounttitle : attributeobj.discounttitle,\n      product_attributes: productattr,\n      product_attributes_text : productattrtext,\n      skus : skuarray[discount_count]\n    }\n    console.log(JSON.stringify(productattr))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n   \n    discount_count = discount_count + 1\n    if(skuarray.length > discount_count)\n    {\n      setLoadingtitle(skus.length+\" Left\")\n      updatediscount(discount_count)\n    }else{\n      setIsloading(false)\n      setOpen(true)\n      setIsshowpriceupdate(false)\n\n     window.location='/salediscountlist'\n\n    }\n  }\n  }\n}\nconst handleDelete = chipToDelete => () => {\n  //setProducts([]) \n  let errorindex =  errorskus.indexOf(chipToDelete)\n  if(errorindex > -1)\n  {\n    errorskus.splice(errorindex,1)\n    var erroritems = []\n    errorskus.forEach(itemname =>{\n      erroritems.push(itemname)\n    })\n   setErrorskus(erroritems) \n  }\n  let index = products.indexOf(chipToDelete)\n  products.splice(index,1)\n  var items = []\n  products.forEach(itemname =>{\n    items.push(itemname)\n  })\n setProducts(items) \n\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setErrorskus(response.eror_skus)\n   setIsloading(false)\n   setTitlecontent(response.title)\n    \n  }\n  async function updateprices()\n  {\n    alert('i am here')\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id : products\n    }\n    setIsshowpriceupdate(true)\n\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n     \"component\":\"updateskuprice\"\n    }\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n \n   setStatusmessage(response.message)\n   }\n  function attributeadded( value)\n  {\n  let componentsstring = {}\n  let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      componentsstring[key] = {\n        values : values,\n        alias : alias_arr\n      }\n      let displaytext = key + ' : ' + attrs.join(' , ')\n      display_arr.push(displaytext)\n    })\n    setProductattr(componentsstring)\n    setProductattrtext(display_arr.join(' | '))\n   //alert(JSON.stringify(componentsstring))\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n  {\n    let discount_id = props.location.pathname.split('/')[2];\n    setDiscount_id(discount_id)\n    getdiscountvalue(discount_id)\n\n  }else\n  {\n    setIsloaded(true)\n  }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title={loadingtitle} isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {!discount_id ?\n    <>\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n    {products.length > 0 ? <Products  title={titlecontent} products={errorskus} /> : null }\n  {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n   \n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\n    {!isshowpriceupdate ? <>\n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\n         \n      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n      </>:null} \n    </Grid>\n    </Grid>\n    </> : \n        <Grid container xs={12} spacing={2} >\n            <Grid item xs={6} style={{marginTop:16}} >\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Name\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discountname}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Title\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttitle}\n\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Value\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttype == 2 ? attributeobj.discountvalue+ \"%\" : attributeobj.discountvalue}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Pricing Compponent\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.displaycomp}\n\n            </Typography>\n            </Grid>\n            </Grid>\n            \n            {attributeobj.allkeys ? <Grid item xs={6} style={{marginTop:16}} >\n                   {attributeobj.allkeys.map((row, index) => (\n                     <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          {row}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.attributes[row].values}\n                        </Typography>\n                       </Grid>\n                  ))}  \n                  <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          Total Sku\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.skucount}\n                        </Typography>\n                       </Grid>\n            </Grid> : null}\n                      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n                      {!isshowpriceupdate ? <>\n         \n      {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n      </>:<> {statusmessage}<IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\n                            <RefreshIcon />\n                          </IconButton></>} \n                        \n                        \n      </Grid>\n      </Grid>\n} \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport \"../../tmp.css\";\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  Switch,\n  FormControlLabel,\n  Grid,\n  TextField,\n  Typography,\n  colors,\n  Input,\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    paddingBottom: theme.spacing(2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    marginRight: theme.spacing(2),\n    // backgroundColor: colors.green[600],\n    // '&:hover': {\n    //   backgroundColor: colors.green[900]\n    // }\n  },\n}));\n\nconst EditContent = (props) => {\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    ...diamond,\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  function previewimage(url) {\n    // setpreviewurl(url)\n    // setShowpreview(true)\n  }\n  const handleInputChange = (type) => (e) => {\n    debugger;\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const toggleChecked = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\n  };\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {}, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            {props.title}\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          {attributes.map((columnname, index) => (\n            <>\n              {showpreview && (\n                <Lightbox\n                  class=\"fade\"\n                  mainSrc={previewurl}\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                  onCloseRequest={() => setShowpreview(false)}\n                  onMovePrevRequest={() => alert(\"prev\")}\n                  onMoveNextRequest={() => alert(\"next\")}\n                />\n              )}\n              <Grid container xs={12} spacing={2}>\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                      disabled={columnname.type === 10}\n                    />\n                  </Grid>\n                ) : null}\n                {columnname.type === 2 && (\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      label={columnname.key}\n                      labelPlacement=\"start\"\n                      control={\n                        <Switch\n                          checked={editcontent[columnname.key]}\n                          name=\"checkedB\"\n                          color=\"primary\"\n                          onChange={toggleChecked(columnname.key)}\n                        />\n                      }\n                    />\n                  </Grid>\n                )}\n                {columnname.type === 3 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      multiple\n                      id=\"combo-box-demo\"\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      margin=\"dense\"\n                      fullWidth\n                      value={editcontent[columnname.defaultkey]}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />\n                  </Grid>\n                )}\n\n                {columnname.type == 4 && (\n                  <Grid item xs={12}>\n                    <Typography> {diamond[columnname.key]}</Typography>\n                  </Grid>\n                )}\n\n                {columnname.type == 5 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id=\"combo-box-demo\"\n                      // options={props.masters[columnname.mastervaluekey]}\n                      margin=\"dense\"\n                      fullWidth\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      value={editcontent[columnname.defaultkey]}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 6 && (\n                  <Grid item xs={12}>\n                    <Button variant=\"outlined\" color=\"primary\">\n                      {columnname.controllabel}\n                    </Button>{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 9 && (\n                  <Grid container item xs={12}>\n                    <Grid item xs={12}>\n                      <AvatarGroup max={2}>\n                        {diamond[columnname.key]\n                          ? diamond[columnname.key]\n                              .split(\",\")\n                              .map((diamond, index) => (\n                                <Avatar\n                                  alt=\"Remy Sharp\"\n                                  src={diamond}\n                                  onClick={() => previewimage(diamond)}\n                                  className={classes.small}\n                                />\n                              ))\n                          : null}\n                      </AvatarGroup>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <FilePond\n                        style={{ height: \"100\", width: \"100\" }}\n                        oninit={() => handleInit()}\n                        labelIdle=\"Add Banner Image\"\n                        onaddfile={(error, fileItem) => {\n                          if (!error) {\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\n                          } else {\n                            // alert(row[columnname.key])\n                          }\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </>\n          ))}\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\n            Save\n          </Button>\n          <Button onClick={() => onClose()} variant=\"contained\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditContent.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  attributes: PropTypes.array,\n\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditContent;\n","import React, { useEffect, useContext, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { TaxList, VENDORLISTS, PRODUCTFILTERMASTER, PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditContent from \"./components/EditContent\";\nimport { Button, Switch, Grid, FormControlLabel } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"./tmp.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport moment from \"moment\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst Vendor = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [masterlist, setMasterlist] = React.useState(props.values);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [openedit, setOpenedit] = React.useState(false);\n\n  const [isadd, setIsadd] = React.useState(false);\n  const [isedit, setIsedit] = React.useState(false);\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const [aliasName, setaliasName] = React.useState(\"\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function addnewvendor() {\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\n    setaliasName(props.prefix + sort_id);\n\n    setEditcontent({\n      alias: aliasName,\n      ...editcontent,\n      isedit: false,\n    });\n    // debugger;\n    console.log(editcontent);\n    // let masters = masterlist;\n    // masters.insert(0, []);\n\n    //setMasterlist(masters)\n    setIsadd(true);\n    setOpenedit(true);\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\n  }\n  Array.prototype.insert = function (index, item) {\n    this.splice(index, 0, item);\n  };\n  function Editvendor(vendordata) {\n    delete vendordata[\"action\"];\n\n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit: true,\n    });\n    setOpenedit(true);\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n  }\n  async function Savevendor(content) {\n    props.onCreate(content);\n    setIsadd(false);\n    setEditcontent(null);\n    setOpenedit(false);\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\n    // refetch()\n  }\n  function Cancelcreate() {\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function searrchcontent() {\n    props.onSearch(editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\");\n  }\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n  function removeimage(imagename, keyvalue) {\n    let previmagenames = editcontent[keyvalue];\n    let newimages = [];\n    let previmages = previmagenames.split(\",\");\n    previmages.forEach((element) => {\n      if (element == imagename) {\n      } else {\n        newimages.push(element);\n      }\n    });\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\n  }\n  function CancelEdit(diamondData) {\n    if (isadd) {\n      let masters = masterlist;\n\n      masters.splice(0, 1);\n      setMasterlist(masterlist);\n    }\n    setIsadd(false);\n    setEditcontent({});\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleSearchChange = (type) => (e) => {\n    props.onSearch(e.target.value);\n  };\n  const handleChange = (type) => (event) => {\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  useEffect(() => {\n    setMasterlist(props.values);\n  }, [props.values]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb.\");\n  }\n  function previewimage(url) {\n    setpreviewurl(url);\n    setShowpreview(true);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <>\n      {showpreview && (\n        <Lightbox\n          class=\"fade\"\n          mainSrc={previewurl}\n          // nextSrc={images[(photoIndex + 1) % images.length]}\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={() => setShowpreview(false)}\n          onMovePrevRequest={() => alert(\"prev\")}\n          onMoveNextRequest={() => alert(\"next\")}\n        />\n      )}\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={3} sm={3}>\n            <Typography component=\"h6\" variant=\"h6\">\n              {props.title}\n            </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\n            <Grid fullwidth item xs={9} sm={9}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                autoComplete=\"off\"\n                id=\"vendordeliverydays\"\n                name=\"vendordeliverydays\"\n                //  /  value={editcontent.searchcontent}\n                onChange={handleInputChange(\"searchcontent\")}\n                label=\"Search text\"\n              />\n            </Grid>\n            <Grid fullwidth item xs={3} sm={3}>\n              <Button variant=\"contained\" onClick={() => searrchcontent()} color=\"primary\">\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            {props.button_title ? (\n              <Button variant=\"contained\" onClick={() => addnewvendor()} color=\"primary\">\n                {props.button_title}\n              </Button>\n            ) : null}\n          </Grid>\n        </Grid>\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n            <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {masterlist.map((row, index) => (\n                <>\n                  <TableRow>\n                    {props.columns.map((columnname, index) => (\n                      <>\n                        {columnname.key === \"action\" ? (\n                          <TableCell align=\"center\" style={{ width: 20 }}>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <>\n                                <Button onClick={(e) => Savevendor()}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </>\n                            ) : (\n                              <Button onClick={(e) => Editvendor(row)}>\n                                <EditIcon />\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell align=\"left\">\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    onChange={handleChange(columnname.key)}\n                                    checked={editcontent[columnname.key]}\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button variant=\"outlined\" color=\"primary\">\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n                                {columnname.type == 3 ? (\n                                  <Autocomplete\n                                    multiple\n                                    id=\"combo-box-demo\"\n                                    options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[columnname.defaultkey]}\n                                    onChange={handleoptionChange(columnname.defaultkey)}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField {...params} label={columnname.label} variant=\"outlined\" />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 9 ? (\n                                  <>\n                                    <FilePond\n                                      oninit={() => handleInit()}\n                                      labelIdle=\"Add Banner Image\"\n                                      onaddfile={(error, fileItem) => {\n                                        if (!error) {\n                                          uploadimagetoserver(fileItem, columnname.key, \"add\");\n                                        } else {\n                                          // alert(row[columnname.key])\n                                        }\n                                      }}\n                                    />\n                                    <div className={classes.imagecontainer}>\n                                      {editcontent[columnname.key]\n                                        ? editcontent[columnname.key].split(\",\").map((row, index) => (\n                                            <Badge\n                                              overlap=\"circle\"\n                                              anchorOrigin={{\n                                                vertical: \"top\",\n                                                horizontal: \"right\",\n                                              }}\n                                              badgeContent={\n                                                <HighlightOffIcon\n                                                  fontSize=\"small\"\n                                                  onClick={() => removeimage(row, columnname.key)}\n                                                />\n                                              }\n                                            >\n                                              <Avatar alt=\"Remy Sharp\" src={row} className={classes.small} />\n                                            </Badge>\n                                          ))\n                                        : null}\n                                    </div>\n                                  </>\n                                ) : null}\n                                {columnname.type == 5 ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={props.masters[columnname.mastervaluekey]}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                                    onChange={handleoptionChange(columnname.defaultkey)}\n                                    value={editcontent[columnname.defaultkey]}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField {...params} label={columnname.label} variant=\"outlined\" />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 4 ? <Typography> {row[columnname.key]}</Typography> : null}\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {!columnname.type || columnname.type == 1 ? (\n                                  <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    id={columnname.key}\n                                    name={columnname.key}\n                                    value={editcontent[columnname.key]}\n                                    onChange={handleInputChange(columnname.key)}\n                                    label={columnname.label}\n                                  />\n                                ) : null}{\" \"}\n                              </TableCell>\n                            ) : (\n                              <TableCell>\n                                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n\n                                {columnname.type === 9 ? (\n                                  <AvatarGroup max={2}>\n                                    {row[columnname.key]\n                                      ? row[columnname.key]\n                                          .split(\",\")\n                                          .map((row, index) => (\n                                            <Avatar\n                                              alt=\"Remy Sharp\"\n                                              src={row}\n                                              onClick={() => previewimage(row)}\n                                              className={classes.small}\n                                            />\n                                          ))\n                                      : null}{\" \"}\n                                    {/* className={classes.small} />)) : null } */}\n                                  </AvatarGroup>\n                                ) : null}\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    onChange={handleInputChange(columnname.key)}\n                                    checked={row[columnname.key]}\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type != 2 && columnname.type != 6 && columnname.type != 8 && columnname.type != 9 ? (\n                                  <Typography> {row[columnname.key]}</Typography>\n                                ) : null}\n                              </TableCell>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ))}\n                  </TableRow>\n                </>\n              ))}\n\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[50, 100, 200, 500]}\n                  count={[props.values.length]}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { \"aria-label\": \"rows per page\" },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  // ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n          {editcontent && (\n            <EditContent\n              diamond={editcontent}\n              attributes={props.columns}\n              title={props.title}\n              masters={props.masters}\n              onApply={Savevendor}\n              onClose={handleApplicationClose}\n              open={openedit}\n              prefix={aliasName}\n            />\n          )}\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  deleteIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Header = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Orders\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Order #{order.id}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {/* <Button\n            className={classes.deleteButton}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.deleteIcon} />\n            Delete\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nimport {\n  PAYMENTSTATUSMASTER,\n  PRODUCTDIAMONDTYPES,\n} from \"../../../../graphql/query\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField,\n  Link,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ReceiptIcon from \"@material-ui/icons/ReceiptOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  actions: {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    \"& > * + *\": {\n      marginLeft: 0,\n    },\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst OrderInfo = (props) => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = [\"Canceled\", \"Completed\", \"Rejected\"];\n\n  const [option, setOption] = useState(options[0]);\n  const [paymentstatus, setPaymentstatus] = useState([]);\n  const [orderstatus, setOrderstatus] = useState([]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  React.useEffect(() => {\n    getmaster();\n  }, []);\n  // debugger;\n  console.log(props);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Customer</TableCell>\n              <TableCell>\n                <Link\n                  target=\"_blank\"\n                  component={RouterLink}\n                  to={`/customerdetails/${order.user_profile.id}`}\n                >\n                  {order.user_profile.first_name} {order.user_profile.last_name}\n                </Link>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline1\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline2\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].city\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].state\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].country\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email ID</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.cart_addresses\n                    ? order.shopping_cart.cart_addresses.length > 0\n                      ? order.shopping_cart.cart_addresses[0].contact_number\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Mobile Number</TableCell>\n              <TableCell>{order.user_profile.email}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Amount</TableCell>\n              <TableCell>\n                {order.currency}\n                {order.shopping_cart.discounted_price}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Waybil Number</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Waybill Number\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Gift Message</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.giftwraps\n                    ? order.shopping_cart.giftwraps.length > 0\n                      ? order.shopping_cart.giftwraps[0].message\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Mode</TableCell>\n              <TableCell>{order.payment_mode}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {paymentstatus.map((option) => (\n                    <option key={option.name} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Order Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {orderstatus.map((option) => (\n                    <option key={option.id} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Comments</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Comments\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant=\"contained\" color=\"primary\">\n          {/* <EditIcon className={classes.buttonIcon} /> */}\n          Save\n        </Button>\n        {/* <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Resend invoice\n        </Button> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired,\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  }\n}));\n\nconst OrderItems = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Sku</TableCell>\n                  <TableCell>Product Image</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Amount</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {order.shopping_cart.shopping_cart_items.map(item => (\n                  <TableRow key={item.id}>\n                     <TableCell>\n                      {item.product_sku}\n                    </TableCell>\n                    <TableCell>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </TableCell>\n                    <TableCell>\n                      {item.qty}\n                    </TableCell>\n                    <TableCell>{item.price}</TableCell>\n                    \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardHeader, Divider, CardContent, Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  inner_card: {\n    padding: \"10px\",\n    marginBottom: \"16px\",\n  },\n  image_container: {\n    padding: \"16px\",\n  },\n  product_image: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  },\n  text_heading: {\n    // fontWeight: \"400\",\n    margin: \"8px 0px\",\n  },\n  text_content: {\n    margin: \"8px 0px\",\n  },\n  final_total_text: {\n    textAlign: \"right\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n  },\n}));\nconst OrderDetails = (props) => {\n  const { order, className, ...rest } = props;\n  console.log(order, \"samir\");\n  const classes = useStyles();\n  return (\n    <div style={{ marginTop: 30 }}>\n      <Card>\n        <CardHeader title=\"Order Details\" />\n        <Divider />\n\n        <CardContent>\n          {order.shopping_cart.shopping_cart_items.map((item) => (\n            <Card key={item.id} className={classes.inner_card}>\n              <Grid container xs={12}>\n                {/*-------------------------------- Image part-------------------------------- */}\n                <Grid container xs={12} md={3} className={classes.image_container}>\n                  <img src=\"\" alt=\"Product Image\" className={classes.product_image} />\n                </Grid>\n                <Grid container xs={12} md={9}>\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Product Code</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.product_sku}</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Metal</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>{`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}</p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.trans_sku_list.sku_weight}</p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Diamond Quality</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.trans_sku_list.diamond_type} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Diamond Weight (Ct)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> ? </p>\n                    </Grid>\n                  </Grid>\n                  {/* ----------------------------------------------------------------- */}\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Quantity</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.qty} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>{`₹${Math.round(item.trans_sku_list.discount_price)}`} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Saved</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.discount_price - item.trans_sku_list.markup_price)} (${\n                          item.trans_sku_list.discount === null ? \"0\" : item.trans_sku_list.discount\n                        }%off)`}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Shipping</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> Free </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Grand Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>{`₹${Math.round(item.trans_sku_list.markup_price)}`}</p>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Card>\n          ))}\n          <Grid>\n            <p className={classes.final_total_text}>Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;</p>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\nexport default OrderDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport { v4 as uuid } from 'uuid';\nimport moment from \"moment\";\nimport Page from \"../../components/Page\";\nimport { Header, OrderInfo, OrderItems } from \"./components\";\nimport { withRouter } from \"react-router-dom\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  container: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const OrderManagementDetails = withRouter((props) => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(null);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  async function fetchorderdetails(order_id) {\n    let response = await sendNetworkRequest(\n      \"/getorderdetails\",\n      {},\n      { order_id }\n    );\n    // debugger\n    console.log(response);\n    setOrder(response.orders);\n  }\n  useEffect(() => {\n    let mounted = true;\n    var com_id = props.location.pathname.split(\"/\")[2];\n    const fetchOrder = () => {\n      setOrder({\n        id: uuid(),\n        ref: \"FAD107\",\n        promoCode: null,\n        value: \"55.25\",\n        currency: \"$\",\n        status: \"canceled\",\n        customer: {\n          name: \"Ekaterina Tankova\",\n          address: \"Street King William, 42456\",\n          city: \"Montgomery\",\n          country: \"United States\",\n        },\n        items: [\n          {\n            id: uuid(),\n            name: \"Project Points\",\n            cuantity: 25,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"50.25\",\n            currency: \"$\",\n          },\n          {\n            id: uuid(),\n            name: \"Freelancer Subscription\",\n            cuantity: 1,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"5.00\",\n            currency: \"$\",\n          },\n        ],\n        created_at: moment(),\n      });\n    };\n\n    // fetchOrder();\n    fetchorderdetails(com_id);\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Order Management Details\">\n      <Header order={order} />\n      <Grid className={classes.container} container spacing={3}>\n        <Grid item md={4} xl={3} xs={12}>\n          <OrderInfo order={order} />\n        </Grid>\n        <Grid item md={8} xl={9} xs={12}>\n          <OrderItems order={order} />\n          <OrderDetails order={order} style={{ marginTop: 30 }} />\n        </Grid>\n      </Grid>\n    </Page>\n  );\n});\n\nexport default OrderManagementDetails;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n      alert(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.priority && x.priority == taxcontent ||\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\n\n\n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  // element.email &&  element.email.match(searchtext+'.*')  || \n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \n  //     element.username && element.username.match(searchtext+'.*')\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addtaxattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\nimport Attributescontent from './Attributescontent/Attributescontent';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n     <Attributescontent title= {\"Shipment Settings II\"} \n        masters={[]}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Mastercategories = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    alert(JSON.stringify(taxcontent));\n    let response = await sendNetworkRequest(\n      \"/managecategories\",\n      {},\n      taxcontent\n    );\n    getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          prefix={data.prefix}\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Mastercategories;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n\n    //getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n\n    getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":2  ,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport data from \"./data.json\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./Configuration.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n}));\nexport const Userconfiguration = withRouter((props) => {\n  const master_options = [\n    \"Attribute Master\",\n    \"Categories\",\n    \"ProductTypes\",\n    \"Materials\",\n    \"Metal Colours\",\n    \"Metal Purities\",\n    \"Collections\",\n    \"Occassions\",\n    \"Styles\",\n    \"Themes\",\n    \"Designs\",\n    \"Weights\",\n    \"Diamond Types\",\n    \"Diamond Settings\",\n    \"Diamond Shapes\",\n    \"Earring Backings\",\n    \"Gemstone Settings\",\n    \"Gemstone Shapes\",\n    \"Gemstone Types\",\n    \"Stones\",\n    \"Stone Colours\",\n    \"Stone Shapes\",\n    \"Gender\",\n    \"SEO Priorities\",\n    \"Tax Settings 1\",\n    \"Tax Settings 2\",\n    \"Payment Status\",\n    \"Order Status\",\n    \"Shipping Zones\",\n    \"Shipment Setting I\",\n    \"Shipment Setting II\",\n  ];\n  const master_options_url = [\n    \"masterattributes\",\n    \"categories\",\n    \"producttypes\",\n    \"materialmaster\",\n    \"mastercolors\",\n    \"masterpurities\",\n    \"collections\",\n    \"masteroccassions\",\n    \"masterstyles\",\n    \"masterthemes\",\n    \"designs\",\n    \"weights\",\n    \"diamonds\",\n    \"diamondsettings\",\n    \"diamondshapes\",\n    \"earringbacking\",\n    \"gemstonesettings\",\n    \"gemstoneshapes\",\n    \"gemstonetypes\",\n    \"masterstones\",\n    \"masterstonecolors\",\n    \"masterstoneshapes\",\n    \"genders\",\n    \"seopriority\",\n    \"Taxsetup\",\n    \"taxsettings\",\n    \"paymentstatus\",\n    \"orderstatus\",\n    \"zones\",\n    \"shipmensettings\",\n    \"shippingattributes\",\n  ];\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => {\n    setRaised(true);\n  };\n  const onMouseOut = () => {\n    setRaised(false);\n    // setCardindex(-1)\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          User and Roles Management\n        </Typography>\n      </Grid>\n\n      {data.options.map((menu, index) => (\n        <Grid item xs={6} sm={4} lg={3}>\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\n            <Card fullwidth className=\"card2\">\n              <CardContent>\n                <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                  {menu.title}\n                </Typography>\n\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n              </CardContent>\n            </Card>\n          </Link>\n        </Grid>\n      ))}\n    </Grid>\n  );\n});\n\nexport default Userconfiguration;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport Addpermissions from '../../components/Addpermissions/Addpermissions';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterroles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false)\n  const [masterpages, setMasterpages] = React.useState([])\n  const [editroleid, setEditroleid] = React.useState('')\n  const [editpermissons, setEditpermissions] = React.useState({})\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n\n    let response =  await sendNetworkRequest('/manageroles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n    setMastervalue(response.roles)\n    setFiltervalue(response.roles)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  async function showpermissions(rowcontent)\n  {\n    let response =  await sendNetworkRequest('/getrolepermissions', {}, {role_id: rowcontent.id})\n    setEditpermissions(response.permissions)\n    setEditroleid(rowcontent.id)\n    setIsshowpermissions(true)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent)\n  {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id : editroleid\n    }\n    console.log(JSON.stringify(bodydata))\n    setIsshowpermissions(false)\n    let response =  await sendNetworkRequest('/managepermissions', {}, bodydata)\n     getmaster()\n\n    \n  }\n  function cancelpermissions(rowcontent)\n  {\n    setIsshowpermissions(false)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n       <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? <Addpermissions role_id={editroleid} isopen={isshowpermissions} permissions={editpermissons} pages={masterpages} onClose={cancelpermissions} onSave={updatepermissions} /> : null}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onPermissionadd={showpermissions} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterroles;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterscreens = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  \n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managepages', {}, taxcontent)\n    getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes)\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url=\"/userconfiguration\" name=\"Userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Screens\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns}  values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterscreens;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageadminusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster()\n  }\n  async function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getadminusers', {}, {})\n    let adminusers = response.users;\n    let users = []\n    adminusers.forEach(element => {\n        let userobj = {}\n        userobj['id'] = element.id;\n        userobj['username'] = element.username;\n        userobj['password'] = element.password;\n        userobj['email'] = element.email;\n        userobj['mobile'] = element.mobile;\n        userobj['status'] = element.status === 'Active' ? true : false;\n        let roles = []\n        let rolesnames = []\n\n        let userroles = element.user_roles;\n        userroles.forEach(userroleobj => {\n\n          let roleobj = {}\n          roleobj['id'] = userroleobj.master_role.id\n          roleobj['name'] = userroleobj.master_role.name\n          roles.push(roleobj)\n          rolesnames.push(userroleobj.master_role.name)\n        })\n        userobj['roles'] = roles\n        userobj['rolenames'] = rolesnames.join(' , ')\n        users.push(userobj)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs url=\"/userconfiguration\" name=\"userconfiguration\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Admin Users\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageadminusers;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    if(element.shortCode == 'All')\n    {\n      mastervendors.forEach(element => {\n        vendorid.push(element.shortCode)\n      })\n      setSelectedvendors(vendorid)\n    }else{\n      vendorid.push(element.shortCode)\n      setSelectedvendors(vendorid)\n\n    }\n   })\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      var sellingprice = goldprice.selling_price\n      if(pricetype.value == 2) \n      {\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\n       \n      }\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*sellingprice\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                  disableClearable={true}\n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <Page\n    //   className={classes.root}\n    //   title=\"Customer Management Details\"\n    // >\n    //   <Header />\n    //    <Tabs\n    //     className={classes.tabs}\n    //     onChange={handleTabsChange}\n    //     scrollButtons=\"auto\"\n    //     value={tab}\n    //     variant=\"scrollable\"\n    //   >\n    //     {tabs.map(tab => (\n    //       <Tab\n    //         key={tab.value}\n    //         label={tab.label}\n    //         value={tab.value}\n    //       />\n    //     ))}\n    //   </Tabs>\n    //   <Divider className={classes.divider} />\n    //  {/* <div className={classes.content}>\n    //     {tab === 'summary' && <Summary />}\n    //     {tab === 'invoices' && <Invoices />}\n    //     {tab === 'logs' && <Logs />}\n    //   </div> */}\n    // </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Phone</TableCell>\n               <TableCell>{customer.mobile}\n               {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>}\n                </TableCell>\n            </TableRow>\n            \n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nconst master_options = ['Address Book','Wish List','Orders']\n  const master_options_url = ['/address','/userwishlist','/orderlist']\n\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    // history.push(`orderlist/${id}`)\n    window.location.href = `orderlist/${id}`\n  }\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid> */}\n    <Grid container item xs={12} sm={12} lg={12} >\n    <Grid  item xs={12} sm={6} lg={6} >\n    <General customer ={customer} /> \n\n      </Grid>\n\n    </Grid>\n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={2} lg={2} >\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\n     <Card fullwidth\n    //  onClick={(e) => ProductEdit(customer.id)}\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <div className={classes.root}>\n      \n    //   <Tabs\n    //     orientation=\"vertical\"\n    //     variant=\"standard\"\n    //     value={value}\n    //     onChange={handleChange}\n    //     aria-label=\"Vertical tabs example\"\n    //     className={classes.tabs}\n    //   >\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n    //   </Tabs>\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\n    //   <General customer ={customer} /> </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n    //   </TabPanel>\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n    //   </TabPanel>\n      \n     \n    // </div>\n  );\n});\n\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Userwishlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Useraddresses = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.hsnNumber}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Tax Settings\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addtaxattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n    let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\n    //  getmaster()\n     history.push('/taxsettings')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TAXMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n\n            var selectedcategory = []\n            \n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories)\n              {\n                if(categories.indexOf(catobj.alias) > -1)\n                {\n                  selectedcategory.push(catobj)\n                }\n              }\n              \n\n            })\n\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addtaxattributes;","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Typography from \"@material-ui/core/Typography\";\nconst Banners = (props) => {\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          Landing Page Banner\n        </Typography>\n      </Grid>\n\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/styloribanner\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                Stylori\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/silverbanner\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                Stylori Silver\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n      {/* <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/listingPage\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography style={{ textAlign: \"center\", marginTop: 8 }} component=\"h6\" variant=\"h5\">\n                Listing Page\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid> */}\n    </Grid>\n  );\n};\n\nexport default Banners;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORILANDINGBANNERS, CREATESTYLORILANDINGBANNER, DELETESTYLORILANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst StyloriLandingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORILANDINGBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        \n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESTYLORILANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: Number(createlandingbanner.position),\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESTYLORILANDINGBANNER,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Stylori - Home Page - Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Banner's Redirect Link (Routes Only)\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile ImagecURL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link to Check</TableCell>\n                <TableCell>Mobile Image </TableCell>\n                <TableCell>Desktop Image </TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL}`} target=\"_blank\" className={classes.link_style}>\n                      {APP_URL}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      <img src={val.web} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default StyloriLandingPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Breadcrumbs } from \"../../../components\";\nimport StyloriLandingPage from \"./components/stylorilandingpage\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst Styloribanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"/banners\" name=\"Banner Home Page\"></Breadcrumbs>\n      <StyloriLandingPage />\n    </>\n  );\n};\nexport default Styloribanner;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERLANDINGBANNERS, CREATESILVERLANDINGBANNER, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverLandingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLANDINGBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriSilverBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: createlandingbanner.position,\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLANDINGBANNER,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              Silver - Landing Page - Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Silver - Landing Page - Banners : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Banner's Redirect Link (Routes Only)\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link to Check</TableCell>\n                <TableCell>Mobile Image</TableCell>\n                <TableCell>Desktop Image</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL}/styloriSilver`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL}/styloriSilver`}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {/* {val.mobile} */}\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {/* {val.web} */}\n                      <img src={val.web} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverLandingPage;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERLISTINGPAGE, CREATESILVERLISTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"60px\",\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLISTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriSilverBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: createlandingbanner.position,\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLISTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              Silver - Listing Page - Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Silver - Listing Page - Banners : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Banner's Redirect Link (Routes Only)\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link to Check</TableCell>\n                {/* <TableCell>Mobile Image</TableCell> */}\n                <TableCell>Banner Image</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL}/silver-jewellery`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL}/silver-jewellery`}\n                    </Link>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                     \n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell> */}\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {/* {val.web} */}\n                      <img src={val.web} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverListingPage;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nimport { CREATESPECIFICLISTINGPAGE, ALLSPECIFICLISTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"60px\",\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\n\nfunction SpecificListPages(props) {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    urlParam: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSPECIFICLISTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriSilverBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      urlParam: createlandingbanner.urlParam,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESPECIFICLISTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              Silver - Specific Listing Page - Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Silver - Specific Listing Page - Banners : </DialogTitle>\n          <DialogContent>\n            {/* <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            /> */}\n            <TextField\n              margin=\"dense\"\n              id=\"urlParam\"\n              label=\"Banner's Page Link (Routes Only)\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.urlParam}\n              name=\"urlParam\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>S.No</TableCell>\n                <TableCell>Link to Check</TableCell>\n                {/* <TableCell>Mobile Image</TableCell> */}\n                <TableCell>Banner Image</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{index + 1}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL + val.urlParam}`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL + val.urlParam}`}\n                    </Link>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell> */}\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      <img src={val.web} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n}\n\nexport default SpecificListPages;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport {\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\n  CREATESILVERLISTINGBOTTOMBANNER,\n  DELETESILVERLISTINGBOTTOMBANNER,\n} from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"60px\",\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingBottom = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\n        }),\n      };\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriSilverBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLISTINGBOTTOMBANNER,\n        variables: { id: id },\n      }),\n    };\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: \"1\",\n      url: \"#\",\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLISTINGBOTTOMBANNER,\n        variables: create_banner_data,\n      }),\n    };\n  \n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              Silver - Listing Page - Bottom Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Silver - Listing Page - Bottom Banners : </DialogTitle>\n          <DialogContent>\n            {/* <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            /> */}\n            {/* <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            /> */}\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>S.No</TableCell>\n                <TableCell>Link to Check</TableCell>\n                <TableCell>Banner Image</TableCell>\n                {/* <TableCell>Desktop Image</TableCell> */}\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{index + 1}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL}/silver-jewellery`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL}/silver-jewellery`}\n                    </Link>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                    <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell> */}\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      <img src={val.web} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverListingBottom;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERROUTINGPAGE, CREATESTYLORISILVERROUTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingRoutingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    urlParam : \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERROUTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allStyloriSilverBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: createlandingbanner.position,\n      urlParam: createlandingbanner.urlParam,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESTYLORISILVERROUTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              Silver Listing Routing Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"urlParam\"\n              label=\"Router Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.urlParam}\n              name=\"urlParam\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Router Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.urlParam} target=\"_blank\" className={classes.link_style}>\n                      {val.urlParam}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverListingRoutingPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Breadcrumbs } from \"../../../components\";\nimport SilverLandingPage from \"./components/silverlandingpage\";\nimport SilverListingPage from \"./components/silverlistingpage\";\nimport SpecificListPages from \"./components/specificListPages\";\nimport SilverListingRoutingPage from \"./components/silverlistingroutingpage\";\nimport SilverListingBottom from \"./components/silverbottmpage\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst Silverbanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"/banners\" name=\"Landing Page Banner\"></Breadcrumbs>\n      <SilverLandingPage />\n      <SilverListingPage />\n      <SpecificListPages />\n      <SilverListingBottom />\n      {/* <SilverListingRoutingPage /> */}\n    </>\n  );\n};\nexport default Silverbanner;\n","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from \"react\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { withRouter } from \"react-router-dom\";\nimport { useStyles } from \"./styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { ProductContext } from \"../../context\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { GlobalContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nimport { Paper, Avatar, Typography } from \"@material-ui/core\";\nimport data from \"../menupages.json\";\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload, setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem(\"accesspages\");\n  console.log(accesspages);\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  };\n  const handleClick = (type) => (e) => {\n    if (type === \"Pricing\") {\n      setGlobalCtx({ ...globalCtx, optionname: type, selectedIndex: 5, isExpand: !globalCtx.isExpand });\n    } else {\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\n    }\n  };\n  async function getmasterpages() {\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach((element) => {\n      pages.push(element.pageurl);\n      if (element.is_write) {\n        pagepermissions.push(element.pageurl);\n      }\n    });\n    // setPages(pageaccess)\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n    //setIsreload(true)\n\n    localStorage.setItem(\"accesspages\", pages);\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n    window.location.reload();\n  }\n  React.useEffect(() => {\n    //alert(globalCtx.accesspages)\n    if (!accesspages) {\n      // getmasterpages()\n    } else {\n      //  setIsreload(true)\n    }\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n  }, []);\n  function handleListItemClick(event, index) {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\n  }\n  console.log(data);\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>{theme.direction === \"rtl\" ? <ChevronRightIcon /> : <ChevronLeftIcon />}</IconButton>\n        </div>\n        <Divider />\n\n        <List>\n          {data.menus.map((menuobj, index) => (\n            <>\n              {menuobj.submenu ? (\n                <>\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <>\n                      <ListItem button onClick={handleClick(menuobj.name)}>\n                        <ListItemIcon>\n                          <img style={{ width: \"18px\" }} src={menuobj.icon} alt=\"menu\"></img>\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                        {globalCtx.isExpand && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse in={globalCtx.isExpand && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                          {menuobj.submenu.map((submenuobj, subindex) => (\n                            <>\n                              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ? (\n                                <Link underline=\"none\" component={RouterLink} to={submenuobj.url}>\n                                  <ListItem\n                                    button\n                                    className={classes.nested}\n                                    selected={globalCtx.selectedIndex === subindex}\n                                    onClick={(event) => handleListItemClick(event, subindex)}\n                                  >\n                                    <ListItemIcon>\n                                      <img style={{ width: \"18px\" }} src={submenuobj.icons} alt=\"sub menu\"></img>\n                                    </ListItemIcon>\n                                    <ListItemText primary={submenuobj.name} />\n                                  </ListItem>\n                                </Link>\n                              ) : null}\n                            </>\n                          ))}\n                        </List>\n                      </Collapse>{\" \"}\n                    </>\n                  ) : null}\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <Link underline=\"none\" component={RouterLink} to={menuobj.url}>\n                      <ListItem\n                        button\n                        key={\"Product List\"}\n                        selected={globalCtx.optionname === menuobj.name}\n                        onClick={handleClick(menuobj.name)}\n                      >\n                        <ListItemIcon>\n                          <img style={{ width: \"18px\" }} src={menuobj.icon} alt=\"menu\"></img>\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                      </ListItem>\n                    </Link>\n                  ) : null}{\" \"}\n                </>\n              )}\n            </>\n          ))}\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\")\n    window.location = '/'\n  }\n\n  \n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport route from \"./route\";\nimport { withAppBar } from \"../components/PrimaryAppBar\";\n\nconst PrivateRoute = (props) => {\n  const { component, ...rest } = props;\n\n  const checkAuth = () => {\n    let accesstoken = localStorage.getItem(\"accesstoken\");\n    if (accesstoken) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const Component = (props) => withAppBar(component, props);\n  return checkAuth() ? (\n    rest.path === \"/\" || rest.path === \"/login\" ? (\n      <Redirect to={route.productlist} />\n    ) : (\n      <Component {...rest} />\n    )\n  ) : (\n    <Redirect to={route.login} />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditDiamond = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    diamondweight  : diamond.diamondweight ? diamond.diamondweight : '',\n    diamondcount  : diamond.diamondcount ? diamond.diamondcount : '',\n    diamondsettings : diamond.diamondsettings ? diamond.diamondsettings : null,\n    diamondshape : diamond.diamondshape ? diamond.diamondshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.diamondweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.diamondcount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondsettings}\n                    value={editcontent.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditDiamond.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditDiamond;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditDiamond from './Components/EditDiamond/EditDiamond';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    \n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setEditcontent({\n      id : diamondData.id,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    setOpenedit(true)\n  }\n  async function DiamondSave(diamondobj){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight){\n      \n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(diamondobj.id===diamondListData.id){\n          diamondListData.diamondSettings=diamondobj.diamondsettings.name;\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\n          diamondListData.stoneCount = diamondobj.diamondcount;\n          diamondListData.stoneWeight = diamondobj.diamondweight;\n          bodydata['diamondSettings'] = diamondobj.diamondsettings.name\n          bodydata['diamondShape'] = diamondobj.diamondshape.name\n          bodydata['stoneCount'] = diamondobj.diamondcount;\n          bodydata['stoneWeight'] = diamondobj.diamondweight;\n          bodydata['diamondid'] = diamondobj.id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      let response =  await sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n   // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      setEditcontent(null)\n      setOpenedit(false)\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table> \n        {editcontent && <EditDiamond\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditGemstone = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    gemstonesettings  : diamond.gemstonesettings ? diamond.gemstonesettings : '',\n    gemstonecount  : diamond.gemstonecount ? diamond.gemstonecount : '',\n    gemstoneweight : diamond.gemstoneweight ? diamond.gemstoneweight : null,\n    gemstonesize : diamond.gemstonesize ? diamond.gemstonesize : null,\n\n    \n    gemstoneshape : diamond.gemstoneshape ? diamond.gemstoneshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n   // alert(JSON.stringify(editcontent.gemstonecount))\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        \n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstonesize}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstonesize')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstoneweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstoneweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.gemstonecount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.gemstonesettings}\n                    value={editcontent.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.gemstoneshape}\n                    options={productCtx.masterData.gemstoneshape}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditGemstone.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditGemstone;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport EditGemstone from './Components/EditGemstone/EditGemstone';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setEditcontent({\n      id : gemstoneData.id,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n   // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n   setOpenedit(true)\n  }\n async function GemstoneSave(gemdata) {\n    if (gemdata.gemstonesettings && gemdata.gemstoneshape && gemdata.gemstonecount && gemdata.gemstoneweight && gemdata.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (gemdata.id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\n          bodydata['gemstoneSetting'] = gemdata.gemstonesettings.name\n          bodydata['gemstoneShape'] = gemdata.gemstoneshape.name\n          bodydata['stoneCount'] = gemdata.gemstonecount;\n          bodydata['gemstoneSize'] = gemdata.gemstonesize;\n          bodydata['stoneWeight'] = gemdata.gemstoneweight;\n          bodydata['id'] = gemdata.id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===gemdata.id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setEditcontent(null)\n      setOpenedit(false)\n    //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && <EditGemstone\n        diamond={editcontent}\n        onApply={GemstoneSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst columns = [\n  { id: \"SKU\", label: \"SKU\" },\n  { id: \"Metal Colour\", label: \"Metal Colour\" },\n  { id: \"Metal Purity\", label: \"Metal Purity\" },\n  { id: \"Gold Weight\", label: \"Gold Weight\" },\n  { id: \"Size\", label: \"Size\" },\n  { id: \"Vendor lead Time\", label: \"Vendor lead Time\" },\n  { id: \"Ready to Ship\", label: \"Ready to Ship\" },\n  { id: \"Default\", label: \"Default\" },\n  {\n    id: \"Active\",\n    label: \"Active\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n  {\n    id: \"Edit\",\n    label: \"Edit\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {}\n\n  const handleChangeswitch = (name) => (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n\n    //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist =\n      productCtx.variants &&\n      productCtx.variants.map((variant, index) => {\n        if (variant.id === variantId) {\n          let status = variant.isActive\n            ? (variant.isActive = false)\n            : (variant.isActive = true);\n        }\n        return variant;\n      });\n    let filterVariant =\n      variantslist &&\n      variantslist.filter(\n        (filter_data, index) => filter_data.id === variantId\n      )[0];\n    let editVaraint = {\n      id: filterVariant.id,\n      isActive: filterVariant.isActive,\n    };\n    let editVariants = productCtx.editVariants;\n    let editStatus =\n      editVariants &&\n      editVariants.some(\n        (check_variant, index) => check_variant.id === variantId\n      )\n        ? (editVariants =\n            editVariants &&\n            editVariants.filter(\n              (edit_variant_filter, index) =>\n                edit_variant_filter.id !== variantId\n            ))\n        : editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants: variantslist,\n      editVariants,\n    });\n  }\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.variants && props.variants.length - page * rowsPerPage\n    );\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange = (type) => (e) => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime: diamondData.vendorDeliveryTime,\n      discount: diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault: diamondData.isdefault,\n      editisactive: diamondData.isActive,\n    });\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\n  }\n  function DiamondSave(id) {\n    var bodydata = {};\n    if (productCtx.editleadtime) {\n      let list_data = props.variants;\n      let Skuchangedata = list_data.map((skulistdata, index) => {\n        if (id === skulistdata.generatedSku) {\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive = productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship;\n\n          skulistdata.discountDesc = productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata[\"vendorDeliveryTime\"] = productCtx.editleadtime;\n          bodydata[\"isdefault\"] = productCtx.editisdefault;\n          bodydata[\"isActive\"] = productCtx.editisactive;\n          bodydata[\"discount\"] = productCtx.discount;\n\n          bodydata[\"isReadyToShip\"] = productCtx.editreadytoship;\n          bodydata[\"generatedSku\"] = id;\n          console.log(JSON.stringify(bodydata));\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest(\"/updateskuinfo\", {}, bodydata);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  //   const handleoptionChange = type => (event, value) => {\n\n  //     setProductCtx({ ...productCtx, [type]: value})\n\n  // }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants &&\n              props.variants\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => (\n                  <TableRow key={index}>\n                    {props.displycolumns.indexOf(\"SKU\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.generatedSku}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Metal Colour\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        scope=\"row\"\n                      >\n                        {row.metalColor}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Metal Purity\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.purity}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Gold Weight\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.skuWeight}\n                      </TableCell>\n                    ) : null}\n                    {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                    {props.displycolumns.indexOf(\"Size\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.skuSize}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Vendor lead Time\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.editleadtime}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Vendor Lead Time\"\n                            //onInput={keyPress.bind(this)}\n                            onChange={handleinputChange(\"editleadtime\")}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.vendorDeliveryTime}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Quantity\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.availableStockQty}\n                            id=\"qty\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"Qty\"\n                            label=\"Quantity\"\n                            //onInput={keyPress.bind(this)}\n                            onChange={handleinputChange(\"available_stock_qty\")}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.availableStockQty}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.discount}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount\"\n                            //onInput={keyPress.bind(this)}\n                            onChange={handleinputChange(\"discount\")}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountDesc}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Ready To Ship\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Switch\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editreadytoship\n                              : row.isReadyToShip\n                          }\n                          // onChange={()=>handleChange(row.id)}\n                          value=\"checkedA\"\n                          // onChange={handleChangeswitch('editreadytoship')}\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editreadytoship\")\n                              : null\n                          }\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Default\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Switch\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editisdefault\n                              : row.isdefault\n                          }\n                          value=\"checkedA\"\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editisdefault\")\n                              : null\n                          }\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Active\") > -1 ? (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        <Switch\n                          checked={row.isActive}\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editisactive\n                              : row.isActive\n                          }\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editisactive\")\n                              : null\n                          }\n                          value=\"checkedA\"\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                      <TableCell style={{ width: 20 }} align=\"center\">\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\n                          <SaveIcon />\n                        </Button>\n                        <Button onClick={(e) => CancelEdit(row)}>\n                          <CancelIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell align=\"center\" style={{ width: 20 }}>\n                        <Button onClick={(e) => DiamondEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants && props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(2, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditPrice = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    editcostprice:diamond.editcostprice,\n    editcostpricetax: diamond.editcostpricetax,\n    editsellingprice:diamond.editsellingprice,\n    editsellingpricetax:diamond.editsellingpricetax,\n    editmarkupprice: diamond.editmarkupprice,\n    editmarkuppricetax : diamond.editmarkuppricetax,\n    editdiscountprice: diamond.editdiscountprice,\n    editdiscountpricetax: diamond.editdiscountpricetax\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Price Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editcostprice}\n              placeholder={\"costPrice\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"costPriceTax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostpricetax')}\n              value={editcontent.editcostpricetax}\n              />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editsellingprice}\n              placeholder={\"Selling Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Selling Pricetax\"\n              placeholder=\"Selling Pricetax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingpricetax')}\n              value={editcontent.editsellingpricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editmarkupprice}\n              placeholder={\"Markup Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkupprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Markup Price Tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkuppricetax')}\n              value={editcontent.editmarkuppricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editdiscountprice}\n              placeholder={\"Discount Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Discount Price tax1\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountpricetax')}\n              value={editcontent.editdiscountpricetax}\n              />\n                 \n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditPrice.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditPrice;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  Typography,\n  Button,\n  Chip,\n  Input,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport EditPrice from \"./Components/EditPrice/EditPrice\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nconst columns = [\n  { id: \"SKU\", label: \"SKU\" },\n  { id: \"Cost Price\", label: \"Cost Price\" },\n  { id: \"Cost Price Tax\", label: \"Cost Price Tax\" },\n  { id: \"Selling Price\", label: \"Selling Price\" },\n  { id: \"Selling Price Tax\", label: \"Selling Price Tax\" },\n  { id: \"Markup Price\", label: \"Markup Price\" },\n  { id: \"Markup Price Tax\", label: \"Markup Price Tax\" },\n  { id: \"Discount Price\", label: \"Discount Price\" },\n  { id: \"Discount Price Tax\", label: \"Discount Price Tax\" },\n  { id: \"Margin On Sale\", label: \"Margin On Sale\" },\n  { id: \"Discount\", label: \"Discount\" },\n\n  {\n    id: \"Disable\",\n    label: \"Price Update\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: \"\",\n  });\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist =\n      productCtx.variants &&\n      productCtx.variants.map((variant, index) => {\n        if (variant.id === variantId) {\n          let status = variant.isActive\n            ? (variant.isActive = false)\n            : (variant.isActive = true);\n        }\n        return variant;\n      });\n    let filterVariant =\n      variantslist &&\n      variantslist.filter(\n        (filter_data, index) => filter_data.id === variantId\n      )[0];\n    let editVaraint = {\n      id: filterVariant.id,\n      isActive: filterVariant.isActive,\n    };\n    let editVariants = productCtx.editVariants;\n    let editStatus =\n      editVariants &&\n      editVariants.some(\n        (check_variant, index) => check_variant.id === variantId\n      )\n        ? (editVariants =\n            editVariants &&\n            editVariants.filter(\n              (edit_variant_filter, index) =>\n                edit_variant_filter.id !== variantId\n            ))\n        : editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants: variantslist,\n      editVariants,\n    });\n  }\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.variants && props.variants.length - page * rowsPerPage\n    );\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange = (type) => (e) => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, pricerun: true });\n\n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku: diamondData.generatedSku,\n    };\n    console.log(JSON.stringify(bodydata));\n    await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n    setBtnEdit({ ...btnEdit, id: \"\", pricerun: false });\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice: diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice: diamondData.sellingPrice,\n      editsellingpricetax: diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax: diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax,\n    });\n    setEditcontent({\n      id: diamondData.generatedSku,\n      editcostprice: diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice: diamondData.sellingPrice,\n      editsellingpricetax: diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax: diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax,\n    });\n    //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    // setOpenedit(true)\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\n  }\n  function DiamondSave(priceobj) {\n    var bodydata = {};\n    let list_data = props.variants;\n    list_data.map((skulistdata, index) => {\n      if (priceobj.generatedSku === skulistdata.generatedSku) {\n        skulistdata.costPrice = priceobj.editcostprice;\n        skulistdata.costPriceTax = priceobj.editcostpricetax;\n        skulistdata.sellingPrice = priceobj.editsellingprice;\n        skulistdata.sellingPriceTax = priceobj.editsellingpricetax;\n        skulistdata.markupPrice = priceobj.editmarkupprice;\n        skulistdata.markupPriceTax = priceobj.editmarkuppricetax;\n        skulistdata.discountPrice = priceobj.editdiscountprice;\n        skulistdata.discountPriceTax = priceobj.editdiscountpricetax;\n        bodydata[\"costPrice\"] = parseFloat(editcontent.editcostprice);\n        bodydata[\"costPriceTax\"] = parseFloat(editcontent.editcostpricetax);\n        bodydata[\"sellingPrice\"] = parseFloat(editcontent.editsellingprice);\n        bodydata[\"sellingPriceTax\"] = parseFloat(\n          editcontent.editsellingpricetax\n        );\n        bodydata[\"markupPrice\"] = parseFloat(editcontent.editmarkupprice);\n        bodydata[\"markupPriceTax\"] = parseFloat(editcontent.editmarkuppricetax);\n        bodydata[\"discountPrice\"] = parseFloat(editcontent.editdiscountprice);\n        bodydata[\"discountPriceTax\"] = parseFloat(\n          editcontent.editdiscountpricetax\n        );\n        bodydata[\"marginOnSalePercentage\"] = parseFloat(\n          editcontent.marginOnSalePercentage\n        );\n        bodydata[\"generatedSku\"] = editcontent.id;\n        return skulistdata;\n      }\n      return skulistdata;\n    });\n    sendNetworkRequest(\"/updateskupriceinfo\", {}, bodydata);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    // setEditcontent(null)\n    // setOpenedit(false)\n  }\n  //   const handleoptionChange = type => (event, value) => {\n\n  //     setProductCtx({ ...productCtx, [type]: value})\n\n  // }\n  // const handleInputChange = type => e => {\n  //   setProductCtx({ ...productCtx, [type]: e.target.value  })\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants &&\n              props.variants\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => (\n                  <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.generatedSku}\n                    </TableCell>\n                    {props.displycolumns.indexOf(\"Cost Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.editcostprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Cost Price\"\n                            onChange={handleinputChange(\"editcostprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {\" \"}\n                            {row.costPrice}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Cost Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editcostpricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Cost Price Tax\"\n                            onChange={handleinputChange(\"editcostpricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {\" \"}\n                            {row.costPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Selling Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editsellingprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Selling Price\"\n                            onChange={handleinputChange(\"editsellingprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.sellingPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Selling Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editsellingpricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Selling Price Tax\"\n                            onChange={handleinputChange(\"editsellingpricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            //onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.sellingPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Markup Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editmarkupprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Markup Price\"\n                            onChange={handleinputChange(\"editmarkupprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.markupPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Markup Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editmarkuppricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Markup Price Tax\"\n                            onChange={handleinputChange(\"editmarkuppricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.markupPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Discount Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editdiscountprice}\n                            id=\"productname\"\n                            onChange={handleinputChange(\"editdiscountprice\")}\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount Price\"\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Discount Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editdiscountpricetax}\n                            onChange={handleinputChange(\"editdiscountpricetax\")}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount Price Tax\"\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Margin on Sale\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.marginOnSalePercentage}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.discount}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"View\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={(e) => props.onShow(row.generatedSku)}\n                        >\n                          Summary\n                        </Button>{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        <Button\n                          onClick={(e) => Skupricesync(row)}\n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                        >\n                          ₹ Run\n                        </Button>\n                        <Button onClick={(e) => DiamondSave(row)}>\n                          <SaveIcon />\n                        </Button>\n                        <Button onClick={(e) => CancelEdit(row)}>\n                          <CancelIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        {btnEdit.pricerun && btnEdit.id == row.generatedSku ? (\n                          <CircularProgress size={15} />\n                        ) : (\n                          <Button\n                            onClick={(e) => Skupricesync(row)}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                          >\n                            ₹ Run\n                          </Button>\n                        )}\n                        <Button onClick={(e) => DiamondEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants && props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && (\n          <EditPrice\n            diamond={editcontent}\n            onApply={DiamondSave}\n            onClose={handleApplicationClose}\n            open={openedit}\n          />\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport axios from \"axios\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { API_URL } from \"../../config\";\nimport { isString } from \"util\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { Chip } from \"@material-ui/core\";\n\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginImageValidateSize,\n  FilePondPluginFileRename\n);\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  variantFontSize: {\n    fontSize: \".9rem\",\n  },\n  variantMarginTop: {\n    marginTop: \"20px\",\n  },\n}));\nexport function CreateVariant(props) {\n  const classes = useStyle();\n  let prod_id = props.productId;\n  let colors = [];\n  let purities = [];\n  let diamondtypes = [];\n  let oldpurity = [];\n\n  const TOKEN = \"token\";\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor);\n  productCtx.oldproductMetalColor.forEach((colorobj) => {\n    colors.push(colorobj.productColor);\n  });\n  productCtx.oldproductMetalPurity.forEach((colorobj) => {\n    purities.push(colorobj.purity);\n    oldpurity.push(colorobj);\n  });\n\n  productCtx.oldproductDiamondTypesArray.forEach((diamondobj) => {\n    diamondtypes.push(diamondobj.diamondType);\n  });\n\n  const [variant, setVariant] = useState({\n    metal_color: [],\n    metal_purity: [],\n    diamond_color: [],\n    diamond_clarity: [],\n    variant_diamond_type: [],\n    product_images: {},\n    size: [],\n  });\n\n  function handleMetalColor(status_data) {\n    let color = variant.metal_color;\n    color.some((color_data) => color_data.id === status_data.id)\n      ? (color = color.filter((color_fil) => color_fil.id !== status_data.id))\n      : color.push(status_data);\n    setVariant({\n      ...variant,\n      metal_color: color,\n    });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    let color_arr = [];\n    value.map((color, index) => {\n      if (\n        productCtx.productMetalColor.some(\n          (item) => item.productColor === color.productColor\n        )\n      ) {\n      } else {\n        let color_obj = {\n          ...color,\n          metal_color: color.productColor,\n        };\n        color_arr.push(color_obj);\n      }\n    });\n    setVariant({\n      ...variant,\n      metal_color: color_arr,\n    });\n\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n    });\n  };\n  const sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL + url;\n    console.info(\"URL\", url, data);\n    const method = data ? \"POST\" : \"GET\",\n      headers = {\n        \"Content-Type\": \"application/json\",\n      };\n    let resdata = null;\n    if (auth) {\n      const token = localStorage.getItem(TOKEN);\n      if (token) headers[\"auth\"] = token;\n      else window.location = \"/\";\n    }\n    const response = await fetch(url, {\n      method,\n      body: isString(data) ? data : JSON.stringify(data),\n      headers,\n    });\n\n    if (response.status < 400) {\n      resdata = await response.json();\n    } else {\n      alert(\n        `${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`\n      );\n    }\n    return resdata;\n  };\n\n  const handleMetalPurity = (type) => (event, value) => {\n    let purity_arr = [];\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n    });\n    value.map((color, index) => {\n      let color_obj = {\n        ...color,\n        purity: color.purity,\n      };\n      purity_arr.push(color_obj);\n    });\n    setVariant({\n      ...variant,\n      metal_purity: purity_arr,\n    });\n  };\n  // function handleMetalPurity(status_data) {\n  //     status_data.metal_weight = \"\";\n  //     status_data.error_message = false;\n  //     // alert(JSON.stringify(status_data));\n  //     let purity = variant.metal_purity;\n  //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         metal_purity: purity\n  //     })\n  // }\n  const diamondTypeChange = (type) => (event, value) => {\n    let diamondtype_arr = [];\n    value.map((color, index) => {\n      if (color.label) {\n        let color_obj = {\n          ...color,\n          diamondType: color.label,\n        };\n        diamondtype_arr.push(color_obj);\n      } else {\n        let color_obj = {\n          ...color,\n          diamondType: color.diamondType,\n        };\n        diamondtype_arr.push(color_obj);\n      }\n\n      //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n      //    }else{ let color_obj = {\n      //         ...color,\n      //         diamondType: color.label\n      //     }\n      //     diamondtype_arr.push(color_obj)\n      //   }\n    });\n    setVariant({\n      ...variant,\n      variant_diamond_type: diamondtype_arr,\n    });\n    setProductCtx({\n      ...productCtx,\n      [type]: diamondtype_arr,\n    });\n  };\n\n  // function diamondTypeChange(status_data){\n  //     let diamond__type = variant.variant_diamond_type;\n  //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         variant_diamond_type: diamond__type\n  //     })\n  // }\n\n  const sizeChange = (type) => (event, value) => {\n    let size_arr = [];\n    // value.map((color, index) => {\n    //   if(productCtx.productDiamondTypes.some(item => item === color)){\n    //    }else{ let color_obj = {\n    //         ...color,\n    //         label: color\n    //     }\n    //     size_arr.push(color_obj)\n    //   }\n    // })\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n    });\n    setVariant({\n      ...variant,\n      size: value,\n    });\n  };\n  // function sizeChange(status_data) {\n  //     let variantSize = variant.size;\n  //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         size: variantSize\n  //     })\n\n  // }\n\n  function setMetalWeightInput(e, metalPurityId) {\n    // alert(e.target.value)\n    let metalWeight = variant.metal_purity;\n    metalWeight =\n      metalWeight &&\n      metalWeight.map((metal_weight, index) => {\n        if (metalPurityId === metal_weight.id) {\n          metal_weight.metal_weight = e.target.value;\n        }\n        return metal_weight;\n      });\n    setVariant({\n      ...variant,\n      metal_purity: metalWeight,\n    });\n  }\n  function saveCreateVariant() {\n    let createVariant = {\n      productId: prod_id,\n      productMetalcoloursByProductId: variant.metal_color,\n      productPuritiesByProductId: variant.metal_purity,\n      productDiamondTypes: variant.variant_diamond_type,\n      productSize: variant.size,\n      product_images: variant.product_images,\n      // productImage:variant.product_images\n    };\n\n    let metal_color_image_length = Object.entries(variant.product_images);\n    let metal_purity_weight = false;\n    let metal_purity =\n      variant.metal_purity &&\n      variant.metal_purity.map((metal_weight_check) => {\n        if (metal_weight_check.metal_weight === \"\") {\n          metal_weight_check.error_message = true;\n          metal_purity_weight = true;\n        }\n        return metal_weight_check;\n      });\n    variant[\"metal_purity\"] = metal_purity;\n    setVariant({\n      ...variant,\n      variant,\n    });\n    if (metal_color_image_length.length !== variant.metal_color.length) {\n      alert(\"Select Metal Color Images\");\n    }\n    if (\n      (variant.metal_color.length > 0 &&\n        variant.metal_color.length === metal_color_image_length.length) ||\n      (variant.metal_purity.length > 0 && metal_purity_weight === false) ||\n      variant.size.length > 0 ||\n      variant.variant_diamond_type.length > 0\n    ) {\n      let createVariants = productCtx.createVariantList;\n      let editVariants = productCtx.editVariants;\n      let variants = productCtx.variants;\n      let productImages = productCtx.productImages;\n      productImages = [...productImages, variant.product_images];\n      createVariants.push(createVariant);\n      // let params = {\n      //     method:'POST',\n      //     headers: {\n      //         \"Content-Type\": \"application/json\",\n      //     },\n      //     body: JSON.stringify(createVariant)\n      // }\n\n      props.updatevarient(createVariant);\n      console.log(JSON.stringify(createVariant));\n    } else {\n      alert(\"please fill the Create variant\");\n    }\n  }\n  function backToProductAttribute() {\n    props.changeVariant();\n  }\n  async function uploadimagetoserver(\n    bodaydata,\n    imageposition,\n    imagecolor,\n    uploadtype\n  ) {\n    let prodimages = variant.product_images;\n    // if(true)\n    // {\n    var prodid = prod_id;\n    let imagecolourobj = variant.product_images[imagecolor];\n    var imagecount = 1;\n    if (imagecolourobj) {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = prodid + \"_\" + imagecount + imagecolor.charAt(0);\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        product_id: prodid,\n      },\n      false\n    );\n    var returnData =\n      responsedata && responsedata.data && responsedata.data.returnData;\n    var signedRequest = returnData && returnData.signedRequest;\n    var url = returnData && returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData && returnData.filepath;\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    if (imagecolourobj) {\n      const imageobj = {\n        name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\n        position: imageposition,\n        color: imagecolor,\n        image_url: filepathname,\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      if (uploadtype === \"edit\") {\n        imagecolourobj[imageposition] = imageobj;\n      } else {\n        imagecolourobj.push(imageobj);\n      }\n      prodimages[imagecolor] = imagecolourobj;\n    } else {\n      const imageobj = {\n        name: prodid + \"_1\" + imagecolor.charAt(0),\n        position: imageposition,\n        color: imagecolor,\n        image_url: filepathname,\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj);\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setVariant({ ...variant, product_images: prodimages });\n    // setFiles([])\n    // }\n\n    await axios.put(signedRequest, bodaydata.file, options);\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          fullWidth\n          margin=\"dense\"\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.productColor}\n          getOptionDisabled={(option) =>\n            colors.indexOf(option.productColor) > -1\n          }\n          defaultValue={productCtx.oldproductMetalColor}\n          options={productCtx.masterData.metalcolour}\n          value={productCtx.productMetalColor}\n          onChange={handleoptionChange(\"productMetalColor\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.productColor}\n                {...getTagProps({ index })}\n                disabled={colors.indexOf(option.productColor) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Metal Colours\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          className={classes.fixedTag}\n          margin=\"dense\"\n          getOptionLabel={(option) => option.name}\n          getOptionDisabled={(option) => purities.indexOf(option.name) > -1}\n          defaultValue={productCtx.oldproductMetalPurity}\n          options={productCtx.masterData.metalpurity}\n          value={productCtx.productMetalPurity}\n          onChange={handleMetalPurity(\"productMetalPurity\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.purity}\n                {...getTagProps({ index })}\n                disabled={purities.indexOf(option.purity) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Metal Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n\n        {productCtx.productMetalPurity &&\n          productCtx.productMetalPurity.map((metal_purity, index) => (\n            <TextField\n              key={index}\n              className={classes.helperinput}\n              style={{ width: \"100px\", marginLeft: \"8px\" }}\n              variant=\"outlined\"\n              margin=\"dense\"\n              fullWidth\n              type=\"number\"\n              value={metal_purity.metal_weight}\n              id=\"metal_weight\"\n              error={metal_purity && metal_purity.error_message}\n              name=\"metal_weight\"\n              label={`Weight ${metal_purity.purity}`}\n              onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n            />\n          ))}\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.label}\n          getOptionDisabled={(option) =>\n            diamondtypes.indexOf(option.label) > -1\n          }\n          defaultValue={productCtx.oldproductDiamondTypesArray}\n          options={productCtx.masterData.diamondtypes}\n          value={\n            productCtx.productDiamondTypesArray\n              ? productCtx.productDiamondTypesArray\n              : []\n          }\n          onChange={diamondTypeChange(\"productDiamondTypesArray\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.diamondType}\n                {...getTagProps({ index })}\n                disabled={diamondtypes.indexOf(option.diamondType) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Diamond Types\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        {productCtx.variant_size && productCtx.variant_size.length > 0 ? (\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            fullWidth\n            getOptionLabel={(option) => option}\n            options={productCtx.productVariantSize}\n            value={\n              productCtx.productSizes\n                ? productCtx.productSizes\n                : productCtx.variant_size\n            }\n            onChange={sizeChange(\"productSizes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Sizes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n        ) : null}\n      </Grid>\n\n      {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n\n      <Grid container>\n        {variant.metal_color === undefined\n          ? null\n          : variant.metal_color.map((value, index) => (\n              <Grid xs={12} container spacing={1} item>\n                <Grid xs={12} item>\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                    {value.productColor}\n                  </Typography>\n                </Grid>\n                <Grid xs={12} sm={12} md={12} item>\n                  <FilePond\n                    allowImageValidateSize\n                    imageValidateSizeMinWidth=\"2400\"\n                    imageValidateSizeMinHeight=\"2400\"\n                    imageValidateSizeMeasure={(file) =>\n                      new Promise((resolve, reject) => {})\n                    }\n                    labelIdle=\"Upload Image\"\n                    allowMultiple={true}\n                    //files = {files}\n                    onupdatefiles={(fileItem) => {\n                      // Set currently active file objectsfiles to this.state\n                    }}\n                    onaddfile={(error, fileItem) => {\n                      uploadimagetoserver(fileItem, index, value.name, \"add\");\n                    }}\n                    onremovefile={(error, fileItem) => {}}\n                    fileRenameFunction={(file) =>\n                      new Promise((resolve) => {\n                        var prodid = prod_id;\n                        let imagecolourobj = variant.product_images[value.name];\n                        var imagecount = 1;\n                        if (imagecolourobj) {\n                          imagecount = imagecolourobj.length + 1;\n                        }\n                        let imagename =\n                          prodid +\n                          \"_\" +\n                          imagecount +\n                          value.name.charAt(0) +\n                          file.extension;\n                        resolve(imagename);\n                      })\n                    }\n                  ></FilePond>\n                </Grid>\n              </Grid>\n            ))}\n      </Grid>\n      {\n        <Grid\n          container\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"16px\",\n          }}\n        >\n          <Grid item>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={(e) => saveCreateVariant()}\n            >\n              Save\n            </Button>\n          </Grid>\n          <Grid item>\n            {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n          </Grid>\n        </Grid>\n      }\n    </Grid>\n  );\n}\nexport default CreateVariant;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">{props.title ? props.title : \"Variants Table\"} </h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport axios from \"axios\";\nimport { makeid } from \"../../utils/commonmethod\";\nimport { BASE_IMAGE_URL } from \"../../config\";\n\nimport { Paper, Card, CardHeader, CardContent, Grid } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport \"./upload.css\";\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\",\n  },\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow:\n      \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\n  },\n  formContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30,\n  },\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = \"\";\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach((imgobj) => {\n    if (props.color === imgobj.productColor) {\n      image_count = image_count + 1;\n      if (imgobj.productId) {\n        product_id = imgobj.productId;\n      }\n      // setTotalimages(image_count)\n    }\n  });\n  async function uploadimagetoserver(\n    fileobj,\n    filetype,\n    imagename,\n    prodid,\n    imagecontent,\n    isedit,\n    position\n  ) {\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      { image: filetype, filename: imagename, product_id: prodid },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    var filepathname = returnData.filepath;\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\n    var options = {\n      headers: {\n        \"Content-Type\": filetype,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n    if (isedit) {\n      imagecontent[\"imageUrl\"] = filepathname.replace(\"jpeg\", \"jpg\");\n    } else {\n      const imageobj = {\n        name: product_id + \"_\" + (image_count + 1) + props.color.charAt(0),\n        imagePosition: image_count + 1,\n        productColor: props.color,\n        productId: product_id,\n        imageUrl: filepathname.replace(\"jpeg\", \"jpg\"),\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      imagecontent = imageobj;\n    }\n    if (!isedit) {\n      var productimgs = [];\n      productimages.forEach((img) => {\n        productimgs.push(img);\n      });\n      productimgs.push(imagecontent);\n    }\n    await axios.put(signedRequest, fileobj, options);\n    let responsecontent = await sendNetworkRequest(\n      \"/updateproductimage\",\n      {},\n      { imageobj: imagecontent, isedit: isedit },\n      false\n    );\n    image_count = image_count + 1;\n    if (!isedit) {\n      setProductimages(productimgs);\n    }\n  }\n  const handlenewAssetChange = (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => {\n      // const size = files[index].size;\n      var imagecount = 1;\n      if (productimages) {\n        imagecount = image_count + 1;\n      }\n      let imagename = product_id + \"-\" + imagecount + props.color.charAt(0);\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n\n      uploadimagetoserver(\n        files[index],\n        fileType,\n        imagename,\n        product_id,\n        {},\n        false\n      );\n    });\n  };\n  const handleAssetChange = (e, imageposition, category, endPoint) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => {\n      const size = files[index].size;\n      alert(imageposition);\n      let productimageobj = {};\n      productimages.forEach((content) => {\n        if (\n          content.productColor === props.color &&\n          imageposition === content.imagePosition\n        ) {\n          productimageobj = content;\n        }\n      });\n      var prodid = productimageobj.productId;\n      var prodcolor = productimageobj.productColor;\n      var imagecount = 1;\n      let randomnum = makeid(1, \"\", 1);\n      if (productimages) {\n        //  imagecount = image_count + 1;\n      }\n      let imagename =\n        prodid + \"-\" + imageposition + randomnum + prodcolor.charAt(0);\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n      //alert(imagename)\n      uploadimagetoserver(\n        files[index],\n        fileType,\n        imagename,\n        prodid,\n        productimageobj,\n        true\n      );\n      // alert(imagename)\n    });\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader\n          title={\n            props.color && props.isdefault\n              ? props.color + \" (Default Colour)\"\n              : props.color\n          }\n        />\n        <CardContent>\n          <Grid container spacing={2} className={classes.styleFile}>\n            {productimages.map((url) => (\n              <>\n                {props.color === url.productColor ? (\n                  <div style={{ position: \"relative\" }}>\n                    <i\n                      className=\"fa fa-window-edit\"\n                      style={{\n                        position: \"absolute\",\n                        right: 10,\n                        top: 11,\n                        color: \"red\",\n                        zIndex: \"12\",\n                      }}\n                    />\n\n                    <Grid\n                      item\n                      style={{\n                        width: \"150px\",\n                        wordBreak: \"break-all\",\n                        height: \"150px\",\n                        padding: \"8px\",\n                        margin: \"0\",\n                        cursor: \"pointer\",\n                        position: \"relative\",\n                      }}\n                      className=\"container\"\n                    >\n                      <input\n                        type=\"file\"\n                        className=\"custom-file-input\"\n                        multiple\n                        onChange={(e) =>\n                          handleAssetChange(e, url.imagePosition, \"\", \"\")\n                        }\n                      ></input>\n\n                      <img\n                        src={\n                          BASE_IMAGE_URL +\n                          url.imageUrl.replace(\n                            url.productId,\n                            url.productId + \"/1000X1000\"\n                          )\n                        }\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          borderRadius: \"4px\",\n                        }}\n                      />\n                    </Grid>\n                    <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\n                      {\" \"}\n                      {url.imagePosition}{\" \"}\n                    </Typography>\n\n                    <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\n                      {\" \"}\n                      {url.ishover ? \"hover\" : \"\"}{\" \"}\n                    </Typography>\n                  </div>\n                ) : null}\n              </>\n            ))}\n            <Grid\n              item\n              style={{\n                width: \"150px\",\n                wordBreak: \"break-all\",\n                height: \"150px\",\n                padding: \"8px\",\n                margin: \"0\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                position: \"relative\",\n              }}\n              className=\"container\"\n            >\n              {\n                <label\n                  className=\"custom-file-upload\"\n                  style={{ display: \"flex\" }}\n                >\n                  <i\n                    className=\"fa fa-plus\"\n                    aria-hidden=\"true\"\n                    style={{\n                      color: \"rgba(60,64,67,.15)\",\n                      fontSize: \"45px\",\n                      margin: \"auto\",\n                    }}\n                  ></i>\n                  <input\n                    type=\"file\"\n                    className=\"custom-file-input\"\n                    multiple\n                    onChange={(e) => handlenewAssetChange(e)}\n                  ></input>\n                </label>\n              }\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n      \n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n         \n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\nimport columnnames from './columnnames.json';\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('lg');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose()\n  };\n\n  return (\n    <div>\n      \n      <Dialog\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\n        <DialogContent>\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\n        </DialogContent>\n        <DialogActions>\n       \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, TextField, Button, Fab } from \"@material-ui/core\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from \"./DiamondDetails\";\nimport GemstoneDetails from \"./GemstoneDetails\";\nimport Variants from \"./Variants\";\nimport Skupricing from \"./Skupricing\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {\n  PRODUCTEDIT,\n  PRODUCTDIAMONDTYPES,\n  PRODUCTDESCRIPTIONEDIT,\n} from \"../../graphql/query\";\nimport CreateVariant from \"./CreateVariant\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SortHeader from \"./Components/SortHeader\";\nimport columnnames from \"./columnnames.json\";\nimport Productimages from \"./Productimages\";\nimport FullLoader from \"../../components/Loader\";\nimport Pricedetails from \"./Pricedetails\";\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { sk } from \"date-fns/locale\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(\n    columnnames.defaultvarients\n  );\n  const [displycolumns, setDisplycolumns] = React.useState(\n    columnnames.defaultvarientnames\n  );\n  const [pricingcolumns, setPricingcolumns] = React.useState(\n    columnnames.pricing\n  );\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(\n    columnnames.defaultpricing\n  );\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(\n    columnnames.defaultpricingnames\n  );\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\n\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    createVariant();\n    setExpand(isExpanded ? true : false);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\",\n  });\n  let prod_id = props.location.pathname.split(\"/\")[2];\n\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = evt.target.validity.valid\n      ? evt.target.value\n      : productCtx.productname;\n    setProductCtx({ ...productCtx, productname });\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n\n  const handleinputChange = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n  const handledesinputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  // const handleinputChange = type => (event, value) => {\n  //   alert(event.target.value)\n  //       setProductCtx({ ...productCtx, [type]: value})\n  // }\n  function dismisspricesummary() {\n    setIsshowpricesummary(false);\n  }\n  function getColumnnames(columnnames, displytype) {\n    let displycolumns = [];\n    let displycolumnnames = [];\n\n    columnnames.forEach((element) => {\n      displycolumnnames.push(element.name);\n      displycolumns.push(element);\n    });\n    if (displytype === 1) {\n      setDisplycolumns(displycolumnnames);\n      setVarientcolumns(columnnames);\n    } else {\n      setPricingcolumns(columnnames);\n      setDisplypricingcolumns(displycolumns);\n      setDisplycolumnnames(displycolumnnames);\n    }\n  }\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist &&\n      productCtx.diamondlist.map((diamond_type) => {\n        let diamond_data = {\n          id: diamond_type.id,\n          diamondType: diamond_type.diamondType,\n        };\n        let status = diamondTypesArray.some(\n          (store_dia) => store_dia.diamondType == diamond_type.diamondType\n        )\n          ? \"\"\n          : diamondTypesArray.push(diamond_data);\n        return diamond_type;\n      });\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\n\n    setProductCtx({\n      ...productCtx,\n      productCtx,\n    });\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES }),\n    };\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then((res) => res.json())\n      .then((diamondtypesData) => {\n        console.log(\n          diamondtypesData.data.allMasterDiamondTypes.nodes,\n          \"diamondtypesdata\"\n        );\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes:\n            diamondtypesData.data.allMasterDiamondTypes.nodes,\n        });\n      })\n      .catch(console.error);\n\n    //setstate({ ...state, create_variant: true })\n  }\n  async function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions: productCtx.occassions,\n      collections: productCtx.collections,\n      stonecount: productCtx.stonecount,\n      stonecolour: productCtx.stonecolour,\n      gender: productCtx.product_gender,\n      // prodDescription: productCtx.prod_desc,\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    };\n    // debugger\n    console.log(productEditItem);\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: PRODUCTDESCRIPTIONEDIT,\n        variables: { productId: prod_id, prod_desc: productCtx.prod_desc },\n      }),\n    };\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fetchvalue) => {\n        console.log(fetchvalue);\n        setProductCtx({\n          ...productCtx,\n          prod_desc:\n            fetchvalue.data.updateProductListByProductId.productList\n              .prodDescription,\n        });\n      });\n    let response = await sendNetworkRequest(\n      \"/editproduct\",\n      {},\n      productEditItem\n    );\n    // debugger\n    console.log(\"************\");\n    console.log(JSON.stringify(productEditItem));\n    if (response) {\n      console.log(response);\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      console.log(JSON.stringify(productEditItem));\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem));\n    // props.history.push('/productlist')\n  }\n  async function createnewvarient(varientobj) {\n    let response = await sendNetworkRequest(\"/addvarient\", {}, varientobj);\n    // debugger\n    console.log(\"************\");\n    console.log(JSON.stringify(varientobj));\n    if (response) {\n      console.log(response);\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  }\n  const handledisableproduct = (name) => async (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      productid: prod_id,\n      isactive: event.target.checked,\n    };\n    let esbody = {\n      product_id: prod_id,\n    };\n    var endpoint = \"/reindex\";\n    if (event.target.checked) {\n      endpoint = \"/esearch_forceindex\";\n    }\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\n\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\n    let updateproductattr = await sendNetworkRequest(\n      \"/updateproductattribute\",\n      {},\n      esbody\n    );\n\n    console.log(\"************\");\n    console.log(JSON.stringify(bodycontent));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  };\n  async function showpricesummary(sku) {\n    let response = await sendNetworkRequest(\n      \"/viewskupricesummary/\" + sku,\n      {},\n      null\n    );\n    let price_summary = [];\n    let skuprice = response.price_summary.skuprice;\n    // let cost_obj = {\n    //   component: \"Cost Price\",\n    //   price : skuprice.cost_price - skuprice.cost_price_tax,\n    //   tax : skuprice.cost_price_tax,\n    //   total : skuprice.cost_price\n\n    // }\n    // price_summary.push(cost_obj)\n\n    // let selling_price = {\n    //   component: \"Selling Price\",\n    //   price : skuprice.selling_price ,\n    //   tax : skuprice.selling_price_tax,\n    //   total : skuprice.selling_price\n\n    // }\n    // price_summary.push(selling_price)\n    // let discount_price = {\n    //   component: \"discount Price\",\n    //   price : skuprice.discount_price ,\n    //   tax : skuprice.discount_price_tax,\n    //   total : skuprice.discount_price\n\n    // }\n    // price_summary.push(discount_price)\n    // let markup_price = {\n    //   component: \"markup Price\",\n    //   price : skuprice.markup_price ,\n    //   tax : skuprice.markup_price_tax,\n    //   total : skuprice.markup_price\n\n    // }\n\n    let metalprice = response.price_summary.metals;\n    metalprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n\n    let mateialprice = response.price_summary.materials;\n    mateialprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n    let obj = {\n      component: \"SKU Price\",\n      cost_price: skuprice.cost_price,\n      selling_price: skuprice.selling_price,\n      markup_price: skuprice.markup_price,\n      discount_price: skuprice.discount_price,\n    };\n    price_summary.push(obj);\n    //alert(JSON.stringify(metalprice))\n    //   price_summary.push(markup_price)\n    setPricesummaryvalue(price_summary);\n    setIsshowpricesummary(true);\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function Skumarkupsync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n      pricingcomponent: \"updateskuprice\",\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function backProductList() {\n    window.location = \"/productlist\";\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: PRODUCTEDIT,\n        variables: { productId: prod_id },\n      }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        var genders = fatchvalue.data.productListByProductId.gender;\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient;\n        let sizes_arr = [];\n        if (size_obj) {\n          let sizes = size_obj.split(\",\");\n          sizes.forEach((element) => {\n            sizes_arr.push(element);\n          });\n        }\n        let gender_arr = [];\n        if (genders) {\n          genders = genders.split(\",\");\n          genders.forEach((element) => {\n            let gender_obj = {\n              label: element,\n            };\n            gender_arr.push(gender_obj);\n          });\n        }\n        let defaultcolour = \"\";\n        var images_arr =\n          fatchvalue.data.productListByProductId.productImagesByProductId.nodes;\n        images_arr.forEach((element) => {\n          if (element.isdefault) {\n            defaultcolour = element.productColor;\n          }\n        });\n        var metalcolors = [];\n        Array.prototype.insert = function (index, item) {\n          this.splice(index, 0, item);\n        };\n        let metalcolor =\n          fatchvalue.data.productListByProductId.productMetalcoloursByProductId\n            .nodes;\n        metalcolor.forEach((colorobj) => {\n          if (colorobj.productColor === defaultcolour) {\n            colorobj[\"isdefault\"] = true;\n            metalcolors.insert(0, colorobj);\n          } else {\n            colorobj[\"isdefault\"] = false;\n            metalcolors.push(colorobj);\n          }\n        });\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy:\n            fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist:\n            fatchvalue.data.productListByProductId.productGemstonesByProductSku\n              .nodes,\n          diamondlist:\n            fatchvalue.data.productListByProductId.productDiamondsByProductSku\n              .nodes,\n          variants:\n            fatchvalue.data.productListByProductId.transSkuListsByProductId\n              .nodes,\n          product_images:\n            fatchvalue.data.productListByProductId.productImagesByProductId\n              .nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor:\n            fatchvalue.data.productListByProductId\n              .productMetalcoloursByProductId.nodes,\n          productMetalPurity:\n            fatchvalue.data.productListByProductId.productPuritiesByProductId\n              .nodes,\n          oldproductMetalPurity:\n            fatchvalue.data.productListByProductId.productPuritiesByProductId\n              .nodes,\n          variant_size: sizes_arr,\n          productmaterials:\n            fatchvalue.data.productListByProductId.productMaterialsByProductSku\n              .nodes,\n          vendorcode: fatchvalue.data.productListByProductId.vendorCode,\n          product_gender: gender_arr,\n          themes:\n            fatchvalue.data.productListByProductId.productThemesByProductId\n              .nodes,\n          prod_styles:\n            fatchvalue.data.productListByProductId.productStylesByProductId\n              .nodes, // productDiamondColor:diamondTypesArray,\n          occassions:\n            fatchvalue.data.productListByProductId.productOccassionsByProductId\n              .nodes,\n          collections:\n            fatchvalue.data.productListByProductId.productCollectionsByProductId\n              .nodes,\n          stonecount:\n            fatchvalue.data.productListByProductId.productStonecountsByProductId\n              .nodes,\n          stonecolour:\n            fatchvalue.data.productListByProductId.productStonecolorsByProductId\n              .nodes,\n          prod_desc: fatchvalue.data.productListByProductId.prodDescription,\n          // productDiamondClarity:diamondClaritySku,\n        });\n\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(\n            JSON.stringify(fatchvalue.data.productListByProductId.productName)\n          ),\n        });\n        setLoadopen(false);\n      })\n      .catch(console.error);\n  }, []);\n  // debugger\n  console.log(productCtx.masterData);\n  return state.create_variant ? (\n    <CreateVariant\n      productMetalColor={productCtx.productMetalColor}\n      productMetalPurity={productCtx.productMetalPurity}\n      changeVariant={changeVariant}\n      productId={prod_id}\n    />\n  ) : (\n    <Grid container>\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <Grid item container spacing={1}>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={3}\n          lg={3}\n          spacing={2}\n          style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}\n        >\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            pattern=\"[a-zA-Z]*\"\n            value={productCtx.productname}\n            id=\"productname\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.productname\n            }\n            name=\"productname\"\n            label=\"Product Name\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"productname\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.prod_desc ? productCtx.prod_desc : \"\"}\n            id=\"prod_desc\"\n            // error={\n            //   productCtx &&\n            //   productCtx.error_message &&\n            //   productCtx.error_message.productname\n            // }\n            name=\"prod_desc\"\n            label=\"Product Description\"\n            //onInput={keyPress.bind(this)}\n            onChange={handledesinputChange(\"prod_desc\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_categoy}\n            id=\"product_category\"\n            InputProps={{\n              readOnly: true,\n            }}\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.product_categoy\n            }\n            name=\"product_category\"\n            label=\"Product Category\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_type}\n            id=\"product_type\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.product_type\n            }\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"product_type\"\n            label=\"Product Type\"\n          />\n          <Input\n            variant=\"outlined\"\n            margin=\"dense\"\n            label=\"Vendor Name\"\n            fullWidth\n            className={classes.helperinput}\n            value={productCtx.vendorcode}\n            id=\"productvendorcode\"\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"Vendor Name\"\n          />\n\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"seo_text\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.productname\n            }\n            name=\"seo_text\"\n            label=\"Minimum Order Quantity\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"url\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.productname\n            }\n            name=\"url\"\n            label=\"Maximum Order Quantity\"\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productmaterials}\n            options={productCtx.masterData.material}\n            getOptionLabel={(option) => option.name}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.materialName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Product Materials\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{\n                  ...params.InputProps,\n                  readOnly: true,\n                  type: \"search\",\n                }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productMetalColor}\n            options={productCtx.masterData.metalcolour}\n            getOptionLabel={(option) => option.name}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.productColor}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            className={classes.fixedTag}\n            value={productCtx.productMetalPurity}\n            options={productCtx.masterData.metalpurity}\n            getOptionLabel={(option) => option.name}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.purity}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Purity\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.product_gender}\n            options={productCtx.masterData.gender}\n            getOptionLabel={(option) => option.label}\n            onChange={handleoptionChange(\"product_gender\")}\n            options={productCtx.masterData.gender}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.label}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Gender\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.themes}\n            options={productCtx.masterData.themes}\n            value={productCtx.themes}\n            getOptionLabel={(option) => option.name}\n            onChange={handleoptionChange(\"themes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.themeName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Themes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.prod_styles}\n            options={productCtx.masterData.styles}\n            getOptionLabel={(option) => option.name}\n            onChange={handleoptionChange(\"prod_styles\")}\n            value={productCtx.prod_styles}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.styleName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Styles\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.occassions}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.occassions}\n            options={productCtx.masterData.occasions}\n            onChange={handleoptionChange(\"occassions\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.occassionName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Occasions\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.collections}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.collections}\n            options={productCtx.masterData.collections}\n            onChange={handleoptionChange(\"collections\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.collectionName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Collections\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecount}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecount}\n            options={productCtx.masterData.stones}\n            onChange={handleoptionChange(\"stonecount\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.stonecount}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"No of Stones\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecolour}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecolour}\n            options={productCtx.masterData.gemstonecolor}\n            onChange={handleoptionChange(\"stonecolour\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.stonecolor}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Stone Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <FormControlLabel\n            label={\n              productCtx.isactive\n                ? \"Disable this product\"\n                : \"Enable this product\"\n            }\n            control={\n              <Switch\n                checked={productCtx.isactive}\n                onChange={handledisableproduct(\"isactive\")}\n                value=\"checkedA\"\n              />\n            }\n          />\n\n          <Grid\n            item\n            container\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\",\n            }}\n          >\n            <Grid item>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={(e) => saveProductEditItem()}\n              >\n                Update\n              </Button>\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={9}\n          lg={9}\n          spacing={2}\n          style={{ padding: \"15px\" }}\n        >\n          <Grid container item md={6}></Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\n            Diamond Table\n          </Grid>\n          <DiamondDetails diamond={productCtx.diamondlist} />\n          {productCtx.gemstonelist.length > 0 ? (\n            <>\n              {\" \"}\n              <Grid\n                style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}\n              >\n                Gemstone Table\n              </Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\n            </>\n          ) : null}\n          <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            Variant Creation\n          </Grid>\n\n          <Grid style={{}}>\n            {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n\n            <ExpansionPanel expanded={expand} onChange={handleChange()}>\n              <ExpansionPanelSummary\n                expandIcon={expand ? <CloseIcon /> : <AddIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n              >\n                <div className={classes.column}>\n                  <Typography className={classes.heading}>\n                    Add New variant\n                  </Typography>\n                </div>\n              </ExpansionPanelSummary>\n              <Divider />\n              <ExpansionPanelDetails className={classes.details}>\n                <CreateVariant\n                  productMetalColor={productCtx.productMetalColor}\n                  productMetalPurity={productCtx.productMetalPurity}\n                  changeVariant={changeVariant}\n                  productId={prod_id}\n                  updatevarient={createnewvarient}\n                />\n              </ExpansionPanelDetails>\n              <Divider />\n              {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n            </ExpansionPanel>\n          </Grid>\n          <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            <SortHeader\n              columnnames={columnnames.varients}\n              getColumnnames={getColumnnames}\n              displytype={1}\n            />{\" \"}\n          </Grid>\n\n          <Variants\n            variants={productCtx.variants}\n            columns={varientcolumns}\n            displycolumns={displycolumns}\n          />\n\n          <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            <SortHeader\n              title={\"Pricing Table\"}\n              columnnames={pricingcolumns}\n              displycolumns={displypricingcolumns}\n              getColumnnames={getColumnnames}\n              displytype={2}\n            />\n            <Button\n              onClick={(e) => Skupricesync(prod_id)}\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Price Run For This Product\n            </Button>\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <Button\n              onClick={(e) => Skumarkupsync(prod_id)}\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Run Markup For This Product\n            </Button>\n          </Grid>\n          {isshowpricesummary ? (\n            <Pricedetails\n              onClose={dismisspricesummary}\n              values={pricesummaryvalues}\n            />\n          ) : null}\n          <Skupricing\n            variants={productCtx.variants}\n            onShow={showpricesummary}\n            columns={displypricingcolumns}\n            displycolumns={displycolumnnames}\n          />\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\n            Product Images\n          </Grid>\n          {productCtx.productMetalColor.map((colors, index) => (\n            <Productimages\n              key={index}\n              color={colors.productColor}\n              isdefault={colors.isdefault}\n              prodimages={productCtx.product_images}\n            />\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const ProductAttributes = withRouter((props) => {\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n\n  const _content = (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n  return _content;\n});\nexport default withRouter(ProductAttributes);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport route from \"./route\";\nimport {\n  Dashboard,\n  Login,\n  Productupload,\n  Configuration,\n  Manageusers,\n  Customerdetails,\n  Priceupdate,\n  Vendorprice,\n  Vendorlist,\n  Markupprice,\n  Goldpriceupdate,\n  Userwishlist,\n  Productlist,\n  Materiallist,\n  Masterorderstatus,\n  Shippingzones,\n  Manageadminusers,\n  Shipmentsettings,\n  Addshippingattributes,\n  Userconfiguration,\n  Masterroles,\n  Masterscreens,\n  Useraddresses,\n  Addtaxattributes,\n  OrderManagementDetails,\n  Materialmaster,\n  CategoryList,\n  Mastermetalcolors,\n  Masterpurities,\n  Masterdesigns,\n  Shippingattributes,\n  Voucherdiscount,\n  Masterstyles,\n  Masterthemes,\n  Masteroccassions,\n  Masterpaymentstatus,\n  Salediscount,\n  Masterweights,\n  Taxsettings,\n  Masterstones,\n  Masterstonecolors,\n  Masterstoneshapes,\n  Masterattribute,\n  Mastercategories,\n  OrderList,\n  Mastergemsettings,\n  Seopriority,\n  Mastergenders,\n  Mastergemshapes,\n  Mastergemtypes,\n  Earringbacking,\n  Masterproducttypes,\n  Masterdiamondshapes,\n  Taxsetup,\n  Masterdiamonds,\n  Masterdiamondsettings,\n  DiscountList,\n  VoucherdiscountListing,\n  Mastercollections,\n  Masterpages,\n} from \"../screens\";\nimport Banners from \"../screens/Banners/banners\";\nimport Styloribanner from \"../screens/Banners/styloribanner/styloribanner\";\nimport Silverbanner from \"../screens/Banners/silverbanner/silverbanner\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { NetworkProvider } from \"../context/NetworkContext\";\nimport { GlobalContext } from \"../context\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\nimport { ProductContext, ProductProvider } from \"../context/ProductuploadContext\";\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\n\nconst MainApp = () => {\n  const { globalCtx } = React.useContext(GlobalContext);\n  const { productCtx } = React.useContext(ProductContext);\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\n\n  return (\n    <ApolloProvider client={client}>\n      {/* <ProductProvider > */}\n      <NetworkProvider>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Login} />\n          <Route path={route.login} component={Login} />\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\n          <PrivateRoute path={route.productupload} component={Productupload} />\n          <PrivateRoute path={route.configuration} component={Configuration} />\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\n          <PrivateRoute path={route.productlist} component={Productlist} />\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n          <PrivateRoute path={route.producttypes} component={Masterproducttypes} />\n          <PrivateRoute path={route.voucherdiscount} component={Voucherdiscount} />\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n          <PrivateRoute path={route.orderlist} component={OrderList} />\n          <PrivateRoute path={route.userorders} component={OrderList} />\n          <PrivateRoute path={route.address} component={Useraddresses} />\n\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n          <PrivateRoute path={route.category} component={Mastercategories} />\n          <PrivateRoute path={route.masterattributes} component={Masterattribute} />\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\n          <PrivateRoute path={route.masterstonecolors} component={Masterstonecolors} />\n          <PrivateRoute path={route.masterstoneshapes} component={Masterstoneshapes} />\n          <PrivateRoute path={route.weights} component={Masterweights} />\n          <PrivateRoute path={route.masteroccassions} component={Masteroccassions} />\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\n          <PrivateRoute path={route.manageadminusers} component={Manageadminusers} />\n          <PrivateRoute path={route.goldpriceupdate} component={Goldpriceupdate} />\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\n          <PrivateRoute path={route.customerdetails} component={Customerdetails} />\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\n          <PrivateRoute path={route.orderdetails} component={OrderManagementDetails} />\n\n          <PrivateRoute path={route.userconfiguration} component={Userconfiguration} />\n\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n          <PrivateRoute path={route.mastermaterial} component={Materialmaster} />\n          <PrivateRoute path={route.mastercolors} component={Mastermetalcolors} />\n          <PrivateRoute path={route.masterpurities} component={Masterpurities} />\n          <PrivateRoute path={route.salediscountlist} component={DiscountList} />\n          <PrivateRoute path={route.voucherdiscountlist} component={VoucherdiscountListing} />\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n          <PrivateRoute path={route.mastercollections} component={Mastercollections} />\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n          <PrivateRoute path={route.masterdiamonds} component={Masterdiamonds} />\n          <PrivateRoute path={route.diamondsettings} component={Masterdiamondsettings} />\n          <PrivateRoute path={route.diamondshapes} component={Masterdiamondshapes} />\n          <PrivateRoute path={route.earringbacking} component={Earringbacking} />\n          <PrivateRoute path={route.gemsettings} component={Mastergemsettings} />\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n          <PrivateRoute path={route.masterpaymentstatus} component={Masterpaymentstatus} />\n          <PrivateRoute path={route.masterorderstatus} component={Masterorderstatus} />\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n          <PrivateRoute path={route.shippingattributes} component={Shippingattributes} />\n          <PrivateRoute path={route.addshippingattributes} component={Addshippingattributes} />\n          <PrivateRoute path={route.addtaxattributes} component={Addtaxattributes} />\n\n          <PrivateRoute path={route.gender} component={Mastergenders} />\n          <PrivateRoute path={route.seo} component={Seopriority} />\n\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n          <PrivateRoute exact path={route.editdiscount} component={Salediscount} />\n\n          <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />\n          <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />\n          <PrivateRoute path={route.shipmentsettings} component={Shipmentsettings} />\n          <PrivateRoute path={route.banners} component={Banners} />\n          <PrivateRoute path={route.styloribanner} component={Styloribanner} />\n          <PrivateRoute path={route.silverbanner} component={Silverbanner} />\n        </Switch>\n      </NetworkProvider>\n      {/* </ProductProvider> */}\n    </ApolloProvider>\n  );\n};\n\nexport default MainApp;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}